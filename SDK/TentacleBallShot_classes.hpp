#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TentacleBallShot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass tentacleBallShot.tentacleBallShot_C
// 0x0090 (0x02B0 - 0x0220)
class ATentacleBallShot_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_tentacleBallShoot;                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Shot1;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Shot;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Post;                                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Explosion_force;                                   // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Explosion_radius;                                  // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Explosion_damage;                                  // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Explosion_size;                                    // 0x0274(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                beam_size;                                         // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         PointDamage;                                       // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         PointForce;                                        // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Ignores;                                           // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_tentacleBallShot(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"tentacleBallShot_C">();
	}
	static class ATentacleBallShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATentacleBallShot_C>();
	}
};
static_assert(alignof(ATentacleBallShot_C) == 0x000008, "Wrong alignment on ATentacleBallShot_C");
static_assert(sizeof(ATentacleBallShot_C) == 0x0002B0, "Wrong size on ATentacleBallShot_C");
static_assert(offsetof(ATentacleBallShot_C, UberGraphFrame) == 0x000220, "Member 'ATentacleBallShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Arrow) == 0x000228, "Member 'ATentacleBallShot_C::Arrow' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Eff_tentacleBallShoot) == 0x000230, "Member 'ATentacleBallShot_C::Eff_tentacleBallShoot' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Shot1) == 0x000238, "Member 'ATentacleBallShot_C::Shot1' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Shot) == 0x000240, "Member 'ATentacleBallShot_C::Shot' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Post) == 0x000248, "Member 'ATentacleBallShot_C::Post' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, DefaultSceneRoot) == 0x000250, "Member 'ATentacleBallShot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Obj) == 0x000258, "Member 'ATentacleBallShot_C::Obj' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Explosion_force) == 0x000268, "Member 'ATentacleBallShot_C::Explosion_force' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Explosion_radius) == 0x00026C, "Member 'ATentacleBallShot_C::Explosion_radius' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Explosion_damage) == 0x000270, "Member 'ATentacleBallShot_C::Explosion_damage' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Explosion_size) == 0x000274, "Member 'ATentacleBallShot_C::Explosion_size' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, beam_size) == 0x000280, "Member 'ATentacleBallShot_C::beam_size' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, PointDamage) == 0x00028C, "Member 'ATentacleBallShot_C::PointDamage' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Pitch) == 0x000290, "Member 'ATentacleBallShot_C::Pitch' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Volume) == 0x000294, "Member 'ATentacleBallShot_C::Volume' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, PointForce) == 0x000298, "Member 'ATentacleBallShot_C::PointForce' has a wrong offset!");
static_assert(offsetof(ATentacleBallShot_C, Ignores) == 0x0002A0, "Member 'ATentacleBallShot_C::Ignores' has a wrong offset!");

}

