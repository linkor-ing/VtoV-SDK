#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: birber

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function birber.birber_C.ExecuteUbergraph_birber
// 0x00B8 (0x00B8 - 0x0000)
struct birber_C_ExecuteUbergraph_birber final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(birber_C_ExecuteUbergraph_birber) == 0x000008, "Wrong alignment on birber_C_ExecuteUbergraph_birber");
static_assert(sizeof(birber_C_ExecuteUbergraph_birber) == 0x0000B8, "Wrong size on birber_C_ExecuteUbergraph_birber");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, EntryPoint) == 0x000000, "Member 'birber_C_ExecuteUbergraph_birber::EntryPoint' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000008, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000024, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000028, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(birber_C_ExecuteUbergraph_birber, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000B0, "Member 'birber_C_ExecuteUbergraph_birber::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function birber.birber_C.playBirb
// 0x0218 (0x0218 - 0x0000)
struct birber_C_PlayBirb final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreDay;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0030(0x0010)(ReferenceParm)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(birber_C_PlayBirb) == 0x000008, "Wrong alignment on birber_C_PlayBirb");
static_assert(sizeof(birber_C_PlayBirb) == 0x000218, "Wrong size on birber_C_PlayBirb");
static_assert(offsetof(birber_C_PlayBirb, Sound) == 0x000000, "Member 'birber_C_PlayBirb::Sound' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, IgnoreDay) == 0x000008, "Member 'birber_C_PlayBirb::IgnoreDay' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'birber_C_PlayBirb::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'birber_C_PlayBirb::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'birber_C_PlayBirb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_IsPointInBox_ReturnValue) == 0x000028, "Member 'birber_C_PlayBirb::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Greater_IntInt_ReturnValue) == 0x000029, "Member 'birber_C_PlayBirb::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_obj_static_obj) == 0x000030, "Member 'birber_C_PlayBirb::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000040, "Member 'birber_C_PlayBirb::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000048, "Member 'birber_C_PlayBirb::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'birber_C_PlayBirb::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_isDreaming_dreaming) == 0x000051, "Member 'birber_C_PlayBirb::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'birber_C_PlayBirb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Not_PreBool_ReturnValue) == 0x000053, "Member 'birber_C_PlayBirb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanOR_ReturnValue_1) == 0x000054, "Member 'birber_C_PlayBirb::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000058, "Member 'birber_C_PlayBirb::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000060, "Member 'birber_C_PlayBirb::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'birber_C_PlayBirb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Not_PreBool_ReturnValue_1) == 0x000069, "Member 'birber_C_PlayBirb::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'birber_C_PlayBirb::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000070, "Member 'birber_C_PlayBirb::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000071, "Member 'birber_C_PlayBirb::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000072, "Member 'birber_C_PlayBirb::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanOR_ReturnValue_2) == 0x000073, "Member 'birber_C_PlayBirb::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_RandomFloatInRange_ReturnValue) == 0x000074, "Member 'birber_C_PlayBirb::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'birber_C_PlayBirb::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'birber_C_PlayBirb::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00008C, "Member 'birber_C_PlayBirb::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue_1) == 0x000090, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_MakeVector_ReturnValue_1) == 0x000094, "Member 'birber_C_PlayBirb::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A0, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000A4, "Member 'birber_C_PlayBirb::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A8, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000AC, "Member 'birber_C_PlayBirb::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue_4) == 0x0000B8, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000BC, "Member 'birber_C_PlayBirb::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BooleanAND_ReturnValue_5) == 0x0000C8, "Member 'birber_C_PlayBirb::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Add_VectorVector_ReturnValue) == 0x0000CC, "Member 'birber_C_PlayBirb::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'birber_C_PlayBirb::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, Temp_object_Variable) == 0x0000E8, "Member 'birber_C_PlayBirb::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'birber_C_PlayBirb::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000104, "Member 'birber_C_PlayBirb::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00018C, "Member 'birber_C_PlayBirb::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_bBlockingHit) == 0x00018D, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018E, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_Time) == 0x000190, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_Distance) == 0x000194, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A4, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_ImpactNormal) == 0x0001BC, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_HitItem) == 0x0001E8, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_ElementIndex) == 0x0001EC, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_FaceIndex) == 0x0001F0, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_TraceStart) == 0x0001F4, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_BreakHitResult_TraceEnd) == 0x000200, "Member 'birber_C_PlayBirb::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(birber_C_PlayBirb, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00020C, "Member 'birber_C_PlayBirb::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

}

