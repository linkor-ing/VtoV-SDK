#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_thermometer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_thermometer.prop_thermometer_C.ExecuteUbergraph_prop_thermometer
// 0x01C8 (0x01C8 - 0x0000)
struct Prop_thermometer_C_ExecuteUbergraph_prop_thermometer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x0020(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_arm_start;                                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4B[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4C[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4D[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_C*                           K2Node_DynamicCast_AsProp_Food;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4E[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B0(0x0018)()
};
static_assert(alignof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer) == 0x000008, "Wrong alignment on Prop_thermometer_C_ExecuteUbergraph_prop_thermometer");
static_assert(sizeof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer) == 0x0001C8, "Wrong size on Prop_thermometer_C_ExecuteUbergraph_prop_thermometer");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, EntryPoint) == 0x000000, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, Temp_object_Variable) == 0x000008, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, K2Node_Event_player) == 0x000018, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_obj_statDynPhys_obj) == 0x000020, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_arm_start) == 0x000030, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_arm_end) == 0x00003C, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000048, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000D0, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D1, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D2, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, K2Node_DynamicCast_AsProp_Food) == 0x000158, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::K2Node_DynamicCast_AsProp_Food' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_Conv_FloatToText_ReturnValue) == 0x000168, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A0, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_thermometer_C_ExecuteUbergraph_prop_thermometer, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B0, "Member 'Prop_thermometer_C_ExecuteUbergraph_prop_thermometer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function prop_thermometer.prop_thermometer_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_thermometer_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_thermometer_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_thermometer_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_thermometer_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_thermometer_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_thermometer_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_thermometer_C_PlayerHandUse_RMB::Player' has a wrong offset!");

}

