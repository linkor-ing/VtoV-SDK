#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeneratorBuilding

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass generatorBuilding.generatorBuilding_C
// 0x00E0 (0x0300 - 0x0220)
class AGeneratorBuilding_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   Lightroot;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Light;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Lightswitch;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Indoors2;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Indoors1;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Nonav1;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NoNav;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   SignLight;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GeneratorBuildingSigns_sign_light;                 // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sign;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Light1;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_genBuildingSmoke;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Vent;                                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window7;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window6;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window5;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window4;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window3;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window2;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window1;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tr;                                                // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Door2;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GeneratorBuilding;                                 // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GeneratorBuildingCollision;                        // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AGenerator_C*                           Transformer;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrNum;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnterLightDeactivate;                              // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_generatorBuilding(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"generatorBuilding_C">();
	}
	static class AGeneratorBuilding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGeneratorBuilding_C>();
	}
};
static_assert(alignof(AGeneratorBuilding_C) == 0x000008, "Wrong alignment on AGeneratorBuilding_C");
static_assert(sizeof(AGeneratorBuilding_C) == 0x000300, "Wrong size on AGeneratorBuilding_C");
static_assert(offsetof(AGeneratorBuilding_C, UberGraphFrame) == 0x000220, "Member 'AGeneratorBuilding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Lightroot) == 0x000228, "Member 'AGeneratorBuilding_C::Lightroot' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Light) == 0x000230, "Member 'AGeneratorBuilding_C::Light' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Lightswitch) == 0x000238, "Member 'AGeneratorBuilding_C::Lightswitch' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Indoors2) == 0x000240, "Member 'AGeneratorBuilding_C::Indoors2' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Indoors1) == 0x000248, "Member 'AGeneratorBuilding_C::Indoors1' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Nonav1) == 0x000250, "Member 'AGeneratorBuilding_C::Nonav1' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, NoNav) == 0x000258, "Member 'AGeneratorBuilding_C::NoNav' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, SignLight) == 0x000260, "Member 'AGeneratorBuilding_C::SignLight' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, GeneratorBuildingSigns_sign_light) == 0x000268, "Member 'AGeneratorBuilding_C::GeneratorBuildingSigns_sign_light' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Sign) == 0x000270, "Member 'AGeneratorBuilding_C::Sign' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Light1) == 0x000278, "Member 'AGeneratorBuilding_C::Light1' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Frame) == 0x000280, "Member 'AGeneratorBuilding_C::Frame' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Eff_genBuildingSmoke) == 0x000288, "Member 'AGeneratorBuilding_C::Eff_genBuildingSmoke' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Vent) == 0x000290, "Member 'AGeneratorBuilding_C::Vent' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window7) == 0x000298, "Member 'AGeneratorBuilding_C::Window7' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window6) == 0x0002A0, "Member 'AGeneratorBuilding_C::Window6' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window5) == 0x0002A8, "Member 'AGeneratorBuilding_C::Window5' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window4) == 0x0002B0, "Member 'AGeneratorBuilding_C::Window4' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window3) == 0x0002B8, "Member 'AGeneratorBuilding_C::Window3' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window2) == 0x0002C0, "Member 'AGeneratorBuilding_C::Window2' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Window1) == 0x0002C8, "Member 'AGeneratorBuilding_C::Window1' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Tr) == 0x0002D0, "Member 'AGeneratorBuilding_C::Tr' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Door2) == 0x0002D8, "Member 'AGeneratorBuilding_C::Door2' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, GeneratorBuilding) == 0x0002E0, "Member 'AGeneratorBuilding_C::GeneratorBuilding' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, GeneratorBuildingCollision) == 0x0002E8, "Member 'AGeneratorBuilding_C::GeneratorBuildingCollision' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, Transformer) == 0x0002F0, "Member 'AGeneratorBuilding_C::Transformer' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, TrNum) == 0x0002F8, "Member 'AGeneratorBuilding_C::TrNum' has a wrong offset!");
static_assert(offsetof(AGeneratorBuilding_C, EnterLightDeactivate) == 0x0002FC, "Member 'AGeneratorBuilding_C::EnterLightDeactivate' has a wrong offset!");

}

