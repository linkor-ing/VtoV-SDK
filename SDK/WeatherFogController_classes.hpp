#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeatherFogController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass weatherFogController.weatherFogController_C
// 0x0028 (0x0248 - 0x0220)
class AWeatherFogController_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ADaynightCycle_C*                       Cyc;                                               // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         FogPhase;                                          // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_weatherFogController(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"weatherFogController_C">();
	}
	static class AWeatherFogController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeatherFogController_C>();
	}
};
static_assert(alignof(AWeatherFogController_C) == 0x000008, "Wrong alignment on AWeatherFogController_C");
static_assert(sizeof(AWeatherFogController_C) == 0x000248, "Wrong size on AWeatherFogController_C");
static_assert(offsetof(AWeatherFogController_C, UberGraphFrame) == 0x000220, "Member 'AWeatherFogController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, DefaultSceneRoot) == 0x000228, "Member 'AWeatherFogController_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, Cyc) == 0x000230, "Member 'AWeatherFogController_C::Cyc' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, Time) == 0x000238, "Member 'AWeatherFogController_C::Time' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, Alpha) == 0x00023C, "Member 'AWeatherFogController_C::Alpha' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, Duration) == 0x000240, "Member 'AWeatherFogController_C::Duration' has a wrong offset!");
static_assert(offsetof(AWeatherFogController_C, FogPhase) == 0x000244, "Member 'AWeatherFogController_C::FogPhase' has a wrong offset!");

}

