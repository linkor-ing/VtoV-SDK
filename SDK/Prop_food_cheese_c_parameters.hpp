#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_food_cheese_c

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_food_cheese_c.prop_food_cheese_c_C.ExecuteUbergraph_prop_food_cheese_c
// 0x0038 (0x0038 - 0x0000)
struct Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_clean;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F57[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F58[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F59[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c) == 0x000004, "Wrong alignment on Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c");
static_assert(sizeof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c) == 0x000038, "Wrong size on Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, EntryPoint) == 0x000000, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, K2Node_Event_clean) == 0x000004, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_GetActorScale3D_ReturnValue) == 0x000008, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, Temp_int_Variable) == 0x000014, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_BreakVector_X) == 0x000018, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_BreakVector_Y) == 0x00001C, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_BreakVector_Z) == 0x000020, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_Round_ReturnValue) == 0x00002C, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Prop_food_cheese_c_C_ExecuteUbergraph_prop_food_cheese_c::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function prop_food_cheese_c.prop_food_cheese_c_C.sliceCheese
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_food_cheese_c_C_SliceCheese final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5B[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5C[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5D[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_cheese_s_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_food_cheese_c_C_SliceCheese) == 0x000010, "Wrong alignment on Prop_food_cheese_c_C_SliceCheese");
static_assert(sizeof(Prop_food_cheese_c_C_SliceCheese) == 0x0000F0, "Wrong size on Prop_food_cheese_c_C_SliceCheese");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakVector_X) == 0x000040, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakVector_Y) == 0x000044, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakVector_Z) == 0x000048, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakTransform_Location) == 0x00004C, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakTransform_Rotation) == 0x000058, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BreakTransform_Scale) == 0x000064, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_Round_ReturnValue) == 0x0000B0, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B8, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D0, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D4, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_food_cheese_c_C_SliceCheese, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'Prop_food_cheese_c_C_SliceCheese::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function prop_food_cheese_c.prop_food_cheese_c_C.slice
// 0x0001 (0x0001 - 0x0000)
struct Prop_food_cheese_c_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_food_cheese_c_C_Slice) == 0x000001, "Wrong alignment on Prop_food_cheese_c_C_Slice");
static_assert(sizeof(Prop_food_cheese_c_C_Slice) == 0x000001, "Wrong size on Prop_food_cheese_c_C_Slice");
static_assert(offsetof(Prop_food_cheese_c_C_Slice, Clean) == 0x000000, "Member 'Prop_food_cheese_c_C_Slice::Clean' has a wrong offset!");

}

