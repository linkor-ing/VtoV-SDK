#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShroomCircle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass shroomCircle.shroomCircle_C
// 0x0058 (0x0278 - 0x0220)
class AShroomCircle_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPnormal_C*                             Pnormal;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Points;                                            // 0x0240(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 Mush;                                              // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 Special;                                           // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Chance;                                            // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetLoc();
	void Spawn();
	void PrepareDots();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void SpawnAttempt();
	void ExecuteUbergraph_shroomCircle(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"shroomCircle_C">();
	}
	static class AShroomCircle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AShroomCircle_C>();
	}
};
static_assert(alignof(AShroomCircle_C) == 0x000008, "Wrong alignment on AShroomCircle_C");
static_assert(sizeof(AShroomCircle_C) == 0x000278, "Wrong size on AShroomCircle_C");
static_assert(offsetof(AShroomCircle_C, UberGraphFrame) == 0x000220, "Member 'AShroomCircle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Pnormal) == 0x000228, "Member 'AShroomCircle_C::Pnormal' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, DefaultSceneRoot) == 0x000230, "Member 'AShroomCircle_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Num) == 0x000238, "Member 'AShroomCircle_C::Num' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Size) == 0x00023C, "Member 'AShroomCircle_C::Size' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Points) == 0x000240, "Member 'AShroomCircle_C::Points' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Mush) == 0x000250, "Member 'AShroomCircle_C::Mush' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Special) == 0x000260, "Member 'AShroomCircle_C::Special' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Time) == 0x000268, "Member 'AShroomCircle_C::Time' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Chance) == 0x00026C, "Member 'AShroomCircle_C::Chance' has a wrong offset!");
static_assert(offsetof(AShroomCircle_C, Debug) == 0x000270, "Member 'AShroomCircle_C::Debug' has a wrong offset!");

}

