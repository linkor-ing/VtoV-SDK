#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeFilesDownloader

#include "Basic.hpp"

#include "RuntimeFilesDownloader_structs.hpp"


namespace SDK::Params
{

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.BytesToString
// 0x0020 (0x0020 - 0x0000)
struct RuntimeFilesDownloaderLibrary_BytesToString final
{
public:
	TArray<uint8>                                 bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_BytesToString) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_BytesToString");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_BytesToString) == 0x000020, "Wrong size on RuntimeFilesDownloaderLibrary_BytesToString");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_BytesToString, bytes) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_BytesToString::bytes' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_BytesToString, ReturnValue) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_BytesToString::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.BytesToTexture
// 0x0018 (0x0018 - 0x0000)
struct RuntimeFilesDownloaderLibrary_BytesToTexture final
{
public:
	TArray<uint8>                                 bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_BytesToTexture) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_BytesToTexture");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_BytesToTexture) == 0x000018, "Wrong size on RuntimeFilesDownloaderLibrary_BytesToTexture");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_BytesToTexture, bytes) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_BytesToTexture::bytes' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_BytesToTexture, ReturnValue) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_BytesToTexture::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.LoadFileToArray
// 0x0028 (0x0028 - 0x0000)
struct RuntimeFilesDownloaderLibrary_LoadFileToArray final
{
public:
	TArray<uint8>                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F69[0x7];                                      // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_LoadFileToArray) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_LoadFileToArray");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_LoadFileToArray) == 0x000028, "Wrong size on RuntimeFilesDownloaderLibrary_LoadFileToArray");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToArray, Result) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToArray::Result' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToArray, Filename) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToArray::Filename' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToArray, ReturnValue) == 0x000020, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToArray::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.LoadFileToString
// 0x0028 (0x0028 - 0x0000)
struct RuntimeFilesDownloaderLibrary_LoadFileToString final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6A[0x7];                                      // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_LoadFileToString) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_LoadFileToString");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_LoadFileToString) == 0x000028, "Wrong size on RuntimeFilesDownloaderLibrary_LoadFileToString");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToString, Result) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToString::Result' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToString, Filename) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToString::Filename' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_LoadFileToString, ReturnValue) == 0x000020, "Member 'RuntimeFilesDownloaderLibrary_LoadFileToString::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.SaveArrayToFile
// 0x0028 (0x0028 - 0x0000)
struct RuntimeFilesDownloaderLibrary_SaveArrayToFile final
{
public:
	TArray<uint8>                                 bytes;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6B[0x7];                                      // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_SaveArrayToFile) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_SaveArrayToFile");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_SaveArrayToFile) == 0x000028, "Wrong size on RuntimeFilesDownloaderLibrary_SaveArrayToFile");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveArrayToFile, bytes) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_SaveArrayToFile::bytes' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveArrayToFile, Filename) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_SaveArrayToFile::Filename' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveArrayToFile, ReturnValue) == 0x000020, "Member 'RuntimeFilesDownloaderLibrary_SaveArrayToFile::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.SaveStringToFile
// 0x0028 (0x0028 - 0x0000)
struct RuntimeFilesDownloaderLibrary_SaveStringToFile final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6C[0x7];                                      // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_SaveStringToFile) == 0x000008, "Wrong alignment on RuntimeFilesDownloaderLibrary_SaveStringToFile");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_SaveStringToFile) == 0x000028, "Wrong size on RuntimeFilesDownloaderLibrary_SaveStringToFile");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveStringToFile, String) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_SaveStringToFile::String' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveStringToFile, Filename) == 0x000010, "Member 'RuntimeFilesDownloaderLibrary_SaveStringToFile::Filename' has a wrong offset!");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_SaveStringToFile, ReturnValue) == 0x000020, "Member 'RuntimeFilesDownloaderLibrary_SaveStringToFile::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary.CancelDownload
// 0x0001 (0x0001 - 0x0000)
struct RuntimeFilesDownloaderLibrary_CancelDownload final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeFilesDownloaderLibrary_CancelDownload) == 0x000001, "Wrong alignment on RuntimeFilesDownloaderLibrary_CancelDownload");
static_assert(sizeof(RuntimeFilesDownloaderLibrary_CancelDownload) == 0x000001, "Wrong size on RuntimeFilesDownloaderLibrary_CancelDownload");
static_assert(offsetof(RuntimeFilesDownloaderLibrary_CancelDownload, ReturnValue) == 0x000000, "Member 'RuntimeFilesDownloaderLibrary_CancelDownload::ReturnValue' has a wrong offset!");

// Function RuntimeFilesDownloader.FileToMemoryDownloader.BP_DownloadFileToMemory
// 0x0048 (0x0048 - 0x0000)
struct FileToMemoryDownloader_BP_DownloadFileToMemory final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6E[0x4];                                      // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ContentType;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 BytesReceived, int32 ContentLength)> OnProgress;                                        // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<uint8>& DownloadedContent, EDownloadToMemoryResult Result)> OnComplete;                                        // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileToMemoryDownloader_BP_DownloadFileToMemory) == 0x000008, "Wrong alignment on FileToMemoryDownloader_BP_DownloadFileToMemory");
static_assert(sizeof(FileToMemoryDownloader_BP_DownloadFileToMemory) == 0x000048, "Wrong size on FileToMemoryDownloader_BP_DownloadFileToMemory");
static_assert(offsetof(FileToMemoryDownloader_BP_DownloadFileToMemory, URL) == 0x000000, "Member 'FileToMemoryDownloader_BP_DownloadFileToMemory::URL' has a wrong offset!");
static_assert(offsetof(FileToMemoryDownloader_BP_DownloadFileToMemory, Timeout) == 0x000010, "Member 'FileToMemoryDownloader_BP_DownloadFileToMemory::Timeout' has a wrong offset!");
static_assert(offsetof(FileToMemoryDownloader_BP_DownloadFileToMemory, ContentType) == 0x000018, "Member 'FileToMemoryDownloader_BP_DownloadFileToMemory::ContentType' has a wrong offset!");
static_assert(offsetof(FileToMemoryDownloader_BP_DownloadFileToMemory, OnProgress) == 0x000028, "Member 'FileToMemoryDownloader_BP_DownloadFileToMemory::OnProgress' has a wrong offset!");
static_assert(offsetof(FileToMemoryDownloader_BP_DownloadFileToMemory, OnComplete) == 0x000038, "Member 'FileToMemoryDownloader_BP_DownloadFileToMemory::OnComplete' has a wrong offset!");

// Function RuntimeFilesDownloader.FileToStorageDownloader.BP_DownloadFileToStorage
// 0x0060 (0x0060 - 0x0000)
struct FileToStorageDownloader_BP_DownloadFileToStorage final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SavePath;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timeout;                                           // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F70[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ContentType;                                       // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 BytesReceived, int32 ContentLength)> OnProgress;                                        // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(EDownloadToStorageResult Result)> OnComplete;                                        // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UFileToStorageDownloader*               ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileToStorageDownloader_BP_DownloadFileToStorage) == 0x000008, "Wrong alignment on FileToStorageDownloader_BP_DownloadFileToStorage");
static_assert(sizeof(FileToStorageDownloader_BP_DownloadFileToStorage) == 0x000060, "Wrong size on FileToStorageDownloader_BP_DownloadFileToStorage");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, URL) == 0x000000, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::URL' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, SavePath) == 0x000010, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::SavePath' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, Timeout) == 0x000020, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::Timeout' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, ContentType) == 0x000028, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::ContentType' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, OnProgress) == 0x000038, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::OnProgress' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, OnComplete) == 0x000048, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::OnComplete' has a wrong offset!");
static_assert(offsetof(FileToStorageDownloader_BP_DownloadFileToStorage, ReturnValue) == 0x000058, "Member 'FileToStorageDownloader_BP_DownloadFileToStorage::ReturnValue' has a wrong offset!");

}

