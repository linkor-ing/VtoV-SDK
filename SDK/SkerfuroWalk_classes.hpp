#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkerfuroWalk

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass skerfuroWalk.skerfuroWalk_C
// 0x0058 (0x0278 - 0x0220)
class ASkerfuroWalk_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard1;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Side;                                              // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Walk;                                              // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AKerfurOmega_C*                         ReturnKerfuro;                                     // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Z;                                                 // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                X;                                                 // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_skerfuroWalk(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Upd();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"skerfuroWalk_C">();
	}
	static class ASkerfuroWalk_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASkerfuroWalk_C>();
	}
};
static_assert(alignof(ASkerfuroWalk_C) == 0x000008, "Wrong alignment on ASkerfuroWalk_C");
static_assert(sizeof(ASkerfuroWalk_C) == 0x000278, "Wrong size on ASkerfuroWalk_C");
static_assert(offsetof(ASkerfuroWalk_C, UberGraphFrame) == 0x000220, "Member 'ASkerfuroWalk_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Arrow) == 0x000228, "Member 'ASkerfuroWalk_C::Arrow' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Billboard) == 0x000230, "Member 'ASkerfuroWalk_C::Billboard' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Billboard1) == 0x000238, "Member 'ASkerfuroWalk_C::Billboard1' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, SkeletalMesh) == 0x000240, "Member 'ASkerfuroWalk_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, DefaultSceneRoot) == 0x000248, "Member 'ASkerfuroWalk_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Alpha) == 0x000250, "Member 'ASkerfuroWalk_C::Alpha' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Side) == 0x000254, "Member 'ASkerfuroWalk_C::Side' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Walk) == 0x000255, "Member 'ASkerfuroWalk_C::Walk' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, ReturnKerfuro) == 0x000258, "Member 'ASkerfuroWalk_C::ReturnKerfuro' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, Z) == 0x000260, "Member 'ASkerfuroWalk_C::Z' has a wrong offset!");
static_assert(offsetof(ASkerfuroWalk_C, X) == 0x00026C, "Member 'ASkerfuroWalk_C::X' has a wrong offset!");

}

