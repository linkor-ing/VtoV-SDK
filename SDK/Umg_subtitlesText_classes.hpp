#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_subtitlesText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_char_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_subtitlesText.umg_subtitlesText_C
// 0x0068 (0x02C8 - 0x0260)
class UUmg_subtitlesText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_58;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_text;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_16FF[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0280(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	Enum_char                                     Char;                                              // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1700[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         A;                                                 // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Stringtext;                                        // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Length;                                            // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_total;                                        // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timer;                                             // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomTime;                                        // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          End;                                               // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1701[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_umg_subtitlesText(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_subtitlesText_C">();
	}
	static class UUmg_subtitlesText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_subtitlesText_C>();
	}
};
static_assert(alignof(UUmg_subtitlesText_C) == 0x000008, "Wrong alignment on UUmg_subtitlesText_C");
static_assert(sizeof(UUmg_subtitlesText_C) == 0x0002C8, "Wrong size on UUmg_subtitlesText_C");
static_assert(offsetof(UUmg_subtitlesText_C, UberGraphFrame) == 0x000260, "Member 'UUmg_subtitlesText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Image_58) == 0x000268, "Member 'UUmg_subtitlesText_C::Image_58' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Text_text) == 0x000270, "Member 'UUmg_subtitlesText_C::Text_text' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Time) == 0x000278, "Member 'UUmg_subtitlesText_C::Time' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Text) == 0x000280, "Member 'UUmg_subtitlesText_C::Text' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Char) == 0x000298, "Member 'UUmg_subtitlesText_C::Char' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, A) == 0x00029C, "Member 'UUmg_subtitlesText_C::A' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Stringtext) == 0x0002A0, "Member 'UUmg_subtitlesText_C::Stringtext' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Length) == 0x0002B0, "Member 'UUmg_subtitlesText_C::Length' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Time_total) == 0x0002B4, "Member 'UUmg_subtitlesText_C::Time_total' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Timer) == 0x0002B8, "Member 'UUmg_subtitlesText_C::Timer' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, CustomTime) == 0x0002BC, "Member 'UUmg_subtitlesText_C::CustomTime' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, End) == 0x0002C0, "Member 'UUmg_subtitlesText_C::End' has a wrong offset!");
static_assert(offsetof(UUmg_subtitlesText_C, Speed) == 0x0002C4, "Member 'UUmg_subtitlesText_C::Speed' has a wrong offset!");

}

