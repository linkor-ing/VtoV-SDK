#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewBlueprint14

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NewBlueprint14.NewBlueprint14_C
// 0x0160 (0x0380 - 0x0220)
class ANewBlueprint14_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        bells2;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        bells1;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPnormal_C*                             Pnormal;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        bells;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_radarPoint_C*                     RadarPoint;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProceduralMeshComponent*               ProceduralMesh;                                    // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         A_a_DEF21A54477435ACA75D8DA4B533E999;              // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            A__Direction_DEF21A54477435ACA75D8DA4B533E999;     // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     A;                                                 // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Vsa;                                               // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Tsa;                                               // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Nsa;                                               // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      Usa;                                               // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Box;                                               // 0x02B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewVar_1;                                          // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 NewVar_2;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 NewVar_3;                                          // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 NewVar_4;                                          // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 NewVar_5;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<uint8>                                 bts1;                                              // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 bts2;                                              // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 bts3;                                              // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 bts4;                                              // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 bs;                                                // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NewVar_6;                                          // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewVar_7;                                          // 0x036C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_8;                                          // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_NewBlueprint14(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Invis();
	void Unvis();
	void A__UpdateFunc();
	void A__FinishedFunc();
	void UserConstructionScript();
	void Gen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewBlueprint14_C">();
	}
	static class ANewBlueprint14_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANewBlueprint14_C>();
	}
};
static_assert(alignof(ANewBlueprint14_C) == 0x000008, "Wrong alignment on ANewBlueprint14_C");
static_assert(sizeof(ANewBlueprint14_C) == 0x000380, "Wrong size on ANewBlueprint14_C");
static_assert(offsetof(ANewBlueprint14_C, UberGraphFrame) == 0x000220, "Member 'ANewBlueprint14_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bells2) == 0x000228, "Member 'ANewBlueprint14_C::bells2' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bells1) == 0x000230, "Member 'ANewBlueprint14_C::bells1' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Pnormal) == 0x000238, "Member 'ANewBlueprint14_C::Pnormal' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bells) == 0x000240, "Member 'ANewBlueprint14_C::bells' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, RadarPoint) == 0x000248, "Member 'ANewBlueprint14_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, ProceduralMesh) == 0x000250, "Member 'ANewBlueprint14_C::ProceduralMesh' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, DefaultSceneRoot) == 0x000258, "Member 'ANewBlueprint14_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, A_a_DEF21A54477435ACA75D8DA4B533E999) == 0x000260, "Member 'ANewBlueprint14_C::A_a_DEF21A54477435ACA75D8DA4B533E999' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, A__Direction_DEF21A54477435ACA75D8DA4B533E999) == 0x000264, "Member 'ANewBlueprint14_C::A__Direction_DEF21A54477435ACA75D8DA4B533E999' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, A) == 0x000268, "Member 'ANewBlueprint14_C::A' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Vsa) == 0x000270, "Member 'ANewBlueprint14_C::Vsa' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Tsa) == 0x000280, "Member 'ANewBlueprint14_C::Tsa' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Nsa) == 0x000290, "Member 'ANewBlueprint14_C::Nsa' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Usa) == 0x0002A0, "Member 'ANewBlueprint14_C::Usa' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Dynmat) == 0x0002B0, "Member 'ANewBlueprint14_C::Dynmat' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Box) == 0x0002B8, "Member 'ANewBlueprint14_C::Box' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, Visible) == 0x0002C4, "Member 'ANewBlueprint14_C::Visible' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_0) == 0x0002C5, "Member 'ANewBlueprint14_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_1) == 0x0002C8, "Member 'ANewBlueprint14_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_2) == 0x0002D8, "Member 'ANewBlueprint14_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_3) == 0x0002E8, "Member 'ANewBlueprint14_C::NewVar_3' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_4) == 0x0002F8, "Member 'ANewBlueprint14_C::NewVar_4' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_5) == 0x000308, "Member 'ANewBlueprint14_C::NewVar_5' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bts1) == 0x000318, "Member 'ANewBlueprint14_C::bts1' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bts2) == 0x000328, "Member 'ANewBlueprint14_C::bts2' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bts3) == 0x000338, "Member 'ANewBlueprint14_C::bts3' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bts4) == 0x000348, "Member 'ANewBlueprint14_C::bts4' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, bs) == 0x000358, "Member 'ANewBlueprint14_C::bs' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_6) == 0x000368, "Member 'ANewBlueprint14_C::NewVar_6' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_7) == 0x00036C, "Member 'ANewBlueprint14_C::NewVar_7' has a wrong offset!");
static_assert(offsetof(ANewBlueprint14_C, NewVar_8) == 0x000378, "Member 'ANewBlueprint14_C::NewVar_8' has a wrong offset!");

}

