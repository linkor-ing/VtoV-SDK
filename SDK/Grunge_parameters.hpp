#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grunge

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function grunge.grunge_C.ExecuteUbergraph_grunge
// 0x0018 (0x0018 - 0x0000)
struct Grunge_C_ExecuteUbergraph_grunge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ignore;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunge_C_ExecuteUbergraph_grunge) == 0x000004, "Wrong alignment on Grunge_C_ExecuteUbergraph_grunge");
static_assert(sizeof(Grunge_C_ExecuteUbergraph_grunge) == 0x000018, "Wrong size on Grunge_C_ExecuteUbergraph_grunge");
static_assert(offsetof(Grunge_C_ExecuteUbergraph_grunge, EntryPoint) == 0x000000, "Member 'Grunge_C_ExecuteUbergraph_grunge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Grunge_C_ExecuteUbergraph_grunge, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Grunge_C_ExecuteUbergraph_grunge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Grunge_C_ExecuteUbergraph_grunge, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Grunge_C_ExecuteUbergraph_grunge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Grunge_C_ExecuteUbergraph_grunge, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Grunge_C_ExecuteUbergraph_grunge::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_ExecuteUbergraph_grunge, K2Node_Event_ignore) == 0x000014, "Member 'Grunge_C_ExecuteUbergraph_grunge::K2Node_Event_ignore' has a wrong offset!");

// Function grunge.grunge_C.setIgnoreSave
// 0x0001 (0x0001 - 0x0000)
struct Grunge_C_SetIgnoreSave final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunge_C_SetIgnoreSave) == 0x000001, "Wrong alignment on Grunge_C_SetIgnoreSave");
static_assert(sizeof(Grunge_C_SetIgnoreSave) == 0x000001, "Wrong size on Grunge_C_SetIgnoreSave");
static_assert(offsetof(Grunge_C_SetIgnoreSave, Ignore) == 0x000000, "Member 'Grunge_C_SetIgnoreSave::Ignore' has a wrong offset!");

// Function grunge.grunge_C.setMat
// 0x0330 (0x0330 - 0x0000)
struct Grunge_C_SetMat final
{
public:
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_26;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_27;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_28;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_29;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_30;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_31;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_32;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_33;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_34;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_35;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_36;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_37;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_38;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_39;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_40;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x01C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x024C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_4;       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_3;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_5;       // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_6;       // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_4;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_5;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_7;       // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_8;       // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_6;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_7;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_8;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunge_C_SetMat) == 0x000008, "Wrong alignment on Grunge_C_SetMat");
static_assert(sizeof(Grunge_C_SetMat) == 0x000330, "Wrong size on Grunge_C_SetMat");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable) == 0x000000, "Member 'Grunge_C_SetMat::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_1) == 0x000008, "Member 'Grunge_C_SetMat::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_2) == 0x000010, "Member 'Grunge_C_SetMat::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable) == 0x000018, "Member 'Grunge_C_SetMat::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_3) == 0x000020, "Member 'Grunge_C_SetMat::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_4) == 0x000028, "Member 'Grunge_C_SetMat::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_5) == 0x000030, "Member 'Grunge_C_SetMat::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_6) == 0x000038, "Member 'Grunge_C_SetMat::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_7) == 0x000040, "Member 'Grunge_C_SetMat::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_8) == 0x000048, "Member 'Grunge_C_SetMat::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_1) == 0x000050, "Member 'Grunge_C_SetMat::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_9) == 0x000058, "Member 'Grunge_C_SetMat::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_10) == 0x000060, "Member 'Grunge_C_SetMat::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_11) == 0x000068, "Member 'Grunge_C_SetMat::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_2) == 0x000070, "Member 'Grunge_C_SetMat::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_12) == 0x000078, "Member 'Grunge_C_SetMat::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_13) == 0x000080, "Member 'Grunge_C_SetMat::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_3) == 0x000088, "Member 'Grunge_C_SetMat::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_14) == 0x000090, "Member 'Grunge_C_SetMat::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_15) == 0x000098, "Member 'Grunge_C_SetMat::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_16) == 0x0000A0, "Member 'Grunge_C_SetMat::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_17) == 0x0000A8, "Member 'Grunge_C_SetMat::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_4) == 0x0000B0, "Member 'Grunge_C_SetMat::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_18) == 0x0000B8, "Member 'Grunge_C_SetMat::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_19) == 0x0000C0, "Member 'Grunge_C_SetMat::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_20) == 0x0000C8, "Member 'Grunge_C_SetMat::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_21) == 0x0000D0, "Member 'Grunge_C_SetMat::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_22) == 0x0000D8, "Member 'Grunge_C_SetMat::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_23) == 0x0000E0, "Member 'Grunge_C_SetMat::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_24) == 0x0000E8, "Member 'Grunge_C_SetMat::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_25) == 0x0000F0, "Member 'Grunge_C_SetMat::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_5) == 0x0000F8, "Member 'Grunge_C_SetMat::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_26) == 0x000100, "Member 'Grunge_C_SetMat::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_27) == 0x000108, "Member 'Grunge_C_SetMat::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_28) == 0x000110, "Member 'Grunge_C_SetMat::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_29) == 0x000118, "Member 'Grunge_C_SetMat::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_30) == 0x000120, "Member 'Grunge_C_SetMat::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_31) == 0x000128, "Member 'Grunge_C_SetMat::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_32) == 0x000130, "Member 'Grunge_C_SetMat::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_6) == 0x000138, "Member 'Grunge_C_SetMat::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_33) == 0x000140, "Member 'Grunge_C_SetMat::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_34) == 0x000148, "Member 'Grunge_C_SetMat::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_35) == 0x000150, "Member 'Grunge_C_SetMat::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_36) == 0x000158, "Member 'Grunge_C_SetMat::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_37) == 0x000160, "Member 'Grunge_C_SetMat::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_38) == 0x000168, "Member 'Grunge_C_SetMat::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_39) == 0x000170, "Member 'Grunge_C_SetMat::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_object_Variable_40) == 0x000178, "Member 'Grunge_C_SetMat::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_7) == 0x000180, "Member 'Grunge_C_SetMat::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000184, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000188, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, Temp_int_Variable_8) == 0x00018C, "Member 'Grunge_C_SetMat::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default) == 0x000190, "Member 'Grunge_C_SetMat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_1) == 0x000198, "Member 'Grunge_C_SetMat::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x0001A0, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001A4, "Member 'Grunge_C_SetMat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001A8, "Member 'Grunge_C_SetMat::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001AC, "Member 'Grunge_C_SetMat::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_MakeRotator_ReturnValue) == 0x0001B0, "Member 'Grunge_C_SetMat::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001BC, "Member 'Grunge_C_SetMat::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_BooleanOR_ReturnValue) == 0x0001BD, "Member 'Grunge_C_SetMat::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0001C0, "Member 'Grunge_C_SetMat::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_BooleanOR_ReturnValue_1) == 0x000248, "Member 'Grunge_C_SetMat::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x00024C, "Member 'Grunge_C_SetMat::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x0002D4, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_4) == 0x0002D8, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_2) == 0x0002E0, "Member 'Grunge_C_SetMat::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_3) == 0x0002E8, "Member 'Grunge_C_SetMat::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_5) == 0x0002F0, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_6) == 0x0002F4, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_4) == 0x0002F8, "Member 'Grunge_C_SetMat::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_5) == 0x000300, "Member 'Grunge_C_SetMat::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_7) == 0x000308, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_RandomIntegerInRange_ReturnValue_8) == 0x00030C, "Member 'Grunge_C_SetMat::CallFunc_RandomIntegerInRange_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_6) == 0x000310, "Member 'Grunge_C_SetMat::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_7) == 0x000318, "Member 'Grunge_C_SetMat::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, K2Node_Select_Default_8) == 0x000320, "Member 'Grunge_C_SetMat::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Grunge_C_SetMat, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000328, "Member 'Grunge_C_SetMat::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function grunge.grunge_C.clean
// 0x0030 (0x0030 - 0x0000)
struct Grunge_C_Clean final
{
public:
	class AProp_sponge_C*                         Sponge;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sub;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSound;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunge_C_Clean) == 0x000008, "Wrong alignment on Grunge_C_Clean");
static_assert(sizeof(Grunge_C_Clean) == 0x000030, "Wrong size on Grunge_C_Clean");
static_assert(offsetof(Grunge_C_Clean, Sponge) == 0x000000, "Member 'Grunge_C_Clean::Sponge' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, Sub) == 0x000008, "Member 'Grunge_C_Clean::Sub' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, NoSound) == 0x00000C, "Member 'Grunge_C_Clean::NoSound' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'Grunge_C_Clean::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Grunge_C_Clean::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, CallFunc_Conv_FloatToString_ReturnValue) == 0x000018, "Member 'Grunge_C_Clean::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_Clean, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000028, "Member 'Grunge_C_Clean::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");

// Function grunge.grunge_C.skipPreDelete
// 0x0001 (0x0001 - 0x0000)
struct Grunge_C_SkipPreDelete final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunge_C_SkipPreDelete) == 0x000001, "Wrong alignment on Grunge_C_SkipPreDelete");
static_assert(sizeof(Grunge_C_SkipPreDelete) == 0x000001, "Wrong size on Grunge_C_SkipPreDelete");
static_assert(offsetof(Grunge_C_SkipPreDelete, Skip) == 0x000000, "Member 'Grunge_C_SkipPreDelete::Skip' has a wrong offset!");

// Function grunge.grunge_C.ignoreSave
// 0x0001 (0x0001 - 0x0000)
struct Grunge_C_IgnoreSave final
{
public:
	bool                                          Param_IgnoreSave;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunge_C_IgnoreSave) == 0x000001, "Wrong alignment on Grunge_C_IgnoreSave");
static_assert(sizeof(Grunge_C_IgnoreSave) == 0x000001, "Wrong size on Grunge_C_IgnoreSave");
static_assert(offsetof(Grunge_C_IgnoreSave, Param_IgnoreSave) == 0x000000, "Member 'Grunge_C_IgnoreSave::Param_IgnoreSave' has a wrong offset!");

// Function grunge.grunge_C.loadData
// 0x00F0 (0x00F0 - 0x0000)
struct Grunge_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunge_C_LoadData) == 0x000010, "Wrong alignment on Grunge_C_LoadData");
static_assert(sizeof(Grunge_C_LoadData) == 0x0000F0, "Wrong size on Grunge_C_LoadData");
static_assert(offsetof(Grunge_C_LoadData, Data) == 0x000000, "Member 'Grunge_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Grunge_C_LoadData, Return) == 0x0000C0, "Member 'Grunge_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Grunge_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Grunge_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Grunge_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Grunge_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Grunge_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000EC, "Member 'Grunge_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function grunge.grunge_C.getData
// 0x0220 (0x0220 - 0x0000)
struct Grunge_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0118(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0128(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_2;                          // 0x0138(0x0010)(ReferenceParm)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_3;                          // 0x0148(0x0010)(ReferenceParm)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           K2Node_MakeStruct_struct_save;                     // 0x0160(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Grunge_C_GetData) == 0x000010, "Wrong alignment on Grunge_C_GetData");
static_assert(sizeof(Grunge_C_GetData) == 0x000220, "Wrong size on Grunge_C_GetData");
static_assert(offsetof(Grunge_C_GetData, Data) == 0x000000, "Member 'Grunge_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'Grunge_C_GetData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, CallFunc_GetObjectClass_ReturnValue) == 0x0000F0, "Member 'Grunge_C_GetData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeArray_Array) == 0x0000F8, "Member 'Grunge_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeArray_Array_1) == 0x000108, "Member 'Grunge_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000118, "Member 'Grunge_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000128, "Member 'Grunge_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeArray_Array_2) == 0x000138, "Member 'Grunge_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeArray_Array_3) == 0x000148, "Member 'Grunge_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Grunge_C_GetData, K2Node_MakeStruct_struct_save) == 0x000160, "Member 'Grunge_C_GetData::K2Node_MakeStruct_struct_save' has a wrong offset!");

// Function grunge.grunge_C.gatherDataFromKey
// 0x0001 (0x0001 - 0x0000)
struct Grunge_C_GatherDataFromKey final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunge_C_GatherDataFromKey) == 0x000001, "Wrong alignment on Grunge_C_GatherDataFromKey");
static_assert(sizeof(Grunge_C_GatherDataFromKey) == 0x000001, "Wrong size on Grunge_C_GatherDataFromKey");
static_assert(offsetof(Grunge_C_GatherDataFromKey, Gather) == 0x000000, "Member 'Grunge_C_GatherDataFromKey::Gather' has a wrong offset!");

}

