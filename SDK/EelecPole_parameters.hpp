#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EelecPole

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function eelecPole.eelecPole_C.ExecuteUbergraph_eelecPole
// 0x0168 (0x0168 - 0x0000)
struct EelecPole_C_ExecuteUbergraph_eelecPole final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2615[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2616[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2617[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2618[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2619[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetCableParticleLocations_Locations;      // 0x00B8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261A[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261B[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetCableParticleLocations_Locations_1;    // 0x00E8(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261C[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261D[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261E[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EelecPole_C_ExecuteUbergraph_eelecPole) == 0x000008, "Wrong alignment on EelecPole_C_ExecuteUbergraph_eelecPole");
static_assert(sizeof(EelecPole_C_ExecuteUbergraph_eelecPole) == 0x000168, "Wrong size on EelecPole_C_ExecuteUbergraph_eelecPole");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, EntryPoint) == 0x000000, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::EntryPoint' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_bool_Variable) == 0x000004, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_bool_Variable_1) == 0x000005, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_object_Variable) == 0x000008, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_object_Variable_1) == 0x000010, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_bool_Variable_2) == 0x000018, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_object_Variable_2) == 0x000020, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_object_Variable_3) == 0x000028, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_RandomUnitVector_ReturnValue) == 0x00005C, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_RandomFloatInRange_ReturnValue) == 0x000068, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00006C, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00007C, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000084, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_FClamp_ReturnValue) == 0x00008C, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_VLerp_ReturnValue) == 0x000090, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00009C, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Lerp_ReturnValue) == 0x0000AC, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Round_ReturnValue) == 0x0000B0, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_GetCableParticleLocations_Locations) == 0x0000B8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_GetCableParticleLocations_Locations' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_GetCableParticleLocations_Locations_1) == 0x0000E8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_GetCableParticleLocations_Locations_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000118, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000130, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000138, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Vector_Distance_ReturnValue) == 0x000144, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000148, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, CallFunc_Not_PreBool_ReturnValue) == 0x000149, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_Select_Default) == 0x000150, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_Select_Default_1) == 0x000158, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_ExecuteUbergraph_eelecPole, K2Node_Select_Default_2) == 0x000160, "Member 'EelecPole_C_ExecuteUbergraph_eelecPole::K2Node_Select_Default_2' has a wrong offset!");

// Function eelecPole.eelecPole_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct EelecPole_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EelecPole_C_ReceiveTick) == 0x000004, "Wrong alignment on EelecPole_C_ReceiveTick");
static_assert(sizeof(EelecPole_C_ReceiveTick) == 0x000004, "Wrong size on EelecPole_C_ReceiveTick");
static_assert(offsetof(EelecPole_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'EelecPole_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function eelecPole.eelecPole_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct EelecPole_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EelecPole_C_UserConstructionScript) == 0x000008, "Wrong alignment on EelecPole_C_UserConstructionScript");
static_assert(sizeof(EelecPole_C_UserConstructionScript) == 0x000028, "Wrong size on EelecPole_C_UserConstructionScript");
static_assert(offsetof(EelecPole_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'EelecPole_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'EelecPole_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'EelecPole_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_UserConstructionScript, K2Node_Select_Default) == 0x000018, "Member 'EelecPole_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EelecPole_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000020, "Member 'EelecPole_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function eelecPole.eelecPole_C.connect
// 0x00C8 (0x00C8 - 0x0000)
struct EelecPole_C_Connect final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2620[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2621[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2622[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2623[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2624[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_3;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        CallFunc_Array_Get_Item_3;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2625[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        CallFunc_Array_Get_Item_4;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        CallFunc_Array_Get_Item_5;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2626[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCableComponent*                        CallFunc_Array_Get_Item_6;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    CallFunc_Array_Get_Item_7;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2627[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EelecPole_C_Connect) == 0x000008, "Wrong alignment on EelecPole_C_Connect");
static_assert(sizeof(EelecPole_C_Connect) == 0x0000C8, "Wrong size on EelecPole_C_Connect");
static_assert(offsetof(EelecPole_C_Connect, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'EelecPole_C_Connect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'EelecPole_C_Connect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, Temp_int_Array_Index_Variable) == 0x000008, "Member 'EelecPole_C_Connect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'EelecPole_C_Connect::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'EelecPole_C_Connect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, Temp_int_Variable) == 0x00001C, "Member 'EelecPole_C_Connect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'EelecPole_C_Connect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item) == 0x000028, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000030, "Member 'EelecPole_C_Connect::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'EelecPole_C_Connect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, Temp_int_Variable_1) == 0x000044, "Member 'EelecPole_C_Connect::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000048, "Member 'EelecPole_C_Connect::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'EelecPole_C_Connect::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_IsValid_ReturnValue_2) == 0x000054, "Member 'EelecPole_C_Connect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetRootComponent_ReturnValue_3) == 0x000060, "Member 'EelecPole_C_Connect::CallFunc_K2_GetRootComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'EelecPole_C_Connect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'EelecPole_C_Connect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_IsValid_ReturnValue_3) == 0x000075, "Member 'EelecPole_C_Connect::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_4) == 0x000078, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_5) == 0x000080, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'EelecPole_C_Connect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'EelecPole_C_Connect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_IsValid_ReturnValue_4) == 0x00008D, "Member 'EelecPole_C_Connect::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_6) == 0x000090, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Get_Item_7) == 0x000098, "Member 'EelecPole_C_Connect::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A0, "Member 'EelecPole_C_Connect::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000AC, "Member 'EelecPole_C_Connect::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'EelecPole_C_Connect::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Vector_Distance_ReturnValue) == 0x0000BC, "Member 'EelecPole_C_Connect::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C0, "Member 'EelecPole_C_Connect::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Connect, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C4, "Member 'EelecPole_C_Connect::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function eelecPole.eelecPole_C.makeArray
// 0x0020 (0x0020 - 0x0000)
struct EelecPole_C_MakeArray final
{
public:
	TArray<class UBillboardComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UCableComponent*>                K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(EelecPole_C_MakeArray) == 0x000008, "Wrong alignment on EelecPole_C_MakeArray");
static_assert(sizeof(EelecPole_C_MakeArray) == 0x000020, "Wrong size on EelecPole_C_MakeArray");
static_assert(offsetof(EelecPole_C_MakeArray, K2Node_MakeArray_Array) == 0x000000, "Member 'EelecPole_C_MakeArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EelecPole_C_MakeArray, K2Node_MakeArray_Array_1) == 0x000010, "Member 'EelecPole_C_MakeArray::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function eelecPole.eelecPole_C.rot
// 0x0160 (0x0160 - 0x0000)
struct EelecPole_C_Rot final
{
public:
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0000(0x0010)(ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2628[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EelecPole_C_Rot) == 0x000008, "Wrong alignment on EelecPole_C_Rot");
static_assert(sizeof(EelecPole_C_Rot) == 0x000160, "Wrong size on EelecPole_C_Rot");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_obj_static_obj) == 0x000000, "Member 'EelecPole_C_Rot::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, Temp_object_Variable) == 0x000010, "Member 'EelecPole_C_Rot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'EelecPole_C_Rot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'EelecPole_C_Rot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000038, "Member 'EelecPole_C_Rot::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000044, "Member 'EelecPole_C_Rot::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000CC, "Member 'EelecPole_C_Rot::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_bBlockingHit) == 0x0000CD, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000CE, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_Time) == 0x0000D0, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_Distance) == 0x0000D4, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_Location) == 0x0000D8, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E4, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_Normal) == 0x0000F0, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_ImpactNormal) == 0x0000FC, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_ElementIndex) == 0x00012C, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'EelecPole_C_Rot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_MakeRotFromZ_ReturnValue) == 0x00014C, "Member 'EelecPole_C_Rot::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(EelecPole_C_Rot, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000158, "Member 'EelecPole_C_Rot::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

