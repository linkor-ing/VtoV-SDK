#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_settingsSlot_controller

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function umg_settingsSlot_controller.umg_settingsSlot_controller_C.ExecuteUbergraph_umg_settingsSlot_controller
// 0x0028 (0x0028 - 0x0000)
struct Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindOptionIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller) == 0x000008, "Wrong alignment on Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller");
static_assert(sizeof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller) == 0x000028, "Wrong size on Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, EntryPoint) == 0x000000, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, K2Node_ComponentBoundEvent_SelectedItem) == 0x000008, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, K2Node_ComponentBoundEvent_SelectionType) == 0x000018, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, CallFunc_FindOptionIndex_ReturnValue) == 0x00001C, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::CallFunc_FindOptionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'Umg_settingsSlot_controller_C_ExecuteUbergraph_umg_settingsSlot_controller::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function umg_settingsSlot_controller.umg_settingsSlot_controller_C.BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Umg_settingsSlot_controller_C_BndEvt__ComboBoxString_103_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function umg_settingsSlot_controller.umg_settingsSlot_controller_C.upd
// 0x0004 (0x0004 - 0x0000)
struct Umg_settingsSlot_controller_C_Upd final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_settingsSlot_controller_C_Upd) == 0x000004, "Wrong alignment on Umg_settingsSlot_controller_C_Upd");
static_assert(sizeof(Umg_settingsSlot_controller_C_Upd) == 0x000004, "Wrong size on Umg_settingsSlot_controller_C_Upd");
static_assert(offsetof(Umg_settingsSlot_controller_C_Upd, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'Umg_settingsSlot_controller_C_Upd::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

}

