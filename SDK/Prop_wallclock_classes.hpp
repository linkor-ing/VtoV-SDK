#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wallclock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_wallAttachable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_wallclock.prop_wallclock_C
// 0x0010 (0x0420 - 0x0410)
class AProp_wallclock_C final : public AProp_wallAttachable_C
{
public:
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_wallclock_C;                   // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Arrows;                                            // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWallclockArrows_Skeleton_AnimBlueprint_C* Anim;                                              // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_wallclock(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_wallclock_C">();
	}
	static class AProp_wallclock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_wallclock_C>();
	}
};
static_assert(alignof(AProp_wallclock_C) == 0x000010, "Wrong alignment on AProp_wallclock_C");
static_assert(sizeof(AProp_wallclock_C) == 0x000420, "Wrong size on AProp_wallclock_C");
static_assert(offsetof(AProp_wallclock_C, UberGraphFrame_Prop_wallclock_C) == 0x000408, "Member 'AProp_wallclock_C::UberGraphFrame_Prop_wallclock_C' has a wrong offset!");
static_assert(offsetof(AProp_wallclock_C, Arrows) == 0x000410, "Member 'AProp_wallclock_C::Arrows' has a wrong offset!");
static_assert(offsetof(AProp_wallclock_C, Anim) == 0x000418, "Member 'AProp_wallclock_C::Anim' has a wrong offset!");

}

