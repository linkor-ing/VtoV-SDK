#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Save_main

#include "Basic.hpp"

#include "Save_main_classes.hpp"
#include "Save_main_parameters.hpp"


namespace SDK
{

// Function save_main.save_main_C.save
// (Public, BlueprintCallable, BlueprintEvent)

void USave_main_C::Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("save_main_C", "save");

	UObject::ProcessEvent(Func, nullptr);
}


// Function save_main.save_main_C.setDefaultSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_settings                 Output                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USave_main_C::SetDefaultSettings(int32 Type, struct FStruct_settings* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("save_main_C", "setDefaultSettings");

	Params::Save_main_C_SetDefaultSettings Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function save_main.save_main_C.saveKeybinds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USave_main_C::SaveKeybinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("save_main_C", "saveKeybinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function save_main.save_main_C.setObjects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainGamemode_C*                  Param_GameMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                Param_Controller                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USave_main_C::SetObjects(class AMainGamemode_C* Param_GameMode, class APlayerController* Param_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("save_main_C", "setObjects");

	Params::Save_main_C_SetObjects Parms{};

	Parms.Param_GameMode = Param_GameMode;
	Parms.Param_Controller = Param_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function save_main.save_main_C.progressAchievement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Achievement                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Popup                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USave_main_C::ProgressAchievement(const class FName& Achievement, bool Popup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("save_main_C", "progressAchievement");

	Params::Save_main_C_ProgressAchievement Parms{};

	Parms.Achievement = Achievement;
	Parms.Popup = Popup;

	UObject::ProcessEvent(Func, &Parms);
}

}

