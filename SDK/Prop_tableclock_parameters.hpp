#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_tableclock

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function prop_tableclock.prop_tableclock_C.ExecuteUbergraph_prop_tableclock
// 0x0230 (0x0230 - 0x0000)
struct Prop_tableclock_C_ExecuteUbergraph_prop_tableclock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTableclockArrows_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsTableclock_Arrows_Skeleton_Anim_Blueprint; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_conv_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name;                                 // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_VictoryIntPlusEquals_IntOut;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_conv_ReturnValue_1;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0108(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_conv_ReturnValue_2;                       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_conv_ReturnValue_3;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock) == 0x000008, "Wrong alignment on Prop_tableclock_C_ExecuteUbergraph_prop_tableclock");
static_assert(sizeof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock) == 0x000230, "Wrong size on Prop_tableclock_C_ExecuteUbergraph_prop_tableclock");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, EntryPoint) == 0x000000, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_DynamicCast_AsTableclock_Arrows_Skeleton_Anim_Blueprint) == 0x000018, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_DynamicCast_AsTableclock_Arrows_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, Temp_int_Variable) == 0x000024, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Percent_IntInt_ReturnValue) == 0x000028, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_conv_ReturnValue) == 0x00002C, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_conv_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000034, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_Event_player) == 0x000038, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_Event_hit) == 0x000040, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_Event_name) == 0x0000C8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_SwitchString_CmpSuccess) == 0x0000D8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_VictoryIntPlusEquals_IntOut) == 0x0000DC, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_VictoryIntPlusEquals_IntOut' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0000E4, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x0000E8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x0000F8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_conv_ReturnValue_1) == 0x000100, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_conv_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_MakeStruct_FormatArgumentData) == 0x000108, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_conv_ReturnValue_2) == 0x000148, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_conv_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00014C, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_conv_ReturnValue_3) == 0x000150, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_conv_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Greater_IntInt_ReturnValue) == 0x000198, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Conv_BoolToText_ReturnValue) == 0x0001A0, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, K2Node_MakeArray_Array) == 0x0001F8, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Format_ReturnValue) == 0x000208, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ExecuteUbergraph_prop_tableclock, CallFunc_Conv_TextToString_ReturnValue) == 0x000220, "Member 'Prop_tableclock_C_ExecuteUbergraph_prop_tableclock::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_tableclock_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_tableclock_C_ReceiveTick");
static_assert(sizeof(Prop_tableclock_C_ReceiveTick) == 0x000004, "Wrong size on Prop_tableclock_C_ReceiveTick");
static_assert(offsetof(Prop_tableclock_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_tableclock_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.upd
// 0x0020 (0x0020 - 0x0000)
struct Prop_tableclock_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_Upd) == 0x000008, "Wrong alignment on Prop_tableclock_C_Upd");
static_assert(sizeof(Prop_tableclock_C_Upd) == 0x000020, "Wrong size on Prop_tableclock_C_Upd");
static_assert(offsetof(Prop_tableclock_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_tableclock_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Upd, Temp_object_Variable) == 0x000008, "Member 'Prop_tableclock_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_tableclock_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Upd, K2Node_Select_Default) == 0x000018, "Member 'Prop_tableclock_C_Upd::K2Node_Select_Default' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.conv
// 0x0078 (0x0078 - 0x0000)
struct Prop_tableclock_C_Conv final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value2;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_Conv) == 0x000008, "Wrong alignment on Prop_tableclock_C_Conv");
static_assert(sizeof(Prop_tableclock_C_Conv) == 0x000078, "Wrong size on Prop_tableclock_C_Conv");
static_assert(offsetof(Prop_tableclock_C_Conv, Value) == 0x000000, "Member 'Prop_tableclock_C_Conv::Value' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, Value2) == 0x000004, "Member 'Prop_tableclock_C_Conv::Value2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, ReturnValue) == 0x000008, "Member 'Prop_tableclock_C_Conv::ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'Prop_tableclock_C_Conv::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'Prop_tableclock_C_Conv::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'Prop_tableclock_C_Conv::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000050, "Member 'Prop_tableclock_C_Conv::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'Prop_tableclock_C_Conv::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_Conv, CallFunc_Conv_StringToInt_ReturnValue) == 0x000070, "Member 'Prop_tableclock_C_Conv::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct Prop_tableclock_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Param_Name;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_ActionName) == 0x000008, "Wrong alignment on Prop_tableclock_C_ActionName");
static_assert(sizeof(Prop_tableclock_C_ActionName) == 0x0000A0, "Wrong size on Prop_tableclock_C_ActionName");
static_assert(offsetof(Prop_tableclock_C_ActionName, Player) == 0x000000, "Member 'Prop_tableclock_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ActionName, Param_Hit) == 0x000008, "Member 'Prop_tableclock_C_ActionName::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_ActionName, Param_Name) == 0x000090, "Member 'Prop_tableclock_C_ActionName::Param_Name' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.lookAt
// 0x0258 (0x0258 - 0x0000)
struct Prop_tableclock_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_BoolToByte_ReturnValue;              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00D0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)(ConstParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0130(0x0018)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0148(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0188(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0230(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_LookAt) == 0x000008, "Wrong alignment on Prop_tableclock_C_LookAt");
static_assert(sizeof(Prop_tableclock_C_LookAt) == 0x000258, "Wrong size on Prop_tableclock_C_LookAt");
static_assert(offsetof(Prop_tableclock_C_LookAt, Player) == 0x000000, "Member 'Prop_tableclock_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_tableclock_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Return) == 0x000090, "Member 'Prop_tableclock_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Text) == 0x000098, "Member 'Prop_tableclock_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_tableclock_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Number) == 0x0000B0, "Member 'Prop_tableclock_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Temp_bool_Variable) == 0x0000B1, "Member 'Prop_tableclock_C_LookAt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, Temp_bool_Variable_1) == 0x0000B2, "Member 'Prop_tableclock_C_LookAt::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_Conv_BoolToByte_ReturnValue) == 0x0000B3, "Member 'Prop_tableclock_C_LookAt::CallFunc_Conv_BoolToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B8, "Member 'Prop_tableclock_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000D0, "Member 'Prop_tableclock_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0000E8, "Member 'Prop_tableclock_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_Select_Default) == 0x000100, "Member 'Prop_tableclock_C_LookAt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_Conv_IntToText_ReturnValue) == 0x000118, "Member 'Prop_tableclock_C_LookAt::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_Select_Default_1) == 0x000130, "Member 'Prop_tableclock_C_LookAt::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_MakeStruct_FormatArgumentData) == 0x000148, "Member 'Prop_tableclock_C_LookAt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_MakeStruct_FormatArgumentData_1) == 0x000188, "Member 'Prop_tableclock_C_LookAt::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0001C8, "Member 'Prop_tableclock_C_LookAt::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'Prop_tableclock_C_LookAt::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, K2Node_MakeArray_Array) == 0x000220, "Member 'Prop_tableclock_C_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_Format_ReturnValue) == 0x000230, "Member 'Prop_tableclock_C_LookAt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x000248, "Member 'Prop_tableclock_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.loadData
// 0x0100 (0x0100 - 0x0000)
struct Prop_tableclock_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_7;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_LoadData) == 0x000010, "Wrong alignment on Prop_tableclock_C_LoadData");
static_assert(sizeof(Prop_tableclock_C_LoadData) == 0x000100, "Wrong size on Prop_tableclock_C_LoadData");
static_assert(offsetof(Prop_tableclock_C_LoadData, Data) == 0x000000, "Member 'Prop_tableclock_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, Return) == 0x0000C0, "Member 'Prop_tableclock_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_tableclock_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000EC, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_4) == 0x0000ED, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_5) == 0x0000EE, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_6) == 0x0000F0, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_LoadData, CallFunc_Array_Get_Item_7) == 0x0000F4, "Member 'Prop_tableclock_C_LoadData::CallFunc_Array_Get_Item_7' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.getData
// 0x02B0 (0x02B0 - 0x0000)
struct Prop_tableclock_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x00D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array_2;                          // 0x00F0(0x0010)(ReferenceParm)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0100(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x01C0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_3;                          // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01F0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_tableclock_C_GetData) == 0x000010, "Wrong alignment on Prop_tableclock_C_GetData");
static_assert(sizeof(Prop_tableclock_C_GetData) == 0x0002B0, "Wrong size on Prop_tableclock_C_GetData");
static_assert(offsetof(Prop_tableclock_C_GetData, Data) == 0x000000, "Member 'Prop_tableclock_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x0000D0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeArray_Array_2) == 0x0000F0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, CallFunc_getData_data) == 0x000100, "Member 'Prop_tableclock_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0001C0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'Prop_tableclock_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_MakeArray_Array_3) == 0x0001E0, "Member 'Prop_tableclock_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001F0, "Member 'Prop_tableclock_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_tableclock.prop_tableclock_C.getActionOptions
// 0x00C8 (0x00C8 - 0x0000)
struct Prop_tableclock_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_getActionOptions_options;                 // 0x0060(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               CallFunc_getActionOptions_options_enum;            // 0x0070(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_getActionOptions_optionsNamesOverlay;     // 0x0080(0x0010)(ReferenceParm)
	uint8                                         CallFunc_getActionOptions_number;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0098(0x0010)(ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x00A8(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_3;                          // 0x00B8(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_tableclock_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_tableclock_C_GetActionOptions");
static_assert(sizeof(Prop_tableclock_C_GetActionOptions) == 0x0000C8, "Wrong size on Prop_tableclock_C_GetActionOptions");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_tableclock_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_tableclock_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_tableclock_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_tableclock_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_tableclock_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_tableclock_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_tableclock_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_tableclock_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, CallFunc_getActionOptions_options) == 0x000060, "Member 'Prop_tableclock_C_GetActionOptions::CallFunc_getActionOptions_options' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, CallFunc_getActionOptions_options_enum) == 0x000070, "Member 'Prop_tableclock_C_GetActionOptions::CallFunc_getActionOptions_options_enum' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, CallFunc_getActionOptions_optionsNamesOverlay) == 0x000080, "Member 'Prop_tableclock_C_GetActionOptions::CallFunc_getActionOptions_optionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, CallFunc_getActionOptions_number) == 0x000090, "Member 'Prop_tableclock_C_GetActionOptions::CallFunc_getActionOptions_number' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000098, "Member 'Prop_tableclock_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, K2Node_MakeArray_Array_2) == 0x0000A8, "Member 'Prop_tableclock_C_GetActionOptions::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_tableclock_C_GetActionOptions, K2Node_MakeArray_Array_3) == 0x0000B8, "Member 'Prop_tableclock_C_GetActionOptions::K2Node_MakeArray_Array_3' has a wrong offset!");

}

