#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_discBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"


namespace SDK::Params
{

// Function prop_discBox.prop_discBox_C.ExecuteUbergraph_prop_discBox
// 0x02A0 (0x02A0 - 0x0000)
struct Prop_discBox_C_ExecuteUbergraph_prop_discBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B02[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B04[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B05[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B06[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0110(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Usb_Super;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B07[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Usb;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B08[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B09[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0A[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0214(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_discBox_C_ExecuteUbergraph_prop_discBox) == 0x000010, "Wrong alignment on Prop_discBox_C_ExecuteUbergraph_prop_discBox");
static_assert(sizeof(Prop_discBox_C_ExecuteUbergraph_prop_discBox) == 0x0002A0, "Wrong size on Prop_discBox_C_ExecuteUbergraph_prop_discBox");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, EntryPoint) == 0x000000, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_Event_player) == 0x000008, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_Event_hit) == 0x000010, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_Event_index) == 0x000098, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_Event_action) == 0x00009C, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, Temp_class_Variable) == 0x0000A0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000F0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_OtherComp) == 0x000100, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000108, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_bFromSweep) == 0x00010C, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ComponentBoundEvent_SweepResult) == 0x000110, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, Temp_class_Variable_1) == 0x000198, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_GetObjectClass_ReturnValue) == 0x0001A0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ClassDynamicCast_AsProp_Usb_Super) == 0x0001A8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ClassDynamicCast_AsProp_Usb_Super' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ClassDynamicCast_bSuccess) == 0x0001B0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Array_Length_ReturnValue) == 0x0001B4, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ClassDynamicCast_AsProp_Usb) == 0x0001B8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ClassDynamicCast_AsProp_Usb' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_ClassDynamicCast_bSuccess_1) == 0x0001C0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Less_IntInt_ReturnValue) == 0x0001C1, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, Temp_int_Variable) == 0x0001C4, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_getMainPlayer_AsMain_Player) == 0x0001C8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, Temp_int_Variable_1) == 0x0001D0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001D4, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Array_LastIndex_ReturnValue) == 0x0001DC, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, Temp_int_Variable_2) == 0x0001E0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_Array_Add_ReturnValue_1) == 0x0001E4, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_Select_Default) == 0x0001E8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001F0, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001F8, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000200, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_DynamicCast_AsPrimitive_Component) == 0x000208, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ExecuteUbergraph_prop_discBox, CallFunc_MakeHitResult_ReturnValue) == 0x000214, "Member 'Prop_discBox_C_ExecuteUbergraph_prop_discBox::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_discBox_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_discBox_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_discBox_C_ActionOptionIndex");
static_assert(sizeof(Prop_discBox_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_discBox_C_ActionOptionIndex");
static_assert(offsetof(Prop_discBox_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_discBox_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_discBox_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_discBox_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_discBox_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_discBox_C_BndEvt__Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.gen
// 0x0090 (0x0090 - 0x0000)
struct Prop_discBox_C_Gen final
{
public:
	int32                                         I;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0C[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0D[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_discBox_C_Gen) == 0x000010, "Wrong alignment on Prop_discBox_C_Gen");
static_assert(sizeof(Prop_discBox_C_Gen) == 0x000090, "Wrong size on Prop_discBox_C_Gen");
static_assert(offsetof(Prop_discBox_C_Gen, I) == 0x000000, "Member 'Prop_discBox_C_Gen::I' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, Temp_int_Variable) == 0x000004, "Member 'Prop_discBox_C_Gen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Prop_discBox_C_Gen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Prop_discBox_C_Gen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Prop_discBox_C_Gen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, Temp_int_Variable_1) == 0x000014, "Member 'Prop_discBox_C_Gen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'Prop_discBox_C_Gen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'Prop_discBox_C_Gen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'Prop_discBox_C_Gen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'Prop_discBox_C_Gen::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'Prop_discBox_C_Gen::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'Prop_discBox_C_Gen::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Array_Get_Item) == 0x000070, "Member 'Prop_discBox_C_Gen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'Prop_discBox_C_Gen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Prop_discBox_C_Gen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, K2Node_Select_Default) == 0x000080, "Member 'Prop_discBox_C_Gen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_Gen, CallFunc_AddInstance_ReturnValue) == 0x000088, "Member 'Prop_discBox_C_Gen::CallFunc_AddInstance_ReturnValue' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_discBox_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0E[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_discBox_C_LoadData) == 0x000010, "Wrong alignment on Prop_discBox_C_LoadData");
static_assert(sizeof(Prop_discBox_C_LoadData) == 0x0000E0, "Wrong size on Prop_discBox_C_LoadData");
static_assert(offsetof(Prop_discBox_C_LoadData, Data) == 0x000000, "Member 'Prop_discBox_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_LoadData, Return) == 0x0000C0, "Member 'Prop_discBox_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_discBox_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_discBox_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.getData
// 0x0260 (0x0260 - 0x0000)
struct Prop_discBox_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0180(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01A0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_discBox_C_GetData) == 0x000010, "Wrong alignment on Prop_discBox_C_GetData");
static_assert(sizeof(Prop_discBox_C_GetData) == 0x000260, "Wrong size on Prop_discBox_C_GetData");
static_assert(offsetof(Prop_discBox_C_GetData, Data) == 0x000000, "Member 'Prop_discBox_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_discBox_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000180, "Member 'Prop_discBox_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetData, K2Node_MakeArray_Array) == 0x000190, "Member 'Prop_discBox_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001A0, "Member 'Prop_discBox_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_discBox.prop_discBox_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Prop_discBox_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_discBox_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_discBox_C_GetActionOptions");
static_assert(sizeof(Prop_discBox_C_GetActionOptions) == 0x000058, "Wrong size on Prop_discBox_C_GetActionOptions");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_discBox_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_discBox_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_discBox_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_discBox_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_discBox_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_discBox_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_discBox_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Prop_discBox_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

