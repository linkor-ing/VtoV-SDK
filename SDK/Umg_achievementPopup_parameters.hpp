#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_achievementPopup

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Struct_achievement_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function umg_achievementPopup.umg_achievementPopup_C.ExecuteUbergraph_umg_achievementPopup
// 0x0070 (0x0070 - 0x0000)
struct Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EDA[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup) == 0x000008, "Wrong alignment on Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup");
static_assert(sizeof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup) == 0x000070, "Wrong size on Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, EntryPoint) == 0x000000, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000004, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, K2Node_Event_MyGeometry) == 0x000008, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, K2Node_Event_InDeltaTime) == 0x000040, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_Lerp_ReturnValue) == 0x000044, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000058, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000060, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000068, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'Umg_achievementPopup_C_ExecuteUbergraph_umg_achievementPopup::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function umg_achievementPopup.umg_achievementPopup_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_achievementPopup_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_achievementPopup_C_Tick) == 0x000004, "Wrong alignment on Umg_achievementPopup_C_Tick");
static_assert(sizeof(Umg_achievementPopup_C_Tick) == 0x00003C, "Wrong size on Umg_achievementPopup_C_Tick");
static_assert(offsetof(Umg_achievementPopup_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_achievementPopup_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_achievementPopup_C_Tick::InDeltaTime' has a wrong offset!");

// Function umg_achievementPopup.umg_achievementPopup_C.upd
// 0x0208 (0x0208 - 0x0000)
struct Umg_achievementPopup_C_Upd final
{
public:
	struct FStruct_achievement                    Param_Data;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EDB[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EDC[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EDD[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EDE[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0160(0x0018)()
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0188(0x0028)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x01C0(0x0028)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01E8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_achievementPopup_C_Upd) == 0x000008, "Wrong alignment on Umg_achievementPopup_C_Upd");
static_assert(sizeof(Umg_achievementPopup_C_Upd) == 0x000208, "Wrong size on Umg_achievementPopup_C_Upd");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Param_Data) == 0x000000, "Member 'Umg_achievementPopup_C_Upd::Param_Data' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_int_Variable) == 0x000050, "Member 'Umg_achievementPopup_C_Upd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_struct_Variable) == 0x000054, "Member 'Umg_achievementPopup_C_Upd::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'Umg_achievementPopup_C_Upd::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000065, "Member 'Umg_achievementPopup_C_Upd::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_SelectColor_ReturnValue) == 0x000078, "Member 'Umg_achievementPopup_C_Upd::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'Umg_achievementPopup_C_Upd::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C8, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000D8, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E0, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F0, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'Umg_achievementPopup_C_Upd::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_struct_Variable_1) == 0x000110, "Member 'Umg_achievementPopup_C_Upd::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_int_Variable_1) == 0x000120, "Member 'Umg_achievementPopup_C_Upd::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_struct_Variable_2) == 0x000124, "Member 'Umg_achievementPopup_C_Upd::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_struct_Variable_3) == 0x000134, "Member 'Umg_achievementPopup_C_Upd::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_int_Variable_2) == 0x000144, "Member 'Umg_achievementPopup_C_Upd::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_text_Variable) == 0x000148, "Member 'Umg_achievementPopup_C_Upd::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, Temp_text_Variable_1) == 0x000160, "Member 'Umg_achievementPopup_C_Upd::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_Select_Default) == 0x000178, "Member 'Umg_achievementPopup_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_MakeStruct_SlateColor_1) == 0x000188, "Member 'Umg_achievementPopup_C_Upd::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_Select_Default_1) == 0x0001B0, "Member 'Umg_achievementPopup_C_Upd::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_MakeStruct_SlateColor_2) == 0x0001C0, "Member 'Umg_achievementPopup_C_Upd::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, K2Node_Select_Default_2) == 0x0001E8, "Member 'Umg_achievementPopup_C_Upd::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_achievementPopup_C_Upd, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000200, "Member 'Umg_achievementPopup_C_Upd::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

