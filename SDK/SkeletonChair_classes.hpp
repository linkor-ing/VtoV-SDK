#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkeletonChair

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass skeletonChair.skeletonChair_C
// 0x0070 (0x0290 - 0x0220)
class ASkeletonChair_C final : public AActor
{
public:
	class UChildActorComponent*                   bone11;                                            // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone10;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone9;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone8;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone7;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone6;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone5;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone4;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone3;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone2;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone1;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"skeletonChair_C">();
	}
	static class ASkeletonChair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASkeletonChair_C>();
	}
};
static_assert(alignof(ASkeletonChair_C) == 0x000008, "Wrong alignment on ASkeletonChair_C");
static_assert(sizeof(ASkeletonChair_C) == 0x000290, "Wrong size on ASkeletonChair_C");
static_assert(offsetof(ASkeletonChair_C, bone11) == 0x000220, "Member 'ASkeletonChair_C::bone11' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone10) == 0x000228, "Member 'ASkeletonChair_C::bone10' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone9) == 0x000230, "Member 'ASkeletonChair_C::bone9' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone8) == 0x000238, "Member 'ASkeletonChair_C::bone8' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone7) == 0x000240, "Member 'ASkeletonChair_C::bone7' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone6) == 0x000248, "Member 'ASkeletonChair_C::bone6' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone5) == 0x000250, "Member 'ASkeletonChair_C::bone5' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, bone4) == 0x000258, "Member 'ASkeletonChair_C::bone4' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, Bone3) == 0x000260, "Member 'ASkeletonChair_C::Bone3' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, Bone2) == 0x000268, "Member 'ASkeletonChair_C::Bone2' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, Bone1) == 0x000270, "Member 'ASkeletonChair_C::Bone1' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, StaticMesh) == 0x000278, "Member 'ASkeletonChair_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, Bone) == 0x000280, "Member 'ASkeletonChair_C::Bone' has a wrong offset!");
static_assert(offsetof(ASkeletonChair_C, DefaultSceneRoot) == 0x000288, "Member 'ASkeletonChair_C::DefaultSceneRoot' has a wrong offset!");

}

