#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeAudioImporter

#include "Basic.hpp"

#include "RuntimeAudioImporter_structs.hpp"


namespace SDK::Params
{

// Function RuntimeAudioImporter.ImportedSoundWave.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct ImportedSoundWave_GetDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImportedSoundWave_GetDuration) == 0x000004, "Wrong alignment on ImportedSoundWave_GetDuration");
static_assert(sizeof(ImportedSoundWave_GetDuration) == 0x000004, "Wrong size on ImportedSoundWave_GetDuration");
static_assert(offsetof(ImportedSoundWave_GetDuration, ReturnValue) == 0x000000, "Member 'ImportedSoundWave_GetDuration::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.ImportedSoundWave.IsPlaybackFinished
// 0x0001 (0x0001 - 0x0000)
struct ImportedSoundWave_IsPlaybackFinished final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImportedSoundWave_IsPlaybackFinished) == 0x000001, "Wrong alignment on ImportedSoundWave_IsPlaybackFinished");
static_assert(sizeof(ImportedSoundWave_IsPlaybackFinished) == 0x000001, "Wrong size on ImportedSoundWave_IsPlaybackFinished");
static_assert(offsetof(ImportedSoundWave_IsPlaybackFinished, ReturnValue) == 0x000000, "Member 'ImportedSoundWave_IsPlaybackFinished::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.ImportedSoundWave.RewindPlaybackTime
// 0x0008 (0x0008 - 0x0000)
struct ImportedSoundWave_RewindPlaybackTime final
{
public:
	float                                         PlaybackTime;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F41[0x3];                                      // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ImportedSoundWave_RewindPlaybackTime) == 0x000004, "Wrong alignment on ImportedSoundWave_RewindPlaybackTime");
static_assert(sizeof(ImportedSoundWave_RewindPlaybackTime) == 0x000008, "Wrong size on ImportedSoundWave_RewindPlaybackTime");
static_assert(offsetof(ImportedSoundWave_RewindPlaybackTime, PlaybackTime) == 0x000000, "Member 'ImportedSoundWave_RewindPlaybackTime::PlaybackTime' has a wrong offset!");
static_assert(offsetof(ImportedSoundWave_RewindPlaybackTime, ReturnValue) == 0x000004, "Member 'ImportedSoundWave_RewindPlaybackTime::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.ImportedSoundWave.GetDurationConst
// 0x0004 (0x0004 - 0x0000)
struct ImportedSoundWave_GetDurationConst final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImportedSoundWave_GetDurationConst) == 0x000004, "Wrong alignment on ImportedSoundWave_GetDurationConst");
static_assert(sizeof(ImportedSoundWave_GetDurationConst) == 0x000004, "Wrong size on ImportedSoundWave_GetDurationConst");
static_assert(offsetof(ImportedSoundWave_GetDurationConst, ReturnValue) == 0x000000, "Member 'ImportedSoundWave_GetDurationConst::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.ImportedSoundWave.GetPlaybackPercentage
// 0x0004 (0x0004 - 0x0000)
struct ImportedSoundWave_GetPlaybackPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImportedSoundWave_GetPlaybackPercentage) == 0x000004, "Wrong alignment on ImportedSoundWave_GetPlaybackPercentage");
static_assert(sizeof(ImportedSoundWave_GetPlaybackPercentage) == 0x000004, "Wrong size on ImportedSoundWave_GetPlaybackPercentage");
static_assert(offsetof(ImportedSoundWave_GetPlaybackPercentage, ReturnValue) == 0x000000, "Member 'ImportedSoundWave_GetPlaybackPercentage::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.ImportedSoundWave.GetPlaybackTime
// 0x0004 (0x0004 - 0x0000)
struct ImportedSoundWave_GetPlaybackTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ImportedSoundWave_GetPlaybackTime) == 0x000004, "Wrong alignment on ImportedSoundWave_GetPlaybackTime");
static_assert(sizeof(ImportedSoundWave_GetPlaybackTime) == 0x000004, "Wrong size on ImportedSoundWave_GetPlaybackTime");
static_assert(offsetof(ImportedSoundWave_GetPlaybackTime, ReturnValue) == 0x000000, "Member 'ImportedSoundWave_GetPlaybackTime::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ConvertSecondsToString
// 0x0018 (0x0018 - 0x0000)
struct RuntimeAudioImporterLibrary_ConvertSecondsToString final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F43[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeAudioImporterLibrary_ConvertSecondsToString) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ConvertSecondsToString");
static_assert(sizeof(RuntimeAudioImporterLibrary_ConvertSecondsToString) == 0x000018, "Wrong size on RuntimeAudioImporterLibrary_ConvertSecondsToString");
static_assert(offsetof(RuntimeAudioImporterLibrary_ConvertSecondsToString, Seconds) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ConvertSecondsToString::Seconds' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ConvertSecondsToString, ReturnValue) == 0x000008, "Member 'RuntimeAudioImporterLibrary_ConvertSecondsToString::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.CreateRuntimeAudioImporter
// 0x0008 (0x0008 - 0x0000)
struct RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter final
{
public:
	class URuntimeAudioImporterLibrary*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter");
static_assert(sizeof(RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter) == 0x000008, "Wrong size on RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter");
static_assert(offsetof(RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter, ReturnValue) == 0x000000, "Member 'RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ExportSoundWaveToBuffer
// 0x0020 (0x0020 - 0x0000)
struct RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer final
{
public:
	class UImportedSoundWave*                     ImporterSoundWave;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 AudioData;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	EAudioFormat                                  AudioFormat;                                       // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Quality;                                           // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F44[0x5];                                      // 0x001B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer");
static_assert(sizeof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer) == 0x000020, "Wrong size on RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer, ImporterSoundWave) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer::ImporterSoundWave' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer, AudioData) == 0x000008, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer::AudioData' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer, AudioFormat) == 0x000018, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer::AudioFormat' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer, Quality) == 0x000019, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer::Quality' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer, ReturnValue) == 0x00001A, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ExportSoundWaveToFile
// 0x0020 (0x0020 - 0x0000)
struct RuntimeAudioImporterLibrary_ExportSoundWaveToFile final
{
public:
	class UImportedSoundWave*                     ImporterSoundWave;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SavePath;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioFormat                                  AudioFormat;                                       // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Quality;                                           // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F45[0x5];                                      // 0x001B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ExportSoundWaveToFile");
static_assert(sizeof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile) == 0x000020, "Wrong size on RuntimeAudioImporterLibrary_ExportSoundWaveToFile");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile, ImporterSoundWave) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToFile::ImporterSoundWave' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile, SavePath) == 0x000008, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToFile::SavePath' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile, AudioFormat) == 0x000018, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToFile::AudioFormat' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile, Quality) == 0x000019, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToFile::Quality' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ExportSoundWaveToFile, ReturnValue) == 0x00001A, "Member 'RuntimeAudioImporterLibrary_ExportSoundWaveToFile::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.GetAudioFormat
// 0x0018 (0x0018 - 0x0000)
struct RuntimeAudioImporterLibrary_GetAudioFormat final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioFormat                                  ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F46[0x7];                                      // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_GetAudioFormat) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_GetAudioFormat");
static_assert(sizeof(RuntimeAudioImporterLibrary_GetAudioFormat) == 0x000018, "Wrong size on RuntimeAudioImporterLibrary_GetAudioFormat");
static_assert(offsetof(RuntimeAudioImporterLibrary_GetAudioFormat, FilePath) == 0x000000, "Member 'RuntimeAudioImporterLibrary_GetAudioFormat::FilePath' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_GetAudioFormat, ReturnValue) == 0x000010, "Member 'RuntimeAudioImporterLibrary_GetAudioFormat::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.GetAudioFormatAdvanced
// 0x0018 (0x0018 - 0x0000)
struct RuntimeAudioImporterLibrary_GetAudioFormatAdvanced final
{
public:
	TArray<uint8>                                 AudioData;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EAudioFormat                                  ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F47[0x7];                                      // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_GetAudioFormatAdvanced) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_GetAudioFormatAdvanced");
static_assert(sizeof(RuntimeAudioImporterLibrary_GetAudioFormatAdvanced) == 0x000018, "Wrong size on RuntimeAudioImporterLibrary_GetAudioFormatAdvanced");
static_assert(offsetof(RuntimeAudioImporterLibrary_GetAudioFormatAdvanced, AudioData) == 0x000000, "Member 'RuntimeAudioImporterLibrary_GetAudioFormatAdvanced::AudioData' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_GetAudioFormatAdvanced, ReturnValue) == 0x000010, "Member 'RuntimeAudioImporterLibrary_GetAudioFormatAdvanced::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.TranscodeRAWDataFromBuffer
// 0x0030 (0x0030 - 0x0000)
struct RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer final
{
public:
	TArray<uint8>                                 RAWData_From;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               FormatFrom;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F48[0x7];                                      // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 RAWData_To;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               FormatTo;                                          // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F49[0x7];                                      // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer");
static_assert(sizeof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer) == 0x000030, "Wrong size on RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer, RAWData_From) == 0x000000, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer::RAWData_From' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer, FormatFrom) == 0x000010, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer::FormatFrom' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer, RAWData_To) == 0x000018, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer::RAWData_To' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer, FormatTo) == 0x000028, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer::FormatTo' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.TranscodeRAWDataFromFile
// 0x0030 (0x0030 - 0x0000)
struct RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile final
{
public:
	class FString                                 FilePathFrom;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               FormatFrom;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4A[0x7];                                      // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FilePathTo;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               FormatTo;                                          // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4B[0x6];                                      // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile");
static_assert(sizeof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile) == 0x000030, "Wrong size on RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile, FilePathFrom) == 0x000000, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile::FilePathFrom' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile, FormatFrom) == 0x000010, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile::FormatFrom' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile, FilePathTo) == 0x000018, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile::FilePathTo' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile, FormatTo) == 0x000028, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile::FormatTo' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile, ReturnValue) == 0x000029, "Member 'RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile::ReturnValue' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.CompressSoundWave
// 0x0028 (0x0028 - 0x0000)
struct RuntimeAudioImporterLibrary_CompressSoundWave final
{
public:
	class UImportedSoundWave*                     ImportedSoundWaveRef;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class USoundWave* SoundWaveRef)> OnCompressedResult;                                // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FCompressedSoundWaveInfo               CompressedSoundWaveInfo;                           // 0x0018(0x000C)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Quality;                                           // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFillCompressedBuffer;                             // 0x0025(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFillPCMBuffer;                                    // 0x0026(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFillRAWWaveBuffer;                                // 0x0027(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeAudioImporterLibrary_CompressSoundWave) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_CompressSoundWave");
static_assert(sizeof(RuntimeAudioImporterLibrary_CompressSoundWave) == 0x000028, "Wrong size on RuntimeAudioImporterLibrary_CompressSoundWave");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, ImportedSoundWaveRef) == 0x000000, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::ImportedSoundWaveRef' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, OnCompressedResult) == 0x000008, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::OnCompressedResult' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, CompressedSoundWaveInfo) == 0x000018, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::CompressedSoundWaveInfo' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, Quality) == 0x000024, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::Quality' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, bFillCompressedBuffer) == 0x000025, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::bFillCompressedBuffer' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, bFillPCMBuffer) == 0x000026, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::bFillPCMBuffer' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_CompressSoundWave, bFillRAWWaveBuffer) == 0x000027, "Member 'RuntimeAudioImporterLibrary_CompressSoundWave::bFillRAWWaveBuffer' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromBuffer
// 0x0018 (0x0018 - 0x0000)
struct RuntimeAudioImporterLibrary_ImportAudioFromBuffer final
{
public:
	TArray<uint8>                                 AudioData;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	EAudioFormat                                  Format;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4C[0x7];                                      // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ImportAudioFromBuffer) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ImportAudioFromBuffer");
static_assert(sizeof(RuntimeAudioImporterLibrary_ImportAudioFromBuffer) == 0x000018, "Wrong size on RuntimeAudioImporterLibrary_ImportAudioFromBuffer");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromBuffer, AudioData) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromBuffer::AudioData' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromBuffer, Format) == 0x000010, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromBuffer::Format' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromFile
// 0x0018 (0x0018 - 0x0000)
struct RuntimeAudioImporterLibrary_ImportAudioFromFile final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioFormat                                  Format;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4D[0x7];                                      // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ImportAudioFromFile) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ImportAudioFromFile");
static_assert(sizeof(RuntimeAudioImporterLibrary_ImportAudioFromFile) == 0x000018, "Wrong size on RuntimeAudioImporterLibrary_ImportAudioFromFile");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromFile, FilePath) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromFile::FilePath' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromFile, Format) == 0x000010, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromFile::Format' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromPreImportedSound
// 0x0008 (0x0008 - 0x0000)
struct RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound final
{
public:
	class UPreImportedSoundAsset*                 PreImportedSoundAssetRef;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound");
static_assert(sizeof(RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound) == 0x000008, "Wrong size on RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound, PreImportedSoundAssetRef) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound::PreImportedSoundAssetRef' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromRAWBuffer
// 0x0020 (0x0020 - 0x0000)
struct RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer final
{
public:
	TArray<uint8>                                 RAWBuffer;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               Format;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4E[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SampleRate;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOfChannels;                                     // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4F[0x4];                                      // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer");
static_assert(sizeof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer) == 0x000020, "Wrong size on RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer, RAWBuffer) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer::RAWBuffer' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer, Format) == 0x000010, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer::Format' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer, SampleRate) == 0x000014, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer::SampleRate' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer, NumOfChannels) == 0x000018, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer::NumOfChannels' has a wrong offset!");

// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromRAWFile
// 0x0020 (0x0020 - 0x0000)
struct RuntimeAudioImporterLibrary_ImportAudioFromRAWFile final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERAWAudioFormat                               Format;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F50[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SampleRate;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOfChannels;                                     // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F51[0x4];                                      // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile) == 0x000008, "Wrong alignment on RuntimeAudioImporterLibrary_ImportAudioFromRAWFile");
static_assert(sizeof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile) == 0x000020, "Wrong size on RuntimeAudioImporterLibrary_ImportAudioFromRAWFile");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile, FilePath) == 0x000000, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWFile::FilePath' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile, Format) == 0x000010, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWFile::Format' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile, SampleRate) == 0x000014, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWFile::SampleRate' has a wrong offset!");
static_assert(offsetof(RuntimeAudioImporterLibrary_ImportAudioFromRAWFile, NumOfChannels) == 0x000018, "Member 'RuntimeAudioImporterLibrary_ImportAudioFromRAWFile::NumOfChannels' has a wrong offset!");

}

