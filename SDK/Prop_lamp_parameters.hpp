#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_lamp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "Struct_mBool_structs.hpp"


namespace SDK::Params
{

// Function prop_lamp.prop_lamp_C.ExecuteUbergraph_prop_lamp
// 0x01B0 (0x01B0 - 0x0000)
struct Prop_lamp_C_ExecuteUbergraph_prop_lamp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3830[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3831[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3832[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x005C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3833[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_gascan_C*                         K2Node_DynamicCast_AsProp_Gascan;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3834[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3835[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3836[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_ExecuteUbergraph_prop_lamp) == 0x000008, "Wrong alignment on Prop_lamp_C_ExecuteUbergraph_prop_lamp");
static_assert(sizeof(Prop_lamp_C_ExecuteUbergraph_prop_lamp) == 0x0001B0, "Wrong size on Prop_lamp_C_ExecuteUbergraph_prop_lamp");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, EntryPoint) == 0x000000, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000014, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Conv_FloatToString_ReturnValue) == 0x000020, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000031, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_ComponentBoundEvent_HitComponent) == 0x000038, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_ComponentBoundEvent_OtherActor) == 0x000040, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_ComponentBoundEvent_OtherComp) == 0x000048, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000050, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_ComponentBoundEvent_Hit) == 0x00005C, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_DynamicCast_AsProp_Gascan) == 0x0000E8, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_DynamicCast_AsProp_Gascan' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000F1, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000F2, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_FClamp_ReturnValue) == 0x0000FC, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000100, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000104, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, CallFunc_FClamp_ReturnValue_1) == 0x000108, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_LowEntry_LocalVariable_Value__Object) == 0x00010C, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_player_1) == 0x000110, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_hit) == 0x000118, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_index) == 0x0001A0, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_action) == 0x0001A4, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_SwitchEnum_CmpSuccess) == 0x0001A5, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ExecuteUbergraph_prop_lamp, K2Node_Event_player) == 0x0001A8, "Member 'Prop_lamp_C_ExecuteUbergraph_prop_lamp::K2Node_Event_player' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_lamp_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_lamp_C_ActionOptionIndex");
static_assert(sizeof(Prop_lamp_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_lamp_C_ActionOptionIndex");
static_assert(offsetof(Prop_lamp_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_lamp_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_lamp_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_lamp_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_lamp_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Param_Hit) == 0x000024, "Member 'Prop_lamp_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Param_Hit' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_lamp_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_lamp_C_ReceiveTick");
static_assert(sizeof(Prop_lamp_C_ReceiveTick) == 0x000004, "Wrong size on Prop_lamp_C_ReceiveTick");
static_assert(offsetof(Prop_lamp_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_lamp_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.upd
// 0x0020 (0x0020 - 0x0000)
struct Prop_lamp_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3837[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_Upd) == 0x000008, "Wrong alignment on Prop_lamp_C_Upd");
static_assert(sizeof(Prop_lamp_C_Upd) == 0x000020, "Wrong size on Prop_lamp_C_Upd");
static_assert(offsetof(Prop_lamp_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_lamp_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_Upd, Temp_object_Variable) == 0x000008, "Member 'Prop_lamp_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_lamp_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_Upd, K2Node_Select_Default) == 0x000018, "Member 'Prop_lamp_C_Upd::K2Node_Select_Default' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_lamp_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_lamp_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_lamp_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_lamp_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_lamp_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_lamp_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.loadData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_lamp_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3838[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_lamp_C_LoadData) == 0x000010, "Wrong alignment on Prop_lamp_C_LoadData");
static_assert(sizeof(Prop_lamp_C_LoadData) == 0x0000F0, "Wrong size on Prop_lamp_C_LoadData");
static_assert(offsetof(Prop_lamp_C_LoadData, Data) == 0x000000, "Member 'Prop_lamp_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LoadData, Return) == 0x0000C0, "Member 'Prop_lamp_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_lamp_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_lamp_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_lamp_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000EC, "Member 'Prop_lamp_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.getData
// 0x02C0 (0x02C0 - 0x0000)
struct Prop_lamp_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x00E0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00F0(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0100(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01C0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x01E0(0x0010)(ReferenceParm)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_3;                          // 0x01F0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0200(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_GetData) == 0x000010, "Wrong alignment on Prop_lamp_C_GetData");
static_assert(sizeof(Prop_lamp_C_GetData) == 0x0002C0, "Wrong size on Prop_lamp_C_GetData");
static_assert(offsetof(Prop_lamp_C_GetData, Data) == 0x000000, "Member 'Prop_lamp_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Prop_lamp_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'Prop_lamp_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x0000E0, "Member 'Prop_lamp_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000F0, "Member 'Prop_lamp_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, CallFunc_getData_data) == 0x000100, "Member 'Prop_lamp_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'Prop_lamp_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'Prop_lamp_C_GetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeArray_Array_2) == 0x0001E0, "Member 'Prop_lamp_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_MakeArray_Array_3) == 0x0001F0, "Member 'Prop_lamp_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000200, "Member 'Prop_lamp_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.lookAt
// 0x0120 (0x0120 - 0x0000)
struct Prop_lamp_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3839[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00D8(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_lamp_C_LookAt) == 0x000008, "Wrong alignment on Prop_lamp_C_LookAt");
static_assert(sizeof(Prop_lamp_C_LookAt) == 0x000120, "Wrong size on Prop_lamp_C_LookAt");
static_assert(offsetof(Prop_lamp_C_LookAt, Player) == 0x000000, "Member 'Prop_lamp_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_lamp_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, Return) == 0x000090, "Member 'Prop_lamp_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, Text) == 0x000098, "Member 'Prop_lamp_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_lamp_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B0, "Member 'Prop_lamp_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'Prop_lamp_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000D8, "Member 'Prop_lamp_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'Prop_lamp_C_LookAt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000100, "Member 'Prop_lamp_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'Prop_lamp_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function prop_lamp.prop_lamp_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Prop_lamp_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_lamp_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_lamp_C_GetActionOptions");
static_assert(sizeof(Prop_lamp_C_GetActionOptions) == 0x000058, "Wrong size on Prop_lamp_C_GetActionOptions");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_lamp_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_lamp_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_lamp_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_lamp_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_lamp_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_lamp_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_lamp_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Prop_lamp_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

