#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_texturePicker

#include "Basic.hpp"

#include "Umg_texturePicker_classes.hpp"
#include "Umg_texturePicker_parameters.hpp"


namespace SDK
{

// Function umg_texturePicker.umg_texturePicker_C.ExecuteUbergraph_umg_texturePicker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_texturePicker_C::ExecuteUbergraph_umg_texturePicker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_texturePicker_C", "ExecuteUbergraph_umg_texturePicker");

	Params::Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_texturePicker.umg_texturePicker_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUmg_texturePicker_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_texturePicker_C", "OnFocusLost");

	Params::Umg_texturePicker_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_texturePicker.umg_texturePicker_C.loadArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UTexture2D*>               Textures                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUmg_texturePicker_C::LoadArray(TArray<class UTexture2D*>& Textures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_texturePicker_C", "loadArray");

	Params::Umg_texturePicker_C_LoadArray Parms{};

	Parms.Textures = std::move(Textures);

	UObject::ProcessEvent(Func, &Parms);

	Textures = std::move(Parms.Textures);
}


// Function umg_texturePicker.umg_texturePicker_C.pick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Tex                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_texturePicker_C::Pick(class UTexture2D* Tex, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_texturePicker_C", "pick");

	Params::Umg_texturePicker_C_Pick Parms{};

	Parms.Tex = Tex;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_texturePicker.umg_texturePicker_C.unfocus
// (Public, BlueprintCallable, BlueprintEvent)

void UUmg_texturePicker_C::Unfocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_texturePicker_C", "unfocus");

	UObject::ProcessEvent(Func, nullptr);
}

}

