#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Drone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Struct_save_structs.hpp"
#include "Enum_signalResponse_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_storeOrder_structs.hpp"
#include "Struct_signalDataDynamic_structs.hpp"
#include "Enum_emailChars_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass drone.drone_C
// 0x0240 (0x0460 - 0x0220)
class ADrone_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Papr;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ibox;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadarPointComponent_C*                 RadarPoint;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dbox;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Box;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Grab;                                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        blades;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Lean;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Forward;                                           // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Coll;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Look;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Grabbing_a_5DE43C7843105A70E80DA19897C1BFEA;       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Grabbing__Direction_5DE43C7843105A70E80DA19897C1BFEA; // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B3[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Grabbing;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Points;                                            // 0x02A0(0x0010)(Edit, BlueprintVisible)
	int32                                         Ind;                                               // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x02B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Flying;                                            // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B4[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Pickup;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dir;                                               // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B5[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrone_sk_Skeleton_AnimBlueprint_C*     Inst;                                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VecGrab;                                           // 0x02E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrabbing;                                        // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Pickedup;                                          // 0x02ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B6[0x2];                                     // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ADroneSellBox_C*                        SellBox;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damping;                                           // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dist;                                              // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_storeOrder                     Order;                                             // 0x0308(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          HasOrder;                                          // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B7[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OrderDrop;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HoldsOrder;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B8[0x6];                                     // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADroneSpline_C*                         Spline;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_signalDataDynamic>      SellBox_data;                                      // 0x0340(0x0010)(Edit, BlueprintVisible)
	struct FVector                                PickupLoc;                                         // 0x0350(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PickupRot;                                         // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SellBox_info;                                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                VecForce;                                          // 0x0370(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B9[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 LastSpawn;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27BA[0x8];                                     // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           Data;                                              // 0x0390(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          HasIteembox;                                       // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CalledError;                                       // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_drone(int32 EntryPoint);
	void SendShop(const struct FStruct_storeOrder& Param_Order);
	void ReceiveBeginPlay();
	void Set_ignoreSave_trigger(bool NewParam);
	void CordPlugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void CordUnplugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void SetActiveTrigger(class AActor* SentFrom, bool Param_Active);
	void ReceiveTick(float DeltaSeconds);
	void Event_grab(bool Param_Grab);
	void Grabbing__UpdateFunc();
	void Grabbing__FinishedFunc();
	void Leaning();
	Enum_emailChars RandScien();
	void beginFly();
	void CheckOrders();
	void MakePoint();
	void DisChan();
	void GetData(struct FStruct_save* Param_Data);
	void LoadData(const struct FStruct_save& Param_Data);
	void SpawnOrderbox();
	void GetTriggerData(struct FStruct_triggerSave* Param_Data);
	void LoadTriggerData(const struct FStruct_triggerSave& Param_Data, bool* Return);
	void IgnoreSave_trigger(bool* Ignore);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"drone_C">();
	}
	static class ADrone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADrone_C>();
	}
};
static_assert(alignof(ADrone_C) == 0x000010, "Wrong alignment on ADrone_C");
static_assert(sizeof(ADrone_C) == 0x000460, "Wrong size on ADrone_C");
static_assert(offsetof(ADrone_C, UberGraphFrame) == 0x000220, "Member 'ADrone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADrone_C, Papr) == 0x000228, "Member 'ADrone_C::Papr' has a wrong offset!");
static_assert(offsetof(ADrone_C, Ibox) == 0x000230, "Member 'ADrone_C::Ibox' has a wrong offset!");
static_assert(offsetof(ADrone_C, RadarPoint) == 0x000238, "Member 'ADrone_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(ADrone_C, Dbox) == 0x000240, "Member 'ADrone_C::Dbox' has a wrong offset!");
static_assert(offsetof(ADrone_C, Box) == 0x000248, "Member 'ADrone_C::Box' has a wrong offset!");
static_assert(offsetof(ADrone_C, Grab) == 0x000250, "Member 'ADrone_C::Grab' has a wrong offset!");
static_assert(offsetof(ADrone_C, PointLight) == 0x000258, "Member 'ADrone_C::PointLight' has a wrong offset!");
static_assert(offsetof(ADrone_C, blades) == 0x000260, "Member 'ADrone_C::blades' has a wrong offset!");
static_assert(offsetof(ADrone_C, Lean) == 0x000268, "Member 'ADrone_C::Lean' has a wrong offset!");
static_assert(offsetof(ADrone_C, SkeletalMesh) == 0x000270, "Member 'ADrone_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ADrone_C, Forward) == 0x000278, "Member 'ADrone_C::Forward' has a wrong offset!");
static_assert(offsetof(ADrone_C, Coll) == 0x000280, "Member 'ADrone_C::Coll' has a wrong offset!");
static_assert(offsetof(ADrone_C, Look) == 0x000288, "Member 'ADrone_C::Look' has a wrong offset!");
static_assert(offsetof(ADrone_C, Grabbing_a_5DE43C7843105A70E80DA19897C1BFEA) == 0x000290, "Member 'ADrone_C::Grabbing_a_5DE43C7843105A70E80DA19897C1BFEA' has a wrong offset!");
static_assert(offsetof(ADrone_C, Grabbing__Direction_5DE43C7843105A70E80DA19897C1BFEA) == 0x000294, "Member 'ADrone_C::Grabbing__Direction_5DE43C7843105A70E80DA19897C1BFEA' has a wrong offset!");
static_assert(offsetof(ADrone_C, Grabbing) == 0x000298, "Member 'ADrone_C::Grabbing' has a wrong offset!");
static_assert(offsetof(ADrone_C, Points) == 0x0002A0, "Member 'ADrone_C::Points' has a wrong offset!");
static_assert(offsetof(ADrone_C, Ind) == 0x0002B0, "Member 'ADrone_C::Ind' has a wrong offset!");
static_assert(offsetof(ADrone_C, Point) == 0x0002B4, "Member 'ADrone_C::Point' has a wrong offset!");
static_assert(offsetof(ADrone_C, Flying) == 0x0002C0, "Member 'ADrone_C::Flying' has a wrong offset!");
static_assert(offsetof(ADrone_C, Pickup) == 0x0002C8, "Member 'ADrone_C::Pickup' has a wrong offset!");
static_assert(offsetof(ADrone_C, Dir) == 0x0002D0, "Member 'ADrone_C::Dir' has a wrong offset!");
static_assert(offsetof(ADrone_C, Inst) == 0x0002D8, "Member 'ADrone_C::Inst' has a wrong offset!");
static_assert(offsetof(ADrone_C, VecGrab) == 0x0002E0, "Member 'ADrone_C::VecGrab' has a wrong offset!");
static_assert(offsetof(ADrone_C, IsGrabbing) == 0x0002EC, "Member 'ADrone_C::IsGrabbing' has a wrong offset!");
static_assert(offsetof(ADrone_C, Pickedup) == 0x0002ED, "Member 'ADrone_C::Pickedup' has a wrong offset!");
static_assert(offsetof(ADrone_C, SellBox) == 0x0002F0, "Member 'ADrone_C::SellBox' has a wrong offset!");
static_assert(offsetof(ADrone_C, Damping) == 0x0002F8, "Member 'ADrone_C::Damping' has a wrong offset!");
static_assert(offsetof(ADrone_C, Speed) == 0x0002FC, "Member 'ADrone_C::Speed' has a wrong offset!");
static_assert(offsetof(ADrone_C, Pitch) == 0x000300, "Member 'ADrone_C::Pitch' has a wrong offset!");
static_assert(offsetof(ADrone_C, Dist) == 0x000304, "Member 'ADrone_C::Dist' has a wrong offset!");
static_assert(offsetof(ADrone_C, Order) == 0x000308, "Member 'ADrone_C::Order' has a wrong offset!");
static_assert(offsetof(ADrone_C, HasOrder) == 0x000320, "Member 'ADrone_C::HasOrder' has a wrong offset!");
static_assert(offsetof(ADrone_C, OrderDrop) == 0x000328, "Member 'ADrone_C::OrderDrop' has a wrong offset!");
static_assert(offsetof(ADrone_C, HoldsOrder) == 0x000330, "Member 'ADrone_C::HoldsOrder' has a wrong offset!");
static_assert(offsetof(ADrone_C, Active) == 0x000331, "Member 'ADrone_C::Active' has a wrong offset!");
static_assert(offsetof(ADrone_C, Spline) == 0x000338, "Member 'ADrone_C::Spline' has a wrong offset!");
static_assert(offsetof(ADrone_C, SellBox_data) == 0x000340, "Member 'ADrone_C::SellBox_data' has a wrong offset!");
static_assert(offsetof(ADrone_C, PickupLoc) == 0x000350, "Member 'ADrone_C::PickupLoc' has a wrong offset!");
static_assert(offsetof(ADrone_C, PickupRot) == 0x00035C, "Member 'ADrone_C::PickupRot' has a wrong offset!");
static_assert(offsetof(ADrone_C, SellBox_info) == 0x000360, "Member 'ADrone_C::SellBox_info' has a wrong offset!");
static_assert(offsetof(ADrone_C, VecForce) == 0x000370, "Member 'ADrone_C::VecForce' has a wrong offset!");
static_assert(offsetof(ADrone_C, LastSpawn) == 0x000380, "Member 'ADrone_C::LastSpawn' has a wrong offset!");
static_assert(offsetof(ADrone_C, Data) == 0x000390, "Member 'ADrone_C::Data' has a wrong offset!");
static_assert(offsetof(ADrone_C, HasIteembox) == 0x000450, "Member 'ADrone_C::HasIteembox' has a wrong offset!");
static_assert(offsetof(ADrone_C, CalledError) == 0x000451, "Member 'ADrone_C::CalledError' has a wrong offset!");

}

