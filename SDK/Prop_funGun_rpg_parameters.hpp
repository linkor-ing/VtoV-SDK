#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_funGun_rpg

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_funGun_rpg.prop_funGun_rpg_C.ExecuteUbergraph_prop_funGun_rpg
// 0x0250 (0x0250 - 0x0000)
struct Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_look_OutHit;                              // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_look_ReturnValue;                         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg) == 0x000008, "Wrong alignment on Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg");
static_assert(sizeof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg) == 0x000250, "Wrong size on Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, EntryPoint) == 0x000000, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_look_OutHit) == 0x000004, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_look_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_look_ReturnValue) == 0x00008C, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_look_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_bBlockingHit) == 0x00008D, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_bInitialOverlap) == 0x00008E, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_Time) == 0x000090, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_Distance) == 0x000094, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_Location) == 0x000098, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A4, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_Normal) == 0x0000B0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_ImpactNormal) == 0x0000BC, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_SelectVector_ReturnValue) == 0x00010C, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_Vector_Distance_ReturnValue) == 0x000118, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00011C, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A4, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, K2Node_Event_player) == 0x0001A8, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0001B0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_Not_PreBool_ReturnValue) == 0x0001BC, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001C0, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg, K2Node_Event_DeltaSeconds) == 0x000248, "Member 'Prop_funGun_rpg_C_ExecuteUbergraph_prop_funGun_rpg::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function prop_funGun_rpg.prop_funGun_rpg_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_funGun_rpg_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_funGun_rpg_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_funGun_rpg_C_ReceiveTick");
static_assert(sizeof(Prop_funGun_rpg_C_ReceiveTick) == 0x000004, "Wrong size on Prop_funGun_rpg_C_ReceiveTick");
static_assert(offsetof(Prop_funGun_rpg_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_funGun_rpg_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_funGun_rpg.prop_funGun_rpg_C.fireBulletPrimary
// 0x0070 (0x0070 - 0x0000)
struct Prop_funGun_rpg_C_FireBulletPrimary final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_rocket_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_funGun_rpg_C_FireBulletPrimary) == 0x000010, "Wrong alignment on Prop_funGun_rpg_C_FireBulletPrimary");
static_assert(sizeof(Prop_funGun_rpg_C_FireBulletPrimary) == 0x000070, "Wrong size on Prop_funGun_rpg_C_FireBulletPrimary");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_FireBulletPrimary, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'Prop_funGun_rpg_C_FireBulletPrimary::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function prop_funGun_rpg.prop_funGun_rpg_C.look
// 0x0180 (0x0180 - 0x0000)
struct Prop_funGun_rpg_C_Look final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x00A8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_funGun_rpg_C_Look) == 0x000008, "Wrong alignment on Prop_funGun_rpg_C_Look");
static_assert(sizeof(Prop_funGun_rpg_C_Look) == 0x000180, "Wrong size on Prop_funGun_rpg_C_Look");
static_assert(offsetof(Prop_funGun_rpg_C_Look, OutHit) == 0x000000, "Member 'Prop_funGun_rpg_C_Look::OutHit' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, ReturnValue) == 0x000088, "Member 'Prop_funGun_rpg_C_Look::ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_getMainPlayer_AsMain_Player) == 0x000090, "Member 'Prop_funGun_rpg_C_Look::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, Temp_object_Variable) == 0x000098, "Member 'Prop_funGun_rpg_C_Look::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_obj_statDyn_obj) == 0x0000A8, "Member 'Prop_funGun_rpg_C_Look::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_GetForwardVector_ReturnValue) == 0x0000B8, "Member 'Prop_funGun_rpg_C_Look::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000C8, "Member 'Prop_funGun_rpg_C_Look::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'Prop_funGun_rpg_C_Look::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'Prop_funGun_rpg_C_Look::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'Prop_funGun_rpg_C_Look::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000F4, "Member 'Prop_funGun_rpg_C_Look::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_funGun_rpg_C_Look, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00017C, "Member 'Prop_funGun_rpg_C_Look::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function prop_funGun_rpg.prop_funGun_rpg_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_funGun_rpg_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_funGun_rpg_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_funGun_rpg_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_funGun_rpg_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_funGun_rpg_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_funGun_rpg_C_PlayerHandUse_RMB, Param_Player) == 0x000000, "Member 'Prop_funGun_rpg_C_PlayerHandUse_RMB::Param_Player' has a wrong offset!");

}

