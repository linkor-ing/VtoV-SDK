#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_laser

#include "Basic.hpp"

#include "Prop_wireComponent_laser_classes.hpp"
#include "Prop_wireComponent_laser_parameters.hpp"


namespace SDK
{

// Function prop_wireComponent_laser.prop_wireComponent_laser_C.ExecuteUbergraph_prop_wireComponent_laser
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_wireComponent_laser_C::ExecuteUbergraph_prop_wireComponent_laser(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_laser_C", "ExecuteUbergraph_prop_wireComponent_laser");

	Params::Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_wireComponent_laser.prop_wireComponent_laser_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AProp_wireComponent_laser_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_laser_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_wireComponent_laser.prop_wireComponent_laser_C.wirePass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWire_C*                          Wire                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_wireComponent_laser_C::WirePass(class AWire_C* Wire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_laser_C", "wirePass");

	Params::Prop_wireComponent_laser_C_WirePass Parms{};

	Parms.Wire = Wire;

	UObject::ProcessEvent(Func, &Parms);
}

}

