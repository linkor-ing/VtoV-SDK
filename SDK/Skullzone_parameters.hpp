#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skullzone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function skullzone.skullzone_C.gatherSkulls
// 0x0058 (0x0058 - 0x0000)
struct Skullzone_C_GatherSkulls final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_sskull_C*                         K2Node_DynamicCast_AsProp_Sskull;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skullzone_C_GatherSkulls) == 0x000008, "Wrong alignment on Skullzone_C_GatherSkulls");
static_assert(sizeof(Skullzone_C_GatherSkulls) == 0x000058, "Wrong size on Skullzone_C_GatherSkulls");
static_assert(offsetof(Skullzone_C_GatherSkulls, Return) == 0x000000, "Member 'Skullzone_C_GatherSkulls::Return' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Skullzone_C_GatherSkulls::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Skullzone_C_GatherSkulls::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Skullzone_C_GatherSkulls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Skullzone_C_GatherSkulls::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'Skullzone_C_GatherSkulls::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'Skullzone_C_GatherSkulls::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'Skullzone_C_GatherSkulls::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Array_Get_Item) == 0x000030, "Member 'Skullzone_C_GatherSkulls::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Skullzone_C_GatherSkulls::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, K2Node_DynamicCast_AsProp_Sskull) == 0x000040, "Member 'Skullzone_C_GatherSkulls::K2Node_DynamicCast_AsProp_Sskull' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Skullzone_C_GatherSkulls::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'Skullzone_C_GatherSkulls::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_GatherSkulls, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000050, "Member 'Skullzone_C_GatherSkulls::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");

// Function skullzone.skullzone_C.BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function skullzone.skullzone_C.BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Skullzone_C_BndEvt__damping_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function skullzone.skullzone_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Skullzone_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skullzone_C_ReceiveTick) == 0x000004, "Wrong alignment on Skullzone_C_ReceiveTick");
static_assert(sizeof(Skullzone_C_ReceiveTick) == 0x000004, "Wrong size on Skullzone_C_ReceiveTick");
static_assert(offsetof(Skullzone_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Skullzone_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function skullzone.skullzone_C.BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Skullzone_C_BndEvt__dest_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function skullzone.skullzone_C.ExecuteUbergraph_skullzone
// 0x0460 (0x0460 - 0x0000)
struct Skullzone_C_ExecuteUbergraph_skullzone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_gatherSkulls_return;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_gatherSkulls_return_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0050(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearDamping_ReturnValue;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0198(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_3;                         // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UblackScreen_C*                         CallFunc_Create_ReturnValue;                       // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_h_C*                              CallFunc_FinishSpawningActor_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_sskull_C*                         CallFunc_Array_Get_Item_4;                         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_sskull_C*                         CallFunc_Array_Get_Item_5;                         // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue_1;            // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_6;                         // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeAlive_ReturnValue;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0407(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_argbl_C*                          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skullzone_C_ExecuteUbergraph_skullzone) == 0x000010, "Wrong alignment on Skullzone_C_ExecuteUbergraph_skullzone");
static_assert(sizeof(Skullzone_C_ExecuteUbergraph_skullzone) == 0x000460, "Wrong size on Skullzone_C_ExecuteUbergraph_skullzone");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, EntryPoint) == 0x000000, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::EntryPoint' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_gatherSkulls_return) == 0x000020, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_gatherSkulls_return' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_gatherSkulls_return_1) == 0x000021, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_gatherSkulls_return_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000030, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000038, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000040, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000048, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00004C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000050, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000D8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000E0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000E8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000F0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetLinearDamping_ReturnValue) == 0x0000F4, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetLinearDamping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000F8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_DynamicCast_AsPrimitive_Component) == 0x000100, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Find_ReturnValue) == 0x000114, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000118, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item) == 0x00011C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_Event_DeltaSeconds) == 0x000128, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Loop_Counter_Variable_2) == 0x000130, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Add_IntInt_ReturnValue_2) == 0x00013C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x00014C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000150, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue) == 0x000154, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_1) == 0x000158, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_2) == 0x00015C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_3) == 0x000160, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000164, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Add_ReturnValue_2) == 0x000170, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000178, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherActor) == 0x000180, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherComp) == 0x000188, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000190, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_bFromSweep) == 0x000194, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, K2Node_ComponentBoundEvent_SweepResult) == 0x000198, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000220, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetObjectClass_ReturnValue) == 0x000228, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_4) == 0x000230, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_5) == 0x000234, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Add_FloatFloat_ReturnValue) == 0x000238, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetPlayerPawn_ReturnValue) == 0x000240, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000248, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000250, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, Temp_int_Array_Index_Variable_2) == 0x000258, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_2) == 0x00025C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_3) == 0x000260, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetCenterOfMass_ReturnValue) == 0x000268, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Vector_Distance_ReturnValue) == 0x000274, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000278, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_FClamp_ReturnValue) == 0x00027C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x000280, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_6) == 0x000284, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Create_ReturnValue) == 0x000288, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_SetGamePaused_ReturnValue) == 0x000290, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000294, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MakeTransform_ReturnValue) == 0x0002A0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002D0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002D8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_4) == 0x0002E0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Length_ReturnValue_1) == 0x0002E8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002EC, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0002F4, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0002F8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002FC, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_RotateAngleAxis_ReturnValue) == 0x000300, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Add_ReturnValue_3) == 0x00030C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_5) == 0x000310, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Length_ReturnValue_3) == 0x000318, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Less_IntInt_ReturnValue_2) == 0x00031C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetCenterOfMass_ReturnValue_1) == 0x000320, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetCenterOfMass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Get_Item_6) == 0x00032C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000338, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_FClamp_ReturnValue_1) == 0x000344, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Less_FloatFloat_ReturnValue) == 0x000348, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_FClamp_ReturnValue_2) == 0x00034C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000350, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_VLerp_ReturnValue) == 0x00035C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_7) == 0x000368, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00036C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000378, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000384, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000388, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_GetTimeAlive_ReturnValue) == 0x00038C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_GetTimeAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000390, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000394, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0003A0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0003B0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Add_VectorVector_ReturnValue) == 0x0003B8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003C4, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x0003D0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0003D4, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_8) == 0x0003E0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0003E4, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x0003F0, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5) == 0x0003F8, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003FC, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Lerp_ReturnValue_9) == 0x000400, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000404, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_BooleanOR_ReturnValue) == 0x000405, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_RemoveItem_ReturnValue) == 0x000406, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_Contains_ReturnValue) == 0x000407, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000408, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000409, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x00040C, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_MakeTransform_ReturnValue_1) == 0x000420, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000450, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skullzone_C_ExecuteUbergraph_skullzone, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000458, "Member 'Skullzone_C_ExecuteUbergraph_skullzone::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

}

