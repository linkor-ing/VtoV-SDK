#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MorningUfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass morningUfo.morningUfo_C
// 0x0070 (0x0290 - 0x0220)
class AMorningUfo_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    FlyTo;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    FlyAwayTo;                                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GrayUfoSk;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      O;                                                 // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          FlyAway;                                           // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Init;                                              // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fly;                                               // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_morningUfo(int32 EntryPoint);
	void Chck();
	void BndEvt__morningUfo_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"morningUfo_C">();
	}
	static class AMorningUfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMorningUfo_C>();
	}
};
static_assert(alignof(AMorningUfo_C) == 0x000008, "Wrong alignment on AMorningUfo_C");
static_assert(sizeof(AMorningUfo_C) == 0x000290, "Wrong size on AMorningUfo_C");
static_assert(offsetof(AMorningUfo_C, UberGraphFrame) == 0x000220, "Member 'AMorningUfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, ParticleSystem) == 0x000228, "Member 'AMorningUfo_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, Box) == 0x000230, "Member 'AMorningUfo_C::Box' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, Audio) == 0x000238, "Member 'AMorningUfo_C::Audio' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, FlyTo) == 0x000240, "Member 'AMorningUfo_C::FlyTo' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, FlyAwayTo) == 0x000248, "Member 'AMorningUfo_C::FlyAwayTo' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, GrayUfoSk) == 0x000250, "Member 'AMorningUfo_C::GrayUfoSk' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, SpringArm) == 0x000258, "Member 'AMorningUfo_C::SpringArm' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, DefaultSceneRoot) == 0x000260, "Member 'AMorningUfo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, O) == 0x000268, "Member 'AMorningUfo_C::O' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, FlyAway) == 0x000278, "Member 'AMorningUfo_C::FlyAway' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, Init) == 0x00027C, "Member 'AMorningUfo_C::Init' has a wrong offset!");
static_assert(offsetof(AMorningUfo_C, Fly) == 0x000288, "Member 'AMorningUfo_C::Fly' has a wrong offset!");

}

