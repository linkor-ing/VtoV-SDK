#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_settingsSlot_funny

#include "Basic.hpp"


namespace SDK::Params
{

// Function umg_settingsSlot_funny.umg_settingsSlot_funny_C.ExecuteUbergraph_umg_settingsSlot_funny
// 0x0008 (0x0008 - 0x0000)
struct Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny) == 0x000004, "Wrong alignment on Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny");
static_assert(sizeof(Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny) == 0x000008, "Wrong size on Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny");
static_assert(offsetof(Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny, EntryPoint) == 0x000000, "Member 'Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny, K2Node_ComponentBoundEvent_bIsChecked) == 0x000004, "Member 'Umg_settingsSlot_funny_C_ExecuteUbergraph_umg_settingsSlot_funny::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");

// Function umg_settingsSlot_funny.umg_settingsSlot_funny_C.BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'Umg_settingsSlot_funny_C_BndEvt__umg_settingsSlot_funny_CheckBox_vres_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

}

