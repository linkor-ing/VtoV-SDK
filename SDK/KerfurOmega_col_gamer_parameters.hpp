#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KerfurOmega_col_gamer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.ExecuteUbergraph_kerfurOmega_col_gamer
// 0x002C (0x002C - 0x0000)
struct KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeAlive_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer) == 0x000004, "Wrong alignment on KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer");
static_assert(sizeof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer) == 0x00002C, "Wrong size on KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, EntryPoint) == 0x000000, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::EntryPoint' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, CallFunc_GetTimeAlive_ReturnValue) == 0x000004, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::CallFunc_GetTimeAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, CallFunc_HSVToRGB_ReturnValue) == 0x000010, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000020, "Member 'KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");

// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_col_gamer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_col_gamer_C_ReceiveTick) == 0x000004, "Wrong alignment on KerfurOmega_col_gamer_C_ReceiveTick");
static_assert(sizeof(KerfurOmega_col_gamer_C_ReceiveTick) == 0x000004, "Wrong size on KerfurOmega_col_gamer_C_ReceiveTick");
static_assert(offsetof(KerfurOmega_col_gamer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'KerfurOmega_col_gamer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.dropKerfurProp
// 0x0040 (0x0040 - 0x0000)
struct KerfurOmega_col_gamer_C_DropKerfurProp final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_kerfurOmega_col_gamer_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_col_gamer_C_DropKerfurProp) == 0x000010, "Wrong alignment on KerfurOmega_col_gamer_C_DropKerfurProp");
static_assert(sizeof(KerfurOmega_col_gamer_C_DropKerfurProp) == 0x000040, "Wrong size on KerfurOmega_col_gamer_C_DropKerfurProp");
static_assert(offsetof(KerfurOmega_col_gamer_C_DropKerfurProp, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'KerfurOmega_col_gamer_C_DropKerfurProp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_DropKerfurProp, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'KerfurOmega_col_gamer_C_DropKerfurProp::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_col_gamer_C_DropKerfurProp, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'KerfurOmega_col_gamer_C_DropKerfurProp::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

