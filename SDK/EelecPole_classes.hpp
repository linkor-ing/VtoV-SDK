#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EelecPole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass eelecPole.eelecPole_C
// 0x0150 (0x0370 - 0x0220)
class AEelecPole_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Eff_elec1;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Cn4;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Cn3;                                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Cn2;                                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Cn1;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        C1;                                                // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        C4;                                                // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        C3;                                                // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        C2;                                                // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Conn;                                              // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MakeArr;                                           // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2613[0x6];                                     // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AEelecPole_C*                           ConnectPole;                                       // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCableComponent*>                Wires;                                             // 0x0290(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UBillboardComponent*>            Conns;                                             // 0x02A0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class AActor*                                 Attach_0;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attach_1;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attach_2;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attach_3;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Elec;                                              // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ind;                                               // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRoot;                                            // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2614[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      Param;                                             // 0x02E0(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Transformer;                                       // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          blinking;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBlink;                                           // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_eelecPole(int32 EntryPoint);
	void blink();
	void Rend();
	void RunElec();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void Connect();
	void MakeArray();
	void Rot();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"eelecPole_C">();
	}
	static class AEelecPole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEelecPole_C>();
	}
};
static_assert(alignof(AEelecPole_C) == 0x000010, "Wrong alignment on AEelecPole_C");
static_assert(sizeof(AEelecPole_C) == 0x000370, "Wrong size on AEelecPole_C");
static_assert(offsetof(AEelecPole_C, UberGraphFrame) == 0x000220, "Member 'AEelecPole_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Eff_elec1) == 0x000228, "Member 'AEelecPole_C::Eff_elec1' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Cn4) == 0x000230, "Member 'AEelecPole_C::Cn4' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Cn3) == 0x000238, "Member 'AEelecPole_C::Cn3' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Cn2) == 0x000240, "Member 'AEelecPole_C::Cn2' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Cn1) == 0x000248, "Member 'AEelecPole_C::Cn1' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, C1) == 0x000250, "Member 'AEelecPole_C::C1' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, C4) == 0x000258, "Member 'AEelecPole_C::C4' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, C3) == 0x000260, "Member 'AEelecPole_C::C3' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, C2) == 0x000268, "Member 'AEelecPole_C::C2' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, StaticMesh) == 0x000270, "Member 'AEelecPole_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, DefaultSceneRoot) == 0x000278, "Member 'AEelecPole_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Conn) == 0x000280, "Member 'AEelecPole_C::Conn' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, MakeArr) == 0x000281, "Member 'AEelecPole_C::MakeArr' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, ConnectPole) == 0x000288, "Member 'AEelecPole_C::ConnectPole' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Wires) == 0x000290, "Member 'AEelecPole_C::Wires' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Conns) == 0x0002A0, "Member 'AEelecPole_C::Conns' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Attach_0) == 0x0002B0, "Member 'AEelecPole_C::Attach_0' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Attach_1) == 0x0002B8, "Member 'AEelecPole_C::Attach_1' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Attach_2) == 0x0002C0, "Member 'AEelecPole_C::Attach_2' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Attach_3) == 0x0002C8, "Member 'AEelecPole_C::Attach_3' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Elec) == 0x0002D0, "Member 'AEelecPole_C::Elec' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Ind) == 0x0002D4, "Member 'AEelecPole_C::Ind' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, IsRoot) == 0x0002D8, "Member 'AEelecPole_C::IsRoot' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Param) == 0x0002E0, "Member 'AEelecPole_C::Param' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, Transformer) == 0x000360, "Member 'AEelecPole_C::Transformer' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, blinking) == 0x000361, "Member 'AEelecPole_C::blinking' has a wrong offset!");
static_assert(offsetof(AEelecPole_C, IsBlink) == 0x000362, "Member 'AEelecPole_C::IsBlink' has a wrong offset!");

}

