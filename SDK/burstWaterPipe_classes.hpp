#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: burstWaterPipe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass burstWaterPipe.burstWaterPipe_C
// 0x0040 (0x0288 - 0x0248)
class AburstWaterPipe_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_burstWaterPipe_C;                   // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_basementFlooder_C*         WaterVolume;                                       // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Damaged;                                           // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OneSide;                                           // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ToolboxFix(class AProp_toolbox_C* Toolbox, bool* Return);
	void GatherDataFromKey(bool* Gather);
	void GetData(struct FStruct_save* Data);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void State(bool Param_Damaged);
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void ExecuteUbergraph_burstWaterPipe(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"burstWaterPipe_C">();
	}
	static class AburstWaterPipe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AburstWaterPipe_C>();
	}
};
static_assert(alignof(AburstWaterPipe_C) == 0x000008, "Wrong alignment on AburstWaterPipe_C");
static_assert(sizeof(AburstWaterPipe_C) == 0x000288, "Wrong size on AburstWaterPipe_C");
static_assert(offsetof(AburstWaterPipe_C, UberGraphFrame_burstWaterPipe_C) == 0x000248, "Member 'AburstWaterPipe_C::UberGraphFrame_burstWaterPipe_C' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, Audio) == 0x000250, "Member 'AburstWaterPipe_C::Audio' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, Arrow) == 0x000258, "Member 'AburstWaterPipe_C::Arrow' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, ParticleSystem) == 0x000260, "Member 'AburstWaterPipe_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, StaticMesh1) == 0x000268, "Member 'AburstWaterPipe_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, StaticMesh) == 0x000270, "Member 'AburstWaterPipe_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, WaterVolume) == 0x000278, "Member 'AburstWaterPipe_C::WaterVolume' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, Damaged) == 0x000280, "Member 'AburstWaterPipe_C::Damaged' has a wrong offset!");
static_assert(offsetof(AburstWaterPipe_C, OneSide) == 0x000281, "Member 'AburstWaterPipe_C::OneSide' has a wrong offset!");

}

