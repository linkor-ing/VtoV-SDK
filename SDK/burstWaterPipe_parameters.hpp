#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: burstWaterPipe

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function burstWaterPipe.burstWaterPipe_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct burstWaterPipe_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_ToolboxFix) == 0x000008, "Wrong alignment on burstWaterPipe_C_ToolboxFix");
static_assert(sizeof(burstWaterPipe_C_ToolboxFix) == 0x000010, "Wrong size on burstWaterPipe_C_ToolboxFix");
static_assert(offsetof(burstWaterPipe_C_ToolboxFix, Toolbox) == 0x000000, "Member 'burstWaterPipe_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ToolboxFix, Return) == 0x000008, "Member 'burstWaterPipe_C_ToolboxFix::Return' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.gatherDataFromKey
// 0x0001 (0x0001 - 0x0000)
struct burstWaterPipe_C_GatherDataFromKey final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_GatherDataFromKey) == 0x000001, "Wrong alignment on burstWaterPipe_C_GatherDataFromKey");
static_assert(sizeof(burstWaterPipe_C_GatherDataFromKey) == 0x000001, "Wrong size on burstWaterPipe_C_GatherDataFromKey");
static_assert(offsetof(burstWaterPipe_C_GatherDataFromKey, Gather) == 0x000000, "Member 'burstWaterPipe_C_GatherDataFromKey::Gather' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.getData
// 0x0270 (0x0270 - 0x0000)
struct burstWaterPipe_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(burstWaterPipe_C_GetData) == 0x000010, "Wrong alignment on burstWaterPipe_C_GetData");
static_assert(sizeof(burstWaterPipe_C_GetData) == 0x000270, "Wrong size on burstWaterPipe_C_GetData");
static_assert(offsetof(burstWaterPipe_C_GetData, Data) == 0x000000, "Member 'burstWaterPipe_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'burstWaterPipe_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'burstWaterPipe_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x000190, "Member 'burstWaterPipe_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'burstWaterPipe_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'burstWaterPipe_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct burstWaterPipe_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_LoadData) == 0x000010, "Wrong alignment on burstWaterPipe_C_LoadData");
static_assert(sizeof(burstWaterPipe_C_LoadData) == 0x0000E0, "Wrong size on burstWaterPipe_C_LoadData");
static_assert(offsetof(burstWaterPipe_C_LoadData, Data) == 0x000000, "Member 'burstWaterPipe_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_LoadData, Return) == 0x0000C0, "Member 'burstWaterPipe_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'burstWaterPipe_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_LoadData, CallFunc_loadData_return) == 0x0000D8, "Member 'burstWaterPipe_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D9, "Member 'burstWaterPipe_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.State
// 0x0001 (0x0001 - 0x0000)
struct burstWaterPipe_C_State final
{
public:
	bool                                          Param_Damaged;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_State) == 0x000001, "Wrong alignment on burstWaterPipe_C_State");
static_assert(sizeof(burstWaterPipe_C_State) == 0x000001, "Wrong size on burstWaterPipe_C_State");
static_assert(offsetof(burstWaterPipe_C_State, Param_Damaged) == 0x000000, "Member 'burstWaterPipe_C_State::Param_Damaged' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct burstWaterPipe_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(burstWaterPipe_C_ReceiveTick) == 0x000004, "Wrong alignment on burstWaterPipe_C_ReceiveTick");
static_assert(sizeof(burstWaterPipe_C_ReceiveTick) == 0x000004, "Wrong size on burstWaterPipe_C_ReceiveTick");
static_assert(offsetof(burstWaterPipe_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'burstWaterPipe_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct burstWaterPipe_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_AddDamage) == 0x000008, "Wrong alignment on burstWaterPipe_C_AddDamage");
static_assert(sizeof(burstWaterPipe_C_AddDamage) == 0x0000A8, "Wrong size on burstWaterPipe_C_AddDamage");
static_assert(offsetof(burstWaterPipe_C_AddDamage, Actor) == 0x000000, "Member 'burstWaterPipe_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_AddDamage, Damage) == 0x000008, "Member 'burstWaterPipe_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_AddDamage, Hit) == 0x00000C, "Member 'burstWaterPipe_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_AddDamage, Impact) == 0x000094, "Member 'burstWaterPipe_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'burstWaterPipe_C_AddDamage::SkipSetting' has a wrong offset!");

// Function burstWaterPipe.burstWaterPipe_C.ExecuteUbergraph_burstWaterPipe
// 0x00B0 (0x00B0 - 0x0000)
struct burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe) == 0x000008, "Wrong alignment on burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe");
static_assert(sizeof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe) == 0x0000B0, "Wrong size on burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, EntryPoint) == 0x000000, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::EntryPoint' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_actor) == 0x000008, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_damage) == 0x000010, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_hit) == 0x000014, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_impact) == 0x00009C, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe, K2Node_Event_skipSetting) == 0x0000A8, "Member 'burstWaterPipe_C_ExecuteUbergraph_burstWaterPipe::K2Node_Event_skipSetting' has a wrong offset!");

}

