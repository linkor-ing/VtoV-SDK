#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaterFloatMaster

#include "Basic.hpp"

#include "WaterFloatMaster_classes.hpp"
#include "WaterFloatMaster_parameters.hpp"


namespace SDK
{

// Function waterFloatMaster.waterFloatMaster_C.ExecuteUbergraph_waterFloatMaster
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::ExecuteUbergraph_waterFloatMaster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "ExecuteUbergraph_waterFloatMaster");

	Params::WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "ReceiveTick");

	Params::WaterFloatMaster_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.gamemodeBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::GamemodeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "gamemodeBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.applyColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::ApplyColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "applyColor");

	Params::WaterFloatMaster_C_ApplyColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.propRenderer_finishProps
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::PropRenderer_finishProps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "propRenderer_finishProps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.gamemodeMakeKeys
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::GamemodeMakeKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "gamemodeMakeKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.AnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWaterFloatMaster_C::AnyKey(const struct FKey& Key, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "AnyKey");

	Params::WaterFloatMaster_C_AnyKey Parms{};

	Parms.Key = std::move(Key);
	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.gamemodePreLoad
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::GamemodePreLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "gamemodePreLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.unfocused
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::Unfocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "unfocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.settingsApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_settings                 Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::SettingsApplied(const struct FStruct_settings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "settingsApplied");

	Params::WaterFloatMaster_C_SettingsApplied Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.unfoc
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::Unfoc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "unfoc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.stuffUpgraded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainGamemode_C*                  GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::StuffUpgraded(class AMainGamemode_C* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "stuffUpgraded");

	Params::WaterFloatMaster_C_StuffUpgraded Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.signalSaved
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::SignalSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "signalSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.signalDeleted
// (Public, BlueprintCallable, BlueprintEvent)

void AWaterFloatMaster_C::SignalDeleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "signalDeleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function waterFloatMaster.waterFloatMaster_C.bo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Depth                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ind                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::bo(class AActor* Target, float Depth, int32 Ind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "bo");

	Params::WaterFloatMaster_C_bo Parms{};

	Parms.Target = Target;
	Parms.Depth = Depth;
	Parms.Ind = Ind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function waterFloatMaster.waterFloatMaster_C.addObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Depth                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Obj                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Repeats                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWaterFloatMaster_C::AddObj(const float& Depth, const class AActor*& Obj, bool* Param_Repeats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "addObj");

	Params::WaterFloatMaster_C_AddObj Parms{};

	Parms.Depth = Depth;
	Parms.Obj = Obj;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Repeats != nullptr)
		*Param_Repeats = Parms.Param_Repeats;
}


// Function waterFloatMaster.waterFloatMaster_C.removeObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Find                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Repeats                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWaterFloatMaster_C::RemoveObj(const class AActor*& Find, bool* Param_Repeats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "removeObj");

	Params::WaterFloatMaster_C_RemoveObj Parms{};

	Parms.Find = Find;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Repeats != nullptr)
		*Param_Repeats = Parms.Param_Repeats;
}


// Function waterFloatMaster.waterFloatMaster_C.dreamInv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_save>             Invv                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ADreamBase_C*                     Base                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWaterFloatMaster_C::DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("waterFloatMaster_C", "dreamInv");

	Params::WaterFloatMaster_C_DreamInv Parms{};

	Parms.Invv = std::move(Invv);

	UObject::ProcessEvent(Func, &Parms);

	Invv = std::move(Parms.Invv);

	if (Base != nullptr)
		*Base = Parms.Base;
}

}

