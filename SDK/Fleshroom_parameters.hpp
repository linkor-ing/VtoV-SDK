#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Fleshroom

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function fleshroom.fleshroom_C.ExecuteUbergraph_fleshroom
// 0x00A0 (0x00A0 - 0x0000)
struct Fleshroom_C_ExecuteUbergraph_fleshroom final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue;                         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue_1;                       // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue_2;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue_3;                       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue_4;                       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_size_ReturnValue_5;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_3;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_4;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_5;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Fleshroom_C_ExecuteUbergraph_fleshroom) == 0x000004, "Wrong alignment on Fleshroom_C_ExecuteUbergraph_fleshroom");
static_assert(sizeof(Fleshroom_C_ExecuteUbergraph_fleshroom) == 0x0000A0, "Wrong size on Fleshroom_C_ExecuteUbergraph_fleshroom");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, EntryPoint) == 0x000000, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::EntryPoint' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue) == 0x000004, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue_1) == 0x000010, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue_2) == 0x00001C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue_3) == 0x000028, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_RandomFloat_ReturnValue) == 0x000034, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue_4) == 0x000038, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_size_ReturnValue_5) == 0x000044, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_size_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000060, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000064, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000068, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000070, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000074, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x000078, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x00007C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x000080, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue_3) == 0x000084, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000088, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00008C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x000090, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x000094, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue_4) == 0x000098, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_ExecuteUbergraph_fleshroom, CallFunc_Percent_FloatFloat_ReturnValue_5) == 0x00009C, "Member 'Fleshroom_C_ExecuteUbergraph_fleshroom::CallFunc_Percent_FloatFloat_ReturnValue_5' has a wrong offset!");

// Function fleshroom.fleshroom_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Fleshroom_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Fleshroom_C_ReceiveTick) == 0x000004, "Wrong alignment on Fleshroom_C_ReceiveTick");
static_assert(sizeof(Fleshroom_C_ReceiveTick) == 0x000004, "Wrong size on Fleshroom_C_ReceiveTick");
static_assert(offsetof(Fleshroom_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Fleshroom_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function fleshroom.fleshroom_C.Size
// 0x0034 (0x0034 - 0x0000)
struct Fleshroom_C_Size final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Fleshroom_C_Size) == 0x000004, "Wrong alignment on Fleshroom_C_Size");
static_assert(sizeof(Fleshroom_C_Size) == 0x000034, "Wrong size on Fleshroom_C_Size");
static_assert(offsetof(Fleshroom_C_Size, A) == 0x000000, "Member 'Fleshroom_C_Size::A' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, ReturnValue) == 0x000004, "Member 'Fleshroom_C_Size::ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Fleshroom_C_Size::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_DegSin_ReturnValue) == 0x000014, "Member 'Fleshroom_C_Size::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_DegCos_ReturnValue) == 0x000018, "Member 'Fleshroom_C_Size::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'Fleshroom_C_Size::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'Fleshroom_C_Size::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_Lerp_ReturnValue_2) == 0x000024, "Member 'Fleshroom_C_Size::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Fleshroom_C_Size, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'Fleshroom_C_Size::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

