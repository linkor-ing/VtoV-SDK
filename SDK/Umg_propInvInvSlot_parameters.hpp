#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_propInvInvSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function umg_propInvInvSlot.umg_propInvInvSlot_C.ExecuteUbergraph_umg_propInvInvSlot
// 0x0048 (0x0048 - 0x0000)
struct Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2637[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
	class AActor*                                 CallFunc_getObject_OutputPin;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addObject_return;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2638[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addObject_err;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot) == 0x000008, "Wrong alignment on Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot");
static_assert(sizeof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot) == 0x000048, "Wrong size on Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, EntryPoint) == 0x000000, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, CallFunc_getObject_OutputPin) == 0x000020, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::CallFunc_getObject_OutputPin' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000028, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, CallFunc_addObject_return) == 0x000030, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::CallFunc_addObject_return' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot, CallFunc_addObject_err) == 0x000038, "Member 'Umg_propInvInvSlot_C_ExecuteUbergraph_umg_propInvInvSlot::CallFunc_addObject_err' has a wrong offset!");

// Function umg_propInvInvSlot.umg_propInvInvSlot_C.Init
// 0x0060 (0x0060 - 0x0000)
struct Umg_propInvInvSlot_C_Init final
{
public:
	class FString                                 ItemToFind;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2639[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0038(0x0018)()
	class UTexture2D*                             CallFunc_propToIcon_Output;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_propInvInvSlot_C_Init) == 0x000008, "Wrong alignment on Umg_propInvInvSlot_C_Init");
static_assert(sizeof(Umg_propInvInvSlot_C_Init) == 0x000060, "Wrong size on Umg_propInvInvSlot_C_Init");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, ItemToFind) == 0x000000, "Member 'Umg_propInvInvSlot_C_Init::ItemToFind' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, Weight) == 0x000010, "Member 'Umg_propInvInvSlot_C_Init::Weight' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, Volume) == 0x000014, "Member 'Umg_propInvInvSlot_C_Init::Volume' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Umg_propInvInvSlot_C_Init::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'Umg_propInvInvSlot_C_Init::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000038, "Member 'Umg_propInvInvSlot_C_Init::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, CallFunc_propToIcon_Output) == 0x000050, "Member 'Umg_propInvInvSlot_C_Init::CallFunc_propToIcon_Output' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_Init, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'Umg_propInvInvSlot_C_Init::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function umg_propInvInvSlot.umg_propInvInvSlot_C.setAmount
// 0x0070 (0x0070 - 0x0000)
struct Umg_propInvInvSlot_C_SetAmount final
{
public:
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(Umg_propInvInvSlot_C_SetAmount) == 0x000008, "Wrong alignment on Umg_propInvInvSlot_C_SetAmount");
static_assert(sizeof(Umg_propInvInvSlot_C_SetAmount) == 0x000070, "Wrong size on Umg_propInvInvSlot_C_SetAmount");
static_assert(offsetof(Umg_propInvInvSlot_C_SetAmount, CallFunc_Array_Find_ReturnValue) == 0x000000, "Member 'Umg_propInvInvSlot_C_SetAmount::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_SetAmount, CallFunc_Array_Get_Item) == 0x000004, "Member 'Umg_propInvInvSlot_C_SetAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_SetAmount, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'Umg_propInvInvSlot_C_SetAmount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_SetAmount, K2Node_MakeArray_Array) == 0x000048, "Member 'Umg_propInvInvSlot_C_SetAmount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_propInvInvSlot_C_SetAmount, CallFunc_Format_ReturnValue) == 0x000058, "Member 'Umg_propInvInvSlot_C_SetAmount::CallFunc_Format_ReturnValue' has a wrong offset!");

}

