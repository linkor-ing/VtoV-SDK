#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_signalName

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function umg_signalName.umg_signalName_C.ExecuteUbergraph_umg_signalName
// 0x0070 (0x0070 - 0x0000)
struct Umg_signalName_C_ExecuteUbergraph_umg_signalName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0040(0x0008)(NoDestructor)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0048(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalName_C_ExecuteUbergraph_umg_signalName) == 0x000008, "Wrong alignment on Umg_signalName_C_ExecuteUbergraph_umg_signalName");
static_assert(sizeof(Umg_signalName_C_ExecuteUbergraph_umg_signalName) == 0x000070, "Wrong size on Umg_signalName_C_ExecuteUbergraph_umg_signalName");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, EntryPoint) == 0x000000, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, K2Node_Event_InFocusEvent) == 0x000040, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, K2Node_ComponentBoundEvent_Text) == 0x000048, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, K2Node_ComponentBoundEvent_CommitMethod) == 0x000060, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_ExecuteUbergraph_umg_signalName, CallFunc_getMainPlayer_AsMain_Player) == 0x000068, "Member 'Umg_signalName_C_ExecuteUbergraph_umg_signalName::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");

// Function umg_signalName.umg_signalName_C.BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'Umg_signalName_C_BndEvt__Etxt_name_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function umg_signalName.umg_signalName_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_signalName_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_signalName_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_signalName_C_OnFocusLost");
static_assert(sizeof(Umg_signalName_C_OnFocusLost) == 0x000008, "Wrong size on Umg_signalName_C_OnFocusLost");
static_assert(offsetof(Umg_signalName_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_signalName_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_signalName.umg_signalName_C.Init
// 0x0028 (0x0028 - 0x0000)
struct Umg_signalName_C_Init final
{
public:
	class USignalSlot_C*                          Param_Rename;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalName_C_Init) == 0x000008, "Wrong alignment on Umg_signalName_C_Init");
static_assert(sizeof(Umg_signalName_C_Init) == 0x000028, "Wrong size on Umg_signalName_C_Init");
static_assert(offsetof(Umg_signalName_C_Init, Param_Rename) == 0x000000, "Member 'Umg_signalName_C_Init::Param_Rename' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'Umg_signalName_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Umg_signalName_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function umg_signalName.umg_signalName_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct Umg_signalName_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AF[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0148(0x00B8)()
};
static_assert(alignof(Umg_signalName_C_OnKeyDown) == 0x000008, "Wrong alignment on Umg_signalName_C_OnKeyDown");
static_assert(sizeof(Umg_signalName_C_OnKeyDown) == 0x000200, "Wrong size on Umg_signalName_C_OnKeyDown");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'Umg_signalName_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'Umg_signalName_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'Umg_signalName_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'Umg_signalName_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000140, "Member 'Umg_signalName_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalName_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000148, "Member 'Umg_signalName_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");

}

