#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TriggerTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TriggerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass triggerTimer.triggerTimer_C
// 0x0010 (0x0298 - 0x0288)
class ATriggerTimer_C final : public ATriggerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TriggerTimer_C;                     // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Hour;                                              // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Run;                                               // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PrevState;                                         // 0x0295(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Invert;                                            // 0x0296(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void NewMinute(const struct FIntVector& Time);
	void GamemodeBeginPlay();
	void ExecuteUbergraph_triggerTimer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"triggerTimer_C">();
	}
	static class ATriggerTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATriggerTimer_C>();
	}
};
static_assert(alignof(ATriggerTimer_C) == 0x000008, "Wrong alignment on ATriggerTimer_C");
static_assert(sizeof(ATriggerTimer_C) == 0x000298, "Wrong size on ATriggerTimer_C");
static_assert(offsetof(ATriggerTimer_C, UberGraphFrame_TriggerTimer_C) == 0x000288, "Member 'ATriggerTimer_C::UberGraphFrame_TriggerTimer_C' has a wrong offset!");
static_assert(offsetof(ATriggerTimer_C, Hour) == 0x000290, "Member 'ATriggerTimer_C::Hour' has a wrong offset!");
static_assert(offsetof(ATriggerTimer_C, Run) == 0x000294, "Member 'ATriggerTimer_C::Run' has a wrong offset!");
static_assert(offsetof(ATriggerTimer_C, PrevState) == 0x000295, "Member 'ATriggerTimer_C::PrevState' has a wrong offset!");
static_assert(offsetof(ATriggerTimer_C, Invert) == 0x000296, "Member 'ATriggerTimer_C::Invert' has a wrong offset!");

}

