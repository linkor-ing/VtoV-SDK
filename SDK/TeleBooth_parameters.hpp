#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TeleBooth

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function teleBooth.teleBooth_C.tp
// 0x0378 (0x0378 - 0x0000)
struct TeleBooth_C_Tp final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ang;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTp;                                             // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Rays;                                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Init;                                              // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x00D0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x0118(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0134(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x024C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TeleBooth_C_Tp) == 0x000008, "Wrong alignment on TeleBooth_C_Tp");
static_assert(sizeof(TeleBooth_C_Tp) == 0x000378, "Wrong size on TeleBooth_C_Tp");
static_assert(offsetof(TeleBooth_C_Tp, Return) == 0x000000, "Member 'TeleBooth_C_Tp::Return' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Location) == 0x000004, "Member 'TeleBooth_C_Tp::Location' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Angle) == 0x000010, "Member 'TeleBooth_C_Tp::Angle' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Ang) == 0x000014, "Member 'TeleBooth_C_Tp::Ang' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Loc) == 0x000018, "Member 'TeleBooth_C_Tp::Loc' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CanTp) == 0x000024, "Member 'TeleBooth_C_Tp::CanTp' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Rays) == 0x000028, "Member 'TeleBooth_C_Tp::Rays' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Init) == 0x000038, "Member 'TeleBooth_C_Tp::Init' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Temp_object_Variable) == 0x000048, "Member 'TeleBooth_C_Tp::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'TeleBooth_C_Tp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, K2Node_MakeArray_Array) == 0x000068, "Member 'TeleBooth_C_Tp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Temp_int_Array_Index_Variable) == 0x000078, "Member 'TeleBooth_C_Tp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'TeleBooth_C_Tp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'TeleBooth_C_Tp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, Temp_object_Variable_1) == 0x000088, "Member 'TeleBooth_C_Tp::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakVector_X) == 0x000098, "Member 'TeleBooth_C_Tp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakVector_Y) == 0x00009C, "Member 'TeleBooth_C_Tp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'TeleBooth_C_Tp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A4, "Member 'TeleBooth_C_Tp::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'TeleBooth_C_Tp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_MakeVector_ReturnValue_1) == 0x0000B4, "Member 'TeleBooth_C_Tp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0000C0, "Member 'TeleBooth_C_Tp::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_obj_static_obj) == 0x0000D0, "Member 'TeleBooth_C_Tp::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'TeleBooth_C_Tp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'TeleBooth_C_Tp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000F0, "Member 'TeleBooth_C_Tp::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'TeleBooth_C_Tp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'TeleBooth_C_Tp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Add_VectorVector_ReturnValue) == 0x00010C, "Member 'TeleBooth_C_Tp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_obj_static_obj_1) == 0x000118, "Member 'TeleBooth_C_Tp::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'TeleBooth_C_Tp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000134, "Member 'TeleBooth_C_Tp::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001BC, "Member 'TeleBooth_C_Tp::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001C0, "Member 'TeleBooth_C_Tp::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_bBlockingHit) == 0x0001CC, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CD, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Time) == 0x0001D0, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Distance) == 0x0001D4, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E4, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Normal) == 0x0001F0, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ImpactNormal) == 0x0001FC, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_TraceStart) == 0x000234, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x00024C, "Member 'TeleBooth_C_Tp::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0002D4, "Member 'TeleBooth_C_Tp::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Array_Contains_ReturnValue) == 0x0002D5, "Member 'TeleBooth_C_Tp::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BooleanAND_ReturnValue) == 0x0002D6, "Member 'TeleBooth_C_Tp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002D7, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002D8, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Time_1) == 0x0002DC, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Distance_1) == 0x0002E0, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Location_1) == 0x0002E4, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002F0, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_Normal_1) == 0x0002FC, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000308, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_PhysMat_1) == 0x000318, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitActor_1) == 0x000320, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitComponent_1) == 0x000328, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitBoneName_1) == 0x000330, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_HitItem_1) == 0x000338, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_ElementIndex_1) == 0x00033C, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_FaceIndex_1) == 0x000340, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_TraceStart_1) == 0x000344, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BreakHitResult_TraceEnd_1) == 0x000350, "Member 'TeleBooth_C_Tp::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Array_Contains_ReturnValue_1) == 0x00035C, "Member 'TeleBooth_C_Tp::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Dot_VectorVector_ReturnValue) == 0x000360, "Member 'TeleBooth_C_Tp::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000364, "Member 'TeleBooth_C_Tp::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000370, "Member 'TeleBooth_C_Tp::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BooleanAND_ReturnValue_1) == 0x000371, "Member 'TeleBooth_C_Tp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_Tp, CallFunc_BooleanAND_ReturnValue_2) == 0x000372, "Member 'TeleBooth_C_Tp::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function teleBooth.teleBooth_C.ExecuteUbergraph_teleBooth
// 0x0160 (0x0160 - 0x0000)
struct TeleBooth_C_ExecuteUbergraph_teleBooth final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_tp_return;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_tp_location;                              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_tp_angle;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TeleBooth_C_ExecuteUbergraph_teleBooth) == 0x000008, "Wrong alignment on TeleBooth_C_ExecuteUbergraph_teleBooth");
static_assert(sizeof(TeleBooth_C_ExecuteUbergraph_teleBooth) == 0x000160, "Wrong size on TeleBooth_C_ExecuteUbergraph_teleBooth");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, EntryPoint) == 0x000000, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::EntryPoint' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_tp_return) == 0x000004, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_tp_return' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_tp_location) == 0x000008, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_tp_location' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_tp_angle) == 0x000014, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_tp_angle' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_MakeRotator_ReturnValue_1) == 0x000040, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x00004C, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000D4, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_WasRecentlyRendered_ReturnValue) == 0x0000D5, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0000D6, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_BooleanAND_ReturnValue) == 0x0000D7, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TeleBooth_C_ExecuteUbergraph_teleBooth, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0000D8, "Member 'TeleBooth_C_ExecuteUbergraph_teleBooth::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

}

