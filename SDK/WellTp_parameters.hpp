#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WellTp

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function wellTp.wellTp_C.BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function wellTp.wellTp_C.BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WellTp_C_BndEvt__wellTp_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function wellTp.wellTp_C.ExecuteUbergraph_wellTp
// 0x0150 (0x0150 - 0x0000)
struct WellTp_C_ExecuteUbergraph_wellTp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMain_Player;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMain_Player_1;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UblackScreen_C*                         CallFunc_Create_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WellTp_C_ExecuteUbergraph_wellTp) == 0x000008, "Wrong alignment on WellTp_C_ExecuteUbergraph_wellTp");
static_assert(sizeof(WellTp_C_ExecuteUbergraph_wellTp) == 0x000150, "Wrong size on WellTp_C_ExecuteUbergraph_wellTp");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, EntryPoint) == 0x000000, "Member 'WellTp_C_ExecuteUbergraph_wellTp::EntryPoint' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000B0, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_GetObjectClass_ReturnValue) == 0x0000B8, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ClassDynamicCast_AsMain_Player) == 0x0000C0, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ClassDynamicCast_AsMain_Player' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ClassDynamicCast_bSuccess) == 0x0000C8, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000D0, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D8, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherComp) == 0x0000E0, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000E8, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000F0, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_getMainPlayer_AsMain_Player) == 0x0000F8, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ClassDynamicCast_AsMain_Player_1) == 0x000100, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ClassDynamicCast_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_ClassDynamicCast_bSuccess_1) == 0x000108, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_getSaveSlot_saveSlot) == 0x000110, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000118, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_Create_ReturnValue) == 0x000120, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000128, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000129, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x000130, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_BooleanOR_ReturnValue) == 0x000138, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000139, "Member 'WellTp_C_ExecuteUbergraph_wellTp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WellTp_C_ExecuteUbergraph_wellTp, K2Node_CreateDelegate_OutputDelegate) == 0x00013C, "Member 'WellTp_C_ExecuteUbergraph_wellTp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

