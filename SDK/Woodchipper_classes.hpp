#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Woodchipper

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Prop_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass woodchipper.woodchipper_C
// 0x0168 (0x04E0 - 0x0378)
class AWoodchipper_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Woodchipper_C;                      // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Fueltank;                                          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Button_del;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Wheel;                                             // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Clip1;                                             // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Exp;                                               // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Axis;                                              // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Origin;                                            // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Clip;                                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Woodchipper_loop;                                  // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Woodchipper_chipLoop;                              // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Eat;                                               // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_a_8E16B732496440B4A40966B518AA4408;     // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_8E16B732496440B4A40966B518AA4408; // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Snds_a_A92CC18C4D34810C90E1CF9C3ABF7027;           // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Snds__Direction_A92CC18C4D34810C90E1CF9C3ABF7027;  // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Snds;                                              // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A_0;                                               // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Process;                                           // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_A;                                               // 0x0420(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             L_B;                                               // 0x0450(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Zloc;                                              // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynma;                                             // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Das;                                               // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vol;                                               // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Comp;                                              // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Chipping;                                          // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Power;                                             // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Power2;                                            // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynmat_obj;                                        // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      ObjectPhys;                                        // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GarbAccumulate;                                    // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Ac;                                                // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fuel;                                              // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtFueltank;                                    // 0x04DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Erret;                                             // 0x04DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_woodchipper(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ChippingSnd(bool Param_Active);
	void Startup(bool Param_Active);
	void Chip();
	void Rot();
	void BndEvt__eat_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Snds__UpdateFunc();
	void Snds__FinishedFunc();
	bool CanChip(class UStaticMeshComponent* Self2);
	void DropTrash();
	void CheckActive();
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, Enum_interactionActions Action);
	void ReceiveBeginPlay();
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);
	void GascanFuel(class AProp_gascan_C* Gascan, bool* Fueled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"woodchipper_C">();
	}
	static class AWoodchipper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWoodchipper_C>();
	}
};
static_assert(alignof(AWoodchipper_C) == 0x000010, "Wrong alignment on AWoodchipper_C");
static_assert(sizeof(AWoodchipper_C) == 0x0004E0, "Wrong size on AWoodchipper_C");
static_assert(offsetof(AWoodchipper_C, UberGraphFrame_Woodchipper_C) == 0x000378, "Member 'AWoodchipper_C::UberGraphFrame_Woodchipper_C' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Fueltank) == 0x000380, "Member 'AWoodchipper_C::Fueltank' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Button_del) == 0x000388, "Member 'AWoodchipper_C::Button_del' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Wheel) == 0x000390, "Member 'AWoodchipper_C::Wheel' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, PhysicsConstraint) == 0x000398, "Member 'AWoodchipper_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Clip1) == 0x0003A0, "Member 'AWoodchipper_C::Clip1' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Exp) == 0x0003A8, "Member 'AWoodchipper_C::Exp' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Axis) == 0x0003B0, "Member 'AWoodchipper_C::Axis' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Origin) == 0x0003B8, "Member 'AWoodchipper_C::Origin' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Clip) == 0x0003C0, "Member 'AWoodchipper_C::Clip' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Billboard) == 0x0003C8, "Member 'AWoodchipper_C::Billboard' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, ParticleSystem) == 0x0003D0, "Member 'AWoodchipper_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Woodchipper_loop) == 0x0003D8, "Member 'AWoodchipper_C::Woodchipper_loop' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Woodchipper_chipLoop) == 0x0003E0, "Member 'AWoodchipper_C::Woodchipper_chipLoop' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Eat) == 0x0003E8, "Member 'AWoodchipper_C::Eat' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Mesh) == 0x0003F0, "Member 'AWoodchipper_C::Mesh' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Timeline_0_a_8E16B732496440B4A40966B518AA4408) == 0x0003F8, "Member 'AWoodchipper_C::Timeline_0_a_8E16B732496440B4A40966B518AA4408' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Timeline_0__Direction_8E16B732496440B4A40966B518AA4408) == 0x0003FC, "Member 'AWoodchipper_C::Timeline_0__Direction_8E16B732496440B4A40966B518AA4408' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Timeline_0) == 0x000400, "Member 'AWoodchipper_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Snds_a_A92CC18C4D34810C90E1CF9C3ABF7027) == 0x000408, "Member 'AWoodchipper_C::Snds_a_A92CC18C4D34810C90E1CF9C3ABF7027' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Snds__Direction_A92CC18C4D34810C90E1CF9C3ABF7027) == 0x00040C, "Member 'AWoodchipper_C::Snds__Direction_A92CC18C4D34810C90E1CF9C3ABF7027' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Snds) == 0x000410, "Member 'AWoodchipper_C::Snds' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, A_0) == 0x000418, "Member 'AWoodchipper_C::A_0' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Process) == 0x00041C, "Member 'AWoodchipper_C::Process' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, L_A) == 0x000420, "Member 'AWoodchipper_C::L_A' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, L_B) == 0x000450, "Member 'AWoodchipper_C::L_B' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Zloc) == 0x000480, "Member 'AWoodchipper_C::Zloc' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, B) == 0x000484, "Member 'AWoodchipper_C::B' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Dynma) == 0x000488, "Member 'AWoodchipper_C::Dynma' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Das) == 0x000490, "Member 'AWoodchipper_C::Das' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Vol) == 0x000498, "Member 'AWoodchipper_C::Vol' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Comp) == 0x0004A0, "Member 'AWoodchipper_C::Comp' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Active) == 0x0004A8, "Member 'AWoodchipper_C::Active' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Chipping) == 0x0004A9, "Member 'AWoodchipper_C::Chipping' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Power) == 0x0004AC, "Member 'AWoodchipper_C::Power' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Power2) == 0x0004B0, "Member 'AWoodchipper_C::Power2' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Dynmat_obj) == 0x0004B8, "Member 'AWoodchipper_C::Dynmat_obj' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, ObjectPhys) == 0x0004C0, "Member 'AWoodchipper_C::ObjectPhys' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, GarbAccumulate) == 0x0004C8, "Member 'AWoodchipper_C::GarbAccumulate' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Ac) == 0x0004D0, "Member 'AWoodchipper_C::Ac' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Fuel) == 0x0004D8, "Member 'AWoodchipper_C::Fuel' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, LookAtFueltank) == 0x0004DC, "Member 'AWoodchipper_C::LookAtFueltank' has a wrong offset!");
static_assert(offsetof(AWoodchipper_C, Erret) == 0x0004DD, "Member 'AWoodchipper_C::Erret' has a wrong offset!");

}

