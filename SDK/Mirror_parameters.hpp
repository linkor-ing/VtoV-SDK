#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mirror

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_settings_structs.hpp"


namespace SDK::Params
{

// Function mirror.mirror_C.ExecuteUbergraph_mirror
// 0x03B0 (0x03B0 - 0x0000)
struct Mirror_C_ExecuteUbergraph_mirror final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F2[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x0078(0x00CC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F4[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F5[0x8];                                     // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F6[0xC];                                     // 0x0254(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x02C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F7[0x6];                                     // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue_1;        // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mirror_C_ExecuteUbergraph_mirror) == 0x000010, "Wrong alignment on Mirror_C_ExecuteUbergraph_mirror");
static_assert(sizeof(Mirror_C_ExecuteUbergraph_mirror) == 0x0003B0, "Wrong size on Mirror_C_ExecuteUbergraph_mirror");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, EntryPoint) == 0x000000, "Member 'Mirror_C_ExecuteUbergraph_mirror::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_IsChildActor_ReturnValue) == 0x000004, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, Temp_bool_Variable) == 0x000005, "Member 'Mirror_C_ExecuteUbergraph_mirror::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_gamemode) == 0x000008, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_key) == 0x000010, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_pressed) == 0x000028, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_color) == 0x00002C, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetForwardVector_ReturnValue) == 0x000054, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Event_settings) == 0x000078, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000148, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetTransform_ReturnValue) == 0x000150, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000180, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0001B0, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_BreakTransform_Location) == 0x0001E0, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_BreakTransform_Rotation) == 0x0001EC, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_BreakTransform_Scale) == 0x0001F8, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000204, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000210, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetFOVAngle_ReturnValue) == 0x000250, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000260, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_ComposeTransforms_ReturnValue) == 0x000290, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0002C0, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000348, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetForwardVector_ReturnValue_1) == 0x000350, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00035C, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000368, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000374, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Normal_ReturnValue) == 0x000380, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Dot_VectorVector_ReturnValue) == 0x00038C, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_Less_FloatFloat_ReturnValue) == 0x000390, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000391, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_GetParentActor_ReturnValue) == 0x000398, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_WasRecentlyRendered_ReturnValue_1) == 0x0003A0, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_WasRecentlyRendered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, K2Node_Select_Default) == 0x0003A1, "Member 'Mirror_C_ExecuteUbergraph_mirror::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Mirror_C_ExecuteUbergraph_mirror, CallFunc_BooleanAND_ReturnValue) == 0x0003A2, "Member 'Mirror_C_ExecuteUbergraph_mirror::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function mirror.mirror_C.settingsApplied
// 0x00CC (0x00CC - 0x0000)
struct Mirror_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00CC)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_SettingsApplied) == 0x000004, "Wrong alignment on Mirror_C_SettingsApplied");
static_assert(sizeof(Mirror_C_SettingsApplied) == 0x0000CC, "Wrong size on Mirror_C_SettingsApplied");
static_assert(offsetof(Mirror_C_SettingsApplied, Settings) == 0x000000, "Member 'Mirror_C_SettingsApplied::Settings' has a wrong offset!");

// Function mirror.mirror_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Mirror_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_ReceiveTick) == 0x000004, "Wrong alignment on Mirror_C_ReceiveTick");
static_assert(sizeof(Mirror_C_ReceiveTick) == 0x000004, "Wrong size on Mirror_C_ReceiveTick");
static_assert(offsetof(Mirror_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Mirror_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function mirror.mirror_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Mirror_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_ApplyColor) == 0x000004, "Wrong alignment on Mirror_C_ApplyColor");
static_assert(sizeof(Mirror_C_ApplyColor) == 0x000010, "Wrong size on Mirror_C_ApplyColor");
static_assert(offsetof(Mirror_C_ApplyColor, Color) == 0x000000, "Member 'Mirror_C_ApplyColor::Color' has a wrong offset!");

// Function mirror.mirror_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct Mirror_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Mirror_C_AnyKey) == 0x000008, "Wrong alignment on Mirror_C_AnyKey");
static_assert(sizeof(Mirror_C_AnyKey) == 0x000020, "Wrong size on Mirror_C_AnyKey");
static_assert(offsetof(Mirror_C_AnyKey, Key) == 0x000000, "Member 'Mirror_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(Mirror_C_AnyKey, Pressed) == 0x000018, "Member 'Mirror_C_AnyKey::Pressed' has a wrong offset!");

// Function mirror.mirror_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Mirror_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_StuffUpgraded) == 0x000008, "Wrong alignment on Mirror_C_StuffUpgraded");
static_assert(sizeof(Mirror_C_StuffUpgraded) == 0x000008, "Wrong size on Mirror_C_StuffUpgraded");
static_assert(offsetof(Mirror_C_StuffUpgraded, GameMode) == 0x000000, "Member 'Mirror_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function mirror.mirror_C.res
// 0x0018 (0x0018 - 0x0000)
struct Mirror_C_Res final
{
public:
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Conv_Vector2DToIntPoint_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_Res) == 0x000008, "Wrong alignment on Mirror_C_Res");
static_assert(sizeof(Mirror_C_Res) == 0x000018, "Wrong size on Mirror_C_Res");
static_assert(offsetof(Mirror_C_Res, CallFunc_GetViewportSize_ReturnValue) == 0x000000, "Member 'Mirror_C_Res::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_Res, CallFunc_Conv_Vector2DToIntPoint_ReturnValue) == 0x000008, "Member 'Mirror_C_Res::CallFunc_Conv_Vector2DToIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mirror_C_Res, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000010, "Member 'Mirror_C_Res::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function mirror.mirror_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Mirror_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mirror_C_DreamInv) == 0x000008, "Wrong alignment on Mirror_C_DreamInv");
static_assert(sizeof(Mirror_C_DreamInv) == 0x000018, "Wrong size on Mirror_C_DreamInv");
static_assert(offsetof(Mirror_C_DreamInv, Invv) == 0x000000, "Member 'Mirror_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Mirror_C_DreamInv, Base) == 0x000010, "Member 'Mirror_C_DreamInv::Base' has a wrong offset!");

}

