#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ticker_treeSpawner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ticker_treeSpawner.ticker_treeSpawner_C.ExecuteUbergraph_ticker_treeSpawner
// 0x0090 (0x0090 - 0x0000)
struct Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWalkingTree_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner) == 0x000010, "Wrong alignment on Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner");
static_assert(sizeof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner) == 0x000090, "Wrong size on Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, EntryPoint) == 0x000000, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000010, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000018, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00001C, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_RotateAngleAxis_ReturnValue) == 0x000034, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'Ticker_treeSpawner_C_ExecuteUbergraph_ticker_treeSpawner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function ticker_treeSpawner.ticker_treeSpawner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ticker_treeSpawner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ticker_treeSpawner_C_ReceiveTick) == 0x000004, "Wrong alignment on Ticker_treeSpawner_C_ReceiveTick");
static_assert(sizeof(Ticker_treeSpawner_C_ReceiveTick) == 0x000004, "Wrong size on Ticker_treeSpawner_C_ReceiveTick");
static_assert(offsetof(Ticker_treeSpawner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ticker_treeSpawner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

