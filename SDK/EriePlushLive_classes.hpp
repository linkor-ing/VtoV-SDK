#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EriePlushLive

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Struct_save_structs.hpp"
#include "Enum_erieAnimState_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass eriePlushLive.eriePlushLive_C
// 0x01C0 (0x0680 - 0x04C0)
class AEriePlushLive_C final : public ACharacter
{
public:
	uint8                                         Pad_2221[0x8];                                     // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    SpawnEmote;                                        // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    SpawnEmoteRoot;                                    // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               MatchEffect;                                       // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cheesecube;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    SafeSpawn;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    RayStart;                                          // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    AttachSteal;                                       // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        RunningAway;                                       // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StealMesh;                                         // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    SpawnSplat;                                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         StealTimeline_a_60FFC5FB430B1C7250BA3AB38FCAC71B;  // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StealTimeline__Direction_60FFC5FB430B1C7250BA3AB38FCAC71B; // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2222[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StealTimeline;                                     // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Splatted;                                          // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2223[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UErieLive_Skeleton_AnimBlueprint_C*     Anim;                                              // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SplatAnim;                                         // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 Steal;                                             // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAction;                                         // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2224[0x7];                                     // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           StolenData;                                        // 0x0550(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsCarrying;                                        // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2225[0xF];                                     // 0x0611(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             T1;                                                // 0x0620(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Standup;                                           // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2226[0x7];                                     // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer;                                             // 0x0658(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_erieAnimState                            State;                                             // 0x0660(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2227[0x3];                                     // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rep;                                               // 0x0664(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AProp_C*                                StealProp;                                         // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuperEater;                                        // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2228[0x3];                                     // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FoodEating;                                        // 0x0674(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_eriePlushLive(int32 EntryPoint);
	void ReduceRep();
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Throw();
	void CheckClip();
	void GetStolen();
	void Ignite(float Fuel);
	void BndEvt__eriePlushLive_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void ReceiveDestroyed();
	void StealAnim(bool Condition);
	void Stealing();
	void Splat(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void StartMoving();
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, int32 Param_Index, Enum_interactionActions Action);
	void ReceiveTick(float DeltaSeconds);
	void Hooked(class AHook_C* Hook);
	void AttemptIgnite();
	void Slice(bool Clean);
	void bitten();
	void ReachedByExplosion(const struct FVector& Location, float Damage);
	void PlayerLookAway(class AMainPlayer_C* Player);
	void Stepped(float Volume);
	void ActionName(class AMainPlayer_C* Player, const struct FHitResult& Hit, const class FString& Param_Name);
	void AccumulateTemperature(float Temperature, float Speed);
	void AddTemperature(float Temperature);
	void MicrowaveElec();
	void PlayerHandAnyKey(class AMainPlayer_C* Player, const struct FKey& Key, bool Pressed);
	void PlayerHandMouse(class AMainPlayer_C* Player, const struct FVector2D& Mouse);
	void PlayerHandMouseWheel(class AMainPlayer_C* Player, float WheelDelta);
	void PlayerHandRelease_LMB(class AMainPlayer_C* Player);
	void PlayerHandRelease_RMB(class AMainPlayer_C* Player);
	void ExtinguishFire();
	void Exploded(float Damage, const struct FVector& Location);
	void PlayerHandUse_LMB(class AMainPlayer_C* Player);
	void PlayerHandUse_RMB(class AMainPlayer_C* Player);
	void ReceivedPhyiscsDamage();
	void Microwave();
	void FireDamage(float Damage);
	void SteppedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Unhook();
	void DigUp();
	void PhysPreDestroyed();
	void PhysDestroyed();
	void SetKey(const class FString& Key);
	void SetPropProps(bool Static, bool Frozen, bool Active);
	void Virus(bool Activate);
	void Eaten();
	void LeaveWaterOrigin(class AWaterVolume_C* Water);
	void EnterWaterOrigin(class AWaterVolume_C* Water);
	void LeaveWater(class AWaterVolume_C* Water);
	void EnterWater(class AWaterVolume_C* Water);
	void ImpactDamage(float Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact);
	void UpdateStrAgl();
	void DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Thrown(class AMainPlayer_C* Player);
	void broken_fire();
	void broken();
	void SendName(class FName Param_Name);
	void Kicked(bool Kick);
	void Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void DriveDetached();
	void SetIgnoreSave(bool Ignore);
	void OnCompleted_6C8828B34AC3A0F799F1F79CB729EFE7(class FName NotifyName);
	void OnBlendOut_6C8828B34AC3A0F799F1F79CB729EFE7(class FName NotifyName);
	void OnInterrupted_6C8828B34AC3A0F799F1F79CB729EFE7(class FName NotifyName);
	void OnNotifyBegin_6C8828B34AC3A0F799F1F79CB729EFE7(class FName NotifyName);
	void OnNotifyEnd_6C8828B34AC3A0F799F1F79CB729EFE7(class FName NotifyName);
	void OnCompleted_6962D7E443CE20D1E06FFDBE70479F4C(class FName NotifyName);
	void OnBlendOut_6962D7E443CE20D1E06FFDBE70479F4C(class FName NotifyName);
	void OnInterrupted_6962D7E443CE20D1E06FFDBE70479F4C(class FName NotifyName);
	void OnNotifyBegin_6962D7E443CE20D1E06FFDBE70479F4C(class FName NotifyName);
	void OnNotifyEnd_6962D7E443CE20D1E06FFDBE70479F4C(class FName NotifyName);
	void OnCompleted_8117E4BA4F1165AA82AF6196BD65F3FA(class FName NotifyName);
	void OnBlendOut_8117E4BA4F1165AA82AF6196BD65F3FA(class FName NotifyName);
	void OnInterrupted_8117E4BA4F1165AA82AF6196BD65F3FA(class FName NotifyName);
	void OnNotifyBegin_8117E4BA4F1165AA82AF6196BD65F3FA(class FName NotifyName);
	void OnNotifyEnd_8117E4BA4F1165AA82AF6196BD65F3FA(class FName NotifyName);
	void OnSuccess_15DF79E44ECE9E4CBB370AAB1AD42EEA(EPathFollowingResult MovementResult);
	void OnFail_15DF79E44ECE9E4CBB370AAB1AD42EEA(EPathFollowingResult MovementResult);
	void OnCompleted_36897E73449BC0A26943C6A561C5DD0C(class FName NotifyName);
	void OnBlendOut_36897E73449BC0A26943C6A561C5DD0C(class FName NotifyName);
	void OnInterrupted_36897E73449BC0A26943C6A561C5DD0C(class FName NotifyName);
	void OnNotifyBegin_36897E73449BC0A26943C6A561C5DD0C(class FName NotifyName);
	void OnNotifyEnd_36897E73449BC0A26943C6A561C5DD0C(class FName NotifyName);
	void OnCompleted_195090EF4000A393F5449F9306C12A66(class FName NotifyName);
	void OnBlendOut_195090EF4000A393F5449F9306C12A66(class FName NotifyName);
	void OnInterrupted_195090EF4000A393F5449F9306C12A66(class FName NotifyName);
	void OnNotifyBegin_195090EF4000A393F5449F9306C12A66(class FName NotifyName);
	void OnNotifyEnd_195090EF4000A393F5449F9306C12A66(class FName NotifyName);
	void OnSuccess_B60F5EF14CE1F1CFFF7ED8BE49287491(EPathFollowingResult MovementResult);
	void OnFail_B60F5EF14CE1F1CFFF7ED8BE49287491(EPathFollowingResult MovementResult);
	void StealTimeline__UpdateFunc();
	void StealTimeline__FinishedFunc();
	struct FVector MakeLoc();
	void bonked();
	void StopAnim();
	void AddRep();
	void GetStealProp(const TArray<class AActor*>& TargetArray, class AActor** OutItem);
	void GascanFuel(class AProp_gascan_C* Gascan, bool* Fueled);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay);
	void SetPath(const TArray<struct FVector>& Path, bool* Return);
	void GetOnlyKey(class FString* Key);
	void ProcessKeys(bool* Return);
	void CanBeUsedHold(bool* Return);
	void GetKey(class FString* Key);
	void ToolboxFix(class AProp_toolbox_C* Toolbox, bool* Return);
	void SkipRadial(bool* Skip);
	void CanBePutInContainer(bool* Return);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool Param_NoRespawn, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace);
	void IsButtonUsed(bool* Failed);
	void SkipPreDelete(bool* Skip);
	void IgnoreSave(bool* Param_IgnoreSave);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"eriePlushLive_C">();
	}
	static class AEriePlushLive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEriePlushLive_C>();
	}
};
static_assert(alignof(AEriePlushLive_C) == 0x000010, "Wrong alignment on AEriePlushLive_C");
static_assert(sizeof(AEriePlushLive_C) == 0x000680, "Wrong size on AEriePlushLive_C");
static_assert(offsetof(AEriePlushLive_C, UberGraphFrame) == 0x0004C0, "Member 'AEriePlushLive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SpawnEmote) == 0x0004C8, "Member 'AEriePlushLive_C::SpawnEmote' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SpawnEmoteRoot) == 0x0004D0, "Member 'AEriePlushLive_C::SpawnEmoteRoot' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, MatchEffect) == 0x0004D8, "Member 'AEriePlushLive_C::MatchEffect' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Cheesecube) == 0x0004E0, "Member 'AEriePlushLive_C::Cheesecube' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SafeSpawn) == 0x0004E8, "Member 'AEriePlushLive_C::SafeSpawn' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, RayStart) == 0x0004F0, "Member 'AEriePlushLive_C::RayStart' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, AttachSteal) == 0x0004F8, "Member 'AEriePlushLive_C::AttachSteal' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, RunningAway) == 0x000500, "Member 'AEriePlushLive_C::RunningAway' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StealMesh) == 0x000508, "Member 'AEriePlushLive_C::StealMesh' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SpawnSplat) == 0x000510, "Member 'AEriePlushLive_C::SpawnSplat' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StealTimeline_a_60FFC5FB430B1C7250BA3AB38FCAC71B) == 0x000518, "Member 'AEriePlushLive_C::StealTimeline_a_60FFC5FB430B1C7250BA3AB38FCAC71B' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StealTimeline__Direction_60FFC5FB430B1C7250BA3AB38FCAC71B) == 0x00051C, "Member 'AEriePlushLive_C::StealTimeline__Direction_60FFC5FB430B1C7250BA3AB38FCAC71B' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StealTimeline) == 0x000520, "Member 'AEriePlushLive_C::StealTimeline' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Splatted) == 0x000528, "Member 'AEriePlushLive_C::Splatted' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Anim) == 0x000530, "Member 'AEriePlushLive_C::Anim' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SplatAnim) == 0x000538, "Member 'AEriePlushLive_C::SplatAnim' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Steal) == 0x000540, "Member 'AEriePlushLive_C::Steal' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, CanAction) == 0x000548, "Member 'AEriePlushLive_C::CanAction' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StolenData) == 0x000550, "Member 'AEriePlushLive_C::StolenData' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, IsCarrying) == 0x000610, "Member 'AEriePlushLive_C::IsCarrying' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, T1) == 0x000620, "Member 'AEriePlushLive_C::T1' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Standup) == 0x000650, "Member 'AEriePlushLive_C::Standup' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Timer) == 0x000658, "Member 'AEriePlushLive_C::Timer' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, State) == 0x000660, "Member 'AEriePlushLive_C::State' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, Rep) == 0x000664, "Member 'AEriePlushLive_C::Rep' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, StealProp) == 0x000668, "Member 'AEriePlushLive_C::StealProp' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, SuperEater) == 0x000670, "Member 'AEriePlushLive_C::SuperEater' has a wrong offset!");
static_assert(offsetof(AEriePlushLive_C, FoodEating) == 0x000674, "Member 'AEriePlushLive_C::FoodEating' has a wrong offset!");

}

