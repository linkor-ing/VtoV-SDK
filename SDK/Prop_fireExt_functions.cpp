#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_fireExt

#include "Basic.hpp"

#include "Prop_fireExt_classes.hpp"
#include "Prop_fireExt_parameters.hpp"


namespace SDK
{

// Function prop_fireExt.prop_fireExt_C.ExecuteUbergraph_prop_fireExt
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::ExecuteUbergraph_prop_fireExt(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "ExecuteUbergraph_prop_fireExt");

	Params::Prop_fireExt_C_ExecuteUbergraph_prop_fireExt Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.fireSound
// (BlueprintCallable, BlueprintEvent)

void AProp_fireExt_C::FireSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "fireSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_fireExt.prop_fireExt_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "ReceiveTick");

	Params::Prop_fireExt_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.fireDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::FireDamage(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "fireDamage");

	Params::Prop_fireExt_C_FireDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.shoot
// (BlueprintCallable, BlueprintEvent)

void AProp_fireExt_C::Shoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "shoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_fireExt.prop_fireExt_C.addDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Param_Hit                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          Impact                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipSetting                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_fireExt_C::AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Param_Hit, const struct FVector& Impact, bool SkipSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "addDamage");

	Params::Prop_fireExt_C_AddDamage Parms{};

	Parms.Actor = Actor;
	Parms.Damage = Damage;
	Parms.Param_Hit = std::move(Param_Hit);
	Parms.Impact = std::move(Impact);
	Parms.SkipSetting = SkipSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.fireTimeSound__UpdateFunc
// (BlueprintEvent)

void AProp_fireExt_C::FireTimeSound__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "fireTimeSound__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_fireExt.prop_fireExt_C.fireTimeSound__FinishedFunc
// (BlueprintEvent)

void AProp_fireExt_C::FireTimeSound__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "fireTimeSound__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_fireExt.prop_fireExt_C.fire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Firing                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_fireExt_C::Fire(bool Param_Firing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "fire");

	Params::Prop_fireExt_C_Fire Parms{};

	Parms.Param_Firing = Param_Firing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.extinguishRay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InputPin2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::ExtinguishRay(const struct FVector& InputPin, const struct FVector& InputPin2, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "extinguishRay");

	Params::Prop_fireExt_C_ExtinguishRay Parms{};

	Parms.InputPin = std::move(InputPin);
	Parms.InputPin2 = std::move(InputPin2);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.playerHandRelease_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::PlayerHandRelease_LMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "playerHandRelease_LMB");

	Params::Prop_fireExt_C_PlayerHandRelease_LMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.playerHandUse_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_fireExt_C::PlayerHandUse_LMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "playerHandUse_LMB");

	Params::Prop_fireExt_C_PlayerHandUse_LMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_fireExt.prop_fireExt_C.receivedPhyiscsDamage
// (Public, BlueprintCallable, BlueprintEvent)

void AProp_fireExt_C::ReceivedPhyiscsDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "receivedPhyiscsDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function prop_fireExt.prop_fireExt_C.loadData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_save                     Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_fireExt_C::LoadData(const struct FStruct_save& Data, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "loadData");

	Params::Prop_fireExt_C_LoadData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function prop_fireExt.prop_fireExt_C.getData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_save                     Data                                                   (Parm, OutParm, HasGetValueTypeHash)

void AProp_fireExt_C::GetData(struct FStruct_save* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_fireExt_C", "getData");

	Params::Prop_fireExt_C_GetData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}

}

