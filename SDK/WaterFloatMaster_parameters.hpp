#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaterFloatMaster

#include "Basic.hpp"

#include "Struct_settings_structs.hpp"
#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function waterFloatMaster.waterFloatMaster_C.ExecuteUbergraph_waterFloatMaster
// 0x0270 (0x0270 - 0x0000)
struct WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x0010(0x00F0)(HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0100(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWaterVolume_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0180(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0xC];                                      // 0x01E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_boyoancy_centerUnderwaterCopy;            // 0x0238(0x0010)(ReferenceParm)
	class ARiverFlow_C*                           CallFunc_Array_Get_Item_1;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster) == 0x000010, "Wrong alignment on WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster");
static_assert(sizeof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster) == 0x000270, "Wrong size on WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, EntryPoint) == 0x000000, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_gamemode) == 0x000008, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_settings) == 0x000010, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_key) == 0x000100, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_pressed) == 0x000118, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_color) == 0x00011C, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_picker) == 0x000130, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_texture) == 0x000138, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_index) == 0x000140, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, Temp_int_Array_Index_Variable) == 0x000148, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000150, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_GetAllActorsOfClass_OutActors) == 0x000158, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, Temp_int_Loop_Counter_Variable_1) == 0x00016C, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Get_Item) == 0x000170, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_GetTransform_ReturnValue) == 0x000180, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B0, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_BreakTransform_Location) == 0x0001B4, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_BreakTransform_Rotation) == 0x0001C0, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_BreakTransform_Scale) == 0x0001CC, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001D8, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_MakeTransform_ReturnValue) == 0x0001F0, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, K2Node_Event_DeltaSeconds) == 0x000220, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Add_ReturnValue) == 0x000224, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, Temp_int_Array_Index_Variable_1) == 0x000228, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000230, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_boyoancy_centerUnderwaterCopy) == 0x000238, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_boyoancy_centerUnderwaterCopy' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Get_Item_1) == 0x000248, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Length_ReturnValue_2) == 0x000250, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Less_IntInt_ReturnValue_1) == 0x000254, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Add_ReturnValue_1) == 0x000258, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Add_ReturnValue_2) == 0x00025C, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Add_ReturnValue_3) == 0x000260, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster, CallFunc_Array_Add_ReturnValue_4) == 0x000264, "Member 'WaterFloatMaster_C_ExecuteUbergraph_waterFloatMaster::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WaterFloatMaster_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_ReceiveTick) == 0x000004, "Wrong alignment on WaterFloatMaster_C_ReceiveTick");
static_assert(sizeof(WaterFloatMaster_C_ReceiveTick) == 0x000004, "Wrong size on WaterFloatMaster_C_ReceiveTick");
static_assert(offsetof(WaterFloatMaster_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WaterFloatMaster_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct WaterFloatMaster_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_TexturePickerApply) == 0x000008, "Wrong alignment on WaterFloatMaster_C_TexturePickerApply");
static_assert(sizeof(WaterFloatMaster_C_TexturePickerApply) == 0x000018, "Wrong size on WaterFloatMaster_C_TexturePickerApply");
static_assert(offsetof(WaterFloatMaster_C_TexturePickerApply, Picker) == 0x000000, "Member 'WaterFloatMaster_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_TexturePickerApply, Texture) == 0x000008, "Member 'WaterFloatMaster_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_TexturePickerApply, Param_Index) == 0x000010, "Member 'WaterFloatMaster_C_TexturePickerApply::Param_Index' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct WaterFloatMaster_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_ApplyColor) == 0x000004, "Wrong alignment on WaterFloatMaster_C_ApplyColor");
static_assert(sizeof(WaterFloatMaster_C_ApplyColor) == 0x000010, "Wrong size on WaterFloatMaster_C_ApplyColor");
static_assert(offsetof(WaterFloatMaster_C_ApplyColor, Color) == 0x000000, "Member 'WaterFloatMaster_C_ApplyColor::Color' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct WaterFloatMaster_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaterFloatMaster_C_AnyKey) == 0x000008, "Wrong alignment on WaterFloatMaster_C_AnyKey");
static_assert(sizeof(WaterFloatMaster_C_AnyKey) == 0x000020, "Wrong size on WaterFloatMaster_C_AnyKey");
static_assert(offsetof(WaterFloatMaster_C_AnyKey, Key) == 0x000000, "Member 'WaterFloatMaster_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AnyKey, Pressed) == 0x000018, "Member 'WaterFloatMaster_C_AnyKey::Pressed' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.settingsApplied
// 0x00F0 (0x00F0 - 0x0000)
struct WaterFloatMaster_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_SettingsApplied) == 0x000008, "Wrong alignment on WaterFloatMaster_C_SettingsApplied");
static_assert(sizeof(WaterFloatMaster_C_SettingsApplied) == 0x0000F0, "Wrong size on WaterFloatMaster_C_SettingsApplied");
static_assert(offsetof(WaterFloatMaster_C_SettingsApplied, Settings) == 0x000000, "Member 'WaterFloatMaster_C_SettingsApplied::Settings' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct WaterFloatMaster_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_StuffUpgraded) == 0x000008, "Wrong alignment on WaterFloatMaster_C_StuffUpgraded");
static_assert(sizeof(WaterFloatMaster_C_StuffUpgraded) == 0x000008, "Wrong size on WaterFloatMaster_C_StuffUpgraded");
static_assert(offsetof(WaterFloatMaster_C_StuffUpgraded, GameMode) == 0x000000, "Member 'WaterFloatMaster_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.bo
// 0x0220 (0x0220 - 0x0000)
struct WaterFloatMaster_C_bo final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Depth;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ind;                                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rivs;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RivDists;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RiverDir;                                          // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiverForce;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARiverFlow_C*                           Clos;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Aa;                                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	float                                         ObjectDepth;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ObjectTransform;                                   // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                ObjectAngularVelocity;                             // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ObjectLinearVelocity;                              // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ObjectMass;                                        // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         boyoancy;                                          // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                boundsNeg;                                         // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         R;                                                 // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounds;                                            // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Push;                                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getBoyoancy_Value;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0194(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaterFloatMaster_C_bo) == 0x000010, "Wrong alignment on WaterFloatMaster_C_bo");
static_assert(sizeof(WaterFloatMaster_C_bo) == 0x000220, "Wrong size on WaterFloatMaster_C_bo");
static_assert(offsetof(WaterFloatMaster_C_bo, Target) == 0x000000, "Member 'WaterFloatMaster_C_bo::Target' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Depth) == 0x000008, "Member 'WaterFloatMaster_C_bo::Depth' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Ind) == 0x00000C, "Member 'WaterFloatMaster_C_bo::Ind' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Rivs) == 0x000010, "Member 'WaterFloatMaster_C_bo::Rivs' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, RivDists) == 0x000014, "Member 'WaterFloatMaster_C_bo::RivDists' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, RiverDir) == 0x000018, "Member 'WaterFloatMaster_C_bo::RiverDir' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, RiverForce) == 0x000024, "Member 'WaterFloatMaster_C_bo::RiverForce' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Clos) == 0x000028, "Member 'WaterFloatMaster_C_bo::Clos' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Aa) == 0x000030, "Member 'WaterFloatMaster_C_bo::Aa' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, ObjectDepth) == 0x000040, "Member 'WaterFloatMaster_C_bo::ObjectDepth' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, ObjectTransform) == 0x000050, "Member 'WaterFloatMaster_C_bo::ObjectTransform' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, ObjectAngularVelocity) == 0x000080, "Member 'WaterFloatMaster_C_bo::ObjectAngularVelocity' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, ObjectLinearVelocity) == 0x00008C, "Member 'WaterFloatMaster_C_bo::ObjectLinearVelocity' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, ObjectMass) == 0x000098, "Member 'WaterFloatMaster_C_bo::ObjectMass' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, boyoancy) == 0x00009C, "Member 'WaterFloatMaster_C_bo::boyoancy' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, boundsNeg) == 0x0000A0, "Member 'WaterFloatMaster_C_bo::boundsNeg' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, R) == 0x0000AC, "Member 'WaterFloatMaster_C_bo::R' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Bounds) == 0x0000B0, "Member 'WaterFloatMaster_C_bo::Bounds' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Origin) == 0x0000BC, "Member 'WaterFloatMaster_C_bo::Origin' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, Push) == 0x0000C8, "Member 'WaterFloatMaster_C_bo::Push' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x0000D0, "Member 'WaterFloatMaster_C_bo::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetComponentVelocity_ReturnValue) == 0x0000DC, "Member 'WaterFloatMaster_C_bo::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000F0, "Member 'WaterFloatMaster_C_bo::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetMass_ReturnValue) == 0x000120, "Member 'WaterFloatMaster_C_bo::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_BreakTransform_Location) == 0x000124, "Member 'WaterFloatMaster_C_bo::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_BreakTransform_Rotation) == 0x000130, "Member 'WaterFloatMaster_C_bo::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_BreakTransform_Scale) == 0x00013C, "Member 'WaterFloatMaster_C_bo::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000148, "Member 'WaterFloatMaster_C_bo::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000150, "Member 'WaterFloatMaster_C_bo::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'WaterFloatMaster_C_bo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetMaterial_ReturnValue) == 0x000160, "Member 'WaterFloatMaster_C_bo::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetComponentBounds_Origin) == 0x000168, "Member 'WaterFloatMaster_C_bo::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetComponentBounds_BoxExtent) == 0x000174, "Member 'WaterFloatMaster_C_bo::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetComponentBounds_SphereRadius) == 0x000180, "Member 'WaterFloatMaster_C_bo::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x000188, "Member 'WaterFloatMaster_C_bo::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_getBoyoancy_Value) == 0x000190, "Member 'WaterFloatMaster_C_bo::CallFunc_getBoyoancy_Value' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetBounds_ReturnValue) == 0x000194, "Member 'WaterFloatMaster_C_bo::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_VSize_ReturnValue) == 0x0001B0, "Member 'WaterFloatMaster_C_bo::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001B4, "Member 'WaterFloatMaster_C_bo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_GetMinElement_ReturnValue) == 0x0001B8, "Member 'WaterFloatMaster_C_bo::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001BC, "Member 'WaterFloatMaster_C_bo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001C0, "Member 'WaterFloatMaster_C_bo::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001CC, "Member 'WaterFloatMaster_C_bo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'WaterFloatMaster_C_bo::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000210, "Member 'WaterFloatMaster_C_bo::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_bo, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00021C, "Member 'WaterFloatMaster_C_bo::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.addObj
// 0x0070 (0x0070 - 0x0000)
struct WaterFloatMaster_C_AddObj final
{
public:
	float                                         Depth;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Obj;                                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Repeats;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          R;                                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getBoyoancy_Value;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_AddObj) == 0x000008, "Wrong alignment on WaterFloatMaster_C_AddObj");
static_assert(sizeof(WaterFloatMaster_C_AddObj) == 0x000070, "Wrong size on WaterFloatMaster_C_AddObj");
static_assert(offsetof(WaterFloatMaster_C_AddObj, Depth) == 0x000000, "Member 'WaterFloatMaster_C_AddObj::Depth' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, Obj) == 0x000008, "Member 'WaterFloatMaster_C_AddObj::Obj' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, Param_Repeats) == 0x000010, "Member 'WaterFloatMaster_C_AddObj::Param_Repeats' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, R) == 0x000011, "Member 'WaterFloatMaster_C_AddObj::R' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'WaterFloatMaster_C_AddObj::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, K2Node_DynamicCast_AsInt_Objects) == 0x000020, "Member 'WaterFloatMaster_C_AddObj::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WaterFloatMaster_C_AddObj::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, K2Node_DynamicCast_AsPrimitive_Component) == 0x000038, "Member 'WaterFloatMaster_C_AddObj::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WaterFloatMaster_C_AddObj::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_GetMaterial_ReturnValue) == 0x000048, "Member 'WaterFloatMaster_C_AddObj::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x000050, "Member 'WaterFloatMaster_C_AddObj::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_getBoyoancy_Value) == 0x000058, "Member 'WaterFloatMaster_C_AddObj::CallFunc_getBoyoancy_Value' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_Array_Contains_ReturnValue) == 0x00005C, "Member 'WaterFloatMaster_C_AddObj::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'WaterFloatMaster_C_AddObj::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'WaterFloatMaster_C_AddObj::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_AddObj, CallFunc_Array_Add_ReturnValue_2) == 0x000068, "Member 'WaterFloatMaster_C_AddObj::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.removeObj
// 0x0010 (0x0010 - 0x0000)
struct WaterFloatMaster_C_RemoveObj final
{
public:
	const class AActor*                           Find;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Repeats;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          R;                                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_RemoveObj) == 0x000008, "Wrong alignment on WaterFloatMaster_C_RemoveObj");
static_assert(sizeof(WaterFloatMaster_C_RemoveObj) == 0x000010, "Wrong size on WaterFloatMaster_C_RemoveObj");
static_assert(offsetof(WaterFloatMaster_C_RemoveObj, Find) == 0x000000, "Member 'WaterFloatMaster_C_RemoveObj::Find' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_RemoveObj, Param_Repeats) == 0x000008, "Member 'WaterFloatMaster_C_RemoveObj::Param_Repeats' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_RemoveObj, R) == 0x000009, "Member 'WaterFloatMaster_C_RemoveObj::R' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_RemoveObj, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'WaterFloatMaster_C_RemoveObj::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_RemoveObj, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'WaterFloatMaster_C_RemoveObj::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function waterFloatMaster.waterFloatMaster_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct WaterFloatMaster_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaterFloatMaster_C_DreamInv) == 0x000008, "Wrong alignment on WaterFloatMaster_C_DreamInv");
static_assert(sizeof(WaterFloatMaster_C_DreamInv) == 0x000018, "Wrong size on WaterFloatMaster_C_DreamInv");
static_assert(offsetof(WaterFloatMaster_C_DreamInv, Invv) == 0x000000, "Member 'WaterFloatMaster_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(WaterFloatMaster_C_DreamInv, Base) == 0x000010, "Member 'WaterFloatMaster_C_DreamInv::Base' has a wrong offset!");

}

