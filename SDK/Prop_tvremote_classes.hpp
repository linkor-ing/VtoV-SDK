#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_tvremote

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_tvremote.prop_tvremote_C
// 0x0020 (0x0398 - 0x0378)
class AProp_tvremote_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_tvremote_C;                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 ObjectUse;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ObjectKey;                                         // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_tvremote(int32 EntryPoint);
	void PlayerHandUse_RMB(class AMainPlayer_C* Player);
	void PlayerHandUse_LMB(class AMainPlayer_C* Player);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void ProcessKeys(bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_tvremote_C">();
	}
	static class AProp_tvremote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_tvremote_C>();
	}
};
static_assert(alignof(AProp_tvremote_C) == 0x000008, "Wrong alignment on AProp_tvremote_C");
static_assert(sizeof(AProp_tvremote_C) == 0x000398, "Wrong size on AProp_tvremote_C");
static_assert(offsetof(AProp_tvremote_C, UberGraphFrame_Prop_tvremote_C) == 0x000378, "Member 'AProp_tvremote_C::UberGraphFrame_Prop_tvremote_C' has a wrong offset!");
static_assert(offsetof(AProp_tvremote_C, ObjectUse) == 0x000380, "Member 'AProp_tvremote_C::ObjectUse' has a wrong offset!");
static_assert(offsetof(AProp_tvremote_C, ObjectKey) == 0x000388, "Member 'AProp_tvremote_C::ObjectKey' has a wrong offset!");

}

