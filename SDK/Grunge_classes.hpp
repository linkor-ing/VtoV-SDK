#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grunge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass grunge.grunge_C
// 0x0030 (0x0250 - 0x0220)
class AGrunge_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Process;                                           // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_grunge(int32 EntryPoint);
	void SetIgnoreSave(bool Ignore);
	void Sound();
	void UserConstructionScript();
	void SetMat();
	void Clean(class AProp_sponge_C* Sponge, float Sub, bool NoSound);
	void SkipPreDelete(bool* Skip);
	void IgnoreSave(bool* Param_IgnoreSave);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void GatherDataFromKey(bool* Gather);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"grunge_C">();
	}
	static class AGrunge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrunge_C>();
	}
};
static_assert(alignof(AGrunge_C) == 0x000008, "Wrong alignment on AGrunge_C");
static_assert(sizeof(AGrunge_C) == 0x000250, "Wrong size on AGrunge_C");
static_assert(offsetof(AGrunge_C, UberGraphFrame) == 0x000220, "Member 'AGrunge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Decal) == 0x000228, "Member 'AGrunge_C::Decal' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Billboard) == 0x000230, "Member 'AGrunge_C::Billboard' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Box) == 0x000238, "Member 'AGrunge_C::Box' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Type) == 0x000240, "Member 'AGrunge_C::Type' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Process) == 0x000244, "Member 'AGrunge_C::Process' has a wrong offset!");
static_assert(offsetof(AGrunge_C, Dynmat) == 0x000248, "Member 'AGrunge_C::Dynmat' has a wrong offset!");

}

