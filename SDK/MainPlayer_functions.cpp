#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainPlayer

#include "Basic.hpp"

#include "MainPlayer_classes.hpp"
#include "MainPlayer_parameters.hpp"


namespace SDK
{

// Function mainPlayer.mainPlayer_C.scrollUp__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ScrollUp__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "scrollUp__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.scrollDown__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ScrollDown__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "scrollDown__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.faint__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Faint__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "faint__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.flashlightStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpotLightComponent*              Light                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::FlashlightStateChanged__DelegateSignature(class USpotLightComponent* Light, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "flashlightStateChanged__DelegateSignature");

	Params::MainPlayer_C_FlashlightStateChanged__DelegateSignature Parms{};

	Parms.Light = Light;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.used_E__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Used_E__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "used_E__DelegateSignature");

	Params::MainPlayer_C_Used_E__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.mouse_xy__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MouseXY                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Mouse_xy__DelegateSignature(const struct FVector2D& MouseXY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "mouse_xy__DelegateSignature");

	Params::MainPlayer_C_Mouse_xy__DelegateSignature Parms{};

	Parms.MouseXY = std::move(MouseXY);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.shift__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Shift__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "shift__DelegateSignature");

	Params::MainPlayer_C_Shift__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.used_alt__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Used_alt__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "used_alt__DelegateSignature");

	Params::MainPlayer_C_Used_alt__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.montageNotify__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::MontageNotify__DelegateSignature(class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "montageNotify__DelegateSignature");

	Params::MainPlayer_C_MontageNotify__DelegateSignature Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.swingMelee__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SwingMelee__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "swingMelee__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.space__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Space__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "space__DelegateSignature");

	Params::MainPlayer_C_Space__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.used_R__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Used_R__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "used_R__DelegateSignature");

	Params::MainPlayer_C_Used_R__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.used_RMB__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Used_RMB__DelegateSignature(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "used_RMB__DelegateSignature");

	Params::MainPlayer_C_Used_RMB__DelegateSignature Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.damaged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Damaged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "damaged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.anyKeyEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::AnyKeyEvent__DelegateSignature(const struct FKey& Key, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "anyKeyEvent__DelegateSignature");

	Params::MainPlayer_C_AnyKeyEvent__DelegateSignature Parms{};

	Parms.Key = std::move(Key);
	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.jumped__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Jumped__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "jumped__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.ExecuteUbergraph_mainPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ExecuteUbergraph_mainPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ExecuteUbergraph_mainPlayer");

	Params::MainPlayer_C_ExecuteUbergraph_mainPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.enterWaterOrigin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWaterVolume_C*                   Water                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::EnterWaterOrigin(class AWaterVolume_C* Water)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "enterWaterOrigin");

	Params::MainPlayer_C_EnterWaterOrigin Parms{};

	Parms.Water = Water;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.leaveWaterOrigin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWaterVolume_C*                   Water                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::LeaveWaterOrigin(class AWaterVolume_C* Water)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "leaveWaterOrigin");

	Params::MainPlayer_C_LeaveWaterOrigin Parms{};

	Parms.Water = Water;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.enterWater
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWaterVolume_C*                   Water                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::EnterWater(class AWaterVolume_C* Water)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "enterWater");

	Params::MainPlayer_C_EnterWater Parms{};

	Parms.Water = Water;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.leaveWater
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWaterVolume_C*                   Water                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::LeaveWater(class AWaterVolume_C* Water)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "leaveWater");

	Params::MainPlayer_C_LeaveWater Parms{};

	Parms.Water = Water;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.unrun
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unrun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unrun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.simulateEsc
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SimulateEsc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "simulateEsc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.interruptHoldItem
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::InterruptHoldItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "interruptHoldItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.driveDetached
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::DriveDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "driveDetached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.player_use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "player_use");

	Params::MainPlayer_C_Player_use Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.kicked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Kick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Kicked(bool Param_Kick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "kicked");

	Params::MainPlayer_C_Kicked Parms{};

	Parms.Param_Kick = Param_Kick;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.sendName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::SendName(class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "sendName");

	Params::MainPlayer_C_SendName Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.broken
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::broken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "broken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.broken_fire
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::broken_fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "broken_fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.thrown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Thrown(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "thrown");

	Params::MainPlayer_C_Thrown Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.damageByPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "damageByPlayer");

	Params::MainPlayer_C_DamageByPlayer Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerUnequip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerUnequip(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerUnequip");

	Params::MainPlayer_C_PlayerUnequip Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHold(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHold");

	Params::MainPlayer_C_PlayerHold Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerR(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerR");

	Params::MainPlayer_C_PlayerR Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.ImpactDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Impact                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ImpactDamage(float Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ImpactDamage");

	Params::MainPlayer_C_ImpactDamage Parms{};

	Parms.Damage = Damage;
	Parms.Hit = std::move(Hit);
	Parms.Actor = Actor;
	Parms.Impact = std::move(Impact);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.eaten
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Eaten()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "eaten");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.virus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Virus(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "virus");

	Params::MainPlayer_C_Virus Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.setPropProps
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Static                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Frozen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SetPropProps(bool Static, bool Frozen, bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setPropProps");

	Params::MainPlayer_C_SetPropProps Parms{};

	Parms.Static = Static;
	Parms.Frozen = Frozen;
	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.setKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::SetKey(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setKey");

	Params::MainPlayer_C_SetKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.physDestroyed
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::PhysDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "physDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.physPreDestroyed
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::PhysPreDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "physPreDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.digUp
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::DigUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "digUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.unhook
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unhook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unhook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.steppedOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::SteppedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "steppedOn");

	Params::MainPlayer_C_SteppedOn Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.fireDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::FireDamage(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "fireDamage");

	Params::MainPlayer_C_FireDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.microwave
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Microwave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "microwave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.receivedPhyiscsDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::ReceivedPhyiscsDamage(float Damage, const struct FHitResult& Hot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "receivedPhyiscsDamage");

	Params::MainPlayer_C_ReceivedPhyiscsDamage Parms{};

	Parms.Damage = Damage;
	Parms.Hot = std::move(Hot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.actionOptionIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// Enum_interactionActions                 Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "actionOptionIndex");

	Params::MainPlayer_C_ActionOptionIndex Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);
	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandUse_RMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandUse_RMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandUse_RMB");

	Params::MainPlayer_C_PlayerHandUse_RMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandUse_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandUse_LMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandUse_LMB");

	Params::MainPlayer_C_PlayerHandUse_LMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.exploded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Exploded(float Damage, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "exploded");

	Params::MainPlayer_C_Exploded Parms{};

	Parms.Damage = Damage;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandRelease_RMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandRelease_RMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandRelease_RMB");

	Params::MainPlayer_C_PlayerHandRelease_RMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandRelease_LMB
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandRelease_LMB(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandRelease_LMB");

	Params::MainPlayer_C_PlayerHandRelease_LMB Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandMouseWheel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WheelDelta                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandMouseWheel(class AMainPlayer_C* Player, float WheelDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandMouseWheel");

	Params::MainPlayer_C_PlayerHandMouseWheel Parms{};

	Parms.Player = Player;
	Parms.WheelDelta = WheelDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandMouse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Mouse                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerHandMouse(class AMainPlayer_C* Player, const struct FVector2D& Mouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandMouse");

	Params::MainPlayer_C_PlayerHandMouse Parms{};

	Parms.Player = Player;
	Parms.Mouse = std::move(Mouse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerHandAnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::PlayerHandAnyKey(class AMainPlayer_C* Player, const struct FKey& Key, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerHandAnyKey");

	Params::MainPlayer_C_PlayerHandAnyKey Parms{};

	Parms.Player = Player;
	Parms.Key = std::move(Key);
	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.microwaveElec
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::MicrowaveElec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "microwaveElec");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.addTemperature
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::AddTemperature(float Temperature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addTemperature");

	Params::MainPlayer_C_AddTemperature Parms{};

	Parms.Temperature = Temperature;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.accumulateTemperature
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::AccumulateTemperature(float Temperature, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "accumulateTemperature");

	Params::MainPlayer_C_AccumulateTemperature Parms{};

	Parms.Temperature = Temperature;
	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.ActionName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::ActionName(class AMainPlayer_C* Player, const struct FHitResult& Hit, const class FString& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ActionName");

	Params::MainPlayer_C_ActionName Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);
	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.stepped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Stepped(float Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "stepped");

	Params::MainPlayer_C_Stepped Parms{};

	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerLookAway
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayerLookAway(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerLookAway");

	Params::MainPlayer_C_PlayerLookAway Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.reachedByExplosion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ReachedByExplosion(const struct FVector& Location, float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "reachedByExplosion");

	Params::MainPlayer_C_ReachedByExplosion Parms{};

	Parms.Location = std::move(Location);
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.bitten
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::bitten()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "bitten");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.slice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Clean                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Slice(bool Clean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "slice");

	Params::MainPlayer_C_Slice Parms{};

	Parms.Clean = Clean;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.playerUsedOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playerUsedOn");

	Params::MainPlayer_C_PlayerUsedOn Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.attemptIgnite
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::AttemptIgnite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "attemptIgnite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.hooked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHook_C*                          Hook                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Hooked(class AHook_C* Hook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "hooked");

	Params::MainPlayer_C_Hooked Parms{};

	Parms.Hook = Hook;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.crafted
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Crafted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "crafted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.cleanSponge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Clean                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::CleanSponge(float Clean, class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "cleanSponge");

	Params::MainPlayer_C_CleanSponge Parms{};

	Parms.Clean = Clean;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.hookTension
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHook_C*                          Hook                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::HookTension(class AHook_C* Hook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "hookTension");

	Params::MainPlayer_C_HookTension Parms{};

	Parms.Hook = Hook;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.signalDeleted
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SignalDeleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "signalDeleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.signalSaved
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SignalSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "signalSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.gamemodeBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::GamemodeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "gamemodeBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.stuffUpgraded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainGamemode_C*                  GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::StuffUpgraded(class AMainGamemode_C* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "stuffUpgraded");

	Params::MainPlayer_C_StuffUpgraded Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.unfoc
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unfoc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unfoc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.unfocused
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unfocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unfocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.gamemodePreLoad
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::GamemodePreLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "gamemodePreLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.AnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::AnyKey(const struct FKey& Key, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "AnyKey");

	Params::MainPlayer_C_AnyKey Parms{};

	Parms.Key = std::move(Key);
	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.gamemodeMakeKeys
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::GamemodeMakeKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "gamemodeMakeKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.propRenderer_finishProps
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::PropRenderer_finishProps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "propRenderer_finishProps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.applyColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ApplyColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "applyColor");

	Params::MainPlayer_C_ApplyColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.texturePickerApply
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUmg_texturePicker_C*             Picker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "texturePickerApply");

	Params::MainPlayer_C_TexturePickerApply Parms{};

	Parms.Picker = Picker;
	Parms.Texture = Texture;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.bindSitDestroyed
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::bindSitDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "bindSitDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.sitDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::SitDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "sitDestroyed");

	Params::MainPlayer_C_SitDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.unbindSitDestroyed
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UnbindSitDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unbindSitDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.recallSit
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::RecallSit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "recallSit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.K2_OnEndCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "K2_OnEndCrouch");

	Params::MainPlayer_C_K2_OnEndCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.K2_OnStartCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "K2_OnStartCrouch");

	Params::MainPlayer_C_K2_OnStartCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.firstPersonBodyAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StartingSection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::FirstPersonBodyAnimation(class FName StartingSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "firstPersonBodyAnimation");

	Params::MainPlayer_C_FirstPersonBodyAnimation Parms{};

	Parms.StartingSection = StartingSection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.ignite
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Fuel                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Ignite(float Fuel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ignite");

	Params::MainPlayer_C_Ignite Parms{};

	Parms.Fuel = Fuel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.startBurning
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::StartBurning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "startBurning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.extinguishFire
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ExtinguishFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "extinguishFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnLanded");

	Params::MainPlayer_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.pickupObject
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Param_HitResult                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::PickupObject(const struct FHitResult& Param_HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "pickupObject");

	Params::MainPlayer_C_PickupObject Parms{};

	Parms.Param_HitResult = std::move(Param_HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.dropObject
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::DropObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "dropObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.smoothGrab
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SmoothGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "smoothGrab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.simulateDrop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DontWakeup                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Alt                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_Dontcollect                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SimulateDrop(bool DontWakeup, bool Alt, bool Param_Dontcollect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "simulateDrop");

	Params::MainPlayer_C_SimulateDrop Parms{};

	Parms.DontWakeup = DontWakeup;
	Parms.Alt = Alt;
	Parms.Param_Dontcollect = Param_Dontcollect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.unzoom
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unzoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unzoom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.stopZooming
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::StopZooming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "stopZooming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.fallImpulse
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::FallImpulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "fallImpulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.simClick
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::SimClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "simClick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ReceiveTick");

	Params::MainPlayer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.settingsApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_settings                 Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::SettingsApplied(const struct FStruct_settings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "settingsApplied");

	Params::MainPlayer_C_SettingsApplied Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseX_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::InpAxisEvt_mouseX_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");

	Params::MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseY_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::InpAxisEvt_mouseY_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");

	Params::MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.fallen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Death                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Fallen(bool Death)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "fallen");

	Params::MainPlayer_C_Fallen Parms{};

	Parms.Death = Death;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.forceGetUp
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ForceGetUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "forceGetUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.beginArmAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::beginArmAnim(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "beginArmAnim");

	Params::MainPlayer_C_beginArmAnim Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.makeEquipDestroyed
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::MakeEquipDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "makeEquipDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMainPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.hitt
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMainPlayer_C::Hitt(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "hitt");

	Params::MainPlayer_C_Hitt Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.breathTimer
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::breathTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "breathTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.scubaTimer
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ScubaTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "scubaTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.wakeup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PassOut                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Wakeup(bool PassOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "wakeup");

	Params::MainPlayer_C_Wakeup Parms{};

	Parms.PassOut = PassOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.equipDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::EquipDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "equipDestroyed");

	Params::MainPlayer_C_EquipDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.forceWakeup
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ForceWakeup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "forceWakeup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.addDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          Impact                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipSetting                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addDamage");

	Params::MainPlayer_C_AddDamage Parms{};

	Parms.Actor = Actor;
	Parms.Damage = Damage;
	Parms.Hit = std::move(Hit);
	Parms.Impact = std::move(Impact);
	Parms.SkipSetting = SkipSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.useShovel
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UseShovel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "useShovel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.playFPAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_Reload                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayFPAnim(class FName Param_Name, class UAnimMontage* MontageToPlay, float Param_Reload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playFPAnim");

	Params::MainPlayer_C_PlayFPAnim Parms{};

	Parms.Param_Name = Param_Name;
	Parms.MontageToPlay = MontageToPlay;
	Parms.Param_Reload = Param_Reload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.weaponReload
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::WeaponReload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "weaponReload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.playFPAnimScripted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StartingSection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Call                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::PlayFPAnimScripted(class UAnimMontage* MontageToPlay, class FName StartingSection, class AActor* Call)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "playFPAnimScripted");

	Params::MainPlayer_C_PlayFPAnimScripted Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.StartingSection = StartingSection;
	Parms.Call = Call;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.forceDrop
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::ForceDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "forceDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.ateShit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::AteShit(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ateShit");

	Params::MainPlayer_C_AteShit Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");

	Params::MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.updateStrAgl
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UpdateStrAgl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updateStrAgl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.poisonedMessage
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::PoisonedMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "poisonedMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.gatherObject
// (BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::GatherObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "gatherObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_spawnmenu_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_spawnmenu_K2Node_InputActionEvent_0");

	Params::MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_spawnmenu_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_spawnmenu_K2Node_InputActionEvent_1");

	Params::MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_alt_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_alt_K2Node_InputActionEvent_2");

	Params::MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_alt_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_alt_K2Node_InputActionEvent_3");

	Params::MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_run_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_run_K2Node_InputActionEvent_4");

	Params::MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_run_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_run_K2Node_InputActionEvent_5");

	Params::MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_Escape_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_Escape_K2Node_InputKeyEvent_0");

	Params::MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_dismount_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_dismount_K2Node_InputActionEvent_6");

	Params::MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_dismount_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_dismount_K2Node_InputActionEvent_7");

	Params::MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_cheatmenu_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_cheatmenu_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_cheatmenu_K2Node_InputActionEvent_8");

	Params::MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_flashlight_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_flashlight_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_flashlight_K2Node_InputActionEvent_9");

	Params::MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");

	Params::MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");

	Params::MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_rotate_K2Node_InputActionEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_rotate_K2Node_InputActionEvent_10");

	Params::MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_rotate_K2Node_InputActionEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_rotate_K2Node_InputActionEvent_11");

	Params::MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_crouch_K2Node_InputActionEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_crouch_K2Node_InputActionEvent_12");

	Params::MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_crouch_K2Node_InputActionEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_crouch_K2Node_InputActionEvent_13");

	Params::MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_jump_K2Node_InputActionEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_jump_K2Node_InputActionEvent_14");

	Params::MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_jump_K2Node_InputActionEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_jump_K2Node_InputActionEvent_15");

	Params::MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_3");

	Params::MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_4");

	Params::MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");

	Params::MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");

	Params::MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");

	Params::MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");

	Params::MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");

	Params::MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_inventory_K2Node_InputActionEvent_16
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_inventory_K2Node_InputActionEvent_16(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_inventory_K2Node_InputActionEvent_16");

	Params::MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_noclip_K2Node_InputActionEvent_17
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_noclip_K2Node_InputActionEvent_17(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_noclip_K2Node_InputActionEvent_17");

	Params::MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_quicksave_K2Node_InputActionEvent_18
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_quicksave_K2Node_InputActionEvent_18(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_quicksave_K2Node_InputActionEvent_18");

	Params::MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_19
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_forward_K2Node_InputActionEvent_19(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_forward_K2Node_InputActionEvent_19");

	Params::MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_20
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_forward_K2Node_InputActionEvent_20(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_forward_K2Node_InputActionEvent_20");

	Params::MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_21
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_back_K2Node_InputActionEvent_21(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_back_K2Node_InputActionEvent_21");

	Params::MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_22
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_back_K2Node_InputActionEvent_22(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_back_K2Node_InputActionEvent_22");

	Params::MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_23
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_right_K2Node_InputActionEvent_23(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_right_K2Node_InputActionEvent_23");

	Params::MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_24
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_right_K2Node_InputActionEvent_24(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_right_K2Node_InputActionEvent_24");

	Params::MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_25
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_left_K2Node_InputActionEvent_25(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_left_K2Node_InputActionEvent_25");

	Params::MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_26
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_left_K2Node_InputActionEvent_26(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_left_K2Node_InputActionEvent_26");

	Params::MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_27
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_drop_K2Node_InputActionEvent_27(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_drop_K2Node_InputActionEvent_27");

	Params::MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_28
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_drop_K2Node_InputActionEvent_28(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_drop_K2Node_InputActionEvent_28");

	Params::MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_29
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_zoom_K2Node_InputActionEvent_29(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_zoom_K2Node_InputActionEvent_29");

	Params::MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_30
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_zoom_K2Node_InputActionEvent_30(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_zoom_K2Node_InputActionEvent_30");

	Params::MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_31
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_use_K2Node_InputActionEvent_31(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_use_K2Node_InputActionEvent_31");

	Params::MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_32
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_use_K2Node_InputActionEvent_32(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_use_K2Node_InputActionEvent_32");

	Params::MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_33
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_1_K2Node_InputActionEvent_33(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_1_K2Node_InputActionEvent_33");

	Params::MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_34
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_2_K2Node_InputActionEvent_34(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_2_K2Node_InputActionEvent_34");

	Params::MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_35
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_3_K2Node_InputActionEvent_35(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_3_K2Node_InputActionEvent_35");

	Params::MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_36
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_4_K2Node_InputActionEvent_36(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_4_K2Node_InputActionEvent_36");

	Params::MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_37
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_5_K2Node_InputActionEvent_37(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_5_K2Node_InputActionEvent_37");

	Params::MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_38
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_6_K2Node_InputActionEvent_38(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_6_K2Node_InputActionEvent_38");

	Params::MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_39
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_7_K2Node_InputActionEvent_39(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_7_K2Node_InputActionEvent_39");

	Params::MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_40
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_8_K2Node_InputActionEvent_40(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_8_K2Node_InputActionEvent_40");

	Params::MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_41
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_9_K2Node_InputActionEvent_41(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_9_K2Node_InputActionEvent_41");

	Params::MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_42
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_1_K2Node_InputActionEvent_42(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_1_K2Node_InputActionEvent_42");

	Params::MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_43
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_2_K2Node_InputActionEvent_43(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_2_K2Node_InputActionEvent_43");

	Params::MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_44
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_3_K2Node_InputActionEvent_44(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_3_K2Node_InputActionEvent_44");

	Params::MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_45
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_4_K2Node_InputActionEvent_45(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_4_K2Node_InputActionEvent_45");

	Params::MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_46
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_5_K2Node_InputActionEvent_46(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_5_K2Node_InputActionEvent_46");

	Params::MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_47
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_6_K2Node_InputActionEvent_47(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_6_K2Node_InputActionEvent_47");

	Params::MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_48
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_7_K2Node_InputActionEvent_48(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_7_K2Node_InputActionEvent_48");

	Params::MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_49
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_8_K2Node_InputActionEvent_49(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_8_K2Node_InputActionEvent_49");

	Params::MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_50
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_9_K2Node_InputActionEvent_50(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_9_K2Node_InputActionEvent_50");

	Params::MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_10_K2Node_InputActionEvent_51
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_hotbar_10_K2Node_InputActionEvent_51(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_hotbar_10_K2Node_InputActionEvent_51");

	Params::MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_scrollUp_K2Node_InputActionEvent_52
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_scrollUp_K2Node_InputActionEvent_52(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_scrollUp_K2Node_InputActionEvent_52");

	Params::MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_scrollDown_K2Node_InputActionEvent_53
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_scrollDown_K2Node_InputActionEvent_53(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_scrollDown_K2Node_InputActionEvent_53");

	Params::MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_undo_K2Node_InputActionEvent_54
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_undo_K2Node_InputActionEvent_54(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_undo_K2Node_InputActionEvent_54");

	Params::MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_ragdoll_K2Node_InputActionEvent_55
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_ragdoll_K2Node_InputActionEvent_55(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_ragdoll_K2Node_InputActionEvent_55");

	Params::MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");

	Params::MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");

	Params::MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");

	Params::MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");

	Params::MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");

	Params::MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_810D1C624C726801D77BDDB22791052F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_810D1C624C726801D77BDDB22791052F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_810D1C624C726801D77BDDB22791052F");

	Params::MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_810D1C624C726801D77BDDB22791052F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_810D1C624C726801D77BDDB22791052F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_810D1C624C726801D77BDDB22791052F");

	Params::MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_810D1C624C726801D77BDDB22791052F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_810D1C624C726801D77BDDB22791052F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_810D1C624C726801D77BDDB22791052F");

	Params::MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_810D1C624C726801D77BDDB22791052F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_810D1C624C726801D77BDDB22791052F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_810D1C624C726801D77BDDB22791052F");

	Params::MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_810D1C624C726801D77BDDB22791052F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_810D1C624C726801D77BDDB22791052F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_810D1C624C726801D77BDDB22791052F");

	Params::MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_4DBBC1B940FF6B1540C30484950F25EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_4DBBC1B940FF6B1540C30484950F25EA(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");

	Params::MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");

	Params::MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");

	Params::MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");

	Params::MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");

	Params::MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_56
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_fire_K2Node_InputActionEvent_56(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_fire_K2Node_InputActionEvent_56");

	Params::MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_57
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_fire_K2Node_InputActionEvent_57(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_fire_K2Node_InputActionEvent_57");

	Params::MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");

	Params::MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");

	Params::MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");

	Params::MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");

	Params::MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");

	Params::MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");

	Params::MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");

	Params::MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");

	Params::MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");

	Params::MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");

	Params::MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_lockObject_K2Node_InputActionEvent_58
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_lockObject_K2Node_InputActionEvent_58(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_lockObject_K2Node_InputActionEvent_58");

	Params::MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.InpActEvt_debugtp_K2Node_InputActionEvent_59
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMainPlayer_C::InpActEvt_debugtp_K2Node_InputActionEvent_59(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "InpActEvt_debugtp_K2Node_InputActionEvent_59");

	Params::MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.getUpTimeline__UpdateFunc
// (BlueprintEvent)

void AMainPlayer_C::GetUpTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "getUpTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.getUpTimeline__FinishedFunc
// (BlueprintEvent)

void AMainPlayer_C::GetUpTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "getUpTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.grab__UpdateFunc
// (BlueprintEvent)

void AMainPlayer_C::Grab__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "grab__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.grab__FinishedFunc
// (BlueprintEvent)

void AMainPlayer_C::Grab__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "grab__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.zoom__UpdateFunc
// (BlueprintEvent)

void AMainPlayer_C::Zoom__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "zoom__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.zoom__FinishedFunc
// (BlueprintEvent)

void AMainPlayer_C::Zoom__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "zoom__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.wakingup__UpdateFunc
// (BlueprintEvent)

void AMainPlayer_C::Wakingup__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "wakingup__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.wakingup__FinishedFunc
// (BlueprintEvent)

void AMainPlayer_C::Wakingup__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "wakingup__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.stepOn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A1                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::StepOn(float A1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "stepOn");

	Params::MainPlayer_C_StepOn Parms{};

	Parms.A1 = A1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.arm
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CustomLength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Arm(float CustomLength, struct FVector* Start, struct FVector* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "arm");

	Params::MainPlayer_C_Arm Parms{};

	Parms.CustomLength = CustomLength;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}


// Function mainPlayer.mainPlayer_C.Enter Interface
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Param_ActiveInterface                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_LookAtLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_CamLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::Enter_Interface(class UWidget* Param_ActiveInterface, const struct FVector& Param_LookAtLocation, const struct FVector& Param_CamLocation, const class FString& CallFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "Enter Interface");

	Params::MainPlayer_C_Enter_Interface Parms{};

	Parms.Param_ActiveInterface = Param_ActiveInterface;
	Parms.Param_LookAtLocation = std::move(Param_LookAtLocation);
	Parms.Param_CamLocation = std::move(Param_CamLocation);
	Parms.CallFrom = std::move(CallFrom);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.makeLookAt
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Att                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::MakeLookAt(const struct FVector& Location, const struct FVector& Att)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "makeLookAt");

	Params::MainPlayer_C_MakeLookAt Parms{};

	Parms.Location = std::move(Location);
	Parms.Att = std::move(Att);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.widgetInteract_mousePress
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::WidgetInteract_mousePress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "widgetInteract_mousePress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.useAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sec                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DirectUse                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Succ                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::UseAction(bool Sec, float Radius, class AActor* DirectUse, bool* Succ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "useAction");

	Params::MainPlayer_C_UseAction Parms{};

	Parms.Sec = Sec;
	Parms.Radius = Radius;
	Parms.DirectUse = DirectUse;

	UObject::ProcessEvent(Func, &Parms);

	if (Succ != nullptr)
		*Succ = Parms.Succ;
}


// Function mainPlayer.mainPlayer_C.addFood
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Food                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Sleep                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AProp_food_C*                     AsFood                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bypassNoHunger                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Full                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::AddFood(float Food, float Sleep, float Health, class AProp_food_C* AsFood, bool bypassNoHunger, bool* Full)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addFood");

	Params::MainPlayer_C_AddFood Parms{};

	Parms.Food = Food;
	Parms.Sleep = Sleep;
	Parms.Health = Health;
	Parms.AsFood = AsFood;
	Parms.bypassNoHunger = bypassNoHunger;

	UObject::ProcessEvent(Func, &Parms);

	if (Full != nullptr)
		*Full = Parms.Full;
}


// Function mainPlayer.mainPlayer_C.isExhausted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Exhausted                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::IsExhausted(bool* Exhausted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "isExhausted");

	Params::MainPlayer_C_IsExhausted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Exhausted != nullptr)
		*Exhausted = Parms.Exhausted;
}


// Function mainPlayer.mainPlayer_C.setActiveInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Param_ActiveInterface                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Param_Zoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          SentBy                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreZoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SetActiveInterface(class UWidget* Param_ActiveInterface, const class FString& InString, bool Param_Zoom, class UObject* SentBy, bool IgnoreZoom, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setActiveInterface");

	Params::MainPlayer_C_SetActiveInterface Parms{};

	Parms.Param_ActiveInterface = Param_ActiveInterface;
	Parms.InString = std::move(InString);
	Parms.Param_Zoom = Param_Zoom;
	Parms.SentBy = SentBy;
	Parms.IgnoreZoom = IgnoreZoom;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.flashlightUse
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::FlashlightUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "flashlightUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.setMouseSmooth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CameraLagSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_MouseSens                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::SetMouseSmooth(float CameraLagSpeed, float Param_MouseSens)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setMouseSmooth");

	Params::MainPlayer_C_SetMouseSmooth Parms{};

	Parms.CameraLagSpeed = CameraLagSpeed;
	Parms.Param_MouseSens = Param_MouseSens;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.kick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Kick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "kick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.ragdollMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ragdoll                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PassOut                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Death                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::RagdollMode(bool Ragdoll, bool PassOut, bool Death)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "ragdollMode");

	Params::MainPlayer_C_RagdollMode Parms{};

	Parms.Ragdoll = Ragdoll;
	Parms.PassOut = PassOut;
	Parms.Death = Death;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.StopMovement
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::StopMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "StopMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.punch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          FullBody                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          boneImp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             bn1                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DamageLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bypassSettings                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::Punch(const struct FVector& FullBody, const struct FVector& boneImp, class FName bn1, float Damage, const struct FVector& DamageLocation, bool bypassSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "punch");

	Params::MainPlayer_C_Punch Parms{};

	Parms.FullBody = std::move(FullBody);
	Parms.boneImp = std::move(boneImp);
	Parms.bn1 = bn1;
	Parms.Damage = Damage;
	Parms.DamageLocation = std::move(DamageLocation);
	Parms.bypassSettings = bypassSettings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.useLadder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALadder_C*                        Param_Ladder                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ALadder_C*                        Ladder1                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::UseLadder(class ALadder_C* Param_Ladder, class ALadder_C** Ladder1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "useLadder");

	Params::MainPlayer_C_UseLadder Parms{};

	Parms.Param_Ladder = Param_Ladder;

	UObject::ProcessEvent(Func, &Parms);

	if (Ladder1 != nullptr)
		*Ladder1 = Parms.Ladder1;
}


// Function mainPlayer.mainPlayer_C.updWater
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UpdWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.muffleUnderwater
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::MuffleUnderwater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "muffleUnderwater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.setUnderwater
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SetUnderwater(bool InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setUnderwater");

	Params::MainPlayer_C_SetUnderwater Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.putObjectInventory2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::PutObjectInventory2(class AActor* InputPin, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "putObjectInventory2");

	Params::MainPlayer_C_PutObjectInventory2 Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.addEquip
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_save                     Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Rebug                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::AddEquip(const struct FStruct_save& Data, bool* Return, class FString* Rebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addEquip");

	Params::MainPlayer_C_AddEquip Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Rebug != nullptr)
		*Rebug = std::move(Parms.Rebug);
}


// Function mainPlayer.mainPlayer_C.updEquip
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Rebug                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::UpdEquip(bool* Return, class FString* Rebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updEquip");

	Params::MainPlayer_C_UpdEquip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Rebug != nullptr)
		*Rebug = std::move(Parms.Rebug);
}


// Function mainPlayer.mainPlayer_C.attack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       OutputPin                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UClass* AMainPlayer_C::Attack(bool* Hit, struct FHitResult* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "attack");

	Params::MainPlayer_C_Attack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (OutputPin != nullptr)
		*OutputPin = std::move(Parms.OutputPin);

	return Parms.ReturnValue;
}


// Function mainPlayer.mainPlayer_C.checkEquip
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Empty                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FStruct_equipment                Output                                                 (Parm, OutParm, HasGetValueTypeHash)

void AMainPlayer_C::CheckEquip(bool* Empty, struct FStruct_equipment* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "checkEquip");

	Params::MainPlayer_C_CheckEquip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Empty != nullptr)
		*Empty = Parms.Empty;

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function mainPlayer.mainPlayer_C.movOut
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::MovOut(const struct FHitResult& Hit, const struct FVector& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "movOut");

	Params::MainPlayer_C_MovOut Parms{};

	Parms.Hit = std::move(Hit);
	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.teleportWObackrooms
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewTransform                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void AMainPlayer_C::TeleportWObackrooms(const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "teleportWObackrooms");

	Params::MainPlayer_C_TeleportWObackrooms Parms{};

	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.throwShit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ThrowShit(class UPrimitiveComponent* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "throwShit");

	Params::MainPlayer_C_ThrowShit Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.addPlayerDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DamageLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          FullBody                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bypassSettings                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::AddPlayerDamage(float Damage, const struct FVector& DamageLocation, const struct FVector& FullBody, bool bypassSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addPlayerDamage");

	Params::MainPlayer_C_AddPlayerDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageLocation = std::move(DamageLocation);
	Parms.FullBody = std::move(FullBody);
	Parms.bypassSettings = bypassSettings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.useArm
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AMainPlayer_C::UseArm(struct FHitResult* OutHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "useArm");

	Params::MainPlayer_C_UseArm Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	return Parms.ReturnValue;
}


// Function mainPlayer.mainPlayer_C.sit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UComp_sitting_C*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASitBox_C*                        Place                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Sit(class AActor* Actor, class UComp_sitting_C* Component, class ASitBox_C* Place)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "sit");

	Params::MainPlayer_C_Sit Parms{};

	Parms.Actor = Actor;
	Parms.Component = Component;
	Parms.Place = Place;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.unsit
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Unsit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "unsit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.selectedAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_interactionActions                 Output1                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           AsName                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::SelectedAction(Enum_interactionActions* Output1, class FString* AsName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "selectedAction");

	Params::MainPlayer_C_SelectedAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output1 != nullptr)
		*Output1 = Parms.Output1;

	if (AsName != nullptr)
		*AsName = std::move(Parms.AsName);
}


// Function mainPlayer.mainPlayer_C.collectObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseHold                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Manual                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Collected                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::CollectObject(bool UseHold, class AActor* Manual, bool* Collected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "collectObject");

	Params::MainPlayer_C_CollectObject Parms{};

	Parms.UseHold = UseHold;
	Parms.Manual = Manual;

	UObject::ProcessEvent(Func, &Parms);

	if (Collected != nullptr)
		*Collected = Parms.Collected;
}


// Function mainPlayer.mainPlayer_C.updateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UpdateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.fixActionIndex
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::FixActionIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "fixActionIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.findFootLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AMainPlayer_C::FindFootLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "findFootLocation");

	Params::MainPlayer_C_FindFootLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function mainPlayer.mainPlayer_C.updateEquipment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UpdateEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updateEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.tryGetNail
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           NailClass                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::TryGetNail(bool* Success, class UClass** NailClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "tryGetNail");

	Params::MainPlayer_C_TryGetNail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (NailClass != nullptr)
		*NailClass = Parms.NailClass;
}


// Function mainPlayer.mainPlayer_C.updateWheel
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::UpdateWheel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "updateWheel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.throwShovelItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewVel                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::ThrowShovelItem(const struct FVector& NewVel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "throwShovelItem");

	Params::MainPlayer_C_ThrowShovelItem Parms{};

	Parms.NewVel = std::move(NewVel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.kill
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.heal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::Heal(float Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "heal");

	Params::MainPlayer_C_Heal Parms{};

	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function mainPlayer.mainPlayer_C.skipGrabRadial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Skip                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SkipGrabRadial(bool* Skip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "skipGrabRadial");

	Params::MainPlayer_C_SkipGrabRadial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Skip != nullptr)
		*Skip = Parms.Skip;
}


// Function mainPlayer.mainPlayer_C.processArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::ProcessArmor(const struct FHitResult& Hit, bool* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "processArmor");

	Params::MainPlayer_C_ProcessArmor Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function mainPlayer.mainPlayer_C.equipJetpack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::EquipJetpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "equipJetpack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.addEffect
// (Public, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::AddEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "addEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.windSounds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMainPlayer_C::WindSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "windSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function mainPlayer.mainPlayer_C.dreamInv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_save>             Invv                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ADreamBase_C*                     Base                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "dreamInv");

	Params::MainPlayer_C_DreamInv Parms{};

	Parms.Invv = std::move(Invv);

	UObject::ProcessEvent(Func, &Parms);

	Invv = std::move(Parms.Invv);

	if (Base != nullptr)
		*Base = Parms.Base;
}


// Function mainPlayer.mainPlayer_C.GetKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::GetKey(class FString* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "GetKey");

	Params::MainPlayer_C_GetKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}


// Function mainPlayer.mainPlayer_C.toolboxFix
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProp_toolbox_C*                  Toolbox                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::ToolboxFix(class AProp_toolbox_C* Toolbox, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "toolboxFix");

	Params::MainPlayer_C_ToolboxFix Parms{};

	Parms.Toolbox = Toolbox;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.canBeUsedHold
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::CanBeUsedHold(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "canBeUsedHold");

	Params::MainPlayer_C_CanBeUsedHold Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.processKeys
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::ProcessKeys(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "processKeys");

	Params::MainPlayer_C_ProcessKeys Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.getOnlyKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMainPlayer_C::GetOnlyKey(class FString* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "getOnlyKey");

	Params::MainPlayer_C_GetOnlyKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}


// Function mainPlayer.mainPlayer_C.setPath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Path                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SetPath(const TArray<struct FVector>& Path, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "setPath");

	Params::MainPlayer_C_SetPath Parms{};

	Parms.Path = std::move(Path);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.getActionOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Options                                                (Parm, OutParm)
// TArray<Enum_interactionActions>         Options_enum                                           (Parm, OutParm)
// TArray<class FText>                     OptionsNamesOverlay                                    (Parm, OutParm)
// uint8                                   Number                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "getActionOptions");

	Params::MainPlayer_C_GetActionOptions Parms{};

	Parms.Player = Player;
	Parms.Component = Component;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Options != nullptr)
		*Options = std::move(Parms.Options);

	if (Options_enum != nullptr)
		*Options_enum = std::move(Parms.Options_enum);

	if (OptionsNamesOverlay != nullptr)
		*OptionsNamesOverlay = std::move(Parms.OptionsNamesOverlay);

	if (Number != nullptr)
		*Number = Parms.Number;
}


// Function mainPlayer.mainPlayer_C.gascanFuel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProp_gascan_C*                   Gascan                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Fueled                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::GascanFuel(class AProp_gascan_C* Gascan, bool* Fueled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "gascanFuel");

	Params::MainPlayer_C_GascanFuel Parms{};

	Parms.Gascan = Gascan;

	UObject::ProcessEvent(Func, &Parms);

	if (Fueled != nullptr)
		*Fueled = Parms.Fueled;
}


// Function mainPlayer.mainPlayer_C.skipRadial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Skip                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::SkipRadial(bool* Skip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "skipRadial");

	Params::MainPlayer_C_SkipRadial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Skip != nullptr)
		*Skip = Parms.Skip;
}


// Function mainPlayer.mainPlayer_C.getPriceMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PriceMult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::GetPriceMultiplier(float* PriceMult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "getPriceMultiplier");

	Params::MainPlayer_C_GetPriceMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PriceMult != nullptr)
		*PriceMult = Parms.PriceMult;
}


// Function mainPlayer.mainPlayer_C.canBePutInContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::CanBePutInContainer(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "canBePutInContainer");

	Params::MainPlayer_C_CanBePutInContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.asProp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AProp_C*                          Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::AsProp(class AProp_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "asProp");

	Params::MainPlayer_C_AsProp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.canPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::CanPickup(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "canPickup");

	Params::MainPlayer_C_CanPickup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.noRespawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_NoRespawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::NoRespawn(bool Param_NoRespawn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "noRespawn");

	Params::MainPlayer_C_NoRespawn Parms{};

	Parms.Param_NoRespawn = Param_NoRespawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function mainPlayer.mainPlayer_C.lookAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Text                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              boundObjectReplace                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Number                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMainPlayer_C::LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "lookAt");

	Params::MainPlayer_C_LookAt Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (boundObjectReplace != nullptr)
		*boundObjectReplace = Parms.boundObjectReplace;

	if (Number != nullptr)
		*Number = Parms.Number;
}


// Function mainPlayer.mainPlayer_C.isButtonUsed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Failed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::IsButtonUsed(bool* Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "isButtonUsed");

	Params::MainPlayer_C_IsButtonUsed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Failed != nullptr)
		*Failed = Parms.Failed;
}


// Function mainPlayer.mainPlayer_C.landedOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreFallDamage                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMainPlayer_C::LandedOn(class AMainPlayer_C* Player, bool* IgnoreFallDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "landedOn");

	Params::MainPlayer_C_LandedOn Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (IgnoreFallDamage != nullptr)
		*IgnoreFallDamage = Parms.IgnoreFallDamage;
}


// Function mainPlayer.mainPlayer_C.CanJumpInternal
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AMainPlayer_C::CanJumpInternal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("mainPlayer_C", "CanJumpInternal");

	Params::MainPlayer_C_CanJumpInternal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

