#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArirFollower

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass arirFollower.arirFollower_C
// 0x0160 (0x0620 - 0x04C0)
#pragma pack(push, 0x1)
class alignas(0x10) AArirFollower_C : public ACharacter
{
public:
	uint8                                         Pad_2BE2[0x8];                                     // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ChildActor;                                        // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ThrowHands;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    Arms_lag;                                          // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Start;                                             // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Eyes;                                              // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadarPointComponent_C*                 RadarPoint;                                        // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Pickupanim_a_B369E0A8455FD4AD89AFEDB368A07C09;     // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Pickupanim__Direction_B369E0A8455FD4AD89AFEDB368A07C09; // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE3[0x3];                                     // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Pickupanim;                                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMove;                                           // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE4[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x0520(0x0010)(Edit, BlueprintVisible)
	float                                         Step;                                              // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastStep;                                          // 0x0534(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Slapped;                                           // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2BE5[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjD;                                              // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Done;                                              // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInRad;                                           // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Throwing;                                          // 0x055A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE6[0x5];                                     // 0x055B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjPhys;                                           // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AProp_C*                                ThrowingProp;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    ThrowingComp;                                      // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             A;                                                 // 0x0580(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Hit_projectile;                                    // 0x05B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_h;                                             // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         H;                                                 // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eat;                                               // 0x05C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE7[0x3];                                     // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimTimer;                                         // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eat_s;                                             // 0x05CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IgnoreRender;                                      // 0x05CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE8[0x2];                                     // 0x05CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          MovingToADoor;                                     // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FindingProp;                                       // 0x05E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE9[0x6];                                     // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASubPawn_C*                             SubPawn;                                           // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             ThrowCollType;                                     // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BEA[0x3];                                     // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SpawnPos;                                          // 0x05F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KerfusRun;                                         // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEB[0x3];                                     // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                KerfTp;                                            // 0x0604(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rep;                                               // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fed;                                               // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_arirFollower(int32 EntryPoint);
	void PlayerSwing();
	void ReputationChanged(int32 Param_Rep);
	void RunAway();
	void Throw();
	void PickupAnimm();
	void MoveToPlayer();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SetActiveTrigger(class AActor* SentFrom, bool Active);
	void CordUnplugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void CordPlugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void Set_ignoreSave_trigger(bool NewParam);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void Hooked(class AHook_C* Hook);
	void AttemptIgnite();
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Slice(bool Clean);
	void bitten();
	void ReachedByExplosion(const struct FVector& Location, float Damage);
	void PlayerLookAway(class AMainPlayer_C* Player);
	void Stepped(float Volume);
	void ActionName(class AMainPlayer_C* Player, const struct FHitResult& Hit, const class FString& Param_Name);
	void AccumulateTemperature(float Temperature, float Speed);
	void AddTemperature(float Temperature);
	void MicrowaveElec();
	void PlayerHandAnyKey(class AMainPlayer_C* Player, const struct FKey& Param_Key, bool Pressed);
	void PlayerHandMouse(class AMainPlayer_C* Player, const struct FVector2D& Mouse);
	void PlayerHandMouseWheel(class AMainPlayer_C* Player, float WheelDelta);
	void PlayerHandRelease_LMB(class AMainPlayer_C* Player);
	void PlayerHandRelease_RMB(class AMainPlayer_C* Player);
	void ExtinguishFire();
	void Exploded(float Damage, const struct FVector& Location);
	void PlayerHandUse_LMB(class AMainPlayer_C* Player);
	void PlayerHandUse_RMB(class AMainPlayer_C* Player);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, int32 Param_Index, Enum_interactionActions Action);
	void ReceivedPhyiscsDamage();
	void Microwave();
	void Ignite(float Fuel);
	void FireDamage(float Damage);
	void SteppedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Unhook();
	void DigUp();
	void PhysPreDestroyed();
	void PhysDestroyed();
	void SetKey(const class FString& Param_Key);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void SetPropProps(bool Static, bool Frozen, bool Active);
	void Virus(bool Activate);
	void Eaten();
	void LeaveWaterOrigin(class AWaterVolume_C* Water);
	void EnterWaterOrigin(class AWaterVolume_C* Water);
	void LeaveWater(class AWaterVolume_C* Water);
	void EnterWater(class AWaterVolume_C* Water);
	void ImpactDamage(float Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact);
	void OnSuccess_9B330CEF4ABB52A80F03DA8D7251842E(EPathFollowingResult MovementResult);
	void OnFail_9B330CEF4ABB52A80F03DA8D7251842E(EPathFollowingResult MovementResult);
	void OnSuccess_F50A3D4A439CFC0A3B43EE825D097431(EPathFollowingResult MovementResult);
	void OnFail_F50A3D4A439CFC0A3B43EE825D097431(EPathFollowingResult MovementResult);
	void OnSuccess_50D265774A17BBF8058050ABE213300F(EPathFollowingResult MovementResult);
	void OnFail_50D265774A17BBF8058050ABE213300F(EPathFollowingResult MovementResult);
	void OnSuccess_0CD089F440FE3CB51F441380C80F7156(EPathFollowingResult MovementResult);
	void OnFail_0CD089F440FE3CB51F441380C80F7156(EPathFollowingResult MovementResult);
	void OnSuccess_47E80F0B401DAB8F523B1C9101382928(EPathFollowingResult MovementResult);
	void OnFail_47E80F0B401DAB8F523B1C9101382928(EPathFollowingResult MovementResult);
	void OnCompleted_7B6260C2429F183F7233C2A0C9EED0F6(class FName NotifyName);
	void OnBlendOut_7B6260C2429F183F7233C2A0C9EED0F6(class FName NotifyName);
	void OnInterrupted_7B6260C2429F183F7233C2A0C9EED0F6(class FName NotifyName);
	void OnNotifyBegin_7B6260C2429F183F7233C2A0C9EED0F6(class FName NotifyName);
	void OnNotifyEnd_7B6260C2429F183F7233C2A0C9EED0F6(class FName NotifyName);
	void OnCompleted_4D222B0148B5E1A6AB16399AD2C5A26B(class FName NotifyName);
	void OnBlendOut_4D222B0148B5E1A6AB16399AD2C5A26B(class FName NotifyName);
	void OnInterrupted_4D222B0148B5E1A6AB16399AD2C5A26B(class FName NotifyName);
	void OnNotifyBegin_4D222B0148B5E1A6AB16399AD2C5A26B(class FName NotifyName);
	void OnNotifyEnd_4D222B0148B5E1A6AB16399AD2C5A26B(class FName NotifyName);
	void OnCompleted_50E9225F403AA133CB9EBE956BBA0E2C(class FName NotifyName);
	void OnBlendOut_50E9225F403AA133CB9EBE956BBA0E2C(class FName NotifyName);
	void OnInterrupted_50E9225F403AA133CB9EBE956BBA0E2C(class FName NotifyName);
	void OnNotifyBegin_50E9225F403AA133CB9EBE956BBA0E2C(class FName NotifyName);
	void OnNotifyEnd_50E9225F403AA133CB9EBE956BBA0E2C(class FName NotifyName);
	void OnSuccess_011CF1F24B50078D8129F696D14922C7(EPathFollowingResult MovementResult);
	void OnFail_011CF1F24B50078D8129F696D14922C7(EPathFollowingResult MovementResult);
	void OnSuccess_9AE5F3E94E2595A39F40C3B19AF23EF3(EPathFollowingResult MovementResult);
	void OnFail_9AE5F3E94E2595A39F40C3B19AF23EF3(EPathFollowingResult MovementResult);
	void OnSuccess_D6F99D254F83F262175FDAA81DB9B4B7(EPathFollowingResult MovementResult);
	void OnFail_D6F99D254F83F262175FDAA81DB9B4B7(EPathFollowingResult MovementResult);
	void Pickupanim__UpdateFunc();
	void Pickupanim__FinishedFunc();
	void Finished();
	bool NewFunction_0();
	void Pickup(class AActor* InputPin, bool* NewParam);
	float Playerspd();
	void IgnoreSave_trigger(bool* Ignore);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void GetOnlyKey(class FString* Param_Key);
	void ProcessKeys(bool* Return);
	void CanBeUsedHold(bool* Return);
	void GetKey(class FString* Param_Key);
	void ToolboxFix(class AProp_toolbox_C* Toolbox, bool* Return);
	void SetPath(const TArray<struct FVector>& Path, bool* Return);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay);
	void GascanFuel(class AProp_gascan_C* Gascan, bool* Fueled);
	void SkipRadial(bool* Skip);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"arirFollower_C">();
	}
	static class AArirFollower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArirFollower_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AArirFollower_C) == 0x000010, "Wrong alignment on AArirFollower_C");
static_assert(sizeof(AArirFollower_C) == 0x000620, "Wrong size on AArirFollower_C");
static_assert(offsetof(AArirFollower_C, UberGraphFrame) == 0x0004C0, "Member 'AArirFollower_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ChildActor) == 0x0004C8, "Member 'AArirFollower_C::ChildActor' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ThrowHands) == 0x0004D0, "Member 'AArirFollower_C::ThrowHands' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Arms_lag) == 0x0004D8, "Member 'AArirFollower_C::Arms_lag' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Start) == 0x0004E0, "Member 'AArirFollower_C::Start' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Eyes) == 0x0004E8, "Member 'AArirFollower_C::Eyes' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Billboard) == 0x0004F0, "Member 'AArirFollower_C::Billboard' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, RadarPoint) == 0x0004F8, "Member 'AArirFollower_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, StaticMesh) == 0x000500, "Member 'AArirFollower_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Pickupanim_a_B369E0A8455FD4AD89AFEDB368A07C09) == 0x000508, "Member 'AArirFollower_C::Pickupanim_a_B369E0A8455FD4AD89AFEDB368A07C09' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Pickupanim__Direction_B369E0A8455FD4AD89AFEDB368A07C09) == 0x00050C, "Member 'AArirFollower_C::Pickupanim__Direction_B369E0A8455FD4AD89AFEDB368A07C09' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Pickupanim) == 0x000510, "Member 'AArirFollower_C::Pickupanim' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, CanMove) == 0x000518, "Member 'AArirFollower_C::CanMove' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Obj) == 0x000520, "Member 'AArirFollower_C::Obj' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Step) == 0x000530, "Member 'AArirFollower_C::Step' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, LastStep) == 0x000534, "Member 'AArirFollower_C::LastStep' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Slapped) == 0x000540, "Member 'AArirFollower_C::Slapped' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ObjD) == 0x000548, "Member 'AArirFollower_C::ObjD' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Done) == 0x000558, "Member 'AArirFollower_C::Done' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, IsInRad) == 0x000559, "Member 'AArirFollower_C::IsInRad' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Throwing) == 0x00055A, "Member 'AArirFollower_C::Throwing' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ObjPhys) == 0x000560, "Member 'AArirFollower_C::ObjPhys' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ThrowingProp) == 0x000570, "Member 'AArirFollower_C::ThrowingProp' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ThrowingComp) == 0x000578, "Member 'AArirFollower_C::ThrowingComp' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, A) == 0x000580, "Member 'AArirFollower_C::A' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Hit_projectile) == 0x0005B0, "Member 'AArirFollower_C::Hit_projectile' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Max_h) == 0x0005BC, "Member 'AArirFollower_C::Max_h' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, H) == 0x0005C0, "Member 'AArirFollower_C::H' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Eat) == 0x0005C4, "Member 'AArirFollower_C::Eat' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, AnimTimer) == 0x0005C8, "Member 'AArirFollower_C::AnimTimer' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Eat_s) == 0x0005CC, "Member 'AArirFollower_C::Eat_s' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, IgnoreRender) == 0x0005CD, "Member 'AArirFollower_C::IgnoreRender' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Key) == 0x0005D0, "Member 'AArirFollower_C::Key' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, MovingToADoor) == 0x0005E0, "Member 'AArirFollower_C::MovingToADoor' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, FindingProp) == 0x0005E1, "Member 'AArirFollower_C::FindingProp' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, SubPawn) == 0x0005E8, "Member 'AArirFollower_C::SubPawn' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, ThrowCollType) == 0x0005F0, "Member 'AArirFollower_C::ThrowCollType' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, SpawnPos) == 0x0005F4, "Member 'AArirFollower_C::SpawnPos' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, KerfusRun) == 0x000600, "Member 'AArirFollower_C::KerfusRun' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, KerfTp) == 0x000604, "Member 'AArirFollower_C::KerfTp' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Rep) == 0x000610, "Member 'AArirFollower_C::Rep' has a wrong offset!");
static_assert(offsetof(AArirFollower_C, Fed) == 0x000614, "Member 'AArirFollower_C::Fed' has a wrong offset!");

}

