#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_arcade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"


namespace SDK::Params
{

// Function prop_arcade.prop_arcade_C.ExecuteUbergraph_prop_arcade
// 0x0250 (0x0250 - 0x0000)
struct Prop_arcade_C_ExecuteUbergraph_prop_arcade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BED[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEE[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEF[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USoundBase* Sound, float Volume, float Pitch)> K2Node_CreateDelegate_OutputDelegate;              // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF0[0x2];                                     // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_sound;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_volume;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_pitch;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x01C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_arcade_C_ExecuteUbergraph_prop_arcade) == 0x000008, "Wrong alignment on Prop_arcade_C_ExecuteUbergraph_prop_arcade");
static_assert(sizeof(Prop_arcade_C_ExecuteUbergraph_prop_arcade) == 0x000250, "Wrong size on Prop_arcade_C_ExecuteUbergraph_prop_arcade");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, EntryPoint) == 0x000000, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_Event_player) == 0x000008, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_Event_hit) == 0x000010, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_Event_index) == 0x000098, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_Event_action) == 0x00009C, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_GetComponentVelocity_ReturnValue) == 0x0000A0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_VSize_ReturnValue) == 0x0000AC, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000C0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000CC, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D8, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000160, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000164, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000170, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_GetActorUpVector_ReturnValue) == 0x00017C, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_Dot_VectorVector_ReturnValue) == 0x000188, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_CreateDelegate_OutputDelegate) == 0x00018C, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00019C, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_WasRecentlyRendered_ReturnValue) == 0x00019D, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_CustomEvent_sound) == 0x0001A0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_CustomEvent_sound' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_CustomEvent_volume) == 0x0001A8, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_CustomEvent_volume' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, K2Node_CustomEvent_pitch) == 0x0001AC, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::K2Node_CustomEvent_pitch' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, Temp_object_Variable) == 0x0001B0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0001C0, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ExecuteUbergraph_prop_arcade, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000248, "Member 'Prop_arcade_C_ExecuteUbergraph_prop_arcade::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_arcade_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_arcade_C_ActionOptionIndex");
static_assert(sizeof(Prop_arcade_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_arcade_C_ActionOptionIndex");
static_assert(offsetof(Prop_arcade_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_arcade_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_arcade_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_arcade_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_arcade_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.beep
// 0x0010 (0x0010 - 0x0000)
struct Prop_arcade_C_beep final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_beep) == 0x000008, "Wrong alignment on Prop_arcade_C_beep");
static_assert(sizeof(Prop_arcade_C_beep) == 0x000010, "Wrong size on Prop_arcade_C_beep");
static_assert(offsetof(Prop_arcade_C_beep, Sound) == 0x000000, "Member 'Prop_arcade_C_beep::Sound' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_beep, Volume) == 0x000008, "Member 'Prop_arcade_C_beep::Volume' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_beep, Pitch) == 0x00000C, "Member 'Prop_arcade_C_beep::Pitch' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.ini
// 0x0020 (0x0020 - 0x0000)
struct Prop_arcade_C_Ini final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_Ini) == 0x000008, "Wrong alignment on Prop_arcade_C_Ini");
static_assert(sizeof(Prop_arcade_C_Ini) == 0x000020, "Wrong size on Prop_arcade_C_Ini");
static_assert(offsetof(Prop_arcade_C_Ini, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Prop_arcade_C_Ini::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_Ini, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Prop_arcade_C_Ini::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_Ini, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000008, "Member 'Prop_arcade_C_Ini::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_Ini, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'Prop_arcade_C_Ini::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_Ini, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Prop_arcade_C_Ini::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.lookAt
// 0x00D8 (0x00D8 - 0x0000)
struct Prop_arcade_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF2[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_LookAt) == 0x000008, "Wrong alignment on Prop_arcade_C_LookAt");
static_assert(sizeof(Prop_arcade_C_LookAt) == 0x0000D8, "Wrong size on Prop_arcade_C_LookAt");
static_assert(offsetof(Prop_arcade_C_LookAt, Player) == 0x000000, "Member 'Prop_arcade_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_arcade_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, Return) == 0x000090, "Member 'Prop_arcade_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, Text) == 0x000098, "Member 'Prop_arcade_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_arcade_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B0, "Member 'Prop_arcade_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'Prop_arcade_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.loadData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_arcade_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF3[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF4[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_LoadData) == 0x000010, "Wrong alignment on Prop_arcade_C_LoadData");
static_assert(sizeof(Prop_arcade_C_LoadData) == 0x0000F0, "Wrong size on Prop_arcade_C_LoadData");
static_assert(offsetof(Prop_arcade_C_LoadData, Data) == 0x000000, "Member 'Prop_arcade_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, Return) == 0x0000C0, "Member 'Prop_arcade_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_arcade_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, CallFunc_loadData_return) == 0x0000D8, "Member 'Prop_arcade_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000DC, "Member 'Prop_arcade_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'Prop_arcade_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000E4, "Member 'Prop_arcade_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.getData
// 0x0270 (0x0270 - 0x0000)
struct Prop_arcade_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_arcade_C_GetData) == 0x000010, "Wrong alignment on Prop_arcade_C_GetData");
static_assert(sizeof(Prop_arcade_C_GetData) == 0x000270, "Wrong size on Prop_arcade_C_GetData");
static_assert(offsetof(Prop_arcade_C_GetData, Data) == 0x000000, "Member 'Prop_arcade_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_arcade_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_arcade_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000190, "Member 'Prop_arcade_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'Prop_arcade_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'Prop_arcade_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_arcade.prop_arcade_C.getActionOptions
// 0x0088 (0x0088 - 0x0000)
struct Prop_arcade_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF6[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_arcade_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_arcade_C_GetActionOptions");
static_assert(sizeof(Prop_arcade_C_GetActionOptions) == 0x000088, "Wrong size on Prop_arcade_C_GetActionOptions");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_arcade_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_arcade_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_arcade_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_arcade_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_arcade_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_arcade_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, Temp_bool_Variable) == 0x000048, "Member 'Prop_arcade_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_arcade_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000060, "Member 'Prop_arcade_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'Prop_arcade_C_GetActionOptions::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_arcade_C_GetActionOptions, K2Node_Select_Default) == 0x000078, "Member 'Prop_arcade_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");

}

