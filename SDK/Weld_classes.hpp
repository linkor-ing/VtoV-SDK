#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weld

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass weld.weld_C
// 0x0060 (0x02A8 - 0x0248)
class AWeld_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weld_C;                             // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCableComponent*                        Cable;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   B;                                                 // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   A;                                                 // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Weld_A;                                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Weld_B;                                            // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 WeldKey_A;                                         // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 WeldKey_B;                                         // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                WeldB;                                             // 0x0298(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SimulatePhys;                                      // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_weld(int32 EntryPoint);
	void Dest_B(class AActor* DestroyedActor);
	void Dest_A(class AActor* DestroyedActor);
	void Assign();
	void Weld(class AActor* Param_Weld_A, class AActor* Param_Weld_B, const struct FVector& Param_WeldB);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void ProcessKeys(bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"weld_C">();
	}
	static class AWeld_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeld_C>();
	}
};
static_assert(alignof(AWeld_C) == 0x000008, "Wrong alignment on AWeld_C");
static_assert(sizeof(AWeld_C) == 0x0002A8, "Wrong size on AWeld_C");
static_assert(offsetof(AWeld_C, UberGraphFrame_Weld_C) == 0x000248, "Member 'AWeld_C::UberGraphFrame_Weld_C' has a wrong offset!");
static_assert(offsetof(AWeld_C, Cable) == 0x000250, "Member 'AWeld_C::Cable' has a wrong offset!");
static_assert(offsetof(AWeld_C, B) == 0x000258, "Member 'AWeld_C::B' has a wrong offset!");
static_assert(offsetof(AWeld_C, A) == 0x000260, "Member 'AWeld_C::A' has a wrong offset!");
static_assert(offsetof(AWeld_C, Weld_A) == 0x000268, "Member 'AWeld_C::Weld_A' has a wrong offset!");
static_assert(offsetof(AWeld_C, Weld_B) == 0x000270, "Member 'AWeld_C::Weld_B' has a wrong offset!");
static_assert(offsetof(AWeld_C, WeldKey_A) == 0x000278, "Member 'AWeld_C::WeldKey_A' has a wrong offset!");
static_assert(offsetof(AWeld_C, WeldKey_B) == 0x000288, "Member 'AWeld_C::WeldKey_B' has a wrong offset!");
static_assert(offsetof(AWeld_C, WeldB) == 0x000298, "Member 'AWeld_C::WeldB' has a wrong offset!");
static_assert(offsetof(AWeld_C, SimulatePhys) == 0x0002A4, "Member 'AWeld_C::SimulatePhys' has a wrong offset!");

}

