#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dream_mann

#include "Basic.hpp"

#include "DreamBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass dream_mann.dream_mann_C
// 0x0200 (0x0470 - 0x0270)
class ADream_mann_C final : public ADreamBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Dream_mann_C;                       // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane36;                                           // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane35;                                           // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane34;                                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane33;                                           // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane32;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane31;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane30;                                           // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane29;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane28;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane27;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane26;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane25;                                           // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane24;                                           // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane23;                                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane22;                                           // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane21;                                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane20;                                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane19;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane18;                                           // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane17;                                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane16;                                           // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane15;                                           // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane14;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane13;                                           // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane12;                                           // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane11;                                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane10;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane9;                                            // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane8;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar19;                                          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar18;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar17;                                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar16;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar15;                                          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar14;                                          // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar13;                                          // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar12;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar11;                                          // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar10;                                          // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar9;                                           // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar8;                                           // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar7;                                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar6;                                           // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar5;                                           // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar4;                                           // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar3;                                           // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar2;                                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar1;                                           // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pillar0;                                           // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    MannSpwn4;                                         // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    MannSpwn3;                                         // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    MannSpwn2;                                         // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane7;                                            // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane6;                                            // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane5;                                            // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane3;                                            // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane1;                                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane4;                                            // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    MannSpwn1;                                         // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AMann_C*>                        Manns;                                             // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_dream_mann(int32 EntryPoint);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void NaturalWakeup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"dream_mann_C">();
	}
	static class ADream_mann_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADream_mann_C>();
	}
};
static_assert(alignof(ADream_mann_C) == 0x000008, "Wrong alignment on ADream_mann_C");
static_assert(sizeof(ADream_mann_C) == 0x000470, "Wrong size on ADream_mann_C");
static_assert(offsetof(ADream_mann_C, UberGraphFrame_Dream_mann_C) == 0x000270, "Member 'ADream_mann_C::UberGraphFrame_Dream_mann_C' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane36) == 0x000278, "Member 'ADream_mann_C::Plane36' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane35) == 0x000280, "Member 'ADream_mann_C::Plane35' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane34) == 0x000288, "Member 'ADream_mann_C::Plane34' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane33) == 0x000290, "Member 'ADream_mann_C::Plane33' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane32) == 0x000298, "Member 'ADream_mann_C::Plane32' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane31) == 0x0002A0, "Member 'ADream_mann_C::Plane31' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane30) == 0x0002A8, "Member 'ADream_mann_C::Plane30' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane29) == 0x0002B0, "Member 'ADream_mann_C::Plane29' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane28) == 0x0002B8, "Member 'ADream_mann_C::Plane28' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane27) == 0x0002C0, "Member 'ADream_mann_C::Plane27' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane26) == 0x0002C8, "Member 'ADream_mann_C::Plane26' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane25) == 0x0002D0, "Member 'ADream_mann_C::Plane25' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane24) == 0x0002D8, "Member 'ADream_mann_C::Plane24' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane23) == 0x0002E0, "Member 'ADream_mann_C::Plane23' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane22) == 0x0002E8, "Member 'ADream_mann_C::Plane22' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane21) == 0x0002F0, "Member 'ADream_mann_C::Plane21' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane20) == 0x0002F8, "Member 'ADream_mann_C::Plane20' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane19) == 0x000300, "Member 'ADream_mann_C::Plane19' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane18) == 0x000308, "Member 'ADream_mann_C::Plane18' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane17) == 0x000310, "Member 'ADream_mann_C::Plane17' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane16) == 0x000318, "Member 'ADream_mann_C::Plane16' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane15) == 0x000320, "Member 'ADream_mann_C::Plane15' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane14) == 0x000328, "Member 'ADream_mann_C::Plane14' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane13) == 0x000330, "Member 'ADream_mann_C::Plane13' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane12) == 0x000338, "Member 'ADream_mann_C::Plane12' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane11) == 0x000340, "Member 'ADream_mann_C::Plane11' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane10) == 0x000348, "Member 'ADream_mann_C::Plane10' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane9) == 0x000350, "Member 'ADream_mann_C::Plane9' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane8) == 0x000358, "Member 'ADream_mann_C::Plane8' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar19) == 0x000360, "Member 'ADream_mann_C::Pillar19' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar18) == 0x000368, "Member 'ADream_mann_C::Pillar18' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar17) == 0x000370, "Member 'ADream_mann_C::Pillar17' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar16) == 0x000378, "Member 'ADream_mann_C::Pillar16' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar15) == 0x000380, "Member 'ADream_mann_C::Pillar15' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar14) == 0x000388, "Member 'ADream_mann_C::Pillar14' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar13) == 0x000390, "Member 'ADream_mann_C::Pillar13' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar12) == 0x000398, "Member 'ADream_mann_C::Pillar12' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar11) == 0x0003A0, "Member 'ADream_mann_C::Pillar11' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar10) == 0x0003A8, "Member 'ADream_mann_C::Pillar10' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar9) == 0x0003B0, "Member 'ADream_mann_C::Pillar9' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar8) == 0x0003B8, "Member 'ADream_mann_C::Pillar8' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar7) == 0x0003C0, "Member 'ADream_mann_C::Pillar7' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar6) == 0x0003C8, "Member 'ADream_mann_C::Pillar6' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar5) == 0x0003D0, "Member 'ADream_mann_C::Pillar5' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar4) == 0x0003D8, "Member 'ADream_mann_C::Pillar4' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar3) == 0x0003E0, "Member 'ADream_mann_C::Pillar3' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar2) == 0x0003E8, "Member 'ADream_mann_C::Pillar2' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar1) == 0x0003F0, "Member 'ADream_mann_C::Pillar1' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Pillar0) == 0x0003F8, "Member 'ADream_mann_C::Pillar0' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, MannSpwn4) == 0x000400, "Member 'ADream_mann_C::MannSpwn4' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, MannSpwn3) == 0x000408, "Member 'ADream_mann_C::MannSpwn3' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, MannSpwn2) == 0x000410, "Member 'ADream_mann_C::MannSpwn2' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane2) == 0x000418, "Member 'ADream_mann_C::Plane2' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane7) == 0x000420, "Member 'ADream_mann_C::Plane7' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane6) == 0x000428, "Member 'ADream_mann_C::Plane6' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane5) == 0x000430, "Member 'ADream_mann_C::Plane5' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane3) == 0x000438, "Member 'ADream_mann_C::Plane3' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane1) == 0x000440, "Member 'ADream_mann_C::Plane1' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane4) == 0x000448, "Member 'ADream_mann_C::Plane4' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, MannSpwn1) == 0x000450, "Member 'ADream_mann_C::MannSpwn1' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Plane) == 0x000458, "Member 'ADream_mann_C::Plane' has a wrong offset!");
static_assert(offsetof(ADream_mann_C, Manns) == 0x000460, "Member 'ADream_mann_C::Manns' has a wrong offset!");

}

