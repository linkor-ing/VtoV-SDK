#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_signal

#include "Basic.hpp"

#include "PanelBase_classes.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass panel_signal.panel_signal_C
// 0x0088 (0x02F8 - 0x0270)
class APanel_signal_C final : public APanelBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Panel_signal_C;                     // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   buttonMesh;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_vis;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_saveSig;                                    // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Spook;                                             // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_vol;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DrivePort;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_left;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_right;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          button_scroll;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    buttonsRoot;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SignalSound;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUmg_signalPlay_C*                      Widget;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Press_up;                                          // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Press_down;                                        // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Press_left;                                        // 0x02E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Press_right;                                       // 0x02E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRecentlyDetached;                                // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3113[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_drive_C*                          Drive;                                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Volume;                                            // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Press_save;                                        // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Press_vis;                                         // 0x02F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_panel_signal(int32 EntryPoint);
	void Dest(class AActor* DestroyedActor);
	void Fin();
	void Event_scrollDown();
	void ScrollUp();
	void Playback(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void DriveDetached();
	void BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Event_down();
	void Event_up();
	void StopSound();
	void PlaySound();
	void ReceiveBeginPlay();
	void ScrollDown();
	void buttonsVisibility();
	void AddParams(int32 Add);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, int32 Param_Index, Enum_interactionActions Action);
	void GamemodeBeginPlay();
	void IsButtonUsed(bool* Failed);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"panel_signal_C">();
	}
	static class APanel_signal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APanel_signal_C>();
	}
};
static_assert(alignof(APanel_signal_C) == 0x000008, "Wrong alignment on APanel_signal_C");
static_assert(sizeof(APanel_signal_C) == 0x0002F8, "Wrong size on APanel_signal_C");
static_assert(offsetof(APanel_signal_C, UberGraphFrame_Panel_signal_C) == 0x000270, "Member 'APanel_signal_C::UberGraphFrame_Panel_signal_C' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, buttonMesh) == 0x000278, "Member 'APanel_signal_C::buttonMesh' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_vis) == 0x000280, "Member 'APanel_signal_C::button_vis' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_saveSig) == 0x000288, "Member 'APanel_signal_C::button_saveSig' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Spook) == 0x000290, "Member 'APanel_signal_C::Spook' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_vol) == 0x000298, "Member 'APanel_signal_C::button_vol' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, DrivePort) == 0x0002A0, "Member 'APanel_signal_C::DrivePort' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_left) == 0x0002A8, "Member 'APanel_signal_C::button_left' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_right) == 0x0002B0, "Member 'APanel_signal_C::button_right' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, button_scroll) == 0x0002B8, "Member 'APanel_signal_C::button_scroll' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, buttonsRoot) == 0x0002C0, "Member 'APanel_signal_C::buttonsRoot' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, SignalSound) == 0x0002C8, "Member 'APanel_signal_C::SignalSound' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Widget) == 0x0002D0, "Member 'APanel_signal_C::Widget' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Comp) == 0x0002D8, "Member 'APanel_signal_C::Comp' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_up) == 0x0002E0, "Member 'APanel_signal_C::Press_up' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_down) == 0x0002E1, "Member 'APanel_signal_C::Press_down' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_left) == 0x0002E2, "Member 'APanel_signal_C::Press_left' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_right) == 0x0002E3, "Member 'APanel_signal_C::Press_right' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, IsRecentlyDetached) == 0x0002E4, "Member 'APanel_signal_C::IsRecentlyDetached' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Drive) == 0x0002E8, "Member 'APanel_signal_C::Drive' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Volume) == 0x0002F0, "Member 'APanel_signal_C::Volume' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_save) == 0x0002F4, "Member 'APanel_signal_C::Press_save' has a wrong offset!");
static_assert(offsetof(APanel_signal_C, Press_vis) == 0x0002F5, "Member 'APanel_signal_C::Press_vis' has a wrong offset!");

}

