#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Argc_spawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function argc_spawn.argc_spawn_C.check
// 0x0120 (0x0120 - 0x0000)
struct Argc_spawn_C_Check final
{
public:
	TArray<class AActor*>                         A;                                                 // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B8[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B9[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BA[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42BB[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_argc_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isUnderwater_ReturnValue;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42BC[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Argc_spawn_C_Check) == 0x000010, "Wrong alignment on Argc_spawn_C_Check");
static_assert(sizeof(Argc_spawn_C_Check) == 0x000120, "Wrong size on Argc_spawn_C_Check");
static_assert(offsetof(Argc_spawn_C_Check, A) == 0x000000, "Member 'Argc_spawn_C_Check::A' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, Obj) == 0x000010, "Member 'Argc_spawn_C_Check::Obj' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, Temp_int_Variable) == 0x000020, "Member 'Argc_spawn_C_Check::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, Temp_object_Variable) == 0x000028, "Member 'Argc_spawn_C_Check::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Argc_spawn_C_Check::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, K2Node_MakeArray_Array) == 0x000040, "Member 'Argc_spawn_C_Check::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, Temp_int_Array_Index_Variable) == 0x000050, "Member 'Argc_spawn_C_Check::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'Argc_spawn_C_Check::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'Argc_spawn_C_Check::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Get_Item) == 0x000060, "Member 'Argc_spawn_C_Check::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Argc_spawn_C_Check::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'Argc_spawn_C_Check::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'Argc_spawn_C_Check::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'Argc_spawn_C_Check::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'Argc_spawn_C_Check::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Argc_spawn_C_Check::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_SphereOverlapActors_OutActors) == 0x0000D0, "Member 'Argc_spawn_C_Check::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000E0, "Member 'Argc_spawn_C_Check::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'Argc_spawn_C_Check::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F0, "Member 'Argc_spawn_C_Check::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'Argc_spawn_C_Check::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'Argc_spawn_C_Check::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'Argc_spawn_C_Check::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Less_IntInt_ReturnValue_1) == 0x000108, "Member 'Argc_spawn_C_Check::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_isUnderwater_ReturnValue) == 0x000109, "Member 'Argc_spawn_C_Check::CallFunc_isUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'Argc_spawn_C_Check::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Check, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'Argc_spawn_C_Check::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function argc_spawn.argc_spawn_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct Argc_spawn_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Argc_spawn_C_Exploded) == 0x000004, "Wrong alignment on Argc_spawn_C_Exploded");
static_assert(sizeof(Argc_spawn_C_Exploded) == 0x000010, "Wrong size on Argc_spawn_C_Exploded");
static_assert(offsetof(Argc_spawn_C_Exploded, Damage) == 0x000000, "Member 'Argc_spawn_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_Exploded, Location) == 0x000004, "Member 'Argc_spawn_C_Exploded::Location' has a wrong offset!");

// Function argc_spawn.argc_spawn_C.ExecuteUbergraph_argc_spawn
// 0x0014 (0x0014 - 0x0000)
struct Argc_spawn_C_ExecuteUbergraph_argc_spawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Argc_spawn_C_ExecuteUbergraph_argc_spawn) == 0x000004, "Wrong alignment on Argc_spawn_C_ExecuteUbergraph_argc_spawn");
static_assert(sizeof(Argc_spawn_C_ExecuteUbergraph_argc_spawn) == 0x000014, "Wrong size on Argc_spawn_C_ExecuteUbergraph_argc_spawn");
static_assert(offsetof(Argc_spawn_C_ExecuteUbergraph_argc_spawn, EntryPoint) == 0x000000, "Member 'Argc_spawn_C_ExecuteUbergraph_argc_spawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_ExecuteUbergraph_argc_spawn, K2Node_Event_damage) == 0x000004, "Member 'Argc_spawn_C_ExecuteUbergraph_argc_spawn::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Argc_spawn_C_ExecuteUbergraph_argc_spawn, K2Node_Event_location) == 0x000008, "Member 'Argc_spawn_C_ExecuteUbergraph_argc_spawn::K2Node_Event_location' has a wrong offset!");

}

