#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SuperEgger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass superEgger.superEgger_C
// 0x0028 (0x0248 - 0x0220)
class ASuperEgger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Grid;                                              // 0x0230(0x0010)(Edit, BlueprintVisible)
	int32                                         Size;                                              // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_superEgger(int32 EntryPoint);
	void Spwn();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"superEgger_C">();
	}
	static class ASuperEgger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASuperEgger_C>();
	}
};
static_assert(alignof(ASuperEgger_C) == 0x000008, "Wrong alignment on ASuperEgger_C");
static_assert(sizeof(ASuperEgger_C) == 0x000248, "Wrong size on ASuperEgger_C");
static_assert(offsetof(ASuperEgger_C, UberGraphFrame) == 0x000220, "Member 'ASuperEgger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASuperEgger_C, DefaultSceneRoot) == 0x000228, "Member 'ASuperEgger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASuperEgger_C, Grid) == 0x000230, "Member 'ASuperEgger_C::Grid' has a wrong offset!");
static_assert(offsetof(ASuperEgger_C, Size) == 0x000240, "Member 'ASuperEgger_C::Size' has a wrong offset!");
static_assert(offsetof(ASuperEgger_C, Scale) == 0x000244, "Member 'ASuperEgger_C::Scale' has a wrong offset!");

}

