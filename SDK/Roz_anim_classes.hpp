#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Roz_anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass roz_anim.roz_anim_C
// 0x0118 (0x0338 - 0x0220)
class ARoz_anim_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Coll;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   LighBig;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Rozbeam_loop;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_rozbeam;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Wav;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Ligh;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Efff;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh7;                                       // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh6;                                       // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh5;                                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh4;                                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Rozhis;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LighGlob_a_69CE8F884639FC18A2BD4EB042080F3C;       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LighGlob__Direction_69CE8F884639FC18A2BD4EB042080F3C; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LighGlob;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_a_61CDA04B4CE8A43463F971ACE6FD1B12;     // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_61CDA04B4CE8A43463F971ACE6FD1B12; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Snd_a_4811F1C64F3B7CE0055F11B753FCC047;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Snd__Direction_4811F1C64F3B7CE0055F11B753FCC047;   // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Snd;                                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Imer;                                              // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Eff;                                               // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Am;                                                // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LighAnim;                                          // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Windup;                                            // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disappeared;                                       // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Box;                                               // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ATrigger_box_C*                         Triggerbox;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_roz_anim(int32 EntryPoint);
	void ReceiveBeginPlay();
	void GamemodeBeginPlay();
	void StartWindup();
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void SetActiveTrigger(class AActor* SentFrom, bool Param_Active);
	void CordUnplugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void CordPlugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void Set_ignoreSave_trigger(bool NewParam);
	void SetIgnoreSave(bool Ignore);
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void ApplyColor(const struct FLinearColor& Color);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Key, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void SettingsApplied(const struct FStruct_settings& Settings);
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void SignalSaved();
	void SignalDeleted();
	void HookTension(class AHook_C* Hook);
	void CleanSponge(float Clean, class AMainPlayer_C* Player);
	void Crafted();
	void Hooked(class AHook_C* Hook);
	void AttemptIgnite();
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Slice(bool Clean);
	void bitten();
	void ReachedByExplosion(const struct FVector& Location, float Damage);
	void PlayerLookAway(class AMainPlayer_C* Player);
	void Stepped(float Volume);
	void ActionName(class AMainPlayer_C* Player, const struct FHitResult& Hit, const class FString& Param_Name);
	void AccumulateTemperature(float Temperature, float Speed);
	void AddTemperature(float Temperature);
	void MicrowaveElec();
	void PlayerHandAnyKey(class AMainPlayer_C* Player, const struct FKey& Key, bool Pressed);
	void PlayerHandMouse(class AMainPlayer_C* Player, const struct FVector2D& Mouse);
	void PlayerHandMouseWheel(class AMainPlayer_C* Player, float WheelDelta);
	void PlayerHandRelease_LMB(class AMainPlayer_C* Player);
	void PlayerHandRelease_RMB(class AMainPlayer_C* Player);
	void ExtinguishFire();
	void Exploded(float Damage, const struct FVector& Location);
	void PlayerHandUse_LMB(class AMainPlayer_C* Player);
	void PlayerHandUse_RMB(class AMainPlayer_C* Player);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action);
	void ReceivedPhyiscsDamage(float Damage, const struct FHitResult& Hot);
	void Microwave();
	void Ignite(float Fuel);
	void FireDamage(float Damage);
	void SteppedOn(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Unhook();
	void DigUp();
	void PhysPreDestroyed();
	void PhysDestroyed();
	void SetKey(const class FString& Key);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void SetPropProps(bool Static, bool Frozen, bool Param_Active);
	void Virus(bool Activate);
	void Eaten();
	void LeaveWaterOrigin(class AWaterVolume_C* Water);
	void EnterWaterOrigin(class AWaterVolume_C* Water);
	void LeaveWater(class AWaterVolume_C* Water);
	void EnterWater(class AWaterVolume_C* Water);
	void ImpactDamage(float Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact);
	void OnCompleted_DDA0A64745A88FA107F01C96C451A154(class FName NotifyName);
	void OnBlendOut_DDA0A64745A88FA107F01C96C451A154(class FName NotifyName);
	void OnInterrupted_DDA0A64745A88FA107F01C96C451A154(class FName NotifyName);
	void OnNotifyBegin_DDA0A64745A88FA107F01C96C451A154(class FName NotifyName);
	void OnNotifyEnd_DDA0A64745A88FA107F01C96C451A154(class FName NotifyName);
	void LighGlob__beg__EventFunc();
	void LighGlob__end__EventFunc();
	void LighGlob__shake__EventFunc();
	void LighGlob__UpdateFunc();
	void LighGlob__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Snd__UpdateFunc();
	void Snd__FinishedFunc();
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void IgnoreSave_trigger(bool* Ignore);
	void GatherDataFromKeyT(bool* Gather);
	void IgnoreSave(bool* Param_IgnoreSave);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void SkipPreDelete(bool* Skip);
	void GatherDataFromKey(bool* Gather);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);
	void GetOnlyKey(class FString* Key);
	void ProcessKeys(bool* Return);
	void CanBeUsedHold(bool* Return);
	void GetKey(class FString* Key);
	void ToolboxFix(class AProp_toolbox_C* Toolbox, bool* Return);
	void SetPath(const TArray<struct FVector>& Path, bool* Return);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);
	void GascanFuel(class AProp_gascan_C* Gascan, bool* Fueled);
	void SkipRadial(bool* Skip);
	void GetPriceMultiplier(float* PriceMult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"roz_anim_C">();
	}
	static class ARoz_anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoz_anim_C>();
	}
};
static_assert(alignof(ARoz_anim_C) == 0x000008, "Wrong alignment on ARoz_anim_C");
static_assert(sizeof(ARoz_anim_C) == 0x000338, "Wrong size on ARoz_anim_C");
static_assert(offsetof(ARoz_anim_C, UberGraphFrame) == 0x000220, "Member 'ARoz_anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Coll) == 0x000228, "Member 'ARoz_anim_C::Coll' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, LighBig) == 0x000230, "Member 'ARoz_anim_C::LighBig' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Rozbeam_loop) == 0x000238, "Member 'ARoz_anim_C::Rozbeam_loop' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Eff_rozbeam) == 0x000240, "Member 'ARoz_anim_C::Eff_rozbeam' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Wav) == 0x000248, "Member 'ARoz_anim_C::Wav' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Sphere) == 0x000250, "Member 'ARoz_anim_C::Sphere' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Ligh) == 0x000258, "Member 'ARoz_anim_C::Ligh' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, PointLight) == 0x000260, "Member 'ARoz_anim_C::PointLight' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Efff) == 0x000268, "Member 'ARoz_anim_C::Efff' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh7) == 0x000270, "Member 'ARoz_anim_C::StaticMesh7' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh6) == 0x000278, "Member 'ARoz_anim_C::StaticMesh6' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh5) == 0x000280, "Member 'ARoz_anim_C::StaticMesh5' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh4) == 0x000288, "Member 'ARoz_anim_C::StaticMesh4' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh3) == 0x000290, "Member 'ARoz_anim_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh2) == 0x000298, "Member 'ARoz_anim_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh1) == 0x0002A0, "Member 'ARoz_anim_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, StaticMesh) == 0x0002A8, "Member 'ARoz_anim_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Rozhis) == 0x0002B0, "Member 'ARoz_anim_C::Rozhis' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, SkeletalMesh) == 0x0002B8, "Member 'ARoz_anim_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, DefaultSceneRoot) == 0x0002C0, "Member 'ARoz_anim_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, LighGlob_a_69CE8F884639FC18A2BD4EB042080F3C) == 0x0002C8, "Member 'ARoz_anim_C::LighGlob_a_69CE8F884639FC18A2BD4EB042080F3C' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, LighGlob__Direction_69CE8F884639FC18A2BD4EB042080F3C) == 0x0002CC, "Member 'ARoz_anim_C::LighGlob__Direction_69CE8F884639FC18A2BD4EB042080F3C' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, LighGlob) == 0x0002D0, "Member 'ARoz_anim_C::LighGlob' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Timeline_0_a_61CDA04B4CE8A43463F971ACE6FD1B12) == 0x0002D8, "Member 'ARoz_anim_C::Timeline_0_a_61CDA04B4CE8A43463F971ACE6FD1B12' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Timeline_0__Direction_61CDA04B4CE8A43463F971ACE6FD1B12) == 0x0002DC, "Member 'ARoz_anim_C::Timeline_0__Direction_61CDA04B4CE8A43463F971ACE6FD1B12' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Timeline_0) == 0x0002E0, "Member 'ARoz_anim_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Snd_a_4811F1C64F3B7CE0055F11B753FCC047) == 0x0002E8, "Member 'ARoz_anim_C::Snd_a_4811F1C64F3B7CE0055F11B753FCC047' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Snd__Direction_4811F1C64F3B7CE0055F11B753FCC047) == 0x0002EC, "Member 'ARoz_anim_C::Snd__Direction_4811F1C64F3B7CE0055F11B753FCC047' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Snd) == 0x0002F0, "Member 'ARoz_anim_C::Snd' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, A) == 0x0002F8, "Member 'ARoz_anim_C::A' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Imer) == 0x0002FC, "Member 'ARoz_anim_C::Imer' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Eff) == 0x000300, "Member 'ARoz_anim_C::Eff' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Am) == 0x000304, "Member 'ARoz_anim_C::Am' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Active) == 0x000308, "Member 'ARoz_anim_C::Active' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, LighAnim) == 0x00030C, "Member 'ARoz_anim_C::LighAnim' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Windup) == 0x000310, "Member 'ARoz_anim_C::Windup' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Disappeared) == 0x000314, "Member 'ARoz_anim_C::Disappeared' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Box) == 0x000318, "Member 'ARoz_anim_C::Box' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Triggerbox) == 0x000328, "Member 'ARoz_anim_C::Triggerbox' has a wrong offset!");
static_assert(offsetof(ARoz_anim_C, Dynmat) == 0x000330, "Member 'ARoz_anim_C::Dynmat' has a wrong offset!");

}

