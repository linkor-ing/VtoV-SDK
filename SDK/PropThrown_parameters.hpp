#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PropThrown

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_physSound_structs.hpp"


namespace SDK::Params
{

// Function propThrown.propThrown_C.ExecuteUbergraph_propThrown
// 0x02B8 (0x02B8 - 0x0000)
struct PropThrown_C_ExecuteUbergraph_propThrown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                K2Node_CustomEvent_prop;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_component;                      // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x01EC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_physSound_return;                         // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x0278(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PropThrown_C_ExecuteUbergraph_propThrown) == 0x000008, "Wrong alignment on PropThrown_C_ExecuteUbergraph_propThrown");
static_assert(sizeof(PropThrown_C_ExecuteUbergraph_propThrown) == 0x0002B8, "Wrong size on PropThrown_C_ExecuteUbergraph_propThrown");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, EntryPoint) == 0x000000, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::EntryPoint' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, Temp_object_Variable) == 0x000008, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_Origin) == 0x000018, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_BoxExtent) == 0x000024, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_SphereRadius) == 0x000030, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_Origin_1) == 0x000034, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_BoxExtent_1) == 0x000040, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentBounds_SphereRadius_1) == 0x00004C, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetMinElement_ReturnValue) == 0x000050, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000054, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0000DC, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_bBlockingHit) == 0x0000DD, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DE, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_Time) == 0x0000E0, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_Distance) == 0x0000E4, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_Location) == 0x0000E8, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F4, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_Normal) == 0x000100, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_ImpactNormal) == 0x00010C, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_ElementIndex) == 0x00013C, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_FaceIndex) == 0x000140, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_TraceStart) == 0x000144, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_BreakHitResult_TraceEnd) == 0x000150, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_DynamicCast_AsMain_Player) == 0x000160, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_DynamicCast_AsMain_Player' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetMass_ReturnValue) == 0x00016C, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetComponentVelocity_ReturnValue) == 0x000170, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00017C, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000188, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_prop) == 0x000198, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_prop' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_component) == 0x0001A0, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_component' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CreateDelegate_OutputDelegate) == 0x0001A8, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetMaterial_ReturnValue) == 0x0001B8, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x0001C0, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_HitComponent) == 0x0001C8, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_OtherActor) == 0x0001D0, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_OtherComp) == 0x0001D8, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_NormalImpulse) == 0x0001E0, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, K2Node_CustomEvent_Hit) == 0x0001EC, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_physSound_return) == 0x000274, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(PropThrown_C_ExecuteUbergraph_propThrown, CallFunc_physSound_data) == 0x000278, "Member 'PropThrown_C_ExecuteUbergraph_propThrown::CallFunc_physSound_data' has a wrong offset!");

// Function propThrown.propThrown_C.hitted
// 0x00B0 (0x00B0 - 0x0000)
struct PropThrown_C_Hitted final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PropThrown_C_Hitted) == 0x000008, "Wrong alignment on PropThrown_C_Hitted");
static_assert(sizeof(PropThrown_C_Hitted) == 0x0000B0, "Wrong size on PropThrown_C_Hitted");
static_assert(offsetof(PropThrown_C_Hitted, HitComponent) == 0x000000, "Member 'PropThrown_C_Hitted::HitComponent' has a wrong offset!");
static_assert(offsetof(PropThrown_C_Hitted, OtherActor) == 0x000008, "Member 'PropThrown_C_Hitted::OtherActor' has a wrong offset!");
static_assert(offsetof(PropThrown_C_Hitted, OtherComp) == 0x000010, "Member 'PropThrown_C_Hitted::OtherComp' has a wrong offset!");
static_assert(offsetof(PropThrown_C_Hitted, NormalImpulse) == 0x000018, "Member 'PropThrown_C_Hitted::NormalImpulse' has a wrong offset!");
static_assert(offsetof(PropThrown_C_Hitted, Hit) == 0x000024, "Member 'PropThrown_C_Hitted::Hit' has a wrong offset!");

// Function propThrown.propThrown_C.Init
// 0x0010 (0x0010 - 0x0000)
struct PropThrown_C_Init final
{
public:
	class AProp_C*                                Param_Prop;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_Component;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PropThrown_C_Init) == 0x000008, "Wrong alignment on PropThrown_C_Init");
static_assert(sizeof(PropThrown_C_Init) == 0x000010, "Wrong size on PropThrown_C_Init");
static_assert(offsetof(PropThrown_C_Init, Param_Prop) == 0x000000, "Member 'PropThrown_C_Init::Param_Prop' has a wrong offset!");
static_assert(offsetof(PropThrown_C_Init, Param_Component) == 0x000008, "Member 'PropThrown_C_Init::Param_Component' has a wrong offset!");

}

