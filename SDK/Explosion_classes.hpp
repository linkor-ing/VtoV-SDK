#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosion

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass explosion.explosion_C
// 0x00B8 (0x02D8 - 0x0220)
class AExplosion_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        ExplosionEcho;                                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Explosion_Cue;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  RadialForce;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         A_a_B13196C64BC7C4D979C821B817D18F40;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            A__Direction_B13196C64BC7C4D979C821B817D18F40;     // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     A;                                                 // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Debris;                                            // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         DebrisForce;                                       // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         FireStrength;                                      // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         FireFuel;                                          // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Loc;                                               // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Skip_Setting;                                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IgnoreWalls;                                       // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           Shake;                                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	float                                         InnerShake;                                        // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         OuterShake;                                        // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ObjType;                                           // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Ignores;                                           // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_explosion(int32 EntryPoint);
	void ReceiveBeginPlay();
	void A__UpdateFunc();
	void A__FinishedFunc();
	void RuneCheck();
	void ScorchMark();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"explosion_C">();
	}
	static class AExplosion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosion_C>();
	}
};
static_assert(alignof(AExplosion_C) == 0x000008, "Wrong alignment on AExplosion_C");
static_assert(sizeof(AExplosion_C) == 0x0002D8, "Wrong size on AExplosion_C");
static_assert(offsetof(AExplosion_C, UberGraphFrame) == 0x000220, "Member 'AExplosion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AExplosion_C, ExplosionEcho) == 0x000228, "Member 'AExplosion_C::ExplosionEcho' has a wrong offset!");
static_assert(offsetof(AExplosion_C, PointLight) == 0x000230, "Member 'AExplosion_C::PointLight' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Explosion_Cue) == 0x000238, "Member 'AExplosion_C::Explosion_Cue' has a wrong offset!");
static_assert(offsetof(AExplosion_C, RadialForce) == 0x000240, "Member 'AExplosion_C::RadialForce' has a wrong offset!");
static_assert(offsetof(AExplosion_C, ParticleSystem) == 0x000248, "Member 'AExplosion_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AExplosion_C, A_a_B13196C64BC7C4D979C821B817D18F40) == 0x000250, "Member 'AExplosion_C::A_a_B13196C64BC7C4D979C821B817D18F40' has a wrong offset!");
static_assert(offsetof(AExplosion_C, A__Direction_B13196C64BC7C4D979C821B817D18F40) == 0x000254, "Member 'AExplosion_C::A__Direction_B13196C64BC7C4D979C821B817D18F40' has a wrong offset!");
static_assert(offsetof(AExplosion_C, A) == 0x000258, "Member 'AExplosion_C::A' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Force) == 0x000260, "Member 'AExplosion_C::Force' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Radius) == 0x000264, "Member 'AExplosion_C::Radius' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Damage) == 0x000268, "Member 'AExplosion_C::Damage' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Debris) == 0x00026C, "Member 'AExplosion_C::Debris' has a wrong offset!");
static_assert(offsetof(AExplosion_C, DebrisForce) == 0x000270, "Member 'AExplosion_C::DebrisForce' has a wrong offset!");
static_assert(offsetof(AExplosion_C, FireStrength) == 0x000274, "Member 'AExplosion_C::FireStrength' has a wrong offset!");
static_assert(offsetof(AExplosion_C, FireFuel) == 0x000278, "Member 'AExplosion_C::FireFuel' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Obj) == 0x000280, "Member 'AExplosion_C::Obj' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Loc) == 0x000290, "Member 'AExplosion_C::Loc' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Impact) == 0x00029C, "Member 'AExplosion_C::Impact' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Skip_Setting) == 0x0002A8, "Member 'AExplosion_C::Skip_Setting' has a wrong offset!");
static_assert(offsetof(AExplosion_C, IgnoreWalls) == 0x0002A9, "Member 'AExplosion_C::IgnoreWalls' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Shake) == 0x0002B0, "Member 'AExplosion_C::Shake' has a wrong offset!");
static_assert(offsetof(AExplosion_C, InnerShake) == 0x0002B8, "Member 'AExplosion_C::InnerShake' has a wrong offset!");
static_assert(offsetof(AExplosion_C, OuterShake) == 0x0002BC, "Member 'AExplosion_C::OuterShake' has a wrong offset!");
static_assert(offsetof(AExplosion_C, ObjType) == 0x0002C0, "Member 'AExplosion_C::ObjType' has a wrong offset!");
static_assert(offsetof(AExplosion_C, Ignores) == 0x0002C8, "Member 'AExplosion_C::Ignores' has a wrong offset!");

}

