#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lib_obj

#include "Basic.hpp"

#include "Lib_obj_classes.hpp"
#include "Lib_obj_parameters.hpp"


namespace SDK
{

// Function lib_obj.lib_obj_C.obj_static
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_static(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_static");

	Params::Lib_obj_C_Obj_static Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_statDyn
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_statDyn(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_statDyn");

	Params::Lib_obj_C_Obj_statDyn Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_statDynPhys
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_statDynPhys(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_statDynPhys");

	Params::Lib_obj_C_Obj_statDynPhys Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_trigger
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_trigger(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_trigger");

	Params::Lib_obj_C_Obj_trigger Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_triggerStat
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_triggerStat(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_triggerStat");

	Params::Lib_obj_C_Obj_triggerStat Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_statDynPhysVeh
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_statDynPhysVeh(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_statDynPhysVeh");

	Params::Lib_obj_C_Obj_statDynPhysVeh Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_dynPhys
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_dynPhys(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_dynPhys");

	Params::Lib_obj_C_Obj_dynPhys Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_phys
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_phys(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_phys");

	Params::Lib_obj_C_Obj_phys Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}


// Function lib_obj.lib_obj_C.obj_pawn
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                Obj                                                    (Parm, OutParm)

void ULib_obj_C::Obj_pawn(class UObject* __WorldContext, TArray<EObjectTypeQuery>* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("lib_obj_C", "obj_pawn");

	Params::Lib_obj_C_Obj_pawn Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Obj != nullptr)
		*Obj = std::move(Parms.Obj);
}

}

