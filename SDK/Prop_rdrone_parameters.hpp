#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_rdrone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_triggerSave_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_rdrone.prop_rdrone_C.ExecuteUbergraph_prop_rdrone
// 0x0400 (0x0400 - 0x0000)
struct Prop_rdrone_C_ExecuteUbergraph_prop_rdrone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_2;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue_1;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_4;           // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_5;           // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01F4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_NewParam;                             // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28B[0x1];                                      // 0x028B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue_3;             // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_owner;                                // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_6;           // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANewBlueprint16_C*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x02F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_Event_cord;                                 // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                CallFunc_FinishSpawningActor_ReturnValue;          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone) == 0x000010, "Wrong alignment on Prop_rdrone_C_ExecuteUbergraph_prop_rdrone");
static_assert(sizeof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone) == 0x000400, "Wrong size on Prop_rdrone_C_ExecuteUbergraph_prop_rdrone");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, EntryPoint) == 0x000000, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetUpVector_ReturnValue) == 0x000004, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetRightVector_ReturnValue) == 0x000010, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue) == 0x00001C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetForwardVector_ReturnValue) == 0x000020, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetUpVector_ReturnValue_1) == 0x00003C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetForwardVector_ReturnValue_1) == 0x000048, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetRightVector_ReturnValue_1) == 0x000054, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000060, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000064, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000068, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00006C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000078, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000088, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Array_RemoveItem_ReturnValue) == 0x000090, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_RandomUnitVector_ReturnValue) == 0x000094, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetUpVector_ReturnValue_2) == 0x0000A0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000AC, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0000B8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_FClamp_ReturnValue) == 0x0000BC, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_VLerp_ReturnValue) == 0x0000C0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetComponentVelocity_ReturnValue) == 0x0000CC, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetForwardVector_ReturnValue_2) == 0x0000D8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetComponentVelocity_ReturnValue_1) == 0x0000E4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetComponentVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x0000F0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetRightVector_ReturnValue_2) == 0x0000F8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_FClamp_ReturnValue_1) == 0x000104, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_4) == 0x000108, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00010C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000110, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_5) == 0x00011C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000120, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000124, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000128, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000130, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_FClamp_ReturnValue_2) == 0x000134, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Less_FloatFloat_ReturnValue) == 0x000138, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_MakeRotator_ReturnValue) == 0x00013C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000148, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_ComponentBoundEvent_HitComponent) == 0x0001D0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_ComponentBoundEvent_OtherActor) == 0x0001D8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_ComponentBoundEvent_OtherComp) == 0x0001E0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001E8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_ComponentBoundEvent_Hit) == 0x0001F4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_DeltaSeconds) == 0x00027C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_sentFrom) == 0x000280, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_active) == 0x000288, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000289, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_NewParam) == 0x00028A, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetRightVector_ReturnValue_3) == 0x00028C, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_owner) == 0x000298, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_index) == 0x0002A0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetForwardVector_ReturnValue_3) == 0x0002A4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Dot_VectorVector_ReturnValue_6) == 0x0002B0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Dot_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002B4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetActorOfClass_ReturnValue) == 0x0002B8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0002C0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Add_VectorVector_ReturnValue) == 0x0002CC, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002D8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002E4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_player) == 0x0002F0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_hit) == 0x0002F8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_action) == 0x000380, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_SwitchEnum_CmpSuccess) == 0x000381, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_cord_1) == 0x000388, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_socket_1) == 0x000390, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_cord) == 0x000398, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, K2Node_Event_socket) == 0x0003A0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0003A8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0003AC, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_IsValid_ReturnValue) == 0x0003B0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0003B4, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_FClamp_ReturnValue_3) == 0x0003B8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0003C0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003F0, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ExecuteUbergraph_prop_rdrone, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003F8, "Member 'Prop_rdrone_C_ExecuteUbergraph_prop_rdrone::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_rdrone_C_CordUnplugged final
{
public:
	class ACord_C*                                Cord;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_rdrone_C_CordUnplugged");
static_assert(sizeof(Prop_rdrone_C_CordUnplugged) == 0x000010, "Wrong size on Prop_rdrone_C_CordUnplugged");
static_assert(offsetof(Prop_rdrone_C_CordUnplugged, Cord) == 0x000000, "Member 'Prop_rdrone_C_CordUnplugged::Cord' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_rdrone_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_rdrone_C_CordPlugged final
{
public:
	class ACord_C*                                Cord;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_rdrone_C_CordPlugged");
static_assert(sizeof(Prop_rdrone_C_CordPlugged) == 0x000010, "Wrong size on Prop_rdrone_C_CordPlugged");
static_assert(offsetof(Prop_rdrone_C_CordPlugged, Cord) == 0x000000, "Member 'Prop_rdrone_C_CordPlugged::Cord' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_rdrone_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_rdrone_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_rdrone_C_RunTrigger");
static_assert(sizeof(Prop_rdrone_C_RunTrigger) == 0x000010, "Wrong size on Prop_rdrone_C_RunTrigger");
static_assert(offsetof(Prop_rdrone_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_rdrone_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_rdrone_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_rdrone_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_rdrone_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_rdrone_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_rdrone_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_rdrone_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_rdrone_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_rdrone_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Active;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_rdrone_C_SetActiveTrigger");
static_assert(sizeof(Prop_rdrone_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_rdrone_C_SetActiveTrigger");
static_assert(offsetof(Prop_rdrone_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_rdrone_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_SetActiveTrigger, Param_Active) == 0x000008, "Member 'Prop_rdrone_C_SetActiveTrigger::Param_Active' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_rdrone_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_rdrone_C_ReceiveTick");
static_assert(sizeof(Prop_rdrone_C_ReceiveTick) == 0x000004, "Wrong size on Prop_rdrone_C_ReceiveTick");
static_assert(offsetof(Prop_rdrone_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_rdrone_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Param_Hit) == 0x000024, "Member 'Prop_rdrone_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Param_Hit' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.capture
// 0x0018 (0x0018 - 0x0000)
struct Prop_rdrone_C_Capture final
{
public:
	class UUmg_laptop_C*                          Lap;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_Capture) == 0x000008, "Wrong alignment on Prop_rdrone_C_Capture");
static_assert(sizeof(Prop_rdrone_C_Capture) == 0x000018, "Wrong size on Prop_rdrone_C_Capture");
static_assert(offsetof(Prop_rdrone_C_Capture, Lap) == 0x000000, "Member 'Prop_rdrone_C_Capture::Lap' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Capture, Temp_bool_Variable) == 0x000008, "Member 'Prop_rdrone_C_Capture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Capture, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Prop_rdrone_C_Capture::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Capture, K2Node_Select_Default) == 0x000010, "Member 'Prop_rdrone_C_Capture::K2Node_Select_Default' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.move
// 0x00F4 (0x00F4 - 0x0000)
struct Prop_rdrone_C_Move final
{
public:
	float                                         Forward;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rot;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Up;                                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_Move) == 0x000004, "Wrong alignment on Prop_rdrone_C_Move");
static_assert(sizeof(Prop_rdrone_C_Move) == 0x0000F4, "Wrong size on Prop_rdrone_C_Move");
static_assert(offsetof(Prop_rdrone_C_Move, Forward) == 0x000000, "Member 'Prop_rdrone_C_Move::Forward' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, Rot) == 0x000004, "Member 'Prop_rdrone_C_Move::Rot' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, Up) == 0x000008, "Member 'Prop_rdrone_C_Move::Up' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'Prop_rdrone_C_Move::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'Prop_rdrone_C_Move::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'Prop_rdrone_C_Move::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Prop_rdrone_C_Move::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'Prop_rdrone_C_Move::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'Prop_rdrone_C_Move::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x00003C, "Member 'Prop_rdrone_C_Move::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C4, "Member 'Prop_rdrone_C_Move::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Normal_ReturnValue) == 0x0000D0, "Member 'Prop_rdrone_C_Move::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'Prop_rdrone_C_Move::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Move, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'Prop_rdrone_C_Move::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.ALight
// 0x0001 (0x0001 - 0x0000)
struct Prop_rdrone_C_ALight final
{
public:
	bool                                          Param_LightActive;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_ALight) == 0x000001, "Wrong alignment on Prop_rdrone_C_ALight");
static_assert(sizeof(Prop_rdrone_C_ALight) == 0x000001, "Wrong size on Prop_rdrone_C_ALight");
static_assert(offsetof(Prop_rdrone_C_ALight, Param_LightActive) == 0x000000, "Member 'Prop_rdrone_C_ALight::Param_LightActive' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.upd
// 0x0110 (0x0110 - 0x0000)
struct Prop_rdrone_C_Upd final
{
public:
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_2;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_Upd) == 0x000008, "Wrong alignment on Prop_rdrone_C_Upd");
static_assert(sizeof(Prop_rdrone_C_Upd) == 0x000110, "Wrong size on Prop_rdrone_C_Upd");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_object_Variable) == 0x000000, "Member 'Prop_rdrone_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_bool_Variable) == 0x000008, "Member 'Prop_rdrone_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_rdrone_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_object_Variable_2) == 0x000018, "Member 'Prop_rdrone_C_Upd::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_bool_Variable_1) == 0x000020, "Member 'Prop_rdrone_C_Upd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_object_Variable_3) == 0x000028, "Member 'Prop_rdrone_C_Upd::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_object_Variable_4) == 0x000030, "Member 'Prop_rdrone_C_Upd::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, K2Node_Select_Default) == 0x000038, "Member 'Prop_rdrone_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, K2Node_Select_Default_1) == 0x000040, "Member 'Prop_rdrone_C_Upd::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, Temp_bool_Variable_2) == 0x000048, "Member 'Prop_rdrone_C_Upd::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00004C, "Member 'Prop_rdrone_C_Upd::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'Prop_rdrone_C_Upd::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'Prop_rdrone_C_Upd::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'Prop_rdrone_C_Upd::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, K2Node_Select_Default_2) == 0x000068, "Member 'Prop_rdrone_C_Upd::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'Prop_rdrone_C_Upd::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00007C, "Member 'Prop_rdrone_C_Upd::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_SelectFloat_ReturnValue) == 0x000104, "Member 'Prop_rdrone_C_Upd::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_Upd, CallFunc_SelectFloat_ReturnValue_1) == 0x000108, "Member 'Prop_rdrone_C_Upd::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_rdrone_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_rdrone_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_rdrone_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_rdrone_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_rdrone_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_rdrone_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_rdrone_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_rdrone_C_LoadTriggerData");
static_assert(sizeof(Prop_rdrone_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_rdrone_C_LoadTriggerData");
static_assert(offsetof(Prop_rdrone_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_rdrone_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_rdrone_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_rdrone_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_rdrone_C_GetTriggerData");
static_assert(sizeof(Prop_rdrone_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_rdrone_C_GetTriggerData");
static_assert(offsetof(Prop_rdrone_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_rdrone_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.gatherDataFromKeyT
// 0x0001 (0x0001 - 0x0000)
struct Prop_rdrone_C_GatherDataFromKeyT final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rdrone_C_GatherDataFromKeyT) == 0x000001, "Wrong alignment on Prop_rdrone_C_GatherDataFromKeyT");
static_assert(sizeof(Prop_rdrone_C_GatherDataFromKeyT) == 0x000001, "Wrong size on Prop_rdrone_C_GatherDataFromKeyT");
static_assert(offsetof(Prop_rdrone_C_GatherDataFromKeyT, Gather) == 0x000000, "Member 'Prop_rdrone_C_GatherDataFromKeyT::Gather' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_rdrone_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_rdrone_C_ActionOptionIndex");
static_assert(sizeof(Prop_rdrone_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_rdrone_C_ActionOptionIndex");
static_assert(offsetof(Prop_rdrone_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_rdrone_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_rdrone_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_rdrone_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_rdrone_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_LoadData) == 0x000010, "Wrong alignment on Prop_rdrone_C_LoadData");
static_assert(sizeof(Prop_rdrone_C_LoadData) == 0x0000E0, "Wrong size on Prop_rdrone_C_LoadData");
static_assert(offsetof(Prop_rdrone_C_LoadData, Data) == 0x000000, "Member 'Prop_rdrone_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_LoadData, Return) == 0x0000C0, "Member 'Prop_rdrone_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_rdrone_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_rdrone_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_rdrone_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.getData
// 0x0280 (0x0280 - 0x0000)
struct Prop_rdrone_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0190(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x01A0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01C0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_rdrone_C_GetData) == 0x000010, "Wrong alignment on Prop_rdrone_C_GetData");
static_assert(sizeof(Prop_rdrone_C_GetData) == 0x000280, "Wrong size on Prop_rdrone_C_GetData");
static_assert(offsetof(Prop_rdrone_C_GetData, Data) == 0x000000, "Member 'Prop_rdrone_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_rdrone_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_rdrone_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000190, "Member 'Prop_rdrone_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'Prop_rdrone_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'Prop_rdrone_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001C0, "Member 'Prop_rdrone_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_rdrone.prop_rdrone_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_rdrone_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_rdrone_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_rdrone_C_GetActionOptions");
static_assert(sizeof(Prop_rdrone_C_GetActionOptions) == 0x000060, "Wrong size on Prop_rdrone_C_GetActionOptions");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_rdrone_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_rdrone_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_rdrone_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_rdrone_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_rdrone_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_rdrone_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_rdrone_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_rdrone_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_rdrone_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

