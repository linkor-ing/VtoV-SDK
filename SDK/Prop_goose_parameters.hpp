#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_goose

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_goose.prop_goose_C.ExecuteUbergraph_prop_goose
// 0x0140 (0x0140 - 0x0000)
struct Prop_goose_C_ExecuteUbergraph_prop_goose final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARufus_C*                               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_goose_C_ExecuteUbergraph_prop_goose) == 0x000010, "Wrong alignment on Prop_goose_C_ExecuteUbergraph_prop_goose");
static_assert(sizeof(Prop_goose_C_ExecuteUbergraph_prop_goose) == 0x000140, "Wrong size on Prop_goose_C_ExecuteUbergraph_prop_goose");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, EntryPoint) == 0x000000, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, Temp_int_Variable) == 0x000004, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_RotateAngleAxis_ReturnValue) == 0x000018, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, K2Node_Event_actor) == 0x000038, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, K2Node_Event_damage) == 0x000040, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, K2Node_Event_hit) == 0x000044, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, K2Node_Event_impact) == 0x0000CC, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, K2Node_Event_skipSetting) == 0x0000D8, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Add_VectorVector_ReturnValue) == 0x0000DC, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_ExecuteUbergraph_prop_goose, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'Prop_goose_C_ExecuteUbergraph_prop_goose::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function prop_goose.prop_goose_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_goose_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_goose_C_AddDamage) == 0x000008, "Wrong alignment on Prop_goose_C_AddDamage");
static_assert(sizeof(Prop_goose_C_AddDamage) == 0x0000A8, "Wrong size on Prop_goose_C_AddDamage");
static_assert(offsetof(Prop_goose_C_AddDamage, Actor) == 0x000000, "Member 'Prop_goose_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_AddDamage, Damage) == 0x000008, "Member 'Prop_goose_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_AddDamage, Param_Hit) == 0x00000C, "Member 'Prop_goose_C_AddDamage::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_AddDamage, Impact) == 0x000094, "Member 'Prop_goose_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(Prop_goose_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'Prop_goose_C_AddDamage::SkipSetting' has a wrong offset!");

}

