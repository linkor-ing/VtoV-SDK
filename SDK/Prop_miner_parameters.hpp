#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_miner

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_mVector_structs.hpp"
#include "Struct_mFloat_structs.hpp"


namespace SDK::Params
{

// Function prop_miner.prop_miner_C.ExecuteUbergraph_prop_miner
// 0x0310 (0x0310 - 0x0000)
struct Prop_miner_C_ExecuteUbergraph_prop_miner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FA[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FB[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FC[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_upgrade_success;                          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FD[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FE[0x2];                                     // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0018)()
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_Event_cord;                                 // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_DynamicCast_AsCord;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FF[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_damage;                               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A00[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A01[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A02[0xB];                                     // 0x02B5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosion_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_ExecuteUbergraph_prop_miner) == 0x000010, "Wrong alignment on Prop_miner_C_ExecuteUbergraph_prop_miner");
static_assert(sizeof(Prop_miner_C_ExecuteUbergraph_prop_miner) == 0x000310, "Wrong size on Prop_miner_C_ExecuteUbergraph_prop_miner");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, EntryPoint) == 0x000000, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_owner) == 0x000008, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_index_1) == 0x000010, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_index_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_NewParam) == 0x000014, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_sentFrom) == 0x000018, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_active) == 0x000020, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, Temp_int_Variable) == 0x000030, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, Temp_int_Variable_1) == 0x000038, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, Temp_int_Variable_2) == 0x00003C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, Temp_int_Variable_3) == 0x000040, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_player_1) == 0x000048, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_hit_1) == 0x000050, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Percent_IntInt_ReturnValue) == 0x0000D8, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_bBlockingHit) == 0x0000DC, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DD, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_Time) == 0x0000E0, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_Distance) == 0x0000E4, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_Location) == 0x0000E8, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F4, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_Normal) == 0x000100, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_ImpactNormal) == 0x00010C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_ElementIndex) == 0x00013C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_FaceIndex) == 0x000140, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_TraceStart) == 0x000144, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BreakHitResult_TraceEnd) == 0x000150, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_upgrade_success) == 0x00015C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_upgrade_success' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_player) == 0x000160, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_hit) == 0x000168, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_index) == 0x0001F0, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_action) == 0x0001F4, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_SwitchEnum_CmpSuccess) == 0x0001F5, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_MakeStruct_FormatArgumentData) == 0x0001F8, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_MakeArray_Array) == 0x000238, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Format_ReturnValue) == 0x000248, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_cord_1) == 0x000260, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_socket_1) == 0x000268, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_cord) == 0x000270, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_socket) == 0x000278, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_DynamicCast_AsCord) == 0x000280, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_DynamicCast_AsCord' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, K2Node_Event_damage) == 0x00028C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Add_IntInt_ReturnValue_1) == 0x000290, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000294, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Subtract_IntInt_ReturnValue) == 0x000298, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00029C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002A0, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0002A4, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0002A5, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0002A6, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BooleanOR_ReturnValue) == 0x0002A7, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A8, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BooleanAND_ReturnValue) == 0x0002B4, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_MakeTransform_ReturnValue) == 0x0002C0, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002F0, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0002F8, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_FMax_ReturnValue) == 0x0002FC, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000300, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000308, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ExecuteUbergraph_prop_miner, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00030C, "Member 'Prop_miner_C_ExecuteUbergraph_prop_miner::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");

// Function prop_miner.prop_miner_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct Prop_miner_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_FireDamage) == 0x000004, "Wrong alignment on Prop_miner_C_FireDamage");
static_assert(sizeof(Prop_miner_C_FireDamage) == 0x000004, "Wrong size on Prop_miner_C_FireDamage");
static_assert(offsetof(Prop_miner_C_FireDamage, Damage) == 0x000000, "Member 'Prop_miner_C_FireDamage::Damage' has a wrong offset!");

// Function prop_miner.prop_miner_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_miner_C_CordUnplugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_miner_C_CordUnplugged");
static_assert(sizeof(Prop_miner_C_CordUnplugged) == 0x000010, "Wrong size on Prop_miner_C_CordUnplugged");
static_assert(offsetof(Prop_miner_C_CordUnplugged, Param_Cord) == 0x000000, "Member 'Prop_miner_C_CordUnplugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_miner_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_miner.prop_miner_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_miner_C_CordPlugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_miner_C_CordPlugged");
static_assert(sizeof(Prop_miner_C_CordPlugged) == 0x000010, "Wrong size on Prop_miner_C_CordPlugged");
static_assert(offsetof(Prop_miner_C_CordPlugged, Param_Cord) == 0x000000, "Member 'Prop_miner_C_CordPlugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_miner_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_miner.prop_miner_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_miner_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_miner_C_ActionOptionIndex");
static_assert(sizeof(Prop_miner_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_miner_C_ActionOptionIndex");
static_assert(offsetof(Prop_miner_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_miner_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_miner_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_miner_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_miner_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_miner.prop_miner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_miner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_miner_C_ReceiveTick");
static_assert(sizeof(Prop_miner_C_ReceiveTick) == 0x000004, "Wrong size on Prop_miner_C_ReceiveTick");
static_assert(offsetof(Prop_miner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_miner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_miner.prop_miner_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_miner_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_miner_C_SetActiveTrigger");
static_assert(sizeof(Prop_miner_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_miner_C_SetActiveTrigger");
static_assert(offsetof(Prop_miner_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_miner_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_SetActiveTrigger, Active) == 0x000008, "Member 'Prop_miner_C_SetActiveTrigger::Active' has a wrong offset!");

// Function prop_miner.prop_miner_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_miner_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_miner_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_miner_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_miner_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_miner_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_miner_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_miner.prop_miner_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_miner_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_miner_C_RunTrigger");
static_assert(sizeof(Prop_miner_C_RunTrigger) == 0x000010, "Wrong size on Prop_miner_C_RunTrigger");
static_assert(offsetof(Prop_miner_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_miner_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_miner_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_miner.prop_miner_C.upd
// 0x01A0 (0x01A0 - 0x0000)
struct Prop_miner_C_Upd final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A03[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_2;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A04[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A05[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A06[0xC];                                     // 0x0154(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue_1;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_2;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_Upd) == 0x000010, "Wrong alignment on Prop_miner_C_Upd");
static_assert(sizeof(Prop_miner_C_Upd) == 0x0001A0, "Wrong size on Prop_miner_C_Upd");
static_assert(offsetof(Prop_miner_C_Upd, Temp_int_Variable) == 0x000000, "Member 'Prop_miner_C_Upd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_IntInt_ReturnValue) == 0x000004, "Member 'Prop_miner_C_Upd::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'Prop_miner_C_Upd::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'Prop_miner_C_Upd::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Prop_miner_C_Upd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000024, "Member 'Prop_miner_C_Upd::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'Prop_miner_C_Upd::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, Temp_int_Variable_1) == 0x00003C, "Member 'Prop_miner_C_Upd::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'Prop_miner_C_Upd::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000070, "Member 'Prop_miner_C_Upd::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000074, "Member 'Prop_miner_C_Upd::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000078, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00007C, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'Prop_miner_C_Upd::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'Prop_miner_C_Upd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000090, "Member 'Prop_miner_C_Upd::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00009C, "Member 'Prop_miner_C_Upd::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeTransform_ReturnValue_1) == 0x0000B0, "Member 'Prop_miner_C_Upd::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0000E0, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E4, "Member 'Prop_miner_C_Upd::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0000E8, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Lerp_ReturnValue) == 0x0000EC, "Member 'Prop_miner_C_Upd::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'Prop_miner_C_Upd::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Lerp_ReturnValue_1) == 0x0000F4, "Member 'Prop_miner_C_Upd::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0000F8, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000FC, "Member 'Prop_miner_C_Upd::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Lerp_ReturnValue_2) == 0x000100, "Member 'Prop_miner_C_Upd::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'Prop_miner_C_Upd::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_AddInstance_ReturnValue) == 0x000108, "Member 'Prop_miner_C_Upd::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, Temp_int_Variable_2) == 0x00010C, "Member 'Prop_miner_C_Upd::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Divide_IntInt_ReturnValue_2) == 0x000110, "Member 'Prop_miner_C_Upd::CallFunc_Divide_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000114, "Member 'Prop_miner_C_Upd::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000118, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'Prop_miner_C_Upd::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Percent_IntInt_ReturnValue_2) == 0x000120, "Member 'Prop_miner_C_Upd::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x000124, "Member 'Prop_miner_C_Upd::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeVector_ReturnValue_2) == 0x000128, "Member 'Prop_miner_C_Upd::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000134, "Member 'Prop_miner_C_Upd::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000138, "Member 'Prop_miner_C_Upd::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000144, "Member 'Prop_miner_C_Upd::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Add_IntInt_ReturnValue_2) == 0x000150, "Member 'Prop_miner_C_Upd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_MakeTransform_ReturnValue_2) == 0x000160, "Member 'Prop_miner_C_Upd::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_AddInstance_ReturnValue_1) == 0x000190, "Member 'Prop_miner_C_Upd::CallFunc_AddInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_AddInstance_ReturnValue_2) == 0x000194, "Member 'Prop_miner_C_Upd::CallFunc_AddInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000198, "Member 'Prop_miner_C_Upd::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upd, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00019C, "Member 'Prop_miner_C_Upd::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function prop_miner.prop_miner_C.calc
// 0x01C0 (0x01C0 - 0x0000)
struct Prop_miner_C_Calc final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Zs;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Hash;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A07[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A08[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_VictoryIntPlusEquals_IntOut;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A09[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0A[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0B[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_VictoryIntPlusEquals_IntOut_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0110(0x0018)()
	TArray<uint8>                                 CallFunc_GenerateRandomBytes_ByteArray;            // 0x0128(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_BytesToBase64Url_ReturnValue;             // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_Calc) == 0x000008, "Wrong alignment on Prop_miner_C_Calc");
static_assert(sizeof(Prop_miner_C_Calc) == 0x0001C0, "Wrong size on Prop_miner_C_Calc");
static_assert(offsetof(Prop_miner_C_Calc, Delta) == 0x000000, "Member 'Prop_miner_C_Calc::Delta' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, Zs) == 0x000004, "Member 'Prop_miner_C_Calc::Zs' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, Hash) == 0x000008, "Member 'Prop_miner_C_Calc::Hash' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Prop_miner_C_Calc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00001C, "Member 'Prop_miner_C_Calc::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'Prop_miner_C_Calc::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'Prop_miner_C_Calc::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'Prop_miner_C_Calc::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Lerp_ReturnValue) == 0x00002C, "Member 'Prop_miner_C_Calc::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000030, "Member 'Prop_miner_C_Calc::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'Prop_miner_C_Calc::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'Prop_miner_C_Calc::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Prop_miner_C_Calc::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Prop_miner_C_Calc::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000044, "Member 'Prop_miner_C_Calc::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_VictoryIntPlusEquals_IntOut) == 0x000048, "Member 'Prop_miner_C_Calc::CallFunc_VictoryIntPlusEquals_IntOut' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'Prop_miner_C_Calc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'Prop_miner_C_Calc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'Prop_miner_C_Calc::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'Prop_miner_C_Calc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000058, "Member 'Prop_miner_C_Calc::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'Prop_miner_C_Calc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Array_Get_Item) == 0x000070, "Member 'Prop_miner_C_Calc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000080, "Member 'Prop_miner_C_Calc::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'Prop_miner_C_Calc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'Prop_miner_C_Calc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_VictoryIntPlusEquals_IntOut_1) == 0x00008C, "Member 'Prop_miner_C_Calc::CallFunc_VictoryIntPlusEquals_IntOut_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'Prop_miner_C_Calc::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'Prop_miner_C_Calc::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Conv_StringToText_ReturnValue) == 0x000110, "Member 'Prop_miner_C_Calc::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_GenerateRandomBytes_ByteArray) == 0x000128, "Member 'Prop_miner_C_Calc::CallFunc_GenerateRandomBytes_ByteArray' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'Prop_miner_C_Calc::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_BytesToBase64Url_ReturnValue) == 0x000178, "Member 'Prop_miner_C_Calc::CallFunc_BytesToBase64Url_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, K2Node_MakeArray_Array) == 0x000188, "Member 'Prop_miner_C_Calc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Format_ReturnValue) == 0x000198, "Member 'Prop_miner_C_Calc::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Calc, CallFunc_Conv_TextToString_ReturnValue) == 0x0001B0, "Member 'Prop_miner_C_Calc::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_miner.prop_miner_C.upgrade
// 0x003C (0x003C - 0x0000)
struct Prop_miner_C_Upgrade final
{
public:
	class FName                                   Param_Upgrade;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A10[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A11[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_Upgrade) == 0x000004, "Wrong alignment on Prop_miner_C_Upgrade");
static_assert(sizeof(Prop_miner_C_Upgrade) == 0x00003C, "Wrong size on Prop_miner_C_Upgrade");
static_assert(offsetof(Prop_miner_C_Upgrade, Param_Upgrade) == 0x000000, "Member 'Prop_miner_C_Upgrade::Param_Upgrade' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, Success) == 0x000008, "Member 'Prop_miner_C_Upgrade::Success' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, Temp_int_Variable) == 0x00000C, "Member 'Prop_miner_C_Upgrade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, K2Node_SwitchName_CmpSuccess) == 0x000010, "Member 'Prop_miner_C_Upgrade::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, Temp_int_Variable_1) == 0x000014, "Member 'Prop_miner_C_Upgrade::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, Temp_int_Variable_2) == 0x000018, "Member 'Prop_miner_C_Upgrade::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Prop_miner_C_Upgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'Prop_miner_C_Upgrade::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'Prop_miner_C_Upgrade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'Prop_miner_C_Upgrade::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'Prop_miner_C_Upgrade::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000030, "Member 'Prop_miner_C_Upgrade::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'Prop_miner_C_Upgrade::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Upgrade, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000038, "Member 'Prop_miner_C_Upgrade::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function prop_miner.prop_miner_C.plugged
// 0x0020 (0x0020 - 0x0000)
struct Prop_miner_C_Plugged final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A12[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_Plugged) == 0x000008, "Wrong alignment on Prop_miner_C_Plugged");
static_assert(sizeof(Prop_miner_C_Plugged) == 0x000020, "Wrong size on Prop_miner_C_Plugged");
static_assert(offsetof(Prop_miner_C_Plugged, Temp_bool_Variable) == 0x000000, "Member 'Prop_miner_C_Plugged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Plugged, Temp_object_Variable) == 0x000008, "Member 'Prop_miner_C_Plugged::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Plugged, Temp_object_Variable_1) == 0x000010, "Member 'Prop_miner_C_Plugged::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_Plugged, K2Node_Select_Default) == 0x000018, "Member 'Prop_miner_C_Plugged::K2Node_Select_Default' has a wrong offset!");

// Function prop_miner.prop_miner_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_miner_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_miner_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_miner_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_miner_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_miner_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_miner_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_miner.prop_miner_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_miner_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_miner_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_miner_C_LoadTriggerData");
static_assert(sizeof(Prop_miner_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_miner_C_LoadTriggerData");
static_assert(offsetof(Prop_miner_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_miner_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_miner_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_miner.prop_miner_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_miner_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_miner_C_GetTriggerData");
static_assert(sizeof(Prop_miner_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_miner_C_GetTriggerData");
static_assert(offsetof(Prop_miner_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_miner_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_miner.prop_miner_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct Prop_miner_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_miner_C_PlayerUsedOn) == 0x000008, "Wrong alignment on Prop_miner_C_PlayerUsedOn");
static_assert(sizeof(Prop_miner_C_PlayerUsedOn) == 0x000090, "Wrong size on Prop_miner_C_PlayerUsedOn");
static_assert(offsetof(Prop_miner_C_PlayerUsedOn, Player) == 0x000000, "Member 'Prop_miner_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_PlayerUsedOn, Param_Hit) == 0x000008, "Member 'Prop_miner_C_PlayerUsedOn::Param_Hit' has a wrong offset!");

// Function prop_miner.prop_miner_C.lookAt
// 0x02D0 (0x02D0 - 0x0000)
struct Prop_miner_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A13[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A14[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A15[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A16[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0138(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0178(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A17[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A18[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F0(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A19[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0238(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0278(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0288(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_LookAt) == 0x000008, "Wrong alignment on Prop_miner_C_LookAt");
static_assert(sizeof(Prop_miner_C_LookAt) == 0x0002D0, "Wrong size on Prop_miner_C_LookAt");
static_assert(offsetof(Prop_miner_C_LookAt, Player) == 0x000000, "Member 'Prop_miner_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_miner_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, Return) == 0x000090, "Member 'Prop_miner_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, Text) == 0x000098, "Member 'Prop_miner_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_miner_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B0, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B1, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'Prop_miner_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, K2Node_MakeStruct_FormatArgumentData) == 0x000138, "Member 'Prop_miner_C_LookAt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x000178, "Member 'Prop_miner_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x000190, "Member 'Prop_miner_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A0, "Member 'Prop_miner_C_LookAt::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001E0, "Member 'Prop_miner_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001E4, "Member 'Prop_miner_C_LookAt::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001E8, "Member 'Prop_miner_C_LookAt::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F0, "Member 'Prop_miner_C_LookAt::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Lerp_ReturnValue) == 0x000230, "Member 'Prop_miner_C_LookAt::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, K2Node_MakeStruct_FormatArgumentData_3) == 0x000238, "Member 'Prop_miner_C_LookAt::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, K2Node_MakeArray_Array) == 0x000278, "Member 'Prop_miner_C_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Format_ReturnValue) == 0x000288, "Member 'Prop_miner_C_LookAt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002A0, "Member 'Prop_miner_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x0002B0, "Member 'Prop_miner_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LookAt, CallFunc_SelectString_ReturnValue_1) == 0x0002C0, "Member 'Prop_miner_C_LookAt::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");

// Function prop_miner.prop_miner_C.loadData
// 0x01C0 (0x01C0 - 0x0000)
struct Prop_miner_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1A[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mVector                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_7;                         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1B[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_8;                         // 0x01A8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1C[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_9;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_LoadData) == 0x000010, "Wrong alignment on Prop_miner_C_LoadData");
static_assert(sizeof(Prop_miner_C_LoadData) == 0x0001C0, "Wrong size on Prop_miner_C_LoadData");
static_assert(offsetof(Prop_miner_C_LoadData, Data) == 0x000000, "Member 'Prop_miner_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, Return) == 0x0000C0, "Member 'Prop_miner_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000F4, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000F8, "Member 'Prop_miner_C_LoadData::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_4) == 0x000104, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_5) == 0x000108, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_6) == 0x00010C, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_7) == 0x000110, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x00011C, "Member 'Prop_miner_C_LoadData::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001A4, "Member 'Prop_miner_C_LoadData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_8) == 0x0001A8, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_loadData_return) == 0x0001B8, "Member 'Prop_miner_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_LoadData, CallFunc_Array_Get_Item_9) == 0x0001BC, "Member 'Prop_miner_C_LoadData::CallFunc_Array_Get_Item_9' has a wrong offset!");

// Function prop_miner.prop_miner_C.getData
// 0x0350 (0x0350 - 0x0000)
struct Prop_miner_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1D[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1E[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0138(0x0010)(HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_2;                          // 0x0158(0x0010)(ReferenceParm)
	struct FStruct_mVector                        K2Node_MakeStruct_struct_mVector;                  // 0x0168(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mVector>                K2Node_MakeArray_Array_3;                          // 0x0178(0x0010)(ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array_4;                          // 0x0188(0x0010)(ReferenceParm)
	uint8                                         Pad_3A1F[0x8];                                     // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x01A0(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0260(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x0270(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_5;                          // 0x0280(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0290(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_miner_C_GetData) == 0x000010, "Wrong alignment on Prop_miner_C_GetData");
static_assert(sizeof(Prop_miner_C_GetData) == 0x000350, "Wrong size on Prop_miner_C_GetData");
static_assert(offsetof(Prop_miner_C_GetData, Data) == 0x000000, "Member 'Prop_miner_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000C0, "Member 'Prop_miner_C_GetData::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'Prop_miner_C_GetData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'Prop_miner_C_GetData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'Prop_miner_C_GetData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array) == 0x000118, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000128, "Member 'Prop_miner_C_GetData::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000138, "Member 'Prop_miner_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array_1) == 0x000148, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array_2) == 0x000158, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeStruct_struct_mVector) == 0x000168, "Member 'Prop_miner_C_GetData::K2Node_MakeStruct_struct_mVector' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array_3) == 0x000178, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array_4) == 0x000188, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_getData_data) == 0x0001A0, "Member 'Prop_miner_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000260, "Member 'Prop_miner_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, CallFunc_Array_Get_Item) == 0x000270, "Member 'Prop_miner_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_MakeArray_Array_5) == 0x000280, "Member 'Prop_miner_C_GetData::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000290, "Member 'Prop_miner_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_miner.prop_miner_C.getActionOptions
// 0x0088 (0x0088 - 0x0000)
struct Prop_miner_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A20[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A21[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_miner_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_miner_C_GetActionOptions");
static_assert(sizeof(Prop_miner_C_GetActionOptions) == 0x000088, "Wrong size on Prop_miner_C_GetActionOptions");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_miner_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_miner_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_miner_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_miner_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_miner_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_miner_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, Temp_bool_Variable) == 0x000048, "Member 'Prop_miner_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_miner_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000060, "Member 'Prop_miner_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'Prop_miner_C_GetActionOptions::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_miner_C_GetActionOptions, K2Node_Select_Default) == 0x000078, "Member 'Prop_miner_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");

}

