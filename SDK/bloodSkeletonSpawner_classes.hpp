#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bloodSkeletonSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bloodSkeletonSpawner.bloodSkeletonSpawner_C
// 0x0120 (0x0340 - 0x0220)
class AbloodSkeletonSpawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   bone9;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone10;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone8;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone23;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone26;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone24;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone2;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone4;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone3;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone28;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone30;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone29;                                            // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Thingy;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone27;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone25;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone16;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone21;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone20;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone19;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone18;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone17;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone22;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone15;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone14;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone13;                                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone5;                                             // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone6;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone12;                                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone11;                                            // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   bone7;                                             // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone1;                                             // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Bone;                                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_bloodSkeletonSpawner(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bloodSkeletonSpawner_C">();
	}
	static class AbloodSkeletonSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AbloodSkeletonSpawner_C>();
	}
};
static_assert(alignof(AbloodSkeletonSpawner_C) == 0x000008, "Wrong alignment on AbloodSkeletonSpawner_C");
static_assert(sizeof(AbloodSkeletonSpawner_C) == 0x000340, "Wrong size on AbloodSkeletonSpawner_C");
static_assert(offsetof(AbloodSkeletonSpawner_C, UberGraphFrame) == 0x000220, "Member 'AbloodSkeletonSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone9) == 0x000228, "Member 'AbloodSkeletonSpawner_C::bone9' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone10) == 0x000230, "Member 'AbloodSkeletonSpawner_C::bone10' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone8) == 0x000238, "Member 'AbloodSkeletonSpawner_C::bone8' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone23) == 0x000240, "Member 'AbloodSkeletonSpawner_C::bone23' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone26) == 0x000248, "Member 'AbloodSkeletonSpawner_C::bone26' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone24) == 0x000250, "Member 'AbloodSkeletonSpawner_C::bone24' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Bone2) == 0x000258, "Member 'AbloodSkeletonSpawner_C::Bone2' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone4) == 0x000260, "Member 'AbloodSkeletonSpawner_C::bone4' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Bone3) == 0x000268, "Member 'AbloodSkeletonSpawner_C::Bone3' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone28) == 0x000270, "Member 'AbloodSkeletonSpawner_C::bone28' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone30) == 0x000278, "Member 'AbloodSkeletonSpawner_C::bone30' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone29) == 0x000280, "Member 'AbloodSkeletonSpawner_C::bone29' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Thingy) == 0x000288, "Member 'AbloodSkeletonSpawner_C::Thingy' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone27) == 0x000290, "Member 'AbloodSkeletonSpawner_C::bone27' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone25) == 0x000298, "Member 'AbloodSkeletonSpawner_C::bone25' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone16) == 0x0002A0, "Member 'AbloodSkeletonSpawner_C::bone16' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone21) == 0x0002A8, "Member 'AbloodSkeletonSpawner_C::bone21' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone20) == 0x0002B0, "Member 'AbloodSkeletonSpawner_C::bone20' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone19) == 0x0002B8, "Member 'AbloodSkeletonSpawner_C::bone19' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone18) == 0x0002C0, "Member 'AbloodSkeletonSpawner_C::bone18' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone17) == 0x0002C8, "Member 'AbloodSkeletonSpawner_C::bone17' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone22) == 0x0002D0, "Member 'AbloodSkeletonSpawner_C::bone22' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone15) == 0x0002D8, "Member 'AbloodSkeletonSpawner_C::bone15' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone14) == 0x0002E0, "Member 'AbloodSkeletonSpawner_C::bone14' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone13) == 0x0002E8, "Member 'AbloodSkeletonSpawner_C::bone13' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone5) == 0x0002F0, "Member 'AbloodSkeletonSpawner_C::bone5' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone6) == 0x0002F8, "Member 'AbloodSkeletonSpawner_C::bone6' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone12) == 0x000300, "Member 'AbloodSkeletonSpawner_C::bone12' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone11) == 0x000308, "Member 'AbloodSkeletonSpawner_C::bone11' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, bone7) == 0x000310, "Member 'AbloodSkeletonSpawner_C::bone7' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Bone1) == 0x000318, "Member 'AbloodSkeletonSpawner_C::Bone1' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Bone) == 0x000320, "Member 'AbloodSkeletonSpawner_C::Bone' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Billboard) == 0x000328, "Member 'AbloodSkeletonSpawner_C::Billboard' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, Decal1) == 0x000330, "Member 'AbloodSkeletonSpawner_C::Decal1' has a wrong offset!");
static_assert(offsetof(AbloodSkeletonSpawner_C, DefaultSceneRoot) == 0x000338, "Member 'AbloodSkeletonSpawner_C::DefaultSceneRoot' has a wrong offset!");

}

