#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_picture_h

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_settings_structs.hpp"


namespace SDK::Params
{

// Function prop_picture_h.prop_picture_h_C.ExecuteUbergraph_prop_picture_h
// 0x01C8 (0x01C8 - 0x0000)
struct Prop_picture_h_C_ExecuteUbergraph_prop_picture_h final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_VictoryIntPlusEquals_IntOut;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB8[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_Select_Default;                             // 0x00C0(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB9[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_LowEntry_LocalVariable_Value__Object;       // 0x00D8(0x0010)(ReferenceParm)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x00E8(0x00CC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBA[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h) == 0x000008, "Wrong alignment on Prop_picture_h_C_ExecuteUbergraph_prop_picture_h");
static_assert(sizeof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h) == 0x0001C8, "Wrong size on Prop_picture_h_C_ExecuteUbergraph_prop_picture_h");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, EntryPoint) == 0x000000, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_VictoryIntPlusEquals_IntOut) == 0x000010, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_VictoryIntPlusEquals_IntOut' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, Temp_int_Variable) == 0x000020, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Event_player) == 0x000028, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Event_hit) == 0x000030, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Event_index) == 0x0000B8, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Event_action) == 0x0000BC, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Select_Default) == 0x0000C0, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_SwitchEnum_CmpSuccess) == 0x0000D0, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0000D8, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, K2Node_Event_settings) == 0x0000E8, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ExecuteUbergraph_prop_picture_h, CallFunc_Percent_IntInt_ReturnValue) == 0x0001C4, "Member 'Prop_picture_h_C_ExecuteUbergraph_prop_picture_h::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_picture_h_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_picture_h_C_ActionOptionIndex");
static_assert(sizeof(Prop_picture_h_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_picture_h_C_ActionOptionIndex");
static_assert(offsetof(Prop_picture_h_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_picture_h_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_picture_h_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_picture_h_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_picture_h_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.upd
// 0x0018 (0x0018 - 0x0000)
struct Prop_picture_h_C_Upd final
{
public:
	class UTexture2D*                             CallFunc_getCusPic_tex;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     CallFunc_getCusPic_arra;                           // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_picture_h_C_Upd) == 0x000008, "Wrong alignment on Prop_picture_h_C_Upd");
static_assert(sizeof(Prop_picture_h_C_Upd) == 0x000018, "Wrong size on Prop_picture_h_C_Upd");
static_assert(offsetof(Prop_picture_h_C_Upd, CallFunc_getCusPic_tex) == 0x000000, "Member 'Prop_picture_h_C_Upd::CallFunc_getCusPic_tex' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_Upd, CallFunc_getCusPic_arra) == 0x000008, "Member 'Prop_picture_h_C_Upd::CallFunc_getCusPic_arra' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.settingsApplied
// 0x00CC (0x00CC - 0x0000)
struct Prop_picture_h_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00CC)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_SettingsApplied) == 0x000004, "Wrong alignment on Prop_picture_h_C_SettingsApplied");
static_assert(sizeof(Prop_picture_h_C_SettingsApplied) == 0x0000CC, "Wrong size on Prop_picture_h_C_SettingsApplied");
static_assert(offsetof(Prop_picture_h_C_SettingsApplied, Settings) == 0x000000, "Member 'Prop_picture_h_C_SettingsApplied::Settings' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_picture_h_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBB[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_LoadData) == 0x000010, "Wrong alignment on Prop_picture_h_C_LoadData");
static_assert(sizeof(Prop_picture_h_C_LoadData) == 0x0000E0, "Wrong size on Prop_picture_h_C_LoadData");
static_assert(offsetof(Prop_picture_h_C_LoadData, Data) == 0x000000, "Member 'Prop_picture_h_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LoadData, Return) == 0x0000C0, "Member 'Prop_picture_h_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_picture_h_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_picture_h_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_picture_h_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.getData
// 0x0270 (0x0270 - 0x0000)
struct Prop_picture_h_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_GetData) == 0x000010, "Wrong alignment on Prop_picture_h_C_GetData");
static_assert(sizeof(Prop_picture_h_C_GetData) == 0x000270, "Wrong size on Prop_picture_h_C_GetData");
static_assert(offsetof(Prop_picture_h_C_GetData, Data) == 0x000000, "Member 'Prop_picture_h_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_picture_h_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_picture_h_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000190, "Member 'Prop_picture_h_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'Prop_picture_h_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'Prop_picture_h_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.lookAt
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_picture_h_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBC[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_picture_h_C_LookAt) == 0x000008, "Wrong alignment on Prop_picture_h_C_LookAt");
static_assert(sizeof(Prop_picture_h_C_LookAt) == 0x0000B0, "Wrong size on Prop_picture_h_C_LookAt");
static_assert(offsetof(Prop_picture_h_C_LookAt, Player) == 0x000000, "Member 'Prop_picture_h_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_picture_h_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LookAt, Return) == 0x000090, "Member 'Prop_picture_h_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LookAt, Text) == 0x000098, "Member 'Prop_picture_h_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_picture_h_C_LookAt::boundObjectReplace' has a wrong offset!");

// Function prop_picture_h.prop_picture_h_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Prop_picture_h_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_picture_h_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_picture_h_C_GetActionOptions");
static_assert(sizeof(Prop_picture_h_C_GetActionOptions) == 0x000058, "Wrong size on Prop_picture_h_C_GetActionOptions");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_picture_h_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_picture_h_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_picture_h_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_picture_h_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_picture_h_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_picture_h_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_picture_h_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Prop_picture_h_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

