#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Church

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass church.church_C
// 0x0040 (0x0260 - 0x0220)
class AChurch_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RenderCheck;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   building;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTp;                                             // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                N;                                                 // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Tp(struct FVector* NewParam);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void bell();
	void ExecuteUbergraph_church(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"church_C">();
	}
	static class AChurch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChurch_C>();
	}
};
static_assert(alignof(AChurch_C) == 0x000008, "Wrong alignment on AChurch_C");
static_assert(sizeof(AChurch_C) == 0x000260, "Wrong size on AChurch_C");
static_assert(offsetof(AChurch_C, UberGraphFrame) == 0x000220, "Member 'AChurch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AChurch_C, PointLight) == 0x000228, "Member 'AChurch_C::PointLight' has a wrong offset!");
static_assert(offsetof(AChurch_C, RenderCheck) == 0x000230, "Member 'AChurch_C::RenderCheck' has a wrong offset!");
static_assert(offsetof(AChurch_C, building) == 0x000238, "Member 'AChurch_C::building' has a wrong offset!");
static_assert(offsetof(AChurch_C, DefaultSceneRoot) == 0x000240, "Member 'AChurch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AChurch_C, CanTp) == 0x000248, "Member 'AChurch_C::CanTp' has a wrong offset!");
static_assert(offsetof(AChurch_C, N) == 0x00024C, "Member 'AChurch_C::N' has a wrong offset!");
static_assert(offsetof(AChurch_C, NewVar_0) == 0x000258, "Member 'AChurch_C::NewVar_0' has a wrong offset!");

}

