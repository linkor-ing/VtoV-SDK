#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FastNoiseGenerator

#include "Basic.hpp"

#include "FastNoiseGenerator_classes.hpp"
#include "FastNoiseGenerator_parameters.hpp"


namespace SDK
{

// Function FastNoiseGenerator.FastNoiseWrapper.GetNoiseType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFastNoise_NoiseType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFastNoise_NoiseType UFastNoiseWrapper::GetNoiseType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetNoiseType");

	Params::FastNoiseWrapper_GetNoiseType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetCellularJitter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   CellularJitter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetCellularJitter(const float CellularJitter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetCellularJitter");

	Params::FastNoiseWrapper_SetCellularJitter Parms{};

	Parms.CellularJitter = CellularJitter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetDistanceFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_CellularDistanceFunction     DistanceFunction                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetDistanceFunction(const EFastNoise_CellularDistanceFunction DistanceFunction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetDistanceFunction");

	Params::FastNoiseWrapper_SetDistanceFunction Parms{};

	Parms.DistanceFunction = DistanceFunction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetFractalType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_FractalType                  FractalType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetFractalType(const EFastNoise_FractalType FractalType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetFractalType");

	Params::FastNoiseWrapper_SetFractalType Parms{};

	Parms.FractalType = FractalType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetFrequency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Frequency                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetFrequency(const float Frequency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetFrequency");

	Params::FastNoiseWrapper_SetFrequency Parms{};

	Parms.Frequency = Frequency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetGain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Gain                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetGain(const float Gain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetGain");

	Params::FastNoiseWrapper_SetGain Parms{};

	Parms.Gain = Gain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetInterpolation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_Interp                       Interp                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetInterpolation(const EFastNoise_Interp Interp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetInterpolation");

	Params::FastNoiseWrapper_SetInterpolation Parms{};

	Parms.Interp = Interp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetLacunarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Lacunarity                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetLacunarity(const float Lacunarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetLacunarity");

	Params::FastNoiseWrapper_SetLacunarity Parms{};

	Parms.Lacunarity = Lacunarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetNoiseType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_NoiseType                    NoiseType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetNoiseType(const EFastNoise_NoiseType NoiseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetNoiseType");

	Params::FastNoiseWrapper_SetNoiseType Parms{};

	Parms.NoiseType = NoiseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetOctaves
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Octaves                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetOctaves(const int32 Octaves)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetOctaves");

	Params::FastNoiseWrapper_SetOctaves Parms{};

	Parms.Octaves = Octaves;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetReturnType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_CellularReturnType           CellularReturnType                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetReturnType(const EFastNoise_CellularReturnType CellularReturnType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetReturnType");

	Params::FastNoiseWrapper_SetReturnType Parms{};

	Parms.CellularReturnType = CellularReturnType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetSeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Seed                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetSeed(const int32 Seed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetSeed");

	Params::FastNoiseWrapper_SetSeed Parms{};

	Parms.Seed = Seed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.SetupFastNoise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFastNoise_NoiseType                    NoiseType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Seed                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Frequency                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastNoise_Interp                       Interp                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastNoise_FractalType                  FractalType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Octaves                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Lacunarity                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Gain                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CellularJitter                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastNoise_CellularDistanceFunction     CellularDistanceFunction                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastNoise_CellularReturnType           CellularReturnType                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFastNoiseWrapper::SetupFastNoise(const EFastNoise_NoiseType NoiseType, const int32 Seed, const float Frequency, const EFastNoise_Interp Interp, const EFastNoise_FractalType FractalType, const int32 Octaves, const float Lacunarity, const float Gain, const float CellularJitter, const EFastNoise_CellularDistanceFunction CellularDistanceFunction, const EFastNoise_CellularReturnType CellularReturnType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "SetupFastNoise");

	Params::FastNoiseWrapper_SetupFastNoise Parms{};

	Parms.NoiseType = NoiseType;
	Parms.Seed = Seed;
	Parms.Frequency = Frequency;
	Parms.Interp = Interp;
	Parms.FractalType = FractalType;
	Parms.Octaves = Octaves;
	Parms.Lacunarity = Lacunarity;
	Parms.Gain = Gain;
	Parms.CellularJitter = CellularJitter;
	Parms.CellularDistanceFunction = CellularDistanceFunction;
	Parms.CellularReturnType = CellularReturnType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetCellularJitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetCellularJitter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetCellularJitter");

	Params::FastNoiseWrapper_GetCellularJitter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetDistanceFunction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFastNoise_CellularDistanceFunction     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFastNoise_CellularDistanceFunction UFastNoiseWrapper::GetDistanceFunction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetDistanceFunction");

	Params::FastNoiseWrapper_GetDistanceFunction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetFractalType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFastNoise_FractalType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFastNoise_FractalType UFastNoiseWrapper::GetFractalType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetFractalType");

	Params::FastNoiseWrapper_GetFractalType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetFrequency
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetFrequency() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetFrequency");

	Params::FastNoiseWrapper_GetFrequency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetGain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetGain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetGain");

	Params::FastNoiseWrapper_GetGain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetInterpolation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFastNoise_Interp                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFastNoise_Interp UFastNoiseWrapper::GetInterpolation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetInterpolation");

	Params::FastNoiseWrapper_GetInterpolation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetLacunarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetLacunarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetLacunarity");

	Params::FastNoiseWrapper_GetLacunarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetNoise2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetNoise2D(const float X, const float Y) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetNoise2D");

	Params::FastNoiseWrapper_GetNoise2D Parms{};

	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetNoise3D
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFastNoiseWrapper::GetNoise3D(const float X, const float Y, const float Z) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetNoise3D");

	Params::FastNoiseWrapper_GetNoise3D Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetOctaves
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFastNoiseWrapper::GetOctaves() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetOctaves");

	Params::FastNoiseWrapper_GetOctaves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetReturnType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFastNoise_CellularReturnType           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFastNoise_CellularReturnType UFastNoiseWrapper::GetReturnType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetReturnType");

	Params::FastNoiseWrapper_GetReturnType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.GetSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFastNoiseWrapper::GetSeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "GetSeed");

	Params::FastNoiseWrapper_GetSeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FastNoiseGenerator.FastNoiseWrapper.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFastNoiseWrapper::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FastNoiseWrapper", "IsInitialized");

	Params::FastNoiseWrapper_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

