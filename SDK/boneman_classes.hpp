#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: boneman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass boneman.boneman_C
// 0x00B8 (0x02D8 - 0x0220)
class Aboneman_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Bounds;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_radarPoint_C*                     RadarPoint;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Head;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_0;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_5;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_7;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_1;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Spine_3;                                           // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Spine_0;                                           // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Spine_2;                                           // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_12;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_3;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_2;                                             // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_11;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_10;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_9;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_4;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_6;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Leg_8;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Spine_1;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeLoc();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_boneman(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"boneman_C">();
	}
	static class Aboneman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Aboneman_C>();
	}
};
static_assert(alignof(Aboneman_C) == 0x000008, "Wrong alignment on Aboneman_C");
static_assert(sizeof(Aboneman_C) == 0x0002D8, "Wrong size on Aboneman_C");
static_assert(offsetof(Aboneman_C, UberGraphFrame) == 0x000220, "Member 'Aboneman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Bounds) == 0x000228, "Member 'Aboneman_C::Bounds' has a wrong offset!");
static_assert(offsetof(Aboneman_C, RadarPoint) == 0x000230, "Member 'Aboneman_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Head) == 0x000238, "Member 'Aboneman_C::Head' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_0) == 0x000240, "Member 'Aboneman_C::Leg_0' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_5) == 0x000248, "Member 'Aboneman_C::Leg_5' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_7) == 0x000250, "Member 'Aboneman_C::Leg_7' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_1) == 0x000258, "Member 'Aboneman_C::Leg_1' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Spine_3) == 0x000260, "Member 'Aboneman_C::Spine_3' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Spine_0) == 0x000268, "Member 'Aboneman_C::Spine_0' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Spine_2) == 0x000270, "Member 'Aboneman_C::Spine_2' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_12) == 0x000278, "Member 'Aboneman_C::Leg_12' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_3) == 0x000280, "Member 'Aboneman_C::Leg_3' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_2) == 0x000288, "Member 'Aboneman_C::Leg_2' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_11) == 0x000290, "Member 'Aboneman_C::Leg_11' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_10) == 0x000298, "Member 'Aboneman_C::Leg_10' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_9) == 0x0002A0, "Member 'Aboneman_C::Leg_9' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_4) == 0x0002A8, "Member 'Aboneman_C::Leg_4' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_6) == 0x0002B0, "Member 'Aboneman_C::Leg_6' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Leg_8) == 0x0002B8, "Member 'Aboneman_C::Leg_8' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Spine_1) == 0x0002C0, "Member 'Aboneman_C::Spine_1' has a wrong offset!");
static_assert(offsetof(Aboneman_C, Billboard) == 0x0002C8, "Member 'Aboneman_C::Billboard' has a wrong offset!");
static_assert(offsetof(Aboneman_C, DefaultSceneRoot) == 0x0002D0, "Member 'Aboneman_C::DefaultSceneRoot' has a wrong offset!");

}

