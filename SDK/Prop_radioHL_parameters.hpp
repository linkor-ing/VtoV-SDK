#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_radioHL

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_radioHL.prop_radioHL_C.ExecuteUbergraph_prop_radioHL
// 0x00B8 (0x00B8 - 0x0000)
struct Prop_radioHL_C_ExecuteUbergraph_prop_radioHL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FA[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL) == 0x000008, "Wrong alignment on Prop_radioHL_C_ExecuteUbergraph_prop_radioHL");
static_assert(sizeof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL) == 0x0000B8, "Wrong size on Prop_radioHL_C_ExecuteUbergraph_prop_radioHL");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, EntryPoint) == 0x000000, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, Temp_bool_Variable) == 0x000004, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, Temp_object_Variable) == 0x000008, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, Temp_object_Variable_1) == 0x000010, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, K2Node_Event_player) == 0x000018, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, K2Node_Event_hit) == 0x000020, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_ExecuteUbergraph_prop_radioHL, K2Node_Select_Default) == 0x0000B0, "Member 'Prop_radioHL_C_ExecuteUbergraph_prop_radioHL::K2Node_Select_Default' has a wrong offset!");

// Function prop_radioHL.prop_radioHL_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct Prop_radioHL_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_radioHL_C_Player_use) == 0x000008, "Wrong alignment on Prop_radioHL_C_Player_use");
static_assert(sizeof(Prop_radioHL_C_Player_use) == 0x000090, "Wrong size on Prop_radioHL_C_Player_use");
static_assert(offsetof(Prop_radioHL_C_Player_use, Player) == 0x000000, "Member 'Prop_radioHL_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(Prop_radioHL_C_Player_use, Param_Hit) == 0x000008, "Member 'Prop_radioHL_C_Player_use::Param_Hit' has a wrong offset!");

}

