#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_sponge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_sponge.prop_sponge_C.ExecuteUbergraph_prop_sponge
// 0x05B8 (0x05B8 - 0x0000)
struct Prop_sponge_C_ExecuteUbergraph_prop_sponge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0120(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0174(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3E43[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_trigger_obj;                          // 0x0200(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E44[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0240(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E45[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E46[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrunge_C*                              K2Node_DynamicCast_AsGrunge;                       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E47[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E48[0x2];                                     // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E49[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_trigger_obj_1;                        // 0x0298(0x0010)(ReferenceParm)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4A[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_1;                              // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_1;                                // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x02F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4B[0x1];                                     // 0x0383(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4C[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4D[0x4];                                     // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_bucket_C*                         K2Node_DynamicCast_AsProp_Bucket;                  // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4E[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_DynamicCast_AsWater_Volume;                 // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_dipped_isDipped;                          // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4F[0x1];                                     // 0x0423(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E50[0x3];                                     // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0440(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0450(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E51[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x04DC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E52[0x2];                                     // 0x04EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E53[0x4];                                     // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AD_window_C*                            K2Node_DynamicCast_AsD_Window;                     // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E54[0x7];                                     // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors_1;          // 0x0580(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue_1;        // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E55[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E56[0x4];                                     // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrunge_C*                              K2Node_DynamicCast_AsGrunge_1;                     // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_sponge_C_ExecuteUbergraph_prop_sponge) == 0x000008, "Wrong alignment on Prop_sponge_C_ExecuteUbergraph_prop_sponge");
static_assert(sizeof(Prop_sponge_C_ExecuteUbergraph_prop_sponge) == 0x0005B8, "Wrong size on Prop_sponge_C_ExecuteUbergraph_prop_sponge");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, EntryPoint) == 0x000000, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_8) == 0x000008, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_7) == 0x000020, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_6) == 0x000038, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_5) == 0x000050, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_name_Variable) == 0x000068, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_object_Variable) == 0x000070, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_object_Variable_1) == 0x000080, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_object_Variable_2) == 0x000090, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_4) == 0x0000A0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_3) == 0x0000B8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000C0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_2) == 0x0000D0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000D8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_1) == 0x0000E8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName) == 0x000100, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_8) == 0x000108, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_name_Variable_1) == 0x000118, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_object_Variable_3) == 0x000120, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_int_Array_Index_Variable) == 0x000130, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_Event_water) == 0x000140, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000148, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_ComponentBoundEvent_HitComponent) == 0x000150, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_ComponentBoundEvent_OtherActor) == 0x000158, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_ComponentBoundEvent_OtherComp) == 0x000160, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000168, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_ComponentBoundEvent_Hit) == 0x000174, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_obj_trigger_obj) == 0x000200, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_obj_trigger_obj' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_GetVelocity_ReturnValue) == 0x000210, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_GetComponentBounds_Origin) == 0x00021C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_GetComponentBounds_BoxExtent) == 0x000228, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_GetComponentBounds_SphereRadius) == 0x000234, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_VSize_ReturnValue) == 0x000238, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_SphereOverlapActors_OutActors) == 0x000240, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_SphereOverlapActors_ReturnValue) == 0x000250, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000251, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Array_Get_Item) == 0x000258, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_AsGrunge) == 0x000268, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_AsGrunge' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_bSuccess) == 0x000270, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_Event_player_2) == 0x000278, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_Event_player_1) == 0x000280, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, Temp_int_Loop_Counter_Variable_1) == 0x000288, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_IsValid_ReturnValue) == 0x00028C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Less_IntInt_ReturnValue) == 0x00028D, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Add_IntInt_ReturnValue_1) == 0x000290, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_obj_trigger_obj_1) == 0x000298, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_obj_trigger_obj_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0002A8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_arm_start) == 0x0002B0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_arm_end) == 0x0002BC, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_IsValid_ReturnValue_1) == 0x0002C8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_Event_player) == 0x0002D0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_arm_start_1) == 0x0002D8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_arm_start_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_arm_end_1) == 0x0002E4, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_arm_end_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0002F0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0002F8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000380, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_bBlockingHit) == 0x000381, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_bInitialOverlap) == 0x000382, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Time) == 0x000384, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Distance) == 0x000388, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Location) == 0x00038C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Normal) == 0x0003A4, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ImpactNormal) == 0x0003B0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_PhysMat) == 0x0003C0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitActor) == 0x0003C8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitComponent) == 0x0003D0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitBoneName) == 0x0003D8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitItem) == 0x0003E0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ElementIndex) == 0x0003E4, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_FaceIndex) == 0x0003E8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_TraceStart) == 0x0003EC, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_TraceEnd) == 0x0003F8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_AsProp_Bucket) == 0x000408, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_AsProp_Bucket' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_bSuccess_1) == 0x000410, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_AsWater_Volume) == 0x000418, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_AsWater_Volume' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_bSuccess_2) == 0x000420, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_dipped_isDipped) == 0x000421, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_dipped_isDipped' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_IsValid_ReturnValue_2) == 0x000422, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000424, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CustomEvent_NotifyName_9) == 0x000428, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000430, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000434, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_FMax_ReturnValue) == 0x000438, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00043C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_obj_statDyn_obj) == 0x000440, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000450, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0004D8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_CreateDelegate_OutputDelegate_9) == 0x0004DC, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0004EC, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0004ED, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Time_1) == 0x0004F0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Distance_1) == 0x0004F4, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Location_1) == 0x0004F8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000504, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_Normal_1) == 0x000510, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00051C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_PhysMat_1) == 0x000528, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitActor_1) == 0x000530, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitComponent_1) == 0x000538, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitBoneName_1) == 0x000540, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_HitItem_1) == 0x000548, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_ElementIndex_1) == 0x00054C, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_FaceIndex_1) == 0x000550, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_TraceStart_1) == 0x000554, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_BreakHitResult_TraceEnd_1) == 0x000560, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_AsD_Window) == 0x000570, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_AsD_Window' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_bSuccess_3) == 0x000578, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_SphereOverlapActors_OutActors_1) == 0x000580, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_SphereOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_SphereOverlapActors_ReturnValue_1) == 0x000590, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_SphereOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Array_Get_Item_1) == 0x000598, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Array_Length_ReturnValue_1) == 0x0005A0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_AsGrunge_1) == 0x0005A8, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_AsGrunge_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, K2Node_DynamicCast_bSuccess_4) == 0x0005B0, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_ExecuteUbergraph_prop_sponge, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005B1, "Member 'Prop_sponge_C_ExecuteUbergraph_prop_sponge::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Param_Hit) == 0x000024, "Member 'Prop_sponge_C_BndEvt__prop_sponge_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Param_Hit' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000004, "Wrong alignment on Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(sizeof(Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000008, "Wrong size on Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(offsetof(Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnCompleted_7AB3ADC64B1C9C34BB990BA811472BD6::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000004, "Wrong alignment on Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(sizeof(Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000008, "Wrong size on Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(offsetof(Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnBlendOut_7AB3ADC64B1C9C34BB990BA811472BD6::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000004, "Wrong alignment on Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(sizeof(Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000008, "Wrong size on Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(offsetof(Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnInterrupted_7AB3ADC64B1C9C34BB990BA811472BD6::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000004, "Wrong alignment on Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(sizeof(Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000008, "Wrong size on Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(offsetof(Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnNotifyBegin_7AB3ADC64B1C9C34BB990BA811472BD6::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000004, "Wrong alignment on Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(sizeof(Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6) == 0x000008, "Wrong size on Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6");
static_assert(offsetof(Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnNotifyEnd_7AB3ADC64B1C9C34BB990BA811472BD6::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000004, "Wrong alignment on Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(sizeof(Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000008, "Wrong size on Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(offsetof(Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnCompleted_D7F53866450AC44C2E9A9EA70ECE8CE0::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000004, "Wrong alignment on Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(sizeof(Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000008, "Wrong size on Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(offsetof(Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnBlendOut_D7F53866450AC44C2E9A9EA70ECE8CE0::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000004, "Wrong alignment on Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(sizeof(Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000008, "Wrong size on Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(offsetof(Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnInterrupted_D7F53866450AC44C2E9A9EA70ECE8CE0::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000004, "Wrong alignment on Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(sizeof(Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000008, "Wrong size on Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(offsetof(Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnNotifyBegin_D7F53866450AC44C2E9A9EA70ECE8CE0::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000004, "Wrong alignment on Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(sizeof(Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0) == 0x000008, "Wrong size on Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0");
static_assert(offsetof(Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0, NotifyName) == 0x000000, "Member 'Prop_sponge_C_OnNotifyEnd_D7F53866450AC44C2E9A9EA70ECE8CE0::NotifyName' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.wash
// 0x0058 (0x0058 - 0x0000)
struct Prop_sponge_C_Wash final
{
public:
	float                                         Replace;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sub;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatOut;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E57[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Param_Dynmat;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Size;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E58[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_Wash) == 0x000008, "Wrong alignment on Prop_sponge_C_Wash");
static_assert(sizeof(Prop_sponge_C_Wash) == 0x000058, "Wrong size on Prop_sponge_C_Wash");
static_assert(offsetof(Prop_sponge_C_Wash, Replace) == 0x000000, "Member 'Prop_sponge_C_Wash::Replace' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, Sub) == 0x000004, "Member 'Prop_sponge_C_Wash::Sub' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, FloatOut) == 0x000008, "Member 'Prop_sponge_C_Wash::FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, Param_Dynmat) == 0x000010, "Member 'Prop_sponge_C_Wash::Param_Dynmat' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, Param_Size) == 0x000018, "Member 'Prop_sponge_C_Wash::Param_Size' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'Prop_sponge_C_Wash::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00001D, "Member 'Prop_sponge_C_Wash::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_GetVelocity_ReturnValue) == 0x000020, "Member 'Prop_sponge_C_Wash::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_VSize_ReturnValue) == 0x00002C, "Member 'Prop_sponge_C_Wash::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'Prop_sponge_C_Wash::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000034, "Member 'Prop_sponge_C_Wash::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'Prop_sponge_C_Wash::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Prop_sponge_C_Wash::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Prop_sponge_C_Wash::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_SelectFloat_ReturnValue_1) == 0x000044, "Member 'Prop_sponge_C_Wash::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Prop_sponge_C_Wash::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x00004C, "Member 'Prop_sponge_C_Wash::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_sponge_C_Wash, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Prop_sponge_C_Wash::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_sponge_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_sponge_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_sponge_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_sponge_C_PlayerHandUse_LMB, Param_Player) == 0x000000, "Member 'Prop_sponge_C_PlayerHandUse_LMB::Param_Player' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on Prop_sponge_C_PlayerHandRelease_RMB");
static_assert(sizeof(Prop_sponge_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on Prop_sponge_C_PlayerHandRelease_RMB");
static_assert(offsetof(Prop_sponge_C_PlayerHandRelease_RMB, Param_Player) == 0x000000, "Member 'Prop_sponge_C_PlayerHandRelease_RMB::Param_Player' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_sponge_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_sponge_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_sponge_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_sponge_C_PlayerHandUse_RMB, Param_Player) == 0x000000, "Member 'Prop_sponge_C_PlayerHandUse_RMB::Param_Player' has a wrong offset!");

// Function prop_sponge.prop_sponge_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct Prop_sponge_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_sponge_C_EnterWater) == 0x000008, "Wrong alignment on Prop_sponge_C_EnterWater");
static_assert(sizeof(Prop_sponge_C_EnterWater) == 0x000008, "Wrong size on Prop_sponge_C_EnterWater");
static_assert(offsetof(Prop_sponge_C_EnterWater, Water) == 0x000000, "Member 'Prop_sponge_C_EnterWater::Water' has a wrong offset!");

}

