#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_serverMinigame

#include "Basic.hpp"

#include "Umg_serverMinigame_classes.hpp"
#include "Umg_serverMinigame_parameters.hpp"


namespace SDK
{

// Function umg_serverMinigame.umg_serverMinigame_C.ExecuteUbergraph_umg_serverMinigame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_serverMinigame_C::ExecuteUbergraph_umg_serverMinigame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "ExecuteUbergraph_umg_serverMinigame");

	Params::Umg_serverMinigame_C_ExecuteUbergraph_umg_serverMinigame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_serverMinigame.umg_serverMinigame_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_serverMinigame_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "Tick");

	Params::Umg_serverMinigame_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_serverMinigame.umg_serverMinigame_C.End
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Correct                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUmg_serverMinigame_C::End(bool Correct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "End");

	Params::Umg_serverMinigame_C_End Parms{};

	Parms.Correct = Correct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_serverMinigame.umg_serverMinigame_C.BndEvt__button_exit_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UUmg_serverMinigame_C::BndEvt__button_exit_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "BndEvt__button_exit_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_serverMinigame.umg_serverMinigame_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUmg_serverMinigame_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_serverMinigame.umg_serverMinigame_C.Enter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_serverMinigame_C::Enter(class AMainPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "Enter");

	Params::Umg_serverMinigame_C_Enter Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_serverMinigame.umg_serverMinigame_C.Exit
// (Public, BlueprintCallable, BlueprintEvent)

void UUmg_serverMinigame_C::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_serverMinigame.umg_serverMinigame_C.draw
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenPositionB                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_serverMinigame_C::Draw(const struct FVector2D& ScreenPositionB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "draw");

	Params::Umg_serverMinigame_C_Draw Parms{};

	Parms.ScreenPositionB = std::move(ScreenPositionB);

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_serverMinigame.umg_serverMinigame_C.compare
// (Public, BlueprintCallable, BlueprintEvent)

void UUmg_serverMinigame_C::Compare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "compare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_serverMinigame.umg_serverMinigame_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUmg_serverMinigame_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "OnKeyDown");

	Params::Umg_serverMinigame_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function umg_serverMinigame.umg_serverMinigame_C.createTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUmg_serverMinigame_C::CreateTime(float InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_serverMinigame_C", "createTime");

	Params::Umg_serverMinigame_C_CreateTime Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

