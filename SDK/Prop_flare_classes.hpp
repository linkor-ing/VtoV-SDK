#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_flare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_flare.prop_flare_C
// 0x0030 (0x0398 - 0x0368)
class AProp_flare_C final : public AProp_C
{
public:
	uint8                                         Pad_37BC[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_flare_C;                       // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Fire;                                              // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_flare;                                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Life;                                              // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_flare(int32 EntryPoint);
	void BndEvt__prop_flare_fire_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_flare_C">();
	}
	static class AProp_flare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_flare_C>();
	}
};
static_assert(alignof(AProp_flare_C) == 0x000008, "Wrong alignment on AProp_flare_C");
static_assert(sizeof(AProp_flare_C) == 0x000398, "Wrong size on AProp_flare_C");
static_assert(offsetof(AProp_flare_C, UberGraphFrame_Prop_flare_C) == 0x000368, "Member 'AProp_flare_C::UberGraphFrame_Prop_flare_C' has a wrong offset!");
static_assert(offsetof(AProp_flare_C, Fire) == 0x000370, "Member 'AProp_flare_C::Fire' has a wrong offset!");
static_assert(offsetof(AProp_flare_C, Eff_flare) == 0x000378, "Member 'AProp_flare_C::Eff_flare' has a wrong offset!");
static_assert(offsetof(AProp_flare_C, Audio) == 0x000380, "Member 'AProp_flare_C::Audio' has a wrong offset!");
static_assert(offsetof(AProp_flare_C, PointLight) == 0x000388, "Member 'AProp_flare_C::PointLight' has a wrong offset!");
static_assert(offsetof(AProp_flare_C, Life) == 0x000390, "Member 'AProp_flare_C::Life' has a wrong offset!");

}

