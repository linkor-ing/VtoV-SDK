#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_flashbang

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function umg_flashbang.umg_flashbang_C.ExecuteUbergraph_umg_flashbang
// 0x0064 (0x0064 - 0x0000)
struct Umg_flashbang_C_ExecuteUbergraph_umg_flashbang final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang) == 0x000004, "Wrong alignment on Umg_flashbang_C_ExecuteUbergraph_umg_flashbang");
static_assert(sizeof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang) == 0x000064, "Wrong size on Umg_flashbang_C_ExecuteUbergraph_umg_flashbang");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, EntryPoint) == 0x000000, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, K2Node_Event_MyGeometry) == 0x000004, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000044, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_LinearColorLerp_ReturnValue) == 0x000050, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_ExecuteUbergraph_umg_flashbang, CallFunc_Less_FloatFloat_ReturnValue) == 0x000060, "Member 'Umg_flashbang_C_ExecuteUbergraph_umg_flashbang::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function umg_flashbang.umg_flashbang_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_flashbang_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_flashbang_C_Tick) == 0x000004, "Wrong alignment on Umg_flashbang_C_Tick");
static_assert(sizeof(Umg_flashbang_C_Tick) == 0x00003C, "Wrong size on Umg_flashbang_C_Tick");
static_assert(offsetof(Umg_flashbang_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_flashbang_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_flashbang_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_flashbang_C_Tick::InDeltaTime' has a wrong offset!");

}

