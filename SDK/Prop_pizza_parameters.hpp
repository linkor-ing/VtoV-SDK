#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_pizza

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"


namespace SDK::Params
{

// Function prop_pizza.prop_pizza_C.ExecuteUbergraph_prop_pizza
// 0x0200 (0x0200 - 0x0000)
struct Prop_pizza_C_ExecuteUbergraph_prop_pizza final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1072[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_3;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1073[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1074[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1075[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1076[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1077[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0160(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addFood_full;                             // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1078[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_ExecuteUbergraph_prop_pizza) == 0x000008, "Wrong alignment on Prop_pizza_C_ExecuteUbergraph_prop_pizza");
static_assert(sizeof(Prop_pizza_C_ExecuteUbergraph_prop_pizza) == 0x000200, "Wrong size on Prop_pizza_C_ExecuteUbergraph_prop_pizza");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, EntryPoint) == 0x000000, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_7) == 0x000004, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_6) == 0x00001C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_5) == 0x000034, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable) == 0x00004C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_bool_Variable) == 0x000054, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_SwitchName_CmpSuccess) == 0x000055, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable_1) == 0x000058, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable_2) == 0x000060, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_4) == 0x000068, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_3) == 0x000080, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_4) == 0x000088, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_2) == 0x000098, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000A0, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_1) == 0x0000B0, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000B8, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName) == 0x0000C8, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000D0, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable_3) == 0x0000E0, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_bool_Variable_1) == 0x0000E8, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_SwitchName_CmpSuccess_1) == 0x0000E9, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable_4) == 0x0000EC, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_name_Variable_5) == 0x0000F4, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, Temp_int_Variable) == 0x0000FC, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_8) == 0x000100, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_8) == 0x000108, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CreateDelegate_OutputDelegate_9) == 0x00011C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Select_Default) == 0x00012C, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000138, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_Greater_IntInt_ReturnValue) == 0x000140, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_IsValid_ReturnValue) == 0x000141, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Select_Default_1) == 0x000144, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000150, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Event_player) == 0x000158, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Event_hit) == 0x000160, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Event_index) == 0x0001E8, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_Event_action) == 0x0001EC, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_SwitchEnum_CmpSuccess) == 0x0001ED, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_addFood_full) == 0x0001EE, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_addFood_full' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_IsValid_ReturnValue_1) == 0x0001EF, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, K2Node_CustomEvent_NotifyName_9) == 0x0001F0, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001F8, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ExecuteUbergraph_prop_pizza, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001FC, "Member 'Prop_pizza_C_ExecuteUbergraph_prop_pizza::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_pizza_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_pizza_C_ActionOptionIndex");
static_assert(sizeof(Prop_pizza_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_pizza_C_ActionOptionIndex");
static_assert(offsetof(Prop_pizza_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_pizza_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_pizza_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_pizza_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_pizza_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnCompleted_65498482477B12E33D62FBBDD42CD9F5
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5) == 0x000004, "Wrong alignment on Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5");
static_assert(sizeof(Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5) == 0x000008, "Wrong size on Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5");
static_assert(offsetof(Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnCompleted_65498482477B12E33D62FBBDD42CD9F5::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnBlendOut_65498482477B12E33D62FBBDD42CD9F5
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5) == 0x000004, "Wrong alignment on Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5");
static_assert(sizeof(Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5) == 0x000008, "Wrong size on Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5");
static_assert(offsetof(Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnBlendOut_65498482477B12E33D62FBBDD42CD9F5::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnInterrupted_65498482477B12E33D62FBBDD42CD9F5
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5) == 0x000004, "Wrong alignment on Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5");
static_assert(sizeof(Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5) == 0x000008, "Wrong size on Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5");
static_assert(offsetof(Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnInterrupted_65498482477B12E33D62FBBDD42CD9F5::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5) == 0x000004, "Wrong alignment on Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5");
static_assert(sizeof(Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5) == 0x000008, "Wrong size on Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5");
static_assert(offsetof(Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnNotifyBegin_65498482477B12E33D62FBBDD42CD9F5::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5) == 0x000004, "Wrong alignment on Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5");
static_assert(sizeof(Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5) == 0x000008, "Wrong size on Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5");
static_assert(offsetof(Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnNotifyEnd_65498482477B12E33D62FBBDD42CD9F5::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnCompleted_48B260CB4441F19A490ABE87A199EFFE
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE) == 0x000004, "Wrong alignment on Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE");
static_assert(sizeof(Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE) == 0x000008, "Wrong size on Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE");
static_assert(offsetof(Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnCompleted_48B260CB4441F19A490ABE87A199EFFE::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnBlendOut_48B260CB4441F19A490ABE87A199EFFE
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE) == 0x000004, "Wrong alignment on Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE");
static_assert(sizeof(Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE) == 0x000008, "Wrong size on Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE");
static_assert(offsetof(Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnBlendOut_48B260CB4441F19A490ABE87A199EFFE::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnInterrupted_48B260CB4441F19A490ABE87A199EFFE
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE) == 0x000004, "Wrong alignment on Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE");
static_assert(sizeof(Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE) == 0x000008, "Wrong size on Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE");
static_assert(offsetof(Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnInterrupted_48B260CB4441F19A490ABE87A199EFFE::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE) == 0x000004, "Wrong alignment on Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE");
static_assert(sizeof(Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE) == 0x000008, "Wrong size on Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE");
static_assert(offsetof(Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnNotifyBegin_48B260CB4441F19A490ABE87A199EFFE::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE
// 0x0008 (0x0008 - 0x0000)
struct Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE) == 0x000004, "Wrong alignment on Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE");
static_assert(sizeof(Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE) == 0x000008, "Wrong size on Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE");
static_assert(offsetof(Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE, NotifyName) == 0x000000, "Member 'Prop_pizza_C_OnNotifyEnd_48B260CB4441F19A490ABE87A199EFFE::NotifyName' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.updSlices
// 0x0020 (0x0020 - 0x0000)
struct Prop_pizza_C_UpdSlices final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1079[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_pizza_C_UpdSlices) == 0x000008, "Wrong alignment on Prop_pizza_C_UpdSlices");
static_assert(sizeof(Prop_pizza_C_UpdSlices) == 0x000020, "Wrong size on Prop_pizza_C_UpdSlices");
static_assert(offsetof(Prop_pizza_C_UpdSlices, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Prop_pizza_C_UpdSlices::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Prop_pizza_C_UpdSlices::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Prop_pizza_C_UpdSlices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'Prop_pizza_C_UpdSlices::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, CallFunc_Array_Get_Item) == 0x000010, "Member 'Prop_pizza_C_UpdSlices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Prop_pizza_C_UpdSlices::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_UpdSlices, CallFunc_Less_IntInt_ReturnValue_1) == 0x00001C, "Member 'Prop_pizza_C_UpdSlices::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct Prop_pizza_C_UserConstructionScript final
{
public:
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Prop_pizza_C_UserConstructionScript) == 0x000008, "Wrong alignment on Prop_pizza_C_UserConstructionScript");
static_assert(sizeof(Prop_pizza_C_UserConstructionScript) == 0x000010, "Wrong size on Prop_pizza_C_UserConstructionScript");
static_assert(offsetof(Prop_pizza_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'Prop_pizza_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.lookAt
// 0x00D8 (0x00D8 - 0x0000)
struct Prop_pizza_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107A[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_LookAt) == 0x000008, "Wrong alignment on Prop_pizza_C_LookAt");
static_assert(sizeof(Prop_pizza_C_LookAt) == 0x0000D8, "Wrong size on Prop_pizza_C_LookAt");
static_assert(offsetof(Prop_pizza_C_LookAt, Player) == 0x000000, "Member 'Prop_pizza_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_pizza_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, Return) == 0x000090, "Member 'Prop_pizza_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, Text) == 0x000098, "Member 'Prop_pizza_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_pizza_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B0, "Member 'Prop_pizza_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'Prop_pizza_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_pizza_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107B[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_LoadData) == 0x000010, "Wrong alignment on Prop_pizza_C_LoadData");
static_assert(sizeof(Prop_pizza_C_LoadData) == 0x0000E0, "Wrong size on Prop_pizza_C_LoadData");
static_assert(offsetof(Prop_pizza_C_LoadData, Data) == 0x000000, "Member 'Prop_pizza_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LoadData, Return) == 0x0000C0, "Member 'Prop_pizza_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_pizza_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_pizza_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_pizza_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.getData
// 0x0270 (0x0270 - 0x0000)
struct Prop_pizza_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_pizza_C_GetData) == 0x000010, "Wrong alignment on Prop_pizza_C_GetData");
static_assert(sizeof(Prop_pizza_C_GetData) == 0x000270, "Wrong size on Prop_pizza_C_GetData");
static_assert(offsetof(Prop_pizza_C_GetData, Data) == 0x000000, "Member 'Prop_pizza_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_pizza_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_pizza_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000190, "Member 'Prop_pizza_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'Prop_pizza_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'Prop_pizza_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_pizza.prop_pizza_C.getActionOptions
// 0x0080 (0x0080 - 0x0000)
struct Prop_pizza_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107C[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_pizza_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_pizza_C_GetActionOptions");
static_assert(sizeof(Prop_pizza_C_GetActionOptions) == 0x000080, "Wrong size on Prop_pizza_C_GetActionOptions");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_pizza_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_pizza_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_pizza_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_pizza_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_pizza_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_pizza_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, Temp_bool_Variable) == 0x000048, "Member 'Prop_pizza_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_pizza_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000060, "Member 'Prop_pizza_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_pizza_C_GetActionOptions, K2Node_Select_Default) == 0x000070, "Member 'Prop_pizza_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");

}

