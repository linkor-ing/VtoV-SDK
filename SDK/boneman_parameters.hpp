#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: boneman

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function boneman.boneman_C.changeLoc
// 0x02C0 (0x02C0 - 0x0000)
struct boneman_C_ChangeLoc final
{
public:
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0070(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0230(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(boneman_C_ChangeLoc) == 0x000008, "Wrong alignment on boneman_C_ChangeLoc");
static_assert(sizeof(boneman_C_ChangeLoc) == 0x0002C0, "Wrong size on boneman_C_ChangeLoc");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_RandomFloat_ReturnValue) == 0x000000, "Member 'boneman_C_ChangeLoc::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, Temp_object_Variable) == 0x000008, "Member 'boneman_C_ChangeLoc::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Ease_ReturnValue) == 0x000018, "Member 'boneman_C_ChangeLoc::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'boneman_C_ChangeLoc::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'boneman_C_ChangeLoc::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'boneman_C_ChangeLoc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'boneman_C_ChangeLoc::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_WasRecentlyRendered_ReturnValue) == 0x00004C, "Member 'boneman_C_ChangeLoc::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'boneman_C_ChangeLoc::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00005C, "Member 'boneman_C_ChangeLoc::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000068, "Member 'boneman_C_ChangeLoc::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_obj_static_obj) == 0x000070, "Member 'boneman_C_ChangeLoc::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000080, "Member 'boneman_C_ChangeLoc::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_RandomFloat_ReturnValue_1) == 0x00008C, "Member 'boneman_C_ChangeLoc::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_RandomFloatInRange_ReturnValue) == 0x000090, "Member 'boneman_C_ChangeLoc::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Ease_ReturnValue_1) == 0x000094, "Member 'boneman_C_ChangeLoc::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000098, "Member 'boneman_C_ChangeLoc::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_SetVectorLength_ReturnValue) == 0x0000A4, "Member 'boneman_C_ChangeLoc::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'boneman_C_ChangeLoc::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000BC, "Member 'boneman_C_ChangeLoc::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_VLerp_ReturnValue) == 0x0000C8, "Member 'boneman_C_ChangeLoc::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'boneman_C_ChangeLoc::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'boneman_C_ChangeLoc::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000EC, "Member 'boneman_C_ChangeLoc::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000F8, "Member 'boneman_C_ChangeLoc::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000180, "Member 'boneman_C_ChangeLoc::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_bBlockingHit) == 0x000181, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_bInitialOverlap) == 0x000182, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_Location) == 0x00018C, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_ImpactPoint) == 0x000198, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_Normal) == 0x0001A4, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B0, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_PhysMat) == 0x0001C0, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_HitActor) == 0x0001C8, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_HitComponent) == 0x0001D0, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_HitBoneName) == 0x0001D8, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_ElementIndex) == 0x0001E4, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_FaceIndex) == 0x0001E8, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_TraceStart) == 0x0001EC, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'boneman_C_ChangeLoc::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_FindLookAtRotation_ReturnValue) == 0x000204, "Member 'boneman_C_ChangeLoc::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000210, "Member 'boneman_C_ChangeLoc::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakRotator_Roll) == 0x000214, "Member 'boneman_C_ChangeLoc::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakRotator_Pitch) == 0x000218, "Member 'boneman_C_ChangeLoc::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BreakRotator_Yaw) == 0x00021C, "Member 'boneman_C_ChangeLoc::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_BooleanAND_ReturnValue) == 0x000220, "Member 'boneman_C_ChangeLoc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_MakeRotator_ReturnValue) == 0x000224, "Member 'boneman_C_ChangeLoc::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000230, "Member 'boneman_C_ChangeLoc::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(boneman_C_ChangeLoc, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0002B8, "Member 'boneman_C_ChangeLoc::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function boneman.boneman_C.ExecuteUbergraph_boneman
// 0x0018 (0x0018 - 0x0000)
struct boneman_C_ExecuteUbergraph_boneman final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(boneman_C_ExecuteUbergraph_boneman) == 0x000008, "Wrong alignment on boneman_C_ExecuteUbergraph_boneman");
static_assert(sizeof(boneman_C_ExecuteUbergraph_boneman) == 0x000018, "Wrong size on boneman_C_ExecuteUbergraph_boneman");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, EntryPoint) == 0x000000, "Member 'boneman_C_ExecuteUbergraph_boneman::EntryPoint' has a wrong offset!");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'boneman_C_ExecuteUbergraph_boneman::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000008, "Member 'boneman_C_ExecuteUbergraph_boneman::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'boneman_C_ExecuteUbergraph_boneman::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'boneman_C_ExecuteUbergraph_boneman::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(boneman_C_ExecuteUbergraph_boneman, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'boneman_C_ExecuteUbergraph_boneman::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

