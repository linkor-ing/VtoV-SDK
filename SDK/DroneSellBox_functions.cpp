#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DroneSellBox

#include "Basic.hpp"

#include "DroneSellBox_classes.hpp"
#include "DroneSellBox_parameters.hpp"


namespace SDK
{

// Function droneSellBox.droneSellBox_C.ExecuteUbergraph_droneSellBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADroneSellBox_C::ExecuteUbergraph_droneSellBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("droneSellBox_C", "ExecuteUbergraph_droneSellBox");

	Params::DroneSellBox_C_ExecuteUbergraph_droneSellBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function droneSellBox.droneSellBox_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADroneSellBox_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("droneSellBox_C", "ReceiveTick");

	Params::DroneSellBox_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function droneSellBox.droneSellBox_C.sell
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_signalDataDynamic>Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Itembox                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FStruct_save                     Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   Points                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_signalResponse                     ResponseEmail                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Checked                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADroneSellBox_C::Sell(TArray<struct FStruct_signalDataDynamic>& Array, const class FString& Info, bool Itembox, const struct FStruct_save& Data, int32* Points, Enum_signalResponse* ResponseEmail, bool* Checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("droneSellBox_C", "sell");

	Params::DroneSellBox_C_Sell Parms{};

	Parms.Array = std::move(Array);
	Parms.Info = std::move(Info);
	Parms.Itembox = Itembox;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Points != nullptr)
		*Points = Parms.Points;

	if (ResponseEmail != nullptr)
		*ResponseEmail = Parms.ResponseEmail;

	if (Checked != nullptr)
		*Checked = Parms.Checked;
}


// Function droneSellBox.droneSellBox_C.canSell
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsItembox                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADroneSellBox_C::CanSell(class UObject* InputPin, bool* Can, bool* IsItembox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("droneSellBox_C", "canSell");

	Params::DroneSellBox_C_CanSell Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (Can != nullptr)
		*Can = Parms.Can;

	if (IsItembox != nullptr)
		*IsItembox = Parms.IsItembox;
}

}

