#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_radDetec

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_radDetec.prop_radDetec_C.ExecuteUbergraph_prop_radDetec
// 0x00B4 (0x00B4 - 0x0000)
struct Prop_radDetec_C_ExecuteUbergraph_prop_radDetec final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec) == 0x000004, "Wrong alignment on Prop_radDetec_C_ExecuteUbergraph_prop_radDetec");
static_assert(sizeof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec) == 0x0000B4, "Wrong size on Prop_radDetec_C_ExecuteUbergraph_prop_radDetec");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, EntryPoint) == 0x000000, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_RLerp_ReturnValue) == 0x000014, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000A8, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_ExecuteUbergraph_prop_radDetec, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0000B0, "Member 'Prop_radDetec_C_ExecuteUbergraph_prop_radDetec::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");

// Function prop_radDetec.prop_radDetec_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_radDetec_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_radDetec_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_radDetec_C_ReceiveTick");
static_assert(sizeof(Prop_radDetec_C_ReceiveTick) == 0x000004, "Wrong size on Prop_radDetec_C_ReceiveTick");
static_assert(offsetof(Prop_radDetec_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_radDetec_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_radDetec.prop_radDetec_C.detected
// 0x0040 (0x0040 - 0x0000)
struct Prop_radDetec_C_Detected final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dist;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pow;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_radDetec_C_Detected) == 0x000008, "Wrong alignment on Prop_radDetec_C_Detected");
static_assert(sizeof(Prop_radDetec_C_Detected) == 0x000040, "Wrong size on Prop_radDetec_C_Detected");
static_assert(offsetof(Prop_radDetec_C_Detected, Loc) == 0x000000, "Member 'Prop_radDetec_C_Detected::Loc' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, Dist) == 0x00000C, "Member 'Prop_radDetec_C_Detected::Dist' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, Pow) == 0x000010, "Member 'Prop_radDetec_C_Detected::Pow' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000014, "Member 'Prop_radDetec_C_Detected::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000020, "Member 'Prop_radDetec_C_Detected::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_FClamp_ReturnValue) == 0x000024, "Member 'Prop_radDetec_C_Detected::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000028, "Member 'Prop_radDetec_C_Detected::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'Prop_radDetec_C_Detected::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'Prop_radDetec_C_Detected::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Prop_radDetec_C_Detected::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radDetec_C_Detected, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x00003C, "Member 'Prop_radDetec_C_Detected::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

}

