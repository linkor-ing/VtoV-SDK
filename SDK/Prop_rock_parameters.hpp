#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_rock

#include "Basic.hpp"

#include "Struct_save_structs.hpp"


namespace SDK::Params
{

// Function prop_rock.prop_rock_C.ExecuteUbergraph_prop_rock
// 0x0010 (0x0010 - 0x0000)
struct Prop_rock_C_ExecuteUbergraph_prop_rock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rock_C_ExecuteUbergraph_prop_rock) == 0x000004, "Wrong alignment on Prop_rock_C_ExecuteUbergraph_prop_rock");
static_assert(sizeof(Prop_rock_C_ExecuteUbergraph_prop_rock) == 0x000010, "Wrong size on Prop_rock_C_ExecuteUbergraph_prop_rock");
static_assert(offsetof(Prop_rock_C_ExecuteUbergraph_prop_rock, EntryPoint) == 0x000000, "Member 'Prop_rock_C_ExecuteUbergraph_prop_rock::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_rock_C_ExecuteUbergraph_prop_rock, Temp_int_Variable) == 0x000004, "Member 'Prop_rock_C_ExecuteUbergraph_prop_rock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_rock_C_ExecuteUbergraph_prop_rock, K2Node_Event_damage) == 0x000008, "Member 'Prop_rock_C_ExecuteUbergraph_prop_rock::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Prop_rock_C_ExecuteUbergraph_prop_rock, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Prop_rock_C_ExecuteUbergraph_prop_rock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function prop_rock.prop_rock_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct Prop_rock_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rock_C_FireDamage) == 0x000004, "Wrong alignment on Prop_rock_C_FireDamage");
static_assert(sizeof(Prop_rock_C_FireDamage) == 0x000004, "Wrong size on Prop_rock_C_FireDamage");
static_assert(offsetof(Prop_rock_C_FireDamage, Damage) == 0x000000, "Member 'Prop_rock_C_FireDamage::Damage' has a wrong offset!");

// Function prop_rock.prop_rock_C.loadData
// 0x00D0 (0x00D0 - 0x0000)
struct Prop_rock_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_rock_C_LoadData) == 0x000010, "Wrong alignment on Prop_rock_C_LoadData");
static_assert(sizeof(Prop_rock_C_LoadData) == 0x0000D0, "Wrong size on Prop_rock_C_LoadData");
static_assert(offsetof(Prop_rock_C_LoadData, Data) == 0x000000, "Member 'Prop_rock_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_rock_C_LoadData, Return) == 0x0000C0, "Member 'Prop_rock_C_LoadData::Return' has a wrong offset!");

// Function prop_rock.prop_rock_C.getData
// 0x0180 (0x0180 - 0x0000)
struct Prop_rock_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_rock_C_GetData) == 0x000010, "Wrong alignment on Prop_rock_C_GetData");
static_assert(sizeof(Prop_rock_C_GetData) == 0x000180, "Wrong size on Prop_rock_C_GetData");
static_assert(offsetof(Prop_rock_C_GetData, Data) == 0x000000, "Member 'Prop_rock_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_rock_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_rock_C_GetData::CallFunc_getData_data' has a wrong offset!");

}

