#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Kefrus_face_Skeleton_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function kefrus_face_Skeleton_AnimBlueprint.kefrus_face_Skeleton_AnimBlueprint_C.ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint
// 0x0030 (0x0030 - 0x0000)
struct Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint) == 0x000004, "Wrong alignment on Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint");
static_assert(sizeof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint) == 0x000030, "Wrong size on Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, EntryPoint) == 0x000000, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::EntryPoint' has a wrong offset!");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, CallFunc_RandomUnitVector_ReturnValue) == 0x000008, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000024, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_ExecuteUbergraph_kefrus_face_Skeleton_AnimBlueprint::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function kefrus_face_Skeleton_AnimBlueprint.kefrus_face_Skeleton_AnimBlueprint_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(sizeof(Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function kefrus_face_Skeleton_AnimBlueprint.kefrus_face_Skeleton_AnimBlueprint_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph) == 0x000008, "Wrong alignment on Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph");
static_assert(sizeof(Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph) == 0x000010, "Wrong size on Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph");
static_assert(offsetof(Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'Kefrus_face_Skeleton_AnimBlueprint_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

