#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeatEater

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass meatEater.meatEater_C
// 0x0018 (0x0260 - 0x0248)
class AMeatEater_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MeatEater_C;                        // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URadialForceComponent*                  RadialForce;                                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar_0;                                          // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetData(struct FStruct_save* Data);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GatherDataFromKey(bool* Gather);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_meatEater(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"meatEater_C">();
	}
	static class AMeatEater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMeatEater_C>();
	}
};
static_assert(alignof(AMeatEater_C) == 0x000008, "Wrong alignment on AMeatEater_C");
static_assert(sizeof(AMeatEater_C) == 0x000260, "Wrong size on AMeatEater_C");
static_assert(offsetof(AMeatEater_C, UberGraphFrame_MeatEater_C) == 0x000248, "Member 'AMeatEater_C::UberGraphFrame_MeatEater_C' has a wrong offset!");
static_assert(offsetof(AMeatEater_C, RadialForce) == 0x000250, "Member 'AMeatEater_C::RadialForce' has a wrong offset!");
static_assert(offsetof(AMeatEater_C, NewVar_0) == 0x000258, "Member 'AMeatEater_C::NewVar_0' has a wrong offset!");

}

