#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_waterShooter_arir

#include "Basic.hpp"


namespace SDK::Params
{

// Function prop_waterShooter_arir.prop_waterShooter_arir_C.ExecuteUbergraph_prop_waterShooter_arir
// 0x0048 (0x0048 - 0x0000)
struct Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir) == 0x000008, "Wrong alignment on Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir");
static_assert(sizeof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir) == 0x000048, "Wrong size on Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, EntryPoint) == 0x000000, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, K2Node_Event_player_2) == 0x000010, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, K2Node_Event_player_1) == 0x000020, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, K2Node_Event_player) == 0x000028, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00003C, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000040, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000042, "Member 'Prop_waterShooter_arir_C_ExecuteUbergraph_prop_waterShooter_arir::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function prop_waterShooter_arir.prop_waterShooter_arir_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_waterShooter_arir_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_waterShooter_arir_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_waterShooter_arir_C_ReceiveTick");
static_assert(sizeof(Prop_waterShooter_arir_C_ReceiveTick) == 0x000004, "Wrong size on Prop_waterShooter_arir_C_ReceiveTick");
static_assert(offsetof(Prop_waterShooter_arir_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_waterShooter_arir_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_waterShooter_arir.prop_waterShooter_arir_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_waterShooter_arir_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_waterShooter_arir_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_waterShooter_arir_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_waterShooter_arir_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_waterShooter_arir_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_waterShooter_arir_C_PlayerHandUse_RMB, Param_Player) == 0x000000, "Member 'Prop_waterShooter_arir_C_PlayerHandUse_RMB::Param_Player' has a wrong offset!");

// Function prop_waterShooter_arir.prop_waterShooter_arir_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_waterShooter_arir_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_waterShooter_arir_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_waterShooter_arir_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_waterShooter_arir_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_waterShooter_arir_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_waterShooter_arir_C_PlayerHandUse_LMB, Param_Player) == 0x000000, "Member 'Prop_waterShooter_arir_C_PlayerHandUse_LMB::Param_Player' has a wrong offset!");

// Function prop_waterShooter_arir.prop_waterShooter_arir_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_waterShooter_arir_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_waterShooter_arir_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on Prop_waterShooter_arir_C_PlayerHandRelease_LMB");
static_assert(sizeof(Prop_waterShooter_arir_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on Prop_waterShooter_arir_C_PlayerHandRelease_LMB");
static_assert(offsetof(Prop_waterShooter_arir_C_PlayerHandRelease_LMB, Param_Player) == 0x000000, "Member 'Prop_waterShooter_arir_C_PlayerHandRelease_LMB::Param_Player' has a wrong offset!");

}

