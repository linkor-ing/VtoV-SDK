#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameInst

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_gamemode_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass gameInst.gameInst_C
// 0x0100 (0x02A8 - 0x01A8)
class UGameInst_C final : public UGameInstance
{
public:
	class USaveSlot_C*                            Save;                                              // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SlotName;                                          // 0x01B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UConstantQNRT*>                  Nrts;                                              // 0x01C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture2D*>                     Texs;                                              // 0x01D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Opened;                                            // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_gamemode                                 GameMode;                                          // 0x01E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartDay;                                          // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USoundWave*>                     Radios;                                            // 0x01E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Radios_tit;                                        // 0x01F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 Vols;                                              // 0x0208(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    Objs;                                              // 0x0218(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsSaveReset;                                       // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoadObjects;                                       // 0x0229(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_save>                   PlayerInv;                                         // 0x0230(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture2D*>                     ObjTexs;                                           // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                LocationDistance;                                  // 0x0250(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SubArea;                                           // 0x025C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AntibreatherKickout;                               // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DwString;                                          // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         DwList;                                            // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 DwString_2;                                        // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         DwList_0;                                          // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void KeepPlayer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"gameInst_C">();
	}
	static class UGameInst_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameInst_C>();
	}
};
static_assert(alignof(UGameInst_C) == 0x000008, "Wrong alignment on UGameInst_C");
static_assert(sizeof(UGameInst_C) == 0x0002A8, "Wrong size on UGameInst_C");
static_assert(offsetof(UGameInst_C, Save) == 0x0001A8, "Member 'UGameInst_C::Save' has a wrong offset!");
static_assert(offsetof(UGameInst_C, SlotName) == 0x0001B0, "Member 'UGameInst_C::SlotName' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Nrts) == 0x0001C0, "Member 'UGameInst_C::Nrts' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Texs) == 0x0001D0, "Member 'UGameInst_C::Texs' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Opened) == 0x0001E0, "Member 'UGameInst_C::Opened' has a wrong offset!");
static_assert(offsetof(UGameInst_C, GameMode) == 0x0001E1, "Member 'UGameInst_C::GameMode' has a wrong offset!");
static_assert(offsetof(UGameInst_C, StartDay) == 0x0001E4, "Member 'UGameInst_C::StartDay' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Radios) == 0x0001E8, "Member 'UGameInst_C::Radios' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Radios_tit) == 0x0001F8, "Member 'UGameInst_C::Radios_tit' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Vols) == 0x000208, "Member 'UGameInst_C::Vols' has a wrong offset!");
static_assert(offsetof(UGameInst_C, Objs) == 0x000218, "Member 'UGameInst_C::Objs' has a wrong offset!");
static_assert(offsetof(UGameInst_C, IsSaveReset) == 0x000228, "Member 'UGameInst_C::IsSaveReset' has a wrong offset!");
static_assert(offsetof(UGameInst_C, LoadObjects) == 0x000229, "Member 'UGameInst_C::LoadObjects' has a wrong offset!");
static_assert(offsetof(UGameInst_C, PlayerInv) == 0x000230, "Member 'UGameInst_C::PlayerInv' has a wrong offset!");
static_assert(offsetof(UGameInst_C, ObjTexs) == 0x000240, "Member 'UGameInst_C::ObjTexs' has a wrong offset!");
static_assert(offsetof(UGameInst_C, LocationDistance) == 0x000250, "Member 'UGameInst_C::LocationDistance' has a wrong offset!");
static_assert(offsetof(UGameInst_C, SubArea) == 0x00025C, "Member 'UGameInst_C::SubArea' has a wrong offset!");
static_assert(offsetof(UGameInst_C, AntibreatherKickout) == 0x000264, "Member 'UGameInst_C::AntibreatherKickout' has a wrong offset!");
static_assert(offsetof(UGameInst_C, DwString) == 0x000268, "Member 'UGameInst_C::DwString' has a wrong offset!");
static_assert(offsetof(UGameInst_C, DwList) == 0x000278, "Member 'UGameInst_C::DwList' has a wrong offset!");
static_assert(offsetof(UGameInst_C, DwString_2) == 0x000288, "Member 'UGameInst_C::DwString_2' has a wrong offset!");
static_assert(offsetof(UGameInst_C, DwList_0) == 0x000298, "Member 'UGameInst_C::DwList_0' has a wrong offset!");

}

