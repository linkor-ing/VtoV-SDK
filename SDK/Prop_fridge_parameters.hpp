#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_fridge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_triggerSave_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mVector_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function prop_fridge.prop_fridge_C.ExecuteUbergraph_prop_fridge
// 0x02B0 (0x02B0 - 0x0000)
struct Prop_fridge_C_ExecuteUbergraph_prop_fridge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_DynamicCast_AsCord;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_fridgeDoor_C*                     K2Node_DynamicCast_AsProp_Fridge_Door;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_fridgeDoor_C*                     K2Node_DynamicCast_AsProp_Fridge_Door_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x00C8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0198(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_Event_cord;                                 // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_ExecuteUbergraph_prop_fridge) == 0x000008, "Wrong alignment on Prop_fridge_C_ExecuteUbergraph_prop_fridge");
static_assert(sizeof(Prop_fridge_C_ExecuteUbergraph_prop_fridge) == 0x0002B0, "Wrong size on Prop_fridge_C_ExecuteUbergraph_prop_fridge");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, EntryPoint) == 0x000000, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_AsCord) == 0x000008, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_AsCord' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, Temp_int_Variable) == 0x000014, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, Temp_int_Variable_1) == 0x00001C, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_owner) == 0x000028, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_index) == 0x000030, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_NewParam) == 0x000034, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_sentFrom) == 0x000038, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_active) == 0x000040, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_GetActorRightVector_ReturnValue) == 0x000048, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_GetActorForwardVector_ReturnValue) == 0x000054, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Dot_VectorVector_ReturnValue) == 0x000060, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_AsProp_Fridge_Door) == 0x000068, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_AsProp_Fridge_Door' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000074, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000080, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x00008C, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000090, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_AsProp_Fridge_Door_1) == 0x000098, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_AsProp_Fridge_Door_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x0000A8, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0000B0, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0000B8, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0000C0, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0000C4, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0000C8, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000150, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000158, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000160, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000168, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_RemoveItem_ReturnValue) == 0x000170, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000178, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000180, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000188, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000190, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_bFromSweep) == 0x000194, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_SweepResult) == 0x000198, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000220, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherActor) == 0x000228, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherComp) == 0x000230, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000238, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Add_ReturnValue_1) == 0x00023C, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000240, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Get_Item) == 0x000248, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Get_Item_1) == 0x000250, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_AsInt_Objects) == 0x000258, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_bSuccess_3) == 0x000268, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_AsInt_Objects_1) == 0x000270, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_DynamicCast_bSuccess_4) == 0x000280, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Length_ReturnValue) == 0x000284, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Array_Length_ReturnValue_1) == 0x000288, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Less_IntInt_ReturnValue) == 0x00028C, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, CallFunc_Less_IntInt_ReturnValue_1) == 0x00028D, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_cord_1) == 0x000290, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_socket_1) == 0x000298, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_cord) == 0x0002A0, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_ExecuteUbergraph_prop_fridge, K2Node_Event_socket) == 0x0002A8, "Member 'Prop_fridge_C_ExecuteUbergraph_prop_fridge::K2Node_Event_socket' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_fridge_C_CordUnplugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_fridge_C_CordUnplugged");
static_assert(sizeof(Prop_fridge_C_CordUnplugged) == 0x000010, "Wrong size on Prop_fridge_C_CordUnplugged");
static_assert(offsetof(Prop_fridge_C_CordUnplugged, Param_Cord) == 0x000000, "Member 'Prop_fridge_C_CordUnplugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_fridge_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_fridge_C_CordPlugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_fridge_C_CordPlugged");
static_assert(sizeof(Prop_fridge_C_CordPlugged) == 0x000010, "Wrong size on Prop_fridge_C_CordPlugged");
static_assert(offsetof(Prop_fridge_C_CordPlugged, Param_Cord) == 0x000000, "Member 'Prop_fridge_C_CordPlugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_fridge_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_fridge_C_BndEvt__prop_fridge_freezer_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_fridge_C_BndEvt__prop_fridge_fridge_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_fridge_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_fridge_C_ReceiveTick");
static_assert(sizeof(Prop_fridge_C_ReceiveTick) == 0x000004, "Wrong size on Prop_fridge_C_ReceiveTick");
static_assert(offsetof(Prop_fridge_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_fridge_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_fridge_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Active;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_fridge_C_SetActiveTrigger");
static_assert(sizeof(Prop_fridge_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_fridge_C_SetActiveTrigger");
static_assert(offsetof(Prop_fridge_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_fridge_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_SetActiveTrigger, Param_Active) == 0x000008, "Member 'Prop_fridge_C_SetActiveTrigger::Param_Active' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_fridge_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_fridge_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_fridge_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_fridge_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_fridge_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_fridge_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_fridge_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_fridge_C_RunTrigger");
static_assert(sizeof(Prop_fridge_C_RunTrigger) == 0x000010, "Wrong size on Prop_fridge_C_RunTrigger");
static_assert(offsetof(Prop_fridge_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_fridge_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_fridge_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.closeDoorTop
// 0x0030 (0x0030 - 0x0000)
struct Prop_fridge_C_CloseDoorTop final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_CloseDoorTop) == 0x000010, "Wrong alignment on Prop_fridge_C_CloseDoorTop");
static_assert(sizeof(Prop_fridge_C_CloseDoorTop) == 0x000030, "Wrong size on Prop_fridge_C_CloseDoorTop");
static_assert(offsetof(Prop_fridge_C_CloseDoorTop, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'Prop_fridge_C_CloseDoorTop::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.OpenDoorTop
// 0x0030 (0x0030 - 0x0000)
struct Prop_fridge_C_OpenDoorTop final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_OpenDoorTop) == 0x000010, "Wrong alignment on Prop_fridge_C_OpenDoorTop");
static_assert(sizeof(Prop_fridge_C_OpenDoorTop) == 0x000030, "Wrong size on Prop_fridge_C_OpenDoorTop");
static_assert(offsetof(Prop_fridge_C_OpenDoorTop, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'Prop_fridge_C_OpenDoorTop::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.closeDoorBottom
// 0x0030 (0x0030 - 0x0000)
struct Prop_fridge_C_CloseDoorBottom final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_CloseDoorBottom) == 0x000010, "Wrong alignment on Prop_fridge_C_CloseDoorBottom");
static_assert(sizeof(Prop_fridge_C_CloseDoorBottom) == 0x000030, "Wrong size on Prop_fridge_C_CloseDoorBottom");
static_assert(offsetof(Prop_fridge_C_CloseDoorBottom, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'Prop_fridge_C_CloseDoorBottom::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.OpenDoorBottom
// 0x0030 (0x0030 - 0x0000)
struct Prop_fridge_C_OpenDoorBottom final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_OpenDoorBottom) == 0x000010, "Wrong alignment on Prop_fridge_C_OpenDoorBottom");
static_assert(sizeof(Prop_fridge_C_OpenDoorBottom) == 0x000030, "Wrong size on Prop_fridge_C_OpenDoorBottom");
static_assert(offsetof(Prop_fridge_C_OpenDoorBottom, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'Prop_fridge_C_OpenDoorBottom::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_fridge_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_fridge_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_fridge_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_fridge_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_fridge_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_fridge_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_fridge_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_fridge_C_LoadTriggerData");
static_assert(sizeof(Prop_fridge_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_fridge_C_LoadTriggerData");
static_assert(offsetof(Prop_fridge_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_fridge_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_fridge_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_fridge_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_fridge_C_GetTriggerData");
static_assert(sizeof(Prop_fridge_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_fridge_C_GetTriggerData");
static_assert(offsetof(Prop_fridge_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_fridge_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.gatherDataFromKeyT
// 0x0001 (0x0001 - 0x0000)
struct Prop_fridge_C_GatherDataFromKeyT final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_GatherDataFromKeyT) == 0x000001, "Wrong alignment on Prop_fridge_C_GatherDataFromKeyT");
static_assert(sizeof(Prop_fridge_C_GatherDataFromKeyT) == 0x000001, "Wrong size on Prop_fridge_C_GatherDataFromKeyT");
static_assert(offsetof(Prop_fridge_C_GatherDataFromKeyT, Gather) == 0x000000, "Member 'Prop_fridge_C_GatherDataFromKeyT::Gather' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.loadData
// 0x0190 (0x0190 - 0x0000)
struct Prop_fridge_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mVector                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_fridge_C_LoadData) == 0x000010, "Wrong alignment on Prop_fridge_C_LoadData");
static_assert(sizeof(Prop_fridge_C_LoadData) == 0x000190, "Wrong size on Prop_fridge_C_LoadData");
static_assert(offsetof(Prop_fridge_C_LoadData, Data) == 0x000000, "Member 'Prop_fridge_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, Return) == 0x0000C0, "Member 'Prop_fridge_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_fridge_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_loadData_return) == 0x0000D8, "Member 'Prop_fridge_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000DC, "Member 'Prop_fridge_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_fridge_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000F4, "Member 'Prop_fridge_C_LoadData::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'Prop_fridge_C_LoadData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_LoadData, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000104, "Member 'Prop_fridge_C_LoadData::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.getData
// 0x02D0 (0x02D0 - 0x0000)
struct Prop_fridge_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_mVector                        K2Node_MakeStruct_struct_mVector;                  // 0x01F0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mVector>                K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0210(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_fridge_C_GetData) == 0x000010, "Wrong alignment on Prop_fridge_C_GetData");
static_assert(sizeof(Prop_fridge_C_GetData) == 0x0002D0, "Wrong size on Prop_fridge_C_GetData");
static_assert(offsetof(Prop_fridge_C_GetData, Data) == 0x000000, "Member 'Prop_fridge_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_fridge_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000180, "Member 'Prop_fridge_C_GetData::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_BreakTransform_Location) == 0x0001B0, "Member 'Prop_fridge_C_GetData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_BreakTransform_Rotation) == 0x0001BC, "Member 'Prop_fridge_C_GetData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_BreakTransform_Scale) == 0x0001C8, "Member 'Prop_fridge_C_GetData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001D4, "Member 'Prop_fridge_C_GetData::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, K2Node_MakeArray_Array) == 0x0001E0, "Member 'Prop_fridge_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, K2Node_MakeStruct_struct_mVector) == 0x0001F0, "Member 'Prop_fridge_C_GetData::K2Node_MakeStruct_struct_mVector' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, K2Node_MakeArray_Array_1) == 0x000200, "Member 'Prop_fridge_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000210, "Member 'Prop_fridge_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.ignoreSave
// 0x0001 (0x0001 - 0x0000)
struct Prop_fridge_C_IgnoreSave final
{
public:
	bool                                          Param_IgnoreSave;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_IgnoreSave) == 0x000001, "Wrong alignment on Prop_fridge_C_IgnoreSave");
static_assert(sizeof(Prop_fridge_C_IgnoreSave) == 0x000001, "Wrong size on Prop_fridge_C_IgnoreSave");
static_assert(offsetof(Prop_fridge_C_IgnoreSave, Param_IgnoreSave) == 0x000000, "Member 'Prop_fridge_C_IgnoreSave::Param_IgnoreSave' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.gatherDataFromKey
// 0x0001 (0x0001 - 0x0000)
struct Prop_fridge_C_GatherDataFromKey final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_fridge_C_GatherDataFromKey) == 0x000001, "Wrong alignment on Prop_fridge_C_GatherDataFromKey");
static_assert(sizeof(Prop_fridge_C_GatherDataFromKey) == 0x000001, "Wrong size on Prop_fridge_C_GatherDataFromKey");
static_assert(offsetof(Prop_fridge_C_GatherDataFromKey, Gather) == 0x000000, "Member 'Prop_fridge_C_GatherDataFromKey::Gather' has a wrong offset!");

// Function prop_fridge.prop_fridge_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_fridge_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_fridge_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_fridge_C_GetActionOptions");
static_assert(sizeof(Prop_fridge_C_GetActionOptions) == 0x000060, "Wrong size on Prop_fridge_C_GetActionOptions");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_fridge_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_fridge_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_fridge_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_fridge_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_fridge_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_fridge_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_fridge_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_fridge_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_fridge_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

