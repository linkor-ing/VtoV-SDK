#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_popcorn

#include "Basic.hpp"

#include "Struct_mFloat_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_popcorn.prop_popcorn_C.ExecuteUbergraph_prop_popcorn
// 0x0140 (0x0140 - 0x0000)
struct Prop_popcorn_C_ExecuteUbergraph_prop_popcorn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addFood_full;                             // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosion_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn) == 0x000010, "Wrong alignment on Prop_popcorn_C_ExecuteUbergraph_prop_popcorn");
static_assert(sizeof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn) == 0x000140, "Wrong size on Prop_popcorn_C_ExecuteUbergraph_prop_popcorn");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, EntryPoint) == 0x000000, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000008, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_RandomUnitVector_ReturnValue) == 0x00000C, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000070, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, K2Node_Event_player) == 0x000080, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, K2Node_Event_hit) == 0x000088, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, K2Node_Event_action) == 0x000110, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, K2Node_SwitchEnum_CmpSuccess) == 0x000111, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_addFood_full) == 0x000112, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_addFood_full' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000118, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000120, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000124, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000125, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_Lerp_ReturnValue) == 0x000134, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ExecuteUbergraph_prop_popcorn, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000138, "Member 'Prop_popcorn_C_ExecuteUbergraph_prop_popcorn::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function prop_popcorn.prop_popcorn_C.upd
// 0x0018 (0x0018 - 0x0000)
struct Prop_popcorn_C_Upd final
{
public:
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_popcorn_C_Upd) == 0x000004, "Wrong alignment on Prop_popcorn_C_Upd");
static_assert(sizeof(Prop_popcorn_C_Upd) == 0x000018, "Wrong size on Prop_popcorn_C_Upd");
static_assert(offsetof(Prop_popcorn_C_Upd, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000000, "Member 'Prop_popcorn_C_Upd::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_Upd, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'Prop_popcorn_C_Upd::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_Upd, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Prop_popcorn_C_Upd::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_Upd, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'Prop_popcorn_C_Upd::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function prop_popcorn.prop_popcorn_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_popcorn_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_popcorn_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_popcorn_C_ActionOptionIndex");
static_assert(sizeof(Prop_popcorn_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_popcorn_C_ActionOptionIndex");
static_assert(offsetof(Prop_popcorn_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_popcorn_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_popcorn_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_popcorn_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_popcorn.prop_popcorn_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_popcorn_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_2;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_popcorn_C_LoadData) == 0x000010, "Wrong alignment on Prop_popcorn_C_LoadData");
static_assert(sizeof(Prop_popcorn_C_LoadData) == 0x0000E0, "Wrong size on Prop_popcorn_C_LoadData");
static_assert(offsetof(Prop_popcorn_C_LoadData, Data) == 0x000000, "Member 'Prop_popcorn_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_LoadData, Return) == 0x0000C0, "Member 'Prop_popcorn_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_popcorn_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_popcorn_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_popcorn_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000DC, "Member 'Prop_popcorn_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function prop_popcorn.prop_popcorn_C.getData
// 0x0280 (0x0280 - 0x0000)
struct Prop_popcorn_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0190(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x01A0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01C0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_popcorn_C_GetData) == 0x000010, "Wrong alignment on Prop_popcorn_C_GetData");
static_assert(sizeof(Prop_popcorn_C_GetData) == 0x000280, "Wrong size on Prop_popcorn_C_GetData");
static_assert(offsetof(Prop_popcorn_C_GetData, Data) == 0x000000, "Member 'Prop_popcorn_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_popcorn_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_popcorn_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000190, "Member 'Prop_popcorn_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'Prop_popcorn_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'Prop_popcorn_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001C0, "Member 'Prop_popcorn_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_popcorn.prop_popcorn_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_popcorn_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_popcorn_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_popcorn_C_GetActionOptions");
static_assert(sizeof(Prop_popcorn_C_GetActionOptions) == 0x000060, "Wrong size on Prop_popcorn_C_GetActionOptions");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_popcorn_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_popcorn_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_popcorn_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_popcorn_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_popcorn_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_popcorn_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_popcorn_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_popcorn_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_popcorn_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

