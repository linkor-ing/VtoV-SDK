#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_hsvWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_hsvWindow.umg_hsvWindow_C
// 0x00A0 (0x0300 - 0x0260)
class UUmg_hsvWindow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                button_apply;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                button_cancel;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_55;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_color;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_H;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_M;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_S;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_V;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_H;                                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_M;                                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_S;                                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_V;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InColor;                                           // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB7[0x8];                                     // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Hsvm;                                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_umg_hsvWindow(int32 EntryPoint);
	void BndEvt__umg_hsvWindow_button_apply_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__umg_hsvWindow_button_cancel_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__umg_hsvWindow_Slider_M_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__umg_hsvWindow_Slider_V_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__umg_hsvWindow_Slider_S_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__umg_hsvWindow_Slider_H_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void Init(class AActor* Param_Actor, const struct FLinearColor& Param_InColor);
	void Upd();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_hsvWindow_C">();
	}
	static class UUmg_hsvWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_hsvWindow_C>();
	}
};
static_assert(alignof(UUmg_hsvWindow_C) == 0x000010, "Wrong alignment on UUmg_hsvWindow_C");
static_assert(sizeof(UUmg_hsvWindow_C) == 0x000300, "Wrong size on UUmg_hsvWindow_C");
static_assert(offsetof(UUmg_hsvWindow_C, UberGraphFrame) == 0x000260, "Member 'UUmg_hsvWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, button_apply) == 0x000268, "Member 'UUmg_hsvWindow_C::button_apply' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, button_cancel) == 0x000270, "Member 'UUmg_hsvWindow_C::button_cancel' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Image_0) == 0x000278, "Member 'UUmg_hsvWindow_C::Image_0' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Image_55) == 0x000280, "Member 'UUmg_hsvWindow_C::Image_55' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Img_color) == 0x000288, "Member 'UUmg_hsvWindow_C::Img_color' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Slider_H) == 0x000290, "Member 'UUmg_hsvWindow_C::Slider_H' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Slider_M) == 0x000298, "Member 'UUmg_hsvWindow_C::Slider_M' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Slider_S) == 0x0002A0, "Member 'UUmg_hsvWindow_C::Slider_S' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Slider_V) == 0x0002A8, "Member 'UUmg_hsvWindow_C::Slider_V' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Text_H) == 0x0002B0, "Member 'UUmg_hsvWindow_C::Text_H' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Text_M) == 0x0002B8, "Member 'UUmg_hsvWindow_C::Text_M' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Text_S) == 0x0002C0, "Member 'UUmg_hsvWindow_C::Text_S' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Text_V) == 0x0002C8, "Member 'UUmg_hsvWindow_C::Text_V' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Actor) == 0x0002D0, "Member 'UUmg_hsvWindow_C::Actor' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, InColor) == 0x0002D8, "Member 'UUmg_hsvWindow_C::InColor' has a wrong offset!");
static_assert(offsetof(UUmg_hsvWindow_C, Hsvm) == 0x0002F0, "Member 'UUmg_hsvWindow_C::Hsvm' has a wrong offset!");

}

