#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KerfurOmegaV1_Skeleton_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass kerfurOmegaV1_Skeleton_AnimBlueprint.kerfurOmegaV1_Skeleton_AnimBlueprint_C
// 0x1510 (0x17D0 - 0x02C0)
class UKerfurOmegaV1_Skeleton_AnimBlueprint_C final : public UAnimInstance
{
public:
	uint8                                         Pad_288D[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x02C8(0x00E8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x03B0(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x03D0(0x01B0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0580(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x05A0(0x01B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0750(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0798(0x0020)()
	uint8                                         Pad_288E[0x8];                                     // 0x07B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_3;                         // 0x07C0(0x01E0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x09A0(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x09C0(0x01E0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0BA0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0C68(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0DC0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0DE8(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0EA8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0EF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0F18(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0F40(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0F88(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1048(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1090(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x11E8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1210(0x0028)()
	uint8                                         Pad_288F[0x8];                                     // 0x1238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x1240(0x01E0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1420(0x01E0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1600(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1630(0x0108)()
	float                                         WalkSpeed;                                         // 0x1738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2890[0x4];                                     // 0x173C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Pawn;                                              // 0x1740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Controller;                                        // 0x1748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 Movement;                                          // 0x1750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimWalkAlpha;                                     // 0x1758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimWalkRate;                                      // 0x175C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAt;                                            // 0x1760(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrabLoc;                                           // 0x176C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabAlpha;                                         // 0x1778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ObjectSize;                                        // 0x177C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RVec;                                              // 0x1780(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2891[0x4];                                     // 0x178C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Character;                                         // 0x1790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootZ_R;                                           // 0x1798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootZ_L;                                           // 0x179C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FloorFoot_R;                                       // 0x17A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FloorFoot_L;                                       // 0x17AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisLoc;                                         // 0x17B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetCenter;                                      // 0x17C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_kerfurOmegaV1_Skeleton_AnimBlueprint(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_kerfurOmegaV1_Skeleton_AnimBlueprint_AnimGraphNode_TwoBoneIK_01A022564E01EA619A70D2BF70652E39();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_kerfurOmegaV1_Skeleton_AnimBlueprint_AnimGraphNode_TwoBoneIK_F655A51E4F5B0557A104E9BACC543BDC();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"kerfurOmegaV1_Skeleton_AnimBlueprint_C">();
	}
	static class UKerfurOmegaV1_Skeleton_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKerfurOmegaV1_Skeleton_AnimBlueprint_C>();
	}
};
static_assert(alignof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C) == 0x000010, "Wrong alignment on UKerfurOmegaV1_Skeleton_AnimBlueprint_C");
static_assert(sizeof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C) == 0x0017D0, "Wrong size on UKerfurOmegaV1_Skeleton_AnimBlueprint_C");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, UberGraphFrame) == 0x0002C0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_BlendSpacePlayer) == 0x0002C8, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0003B0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LookAt_1) == 0x0003D0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000580, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LookAt) == 0x0005A0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot_3) == 0x000750, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x000798, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoBoneIK_3) == 0x0007C0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoBoneIK_3' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x0009A0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoBoneIK_2) == 0x0009C0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoWayBlend) == 0x000BA0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_SaveCachedPose_1) == 0x000C68, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_UseCachedPose_4) == 0x000DC0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000DE8, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot_2) == 0x000EA8, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_UseCachedPose_3) == 0x000EF0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_UseCachedPose_2) == 0x000F18, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot_1) == 0x000F40, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_LayeredBoneBlend) == 0x000F88, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot) == 0x001048, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_SaveCachedPose) == 0x001090, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_UseCachedPose_1) == 0x0011E8, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_UseCachedPose) == 0x001210, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoBoneIK_1) == 0x001240, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_TwoBoneIK) == 0x001420, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_Root) == 0x001600, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimGraphNode_ModifyBone) == 0x001630, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, WalkSpeed) == 0x001738, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, Pawn) == 0x001740, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::Pawn' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, Controller) == 0x001748, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::Controller' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, Movement) == 0x001750, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::Movement' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimWalkAlpha) == 0x001758, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimWalkAlpha' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, AnimWalkRate) == 0x00175C, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::AnimWalkRate' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, LookAt) == 0x001760, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::LookAt' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, GrabLoc) == 0x00176C, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::GrabLoc' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, GrabAlpha) == 0x001778, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::GrabAlpha' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, ObjectSize) == 0x00177C, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::ObjectSize' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, RVec) == 0x001780, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::RVec' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, Character) == 0x001790, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::Character' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, FootZ_R) == 0x001798, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::FootZ_R' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, FootZ_L) == 0x00179C, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::FootZ_L' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, FloorFoot_R) == 0x0017A0, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::FloorFoot_R' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, FloorFoot_L) == 0x0017AC, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::FloorFoot_L' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, PelvisLoc) == 0x0017B8, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::PelvisLoc' has a wrong offset!");
static_assert(offsetof(UKerfurOmegaV1_Skeleton_AnimBlueprint_C, OffsetCenter) == 0x0017C4, "Member 'UKerfurOmegaV1_Skeleton_AnimBlueprint_C::OffsetCenter' has a wrong offset!");

}

