#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Garage

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function garage.garage_C.set
// 0x00B0 (0x00B0 - 0x0000)
struct Garage_C_Set final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Garage_C_Set) == 0x000004, "Wrong alignment on Garage_C_Set");
static_assert(sizeof(Garage_C_Set) == 0x0000B0, "Wrong size on Garage_C_Set");
static_assert(offsetof(Garage_C_Set, InputPin) == 0x000000, "Member 'Garage_C_Set::InputPin' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'Garage_C_Set::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Garage_C_Set::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'Garage_C_Set::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'Garage_C_Set::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_MakeVector_ReturnValue_1) == 0x00001C, "Member 'Garage_C_Set::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Garage_C_Set, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'Garage_C_Set::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function garage.garage_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct Garage_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_ToolboxFix) == 0x000008, "Wrong alignment on Garage_C_ToolboxFix");
static_assert(sizeof(Garage_C_ToolboxFix) == 0x000010, "Wrong size on Garage_C_ToolboxFix");
static_assert(offsetof(Garage_C_ToolboxFix, Toolbox) == 0x000000, "Member 'Garage_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(Garage_C_ToolboxFix, Return) == 0x000008, "Member 'Garage_C_ToolboxFix::Return' has a wrong offset!");

// Function garage.garage_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct Garage_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_CanBeUsedHold) == 0x000001, "Wrong alignment on Garage_C_CanBeUsedHold");
static_assert(sizeof(Garage_C_CanBeUsedHold) == 0x000001, "Wrong size on Garage_C_CanBeUsedHold");
static_assert(offsetof(Garage_C_CanBeUsedHold, Return) == 0x000000, "Member 'Garage_C_CanBeUsedHold::Return' has a wrong offset!");

// Function garage.garage_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct Garage_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_ProcessKeys) == 0x000001, "Wrong alignment on Garage_C_ProcessKeys");
static_assert(sizeof(Garage_C_ProcessKeys) == 0x000001, "Wrong size on Garage_C_ProcessKeys");
static_assert(offsetof(Garage_C_ProcessKeys, Return) == 0x000000, "Member 'Garage_C_ProcessKeys::Return' has a wrong offset!");

// Function garage.garage_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct Garage_C_GetOnlyKey final
{
public:
	class FString                                 Param_Key;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_GetOnlyKey) == 0x000008, "Wrong alignment on Garage_C_GetOnlyKey");
static_assert(sizeof(Garage_C_GetOnlyKey) == 0x000010, "Wrong size on Garage_C_GetOnlyKey");
static_assert(offsetof(Garage_C_GetOnlyKey, Param_Key) == 0x000000, "Member 'Garage_C_GetOnlyKey::Param_Key' has a wrong offset!");

// Function garage.garage_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Garage_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Garage_C_IgnoreSave_trigger");
static_assert(sizeof(Garage_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Garage_C_IgnoreSave_trigger");
static_assert(offsetof(Garage_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Garage_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function garage.garage_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Garage_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadTriggerData_return;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_LoadTriggerData) == 0x000010, "Wrong alignment on Garage_C_LoadTriggerData");
static_assert(sizeof(Garage_C_LoadTriggerData) == 0x000100, "Wrong size on Garage_C_LoadTriggerData");
static_assert(offsetof(Garage_C_LoadTriggerData, Data) == 0x000000, "Member 'Garage_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Garage_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Garage_C_LoadTriggerData::Return' has a wrong offset!");
static_assert(offsetof(Garage_C_LoadTriggerData, CallFunc_loadTriggerData_return) == 0x0000F1, "Member 'Garage_C_LoadTriggerData::CallFunc_loadTriggerData_return' has a wrong offset!");
static_assert(offsetof(Garage_C_LoadTriggerData, CallFunc_Array_Get_Item) == 0x0000F2, "Member 'Garage_C_LoadTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");

// Function garage.garage_C.getTriggerData
// 0x02E0 (0x02E0 - 0x0000)
struct Garage_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_triggerSave                    CallFunc_getTriggerData_data;                      // 0x00F0(0x00F0)(HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_triggerSave                    K2Node_SetFieldsInStruct_StructOut;                // 0x01F0(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_GetTriggerData) == 0x000010, "Wrong alignment on Garage_C_GetTriggerData");
static_assert(sizeof(Garage_C_GetTriggerData) == 0x0002E0, "Wrong size on Garage_C_GetTriggerData");
static_assert(offsetof(Garage_C_GetTriggerData, Data) == 0x000000, "Member 'Garage_C_GetTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Garage_C_GetTriggerData, CallFunc_getTriggerData_data) == 0x0000F0, "Member 'Garage_C_GetTriggerData::CallFunc_getTriggerData_data' has a wrong offset!");
static_assert(offsetof(Garage_C_GetTriggerData, K2Node_MakeArray_Array) == 0x0001E0, "Member 'Garage_C_GetTriggerData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Garage_C_GetTriggerData, K2Node_SetFieldsInStruct_StructOut) == 0x0001F0, "Member 'Garage_C_GetTriggerData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function garage.garage_C.OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD) == 0x000004, "Wrong alignment on Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(sizeof(Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD) == 0x000008, "Wrong size on Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(offsetof(Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD, NotifyName) == 0x000000, "Member 'Garage_C_OnNotifyEnd_C7785C254EBAB5F644FE8987D191DCBD::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD) == 0x000004, "Wrong alignment on Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(sizeof(Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD) == 0x000008, "Wrong size on Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(offsetof(Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD, NotifyName) == 0x000000, "Member 'Garage_C_OnNotifyBegin_C7785C254EBAB5F644FE8987D191DCBD::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD) == 0x000004, "Wrong alignment on Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(sizeof(Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD) == 0x000008, "Wrong size on Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(offsetof(Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD, NotifyName) == 0x000000, "Member 'Garage_C_OnInterrupted_C7785C254EBAB5F644FE8987D191DCBD::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD) == 0x000004, "Wrong alignment on Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(sizeof(Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD) == 0x000008, "Wrong size on Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(offsetof(Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD, NotifyName) == 0x000000, "Member 'Garage_C_OnBlendOut_C7785C254EBAB5F644FE8987D191DCBD::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnCompleted_C7785C254EBAB5F644FE8987D191DCBD
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD) == 0x000004, "Wrong alignment on Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(sizeof(Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD) == 0x000008, "Wrong size on Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD");
static_assert(offsetof(Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD, NotifyName) == 0x000000, "Member 'Garage_C_OnCompleted_C7785C254EBAB5F644FE8987D191DCBD::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000004, "Wrong alignment on Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(sizeof(Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000008, "Wrong size on Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(offsetof(Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A, NotifyName) == 0x000000, "Member 'Garage_C_OnNotifyEnd_A5D3EFEF417D2332A88BC68333B1D35A::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000004, "Wrong alignment on Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(sizeof(Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000008, "Wrong size on Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(offsetof(Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A, NotifyName) == 0x000000, "Member 'Garage_C_OnNotifyBegin_A5D3EFEF417D2332A88BC68333B1D35A::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000004, "Wrong alignment on Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(sizeof(Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000008, "Wrong size on Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(offsetof(Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A, NotifyName) == 0x000000, "Member 'Garage_C_OnInterrupted_A5D3EFEF417D2332A88BC68333B1D35A::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000004, "Wrong alignment on Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(sizeof(Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000008, "Wrong size on Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(offsetof(Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A, NotifyName) == 0x000000, "Member 'Garage_C_OnBlendOut_A5D3EFEF417D2332A88BC68333B1D35A::NotifyName' has a wrong offset!");

// Function garage.garage_C.OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A
// 0x0008 (0x0008 - 0x0000)
struct Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000004, "Wrong alignment on Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(sizeof(Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A) == 0x000008, "Wrong size on Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A");
static_assert(offsetof(Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A, NotifyName) == 0x000000, "Member 'Garage_C_OnCompleted_A5D3EFEF417D2332A88BC68333B1D35A::NotifyName' has a wrong offset!");

// Function garage.garage_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Garage_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Garage_C_RunTrigger) == 0x000008, "Wrong alignment on Garage_C_RunTrigger");
static_assert(sizeof(Garage_C_RunTrigger) == 0x000010, "Wrong size on Garage_C_RunTrigger");
static_assert(offsetof(Garage_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Garage_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Garage_C_RunTrigger, Param_Index) == 0x000008, "Member 'Garage_C_RunTrigger::Param_Index' has a wrong offset!");

// Function garage.garage_C.settime
// 0x0001 (0x0001 - 0x0000)
struct Garage_C_Settime final
{
public:
	bool                                          Param_Open;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_Settime) == 0x000001, "Wrong alignment on Garage_C_Settime");
static_assert(sizeof(Garage_C_Settime) == 0x000001, "Wrong size on Garage_C_Settime");
static_assert(offsetof(Garage_C_Settime, Param_Open) == 0x000000, "Member 'Garage_C_Settime::Param_Open' has a wrong offset!");

// Function garage.garage_C.ExecuteUbergraph_garage
// 0x0180 (0x0180 - 0x0000)
struct Garage_C_ExecuteUbergraph_garage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_3;                              // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Select_Default_1;                           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_open;                           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Garage_C_ExecuteUbergraph_garage) == 0x000008, "Wrong alignment on Garage_C_ExecuteUbergraph_garage");
static_assert(sizeof(Garage_C_ExecuteUbergraph_garage) == 0x000180, "Wrong size on Garage_C_ExecuteUbergraph_garage");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, EntryPoint) == 0x000000, "Member 'Garage_C_ExecuteUbergraph_garage::EntryPoint' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_9) == 0x000014, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_8) == 0x00001C, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_7) == 0x000034, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_6) == 0x00004C, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_5) == 0x000064, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable) == 0x00007C, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_bool_Variable) == 0x000084, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_SwitchEnum_CmpSuccess) == 0x000085, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable_1) == 0x000088, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable_2) == 0x000090, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_byte_Variable) == 0x000098, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_5) == 0x00009C, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_4) == 0x0000AC, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_3) == 0x0000B4, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000BC, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_2) == 0x0000CC, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000D4, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName_1) == 0x0000E4, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000EC, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_NotifyName) == 0x0000FC, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CreateDelegate_OutputDelegate_9) == 0x000104, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable_3) == 0x000114, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_bool_Variable_1) == 0x00011C, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable_4) == 0x000120, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, Temp_name_Variable_5) == 0x000128, "Member 'Garage_C_ExecuteUbergraph_garage::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_Select_Default) == 0x000130, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000138, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_Event_owner) == 0x000148, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_Event_index) == 0x000150, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_Not_PreBool_ReturnValue) == 0x000154, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_Select_Default_1) == 0x000158, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_CustomEvent_open) == 0x000160, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_CustomEvent_open' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000164, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, K2Node_Select_Default_2) == 0x000168, "Member 'Garage_C_ExecuteUbergraph_garage::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000170, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Garage_C_ExecuteUbergraph_garage, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'Garage_C_ExecuteUbergraph_garage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

