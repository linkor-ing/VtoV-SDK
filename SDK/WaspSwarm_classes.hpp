#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaspSwarm

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass waspSwarm.waspSwarm_C
// 0x0030 (0x0250 - 0x0220)
class AWaspSwarm_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Coll;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lastloc;                                           // 0x0240(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeSpan;                                          // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_waspSwarm(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"waspSwarm_C">();
	}
	static class AWaspSwarm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWaspSwarm_C>();
	}
};
static_assert(alignof(AWaspSwarm_C) == 0x000008, "Wrong alignment on AWaspSwarm_C");
static_assert(sizeof(AWaspSwarm_C) == 0x000250, "Wrong size on AWaspSwarm_C");
static_assert(offsetof(AWaspSwarm_C, UberGraphFrame) == 0x000220, "Member 'AWaspSwarm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWaspSwarm_C, Audio) == 0x000228, "Member 'AWaspSwarm_C::Audio' has a wrong offset!");
static_assert(offsetof(AWaspSwarm_C, Coll) == 0x000230, "Member 'AWaspSwarm_C::Coll' has a wrong offset!");
static_assert(offsetof(AWaspSwarm_C, ParticleSystem) == 0x000238, "Member 'AWaspSwarm_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AWaspSwarm_C, Lastloc) == 0x000240, "Member 'AWaspSwarm_C::Lastloc' has a wrong offset!");
static_assert(offsetof(AWaspSwarm_C, LifeSpan) == 0x00024C, "Member 'AWaspSwarm_C::LifeSpan' has a wrong offset!");

}

