#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dream_wend

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function dream_wend.dream_wend_C.ExecuteUbergraph_dream_wend
// 0x00C0 (0x00C0 - 0x0000)
struct Dream_wend_C_ExecuteUbergraph_dream_wend final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Dream_wend_C_ExecuteUbergraph_dream_wend) == 0x000004, "Wrong alignment on Dream_wend_C_ExecuteUbergraph_dream_wend");
static_assert(sizeof(Dream_wend_C_ExecuteUbergraph_dream_wend) == 0x0000C0, "Wrong size on Dream_wend_C_ExecuteUbergraph_dream_wend");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, EntryPoint) == 0x000000, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::EntryPoint' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00000C, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00002C, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_FClamp_ReturnValue_1) == 0x0000B4, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_Lerp_ReturnValue_1) == 0x0000B8, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Dream_wend_C_ExecuteUbergraph_dream_wend, CallFunc_Lerp_ReturnValue_2) == 0x0000BC, "Member 'Dream_wend_C_ExecuteUbergraph_dream_wend::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");

// Function dream_wend.dream_wend_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Dream_wend_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Dream_wend_C_ReceiveTick) == 0x000004, "Wrong alignment on Dream_wend_C_ReceiveTick");
static_assert(sizeof(Dream_wend_C_ReceiveTick) == 0x000004, "Wrong size on Dream_wend_C_ReceiveTick");
static_assert(offsetof(Dream_wend_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Dream_wend_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

