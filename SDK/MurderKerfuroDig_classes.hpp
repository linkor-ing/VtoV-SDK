#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MurderKerfuroDig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass murderKerfuroDig.murderKerfuroDig_C
// 0x0060 (0x02A8 - 0x0248)
class AMurderKerfuroDig_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MurderKerfuroDig_C;                 // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComp_radarPoint_C*                     Comp_radarPoint;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   KerfBase;                                          // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Pivot;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     Points;                                            // 0x0280(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 DirtSizes;                                         // 0x0290(0x0010)(Edit, BlueprintVisible)
	int32                                         Step;                                              // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_murderKerfuroDig(int32 EntryPoint);
	void AttemptDigout();
	void ReceiveBeginPlay();
	void DriveDetached();
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action);
	void ReceiveTick(float DeltaSeconds);
	void PlayerR(class AMainPlayer_C* Player);
	void PlayerHold(class AMainPlayer_C* Player);
	void PlayerUnequip(class AMainPlayer_C* Player);
	void UpdateStrAgl();
	void DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit, float Damage);
	void Thrown(class AMainPlayer_C* Player);
	void broken_fire();
	void broken();
	void SendName(class FName Param_Name);
	void Kicked(bool Kick);
	void Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void GetNextPoint(struct FTransform* Output);
	void DigOut();
	void CanBePutInContainer(bool* Return);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool Param_NoRespawn, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void IsButtonUsed(bool* Failed);
	void LandedOn(class AMainPlayer_C* Player, bool* IgnoreFallDamage);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"murderKerfuroDig_C">();
	}
	static class AMurderKerfuroDig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMurderKerfuroDig_C>();
	}
};
static_assert(alignof(AMurderKerfuroDig_C) == 0x000008, "Wrong alignment on AMurderKerfuroDig_C");
static_assert(sizeof(AMurderKerfuroDig_C) == 0x0002A8, "Wrong size on AMurderKerfuroDig_C");
static_assert(offsetof(AMurderKerfuroDig_C, UberGraphFrame_MurderKerfuroDig_C) == 0x000248, "Member 'AMurderKerfuroDig_C::UberGraphFrame_MurderKerfuroDig_C' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Comp_radarPoint) == 0x000250, "Member 'AMurderKerfuroDig_C::Comp_radarPoint' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, StaticMesh1) == 0x000258, "Member 'AMurderKerfuroDig_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Audio) == 0x000260, "Member 'AMurderKerfuroDig_C::Audio' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, KerfBase) == 0x000268, "Member 'AMurderKerfuroDig_C::KerfBase' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Pivot) == 0x000270, "Member 'AMurderKerfuroDig_C::Pivot' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, StaticMesh) == 0x000278, "Member 'AMurderKerfuroDig_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Points) == 0x000280, "Member 'AMurderKerfuroDig_C::Points' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, DirtSizes) == 0x000290, "Member 'AMurderKerfuroDig_C::DirtSizes' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Step) == 0x0002A0, "Member 'AMurderKerfuroDig_C::Step' has a wrong offset!");
static_assert(offsetof(AMurderKerfuroDig_C, Alpha) == 0x0002A4, "Member 'AMurderKerfuroDig_C::Alpha' has a wrong offset!");

}

