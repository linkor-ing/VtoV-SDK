#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_sequence

#include "Basic.hpp"

#include "Prop_wireComponent_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_wireComponent_sequence.prop_wireComponent_sequence_C
// 0x0030 (0x03B0 - 0x0380)
class AProp_wireComponent_sequence_C final : public AProp_wireComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_wireComponent_sequence_C;      // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AWire_C*>                        Wires;                                             // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          T;                                                 // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         I;                                                 // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random;                                            // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Power;                                             // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_prop_wireComponent_sequence(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void WirePass(class AWire_C* Wire);
	void WireDisconnected(class AWire_C* Wire, bool Side);
	void WireConnected(class AWire_C* Wire, bool Side);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_wireComponent_sequence_C">();
	}
	static class AProp_wireComponent_sequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_wireComponent_sequence_C>();
	}
};
static_assert(alignof(AProp_wireComponent_sequence_C) == 0x000008, "Wrong alignment on AProp_wireComponent_sequence_C");
static_assert(sizeof(AProp_wireComponent_sequence_C) == 0x0003B0, "Wrong size on AProp_wireComponent_sequence_C");
static_assert(offsetof(AProp_wireComponent_sequence_C, UberGraphFrame_Prop_wireComponent_sequence_C) == 0x000380, "Member 'AProp_wireComponent_sequence_C::UberGraphFrame_Prop_wireComponent_sequence_C' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, Billboard) == 0x000388, "Member 'AProp_wireComponent_sequence_C::Billboard' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, Wires) == 0x000390, "Member 'AProp_wireComponent_sequence_C::Wires' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, T) == 0x0003A0, "Member 'AProp_wireComponent_sequence_C::T' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, I) == 0x0003A4, "Member 'AProp_wireComponent_sequence_C::I' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, Random) == 0x0003A8, "Member 'AProp_wireComponent_sequence_C::Random' has a wrong offset!");
static_assert(offsetof(AProp_wireComponent_sequence_C, Power) == 0x0003A9, "Member 'AProp_wireComponent_sequence_C::Power' has a wrong offset!");

}

