#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_subtitlesText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function umg_subtitlesText.umg_subtitlesText_C.ExecuteUbergraph_umg_subtitlesText
// 0x00A8 (0x00A8 - 0x0000)
struct Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText) == 0x000008, "Wrong alignment on Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText");
static_assert(sizeof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText) == 0x0000A8, "Wrong size on Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, EntryPoint) == 0x000000, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Len_ReturnValue) == 0x000004, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Round_ReturnValue) == 0x000020, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Left_ReturnValue) == 0x000028, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_IsGamePaused_ReturnValue) == 0x000038, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, K2Node_Event_MyGeometry) == 0x00005C, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, K2Node_Event_InDeltaTime) == 0x000094, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x00009C, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000A0, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'Umg_subtitlesText_C_ExecuteUbergraph_umg_subtitlesText::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function umg_subtitlesText.umg_subtitlesText_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_subtitlesText_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_subtitlesText_C_Tick) == 0x000004, "Wrong alignment on Umg_subtitlesText_C_Tick");
static_assert(sizeof(Umg_subtitlesText_C_Tick) == 0x00003C, "Wrong size on Umg_subtitlesText_C_Tick");
static_assert(offsetof(Umg_subtitlesText_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_subtitlesText_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_subtitlesText_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_subtitlesText_C_Tick::InDeltaTime' has a wrong offset!");

}

