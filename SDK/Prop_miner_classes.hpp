#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_miner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_miner.prop_miner_C
// 0x0080 (0x03F8 - 0x0378)
class AProp_miner_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_miner_C;                       // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_gpus;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_fans1;                                       // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_idle;                                        // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Exp;                                               // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Cord;                                              // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Stats;                                             // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Fans;                                              // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Slots;                                             // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Gpus;                                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Upg_gpu;                                           // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Upg_slots;                                         // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Upg_fans;                                          // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         I_calc;                                            // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpeedUp;                                           // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Accumulated;                                       // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Powered;                                           // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                ObjCord;                                           // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpI;                                              // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Overheat;                                          // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_miner(int32 EntryPoint);
	void CordUnplugged(class ACord_C* Param_Cord, class ACordSocket_C* Socket);
	void CordPlugged(class ACord_C* Param_Cord, class ACordSocket_C* Socket);
	void ReceiveTick(float DeltaSeconds);
	void SetActiveTrigger(class AActor* SentFrom, bool Active);
	void Set_ignoreSave_trigger(bool NewParam);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void Upd();
	void Calc(float Delta);
	void Upgrade(class FName Param_Upgrade, bool* Success);
	void Plugged();
	void IgnoreSave_trigger(bool* Ignore);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void GatherDataFromKeyT(bool* Gather);
	void FireDamage(float Damage);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, Enum_interactionActions Action);
	void ReceiveBeginPlay();
	void PlayerUsedOn(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit);
	void UserConstructionScript();
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_miner_C">();
	}
	static class AProp_miner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_miner_C>();
	}
};
static_assert(alignof(AProp_miner_C) == 0x000008, "Wrong alignment on AProp_miner_C");
static_assert(sizeof(AProp_miner_C) == 0x0003F8, "Wrong size on AProp_miner_C");
static_assert(offsetof(AProp_miner_C, UberGraphFrame_Prop_miner_C) == 0x000378, "Member 'AProp_miner_C::UberGraphFrame_Prop_miner_C' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Audio_gpus) == 0x000380, "Member 'AProp_miner_C::Audio_gpus' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Audio_fans1) == 0x000388, "Member 'AProp_miner_C::Audio_fans1' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Audio_idle) == 0x000390, "Member 'AProp_miner_C::Audio_idle' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Exp) == 0x000398, "Member 'AProp_miner_C::Exp' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Cord) == 0x0003A0, "Member 'AProp_miner_C::Cord' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Stats) == 0x0003A8, "Member 'AProp_miner_C::Stats' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Fans) == 0x0003B0, "Member 'AProp_miner_C::Fans' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Slots) == 0x0003B8, "Member 'AProp_miner_C::Slots' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Gpus) == 0x0003C0, "Member 'AProp_miner_C::Gpus' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Upg_gpu) == 0x0003C8, "Member 'AProp_miner_C::Upg_gpu' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Upg_slots) == 0x0003CC, "Member 'AProp_miner_C::Upg_slots' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Upg_fans) == 0x0003D0, "Member 'AProp_miner_C::Upg_fans' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, I_calc) == 0x0003D4, "Member 'AProp_miner_C::I_calc' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, SpeedUp) == 0x0003D8, "Member 'AProp_miner_C::SpeedUp' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Accumulated) == 0x0003DC, "Member 'AProp_miner_C::Accumulated' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Powered) == 0x0003E0, "Member 'AProp_miner_C::Powered' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, ObjCord) == 0x0003E8, "Member 'AProp_miner_C::ObjCord' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, ExpI) == 0x0003F0, "Member 'AProp_miner_C::ExpI' has a wrong offset!");
static_assert(offsetof(AProp_miner_C, Overheat) == 0x0003F4, "Member 'AProp_miner_C::Overheat' has a wrong offset!");

}

