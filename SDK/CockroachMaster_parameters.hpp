#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CockroachMaster

#include "Basic.hpp"

#include "Struct_settings_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function cockroachMaster.cockroachMaster_C.ExecuteUbergraph_cockroachMaster
// 0x0CA0 (0x0CA0 - 0x0000)
struct CockroachMaster_C_ExecuteUbergraph_cockroachMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_damage_7;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_8;                                // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_2;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact_2;                             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key_2;                                // 0x0100(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed_1;                            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_18;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name_1;                               // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_17;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_16;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x01F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_6;                             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_15;                            // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_5;                             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x02A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact_1;                             // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_activate;                             // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_static;                               // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_key_1;                                // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_4;                             // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_fuel;                                 // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_3;                             // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hot;                                  // 0x038C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_2;                             // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location_1;                           // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0470(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_temperature_1;                        // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x04A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name;                                 // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_volume;                               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_1;                             // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_clean_1;                              // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x0568(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AHook_C*                                K2Node_Event_hook_1;                               // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_clean;                                // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x0624(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x06AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x06C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x075D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E[0x2];                                      // 0x075E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0770(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Temp_object_Variable_3;                            // 0x0798(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_4;                            // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x07B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x07C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x07CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x07D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorInt_ReturnValue;           // 0x07E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F6[0x2];                                      // 0x07F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x07F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0818(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0830(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0844(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0854(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x3];                                      // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x086C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0878(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0884(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0890(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0919(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x091A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x091B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0924(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0930(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x093C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0948(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0968(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0990(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x099C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A8[0x8];                                      // 0x09A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x09B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x09E0(0x00F0)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_cockroachNest_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x0AE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF5[0x3];                                      // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Temp_object_Variable_5;                            // 0x0AF8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0B10(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Temp_object_Variable_6;                            // 0x0BA0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0BA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0BAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BAB[0x1];                                      // 0x0BAB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0BB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0BF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0C14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0C20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_1;       // 0x0C2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0C38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C41[0x3];                                      // 0x0C41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addFood_full;                             // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0C51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C52[0x6];                                      // 0x0C52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_component;                            // 0x0C68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_progressAdvancement_finished;             // 0x0C75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C76[0x2];                                      // 0x0C76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_progressAdvancement_name;                 // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x0C88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster) == 0x000010, "Wrong alignment on CockroachMaster_C_ExecuteUbergraph_cockroachMaster");
static_assert(sizeof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster) == 0x000CA0, "Wrong size on CockroachMaster_C_ExecuteUbergraph_cockroachMaster");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, EntryPoint) == 0x000000, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable) == 0x000010, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Variable) == 0x000024, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_1) == 0x000030, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_2) == 0x000040, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_7) == 0x000050, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_7' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_8) == 0x000054, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_8' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_actor_2) == 0x0000E0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_actor_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_impact_2) == 0x0000E8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_impact_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_gamemode) == 0x0000F8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_key_2) == 0x000100, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_key_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_pressed_1) == 0x000118, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_pressed_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_color) == 0x00011C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_picker) == 0x000130, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_texture) == 0x000138, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_index) == 0x000140, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_18) == 0x000148, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_18' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_7) == 0x000150, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_kick) == 0x0001D8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_name_1) == 0x0001DC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_17) == 0x0001E8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_17' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_16) == 0x0001F0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_16' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_6) == 0x0001F8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_6) == 0x000280, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_6' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_15) == 0x000288, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_15' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_14) == 0x000290, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_13) == 0x000298, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_5) == 0x0002A0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_5) == 0x0002A4, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_actor_1) == 0x000330, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_impact_1) == 0x000338, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_water_3) == 0x000348, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_water_2) == 0x000350, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_water_1) == 0x000358, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_water) == 0x000360, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_activate) == 0x000368, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_static) == 0x000369, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_frozen) == 0x00036A, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_active) == 0x00036B, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_key_1) == 0x000370, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_4) == 0x000380, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_fuel) == 0x000384, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_3) == 0x000388, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hot) == 0x00038C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hot' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_12) == 0x000418, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_11) == 0x000420, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_2) == 0x000428, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_location_1) == 0x00042C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_10) == 0x000438, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_9) == 0x000440, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_8) == 0x000448, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_wheelDelta) == 0x000450, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_7) == 0x000458, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_mouse) == 0x000460, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_6) == 0x000468, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_key) == 0x000470, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_pressed) == 0x000488, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_temperature_1) == 0x00048C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_temperature) == 0x000490, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_speed) == 0x000494, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_5) == 0x000498, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_4) == 0x0004A0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_name) == 0x000528, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_volume) == 0x000538, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_4) == 0x000540, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_location) == 0x000548, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage_1) == 0x000554, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_clean_1) == 0x000558, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_clean_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_3) == 0x000560, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_3) == 0x000568, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hook_1) == 0x0005F0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hook_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_clean) == 0x0005F8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_2) == 0x000600, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hook) == 0x000608, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_DeltaSeconds) == 0x000610, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_LastIndex_ReturnValue) == 0x000614, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_actor) == 0x000618, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_damage) == 0x000620, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_2) == 0x000624, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_impact) == 0x0006AC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_skipSetting) == 0x0006B8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player_1) == 0x0006C0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit_1) == 0x0006C8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Loop_Counter_Variable_2) == 0x000750, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Length_ReturnValue) == 0x000754, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Add_IntInt_ReturnValue_3) == 0x000758, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Less_IntInt_ReturnValue) == 0x00075C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x00075D, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Length_ReturnValue_1) == 0x000760, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Array_Index_Variable_1) == 0x000764, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Less_IntInt_ReturnValue_1) == 0x000768, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Get_Item) == 0x000770, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Find_ReturnValue) == 0x000778, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00077C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakVector_X) == 0x000788, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakVector_Y) == 0x00078C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakVector_Z) == 0x000790, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Less_FloatFloat_ReturnValue) == 0x000794, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_3) == 0x000798, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_4) == 0x0007A0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_RemoveItem_ReturnValue) == 0x0007A8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_int_Array_Index_Variable_2) == 0x0007AC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0007B0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Get_Item_1) == 0x0007B8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0007C0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0007CC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0007D8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Subtract_VectorInt_ReturnValue) == 0x0007E4, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Subtract_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_VSize_ReturnValue) == 0x0007F0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0007F4, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BooleanAND_ReturnValue) == 0x0007F5, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0007F8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000804, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_bool_Variable) == 0x000810, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_SphereOverlapActors_OutActors) == 0x000818, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_SphereOverlapActors_ReturnValue) == 0x000828, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_obj_static_obj) == 0x000830, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Length_ReturnValue_2) == 0x000840, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_RandomUnitVector_ReturnValue) == 0x000844, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000850, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000854, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Get_Item_2) == 0x000860, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Greater_IntInt_ReturnValue) == 0x000868, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_GetActorBounds_Origin) == 0x00086C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_GetActorBounds_BoxExtent) == 0x000878, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Add_VectorVector_ReturnValue) == 0x000884, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000890, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000918, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000919, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_bBlockingHit) == 0x00091A, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_bInitialOverlap) == 0x00091B, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Time) == 0x00091C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Distance) == 0x000920, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Location) == 0x000924, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ImpactPoint) == 0x000930, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Normal) == 0x00093C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ImpactNormal) == 0x000948, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_PhysMat) == 0x000958, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitActor) == 0x000960, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitComponent) == 0x000968, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitBoneName) == 0x000970, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitItem) == 0x000978, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ElementIndex) == 0x00097C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_FaceIndex) == 0x000980, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_TraceStart) == 0x000984, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_TraceEnd) == 0x000990, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00099C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_MakeTransform_ReturnValue) == 0x0009B0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_settings) == 0x0009E0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000AD0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_FinishSpawningActor_ReturnValue) == 0x000AD8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Max_ReturnValue) == 0x000AE0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Get_Item_3) == 0x000AE8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Length_ReturnValue_3) == 0x000AF0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Less_IntInt_ReturnValue_2) == 0x000AF4, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_5) == 0x000AF8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000B00, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_player) == 0x000B08, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_hit) == 0x000B10, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_action) == 0x000B98, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, Temp_object_Variable_6) == 0x000BA0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_SwitchEnum_CmpSuccess) == 0x000BA8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000BA9, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000BAA, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Time_1) == 0x000BAC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Distance_1) == 0x000BB0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Location_1) == 0x000BB4, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000BC0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_Normal_1) == 0x000BCC, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000BD8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_PhysMat_1) == 0x000BE8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitActor_1) == 0x000BF0, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitComponent_1) == 0x000BF8, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitBoneName_1) == 0x000C00, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_HitItem_1) == 0x000C08, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_ElementIndex_1) == 0x000C0C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_FaceIndex_1) == 0x000C10, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_TraceStart_1) == 0x000C14, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_BreakHitResult_TraceEnd_1) == 0x000C20, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_K2_GetComponentScale_ReturnValue_1) == 0x000C2C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_K2_GetComponentScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000C38, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_DynamicCast_bSuccess) == 0x000C40, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_VSize_ReturnValue_1) == 0x000C44, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Find_ReturnValue_1) == 0x000C48, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000C4C, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_addFood_full) == 0x000C50, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_addFood_full' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000C51, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_getSaveSlot_saveSlot) == 0x000C58, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_FClamp_ReturnValue) == 0x000C60, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Event_component) == 0x000C68, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Event_component' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000C70, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000C74, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_progressAdvancement_finished) == 0x000C75, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_progressAdvancement_finished' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_progressAdvancement_name) == 0x000C78, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_progressAdvancement_name' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, K2Node_Select_Default) == 0x000C80, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_Array_Get_Item_4) == 0x000C88, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ExecuteUbergraph_cockroachMaster, CallFunc_SetStaticMesh_ReturnValue) == 0x000C90, "Member 'CockroachMaster_C_ExecuteUbergraph_cockroachMaster::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.impactSquishCPP
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_ImpactSquishCPP final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ImpactSquishCPP) == 0x000008, "Wrong alignment on CockroachMaster_C_ImpactSquishCPP");
static_assert(sizeof(CockroachMaster_C_ImpactSquishCPP) == 0x000008, "Wrong size on CockroachMaster_C_ImpactSquishCPP");
static_assert(offsetof(CockroachMaster_C_ImpactSquishCPP, Component) == 0x000000, "Member 'CockroachMaster_C_ImpactSquishCPP::Component' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct CockroachMaster_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ActionOptionIndex) == 0x000008, "Wrong alignment on CockroachMaster_C_ActionOptionIndex");
static_assert(sizeof(CockroachMaster_C_ActionOptionIndex) == 0x000098, "Wrong size on CockroachMaster_C_ActionOptionIndex");
static_assert(offsetof(CockroachMaster_C_ActionOptionIndex, Player) == 0x000000, "Member 'CockroachMaster_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ActionOptionIndex, Hit) == 0x000008, "Member 'CockroachMaster_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ActionOptionIndex, Action) == 0x000090, "Member 'CockroachMaster_C_ActionOptionIndex::Action' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.settingsApplied
// 0x00F0 (0x00F0 - 0x0000)
struct CockroachMaster_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_SettingsApplied) == 0x000008, "Wrong alignment on CockroachMaster_C_SettingsApplied");
static_assert(sizeof(CockroachMaster_C_SettingsApplied) == 0x0000F0, "Wrong size on CockroachMaster_C_SettingsApplied");
static_assert(offsetof(CockroachMaster_C_SettingsApplied, Settings) == 0x000000, "Member 'CockroachMaster_C_SettingsApplied::Settings' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct CockroachMaster_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CockroachMaster_C_SteppedOn) == 0x000008, "Wrong alignment on CockroachMaster_C_SteppedOn");
static_assert(sizeof(CockroachMaster_C_SteppedOn) == 0x000090, "Wrong size on CockroachMaster_C_SteppedOn");
static_assert(offsetof(CockroachMaster_C_SteppedOn, Player) == 0x000000, "Member 'CockroachMaster_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_SteppedOn, Hit) == 0x000008, "Member 'CockroachMaster_C_SteppedOn::Hit' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct CockroachMaster_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_AddDamage) == 0x000008, "Wrong alignment on CockroachMaster_C_AddDamage");
static_assert(sizeof(CockroachMaster_C_AddDamage) == 0x0000A8, "Wrong size on CockroachMaster_C_AddDamage");
static_assert(offsetof(CockroachMaster_C_AddDamage, Actor) == 0x000000, "Member 'CockroachMaster_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddDamage, Damage) == 0x000008, "Member 'CockroachMaster_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddDamage, Hit) == 0x00000C, "Member 'CockroachMaster_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddDamage, Impact) == 0x000094, "Member 'CockroachMaster_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'CockroachMaster_C_AddDamage::SkipSetting' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ReceiveTick) == 0x000004, "Wrong alignment on CockroachMaster_C_ReceiveTick");
static_assert(sizeof(CockroachMaster_C_ReceiveTick) == 0x000004, "Wrong size on CockroachMaster_C_ReceiveTick");
static_assert(offsetof(CockroachMaster_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CockroachMaster_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.hookTension
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_HookTension final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_HookTension) == 0x000008, "Wrong alignment on CockroachMaster_C_HookTension");
static_assert(sizeof(CockroachMaster_C_HookTension) == 0x000008, "Wrong size on CockroachMaster_C_HookTension");
static_assert(offsetof(CockroachMaster_C_HookTension, Hook) == 0x000000, "Member 'CockroachMaster_C_HookTension::Hook' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.cleanSponge
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_CleanSponge final
{
public:
	float                                         Clean;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_CleanSponge) == 0x000008, "Wrong alignment on CockroachMaster_C_CleanSponge");
static_assert(sizeof(CockroachMaster_C_CleanSponge) == 0x000010, "Wrong size on CockroachMaster_C_CleanSponge");
static_assert(offsetof(CockroachMaster_C_CleanSponge, Clean) == 0x000000, "Member 'CockroachMaster_C_CleanSponge::Clean' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CleanSponge, Player) == 0x000008, "Member 'CockroachMaster_C_CleanSponge::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Hooked) == 0x000008, "Wrong alignment on CockroachMaster_C_Hooked");
static_assert(sizeof(CockroachMaster_C_Hooked) == 0x000008, "Wrong size on CockroachMaster_C_Hooked");
static_assert(offsetof(CockroachMaster_C_Hooked, Hook) == 0x000000, "Member 'CockroachMaster_C_Hooked::Hook' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct CockroachMaster_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CockroachMaster_C_PlayerUsedOn) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerUsedOn");
static_assert(sizeof(CockroachMaster_C_PlayerUsedOn) == 0x000090, "Wrong size on CockroachMaster_C_PlayerUsedOn");
static_assert(offsetof(CockroachMaster_C_PlayerUsedOn, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_PlayerUsedOn, Hit) == 0x000008, "Member 'CockroachMaster_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.slice
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_Slice) == 0x000001, "Wrong alignment on CockroachMaster_C_Slice");
static_assert(sizeof(CockroachMaster_C_Slice) == 0x000001, "Wrong size on CockroachMaster_C_Slice");
static_assert(offsetof(CockroachMaster_C_Slice, Clean) == 0x000000, "Member 'CockroachMaster_C_Slice::Clean' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ReachedByExplosion) == 0x000004, "Wrong alignment on CockroachMaster_C_ReachedByExplosion");
static_assert(sizeof(CockroachMaster_C_ReachedByExplosion) == 0x000010, "Wrong size on CockroachMaster_C_ReachedByExplosion");
static_assert(offsetof(CockroachMaster_C_ReachedByExplosion, Location) == 0x000000, "Member 'CockroachMaster_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'CockroachMaster_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerLookAway) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerLookAway");
static_assert(sizeof(CockroachMaster_C_PlayerLookAway) == 0x000008, "Wrong size on CockroachMaster_C_PlayerLookAway");
static_assert(offsetof(CockroachMaster_C_PlayerLookAway, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerLookAway::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Stepped) == 0x000004, "Wrong alignment on CockroachMaster_C_Stepped");
static_assert(sizeof(CockroachMaster_C_Stepped) == 0x000004, "Wrong size on CockroachMaster_C_Stepped");
static_assert(offsetof(CockroachMaster_C_Stepped, Volume) == 0x000000, "Member 'CockroachMaster_C_Stepped::Volume' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct CockroachMaster_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Param_Name;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ActionName) == 0x000008, "Wrong alignment on CockroachMaster_C_ActionName");
static_assert(sizeof(CockroachMaster_C_ActionName) == 0x0000A0, "Wrong size on CockroachMaster_C_ActionName");
static_assert(offsetof(CockroachMaster_C_ActionName, Player) == 0x000000, "Member 'CockroachMaster_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ActionName, Hit) == 0x000008, "Member 'CockroachMaster_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ActionName, Param_Name) == 0x000090, "Member 'CockroachMaster_C_ActionName::Param_Name' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_AccumulateTemperature) == 0x000004, "Wrong alignment on CockroachMaster_C_AccumulateTemperature");
static_assert(sizeof(CockroachMaster_C_AccumulateTemperature) == 0x000008, "Wrong size on CockroachMaster_C_AccumulateTemperature");
static_assert(offsetof(CockroachMaster_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'CockroachMaster_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AccumulateTemperature, Speed) == 0x000004, "Member 'CockroachMaster_C_AccumulateTemperature::Speed' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_AddTemperature) == 0x000004, "Wrong alignment on CockroachMaster_C_AddTemperature");
static_assert(sizeof(CockroachMaster_C_AddTemperature) == 0x000004, "Wrong size on CockroachMaster_C_AddTemperature");
static_assert(offsetof(CockroachMaster_C_AddTemperature, Temperature) == 0x000000, "Member 'CockroachMaster_C_AddTemperature::Temperature' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct CockroachMaster_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandAnyKey");
static_assert(sizeof(CockroachMaster_C_PlayerHandAnyKey) == 0x000028, "Wrong size on CockroachMaster_C_PlayerHandAnyKey");
static_assert(offsetof(CockroachMaster_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_PlayerHandAnyKey, Key) == 0x000008, "Member 'CockroachMaster_C_PlayerHandAnyKey::Key' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'CockroachMaster_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandMouse) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandMouse");
static_assert(sizeof(CockroachMaster_C_PlayerHandMouse) == 0x000010, "Wrong size on CockroachMaster_C_PlayerHandMouse");
static_assert(offsetof(CockroachMaster_C_PlayerHandMouse, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'CockroachMaster_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandMouseWheel");
static_assert(sizeof(CockroachMaster_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on CockroachMaster_C_PlayerHandMouseWheel");
static_assert(offsetof(CockroachMaster_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'CockroachMaster_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandRelease_LMB");
static_assert(sizeof(CockroachMaster_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on CockroachMaster_C_PlayerHandRelease_LMB");
static_assert(offsetof(CockroachMaster_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandRelease_RMB");
static_assert(sizeof(CockroachMaster_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on CockroachMaster_C_PlayerHandRelease_RMB");
static_assert(offsetof(CockroachMaster_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Exploded) == 0x000004, "Wrong alignment on CockroachMaster_C_Exploded");
static_assert(sizeof(CockroachMaster_C_Exploded) == 0x000010, "Wrong size on CockroachMaster_C_Exploded");
static_assert(offsetof(CockroachMaster_C_Exploded, Damage) == 0x000000, "Member 'CockroachMaster_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Exploded, Location) == 0x000004, "Member 'CockroachMaster_C_Exploded::Location' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandUse_LMB");
static_assert(sizeof(CockroachMaster_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on CockroachMaster_C_PlayerHandUse_LMB");
static_assert(offsetof(CockroachMaster_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHandUse_RMB");
static_assert(sizeof(CockroachMaster_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on CockroachMaster_C_PlayerHandUse_RMB");
static_assert(offsetof(CockroachMaster_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.receivedPhyiscsDamage
// 0x008C (0x008C - 0x0000)
struct CockroachMaster_C_ReceivedPhyiscsDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hot;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CockroachMaster_C_ReceivedPhyiscsDamage) == 0x000004, "Wrong alignment on CockroachMaster_C_ReceivedPhyiscsDamage");
static_assert(sizeof(CockroachMaster_C_ReceivedPhyiscsDamage) == 0x00008C, "Wrong size on CockroachMaster_C_ReceivedPhyiscsDamage");
static_assert(offsetof(CockroachMaster_C_ReceivedPhyiscsDamage, Damage) == 0x000000, "Member 'CockroachMaster_C_ReceivedPhyiscsDamage::Damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ReceivedPhyiscsDamage, Hot) == 0x000004, "Member 'CockroachMaster_C_ReceivedPhyiscsDamage::Hot' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Ignite) == 0x000004, "Wrong alignment on CockroachMaster_C_Ignite");
static_assert(sizeof(CockroachMaster_C_Ignite) == 0x000004, "Wrong size on CockroachMaster_C_Ignite");
static_assert(offsetof(CockroachMaster_C_Ignite, Fuel) == 0x000000, "Member 'CockroachMaster_C_Ignite::Fuel' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_FireDamage) == 0x000004, "Wrong alignment on CockroachMaster_C_FireDamage");
static_assert(sizeof(CockroachMaster_C_FireDamage) == 0x000004, "Wrong size on CockroachMaster_C_FireDamage");
static_assert(offsetof(CockroachMaster_C_FireDamage, Damage) == 0x000000, "Member 'CockroachMaster_C_FireDamage::Damage' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_SetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_SetKey) == 0x000008, "Wrong alignment on CockroachMaster_C_SetKey");
static_assert(sizeof(CockroachMaster_C_SetKey) == 0x000010, "Wrong size on CockroachMaster_C_SetKey");
static_assert(offsetof(CockroachMaster_C_SetKey, Key) == 0x000000, "Member 'CockroachMaster_C_SetKey::Key' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct CockroachMaster_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_SetPropProps) == 0x000001, "Wrong alignment on CockroachMaster_C_SetPropProps");
static_assert(sizeof(CockroachMaster_C_SetPropProps) == 0x000003, "Wrong size on CockroachMaster_C_SetPropProps");
static_assert(offsetof(CockroachMaster_C_SetPropProps, Static) == 0x000000, "Member 'CockroachMaster_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_SetPropProps, Frozen) == 0x000001, "Member 'CockroachMaster_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_SetPropProps, Active) == 0x000002, "Member 'CockroachMaster_C_SetPropProps::Active' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.virus
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_Virus) == 0x000001, "Wrong alignment on CockroachMaster_C_Virus");
static_assert(sizeof(CockroachMaster_C_Virus) == 0x000001, "Wrong size on CockroachMaster_C_Virus");
static_assert(offsetof(CockroachMaster_C_Virus, Activate) == 0x000000, "Member 'CockroachMaster_C_Virus::Activate' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on CockroachMaster_C_LeaveWaterOrigin");
static_assert(sizeof(CockroachMaster_C_LeaveWaterOrigin) == 0x000008, "Wrong size on CockroachMaster_C_LeaveWaterOrigin");
static_assert(offsetof(CockroachMaster_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'CockroachMaster_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on CockroachMaster_C_EnterWaterOrigin");
static_assert(sizeof(CockroachMaster_C_EnterWaterOrigin) == 0x000008, "Wrong size on CockroachMaster_C_EnterWaterOrigin");
static_assert(offsetof(CockroachMaster_C_EnterWaterOrigin, Water) == 0x000000, "Member 'CockroachMaster_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_LeaveWater) == 0x000008, "Wrong alignment on CockroachMaster_C_LeaveWater");
static_assert(sizeof(CockroachMaster_C_LeaveWater) == 0x000008, "Wrong size on CockroachMaster_C_LeaveWater");
static_assert(offsetof(CockroachMaster_C_LeaveWater, Water) == 0x000000, "Member 'CockroachMaster_C_LeaveWater::Water' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_EnterWater) == 0x000008, "Wrong alignment on CockroachMaster_C_EnterWater");
static_assert(sizeof(CockroachMaster_C_EnterWater) == 0x000008, "Wrong size on CockroachMaster_C_EnterWater");
static_assert(offsetof(CockroachMaster_C_EnterWater, Water) == 0x000000, "Member 'CockroachMaster_C_EnterWater::Water' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct CockroachMaster_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ImpactDamage) == 0x000008, "Wrong alignment on CockroachMaster_C_ImpactDamage");
static_assert(sizeof(CockroachMaster_C_ImpactDamage) == 0x0000A8, "Wrong size on CockroachMaster_C_ImpactDamage");
static_assert(offsetof(CockroachMaster_C_ImpactDamage, Damage) == 0x000000, "Member 'CockroachMaster_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamage, Hit) == 0x000004, "Member 'CockroachMaster_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamage, Actor) == 0x000090, "Member 'CockroachMaster_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamage, Impact) == 0x000098, "Member 'CockroachMaster_C_ImpactDamage::Impact' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerR) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerR");
static_assert(sizeof(CockroachMaster_C_PlayerR) == 0x000008, "Wrong size on CockroachMaster_C_PlayerR");
static_assert(offsetof(CockroachMaster_C_PlayerR, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerR::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerHold) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerHold");
static_assert(sizeof(CockroachMaster_C_PlayerHold) == 0x000008, "Wrong size on CockroachMaster_C_PlayerHold");
static_assert(offsetof(CockroachMaster_C_PlayerHold, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerHold::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_PlayerUnequip) == 0x000008, "Wrong alignment on CockroachMaster_C_PlayerUnequip");
static_assert(sizeof(CockroachMaster_C_PlayerUnequip) == 0x000008, "Wrong size on CockroachMaster_C_PlayerUnequip");
static_assert(offsetof(CockroachMaster_C_PlayerUnequip, Player) == 0x000000, "Member 'CockroachMaster_C_PlayerUnequip::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct CockroachMaster_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_DamageByPlayer) == 0x000008, "Wrong alignment on CockroachMaster_C_DamageByPlayer");
static_assert(sizeof(CockroachMaster_C_DamageByPlayer) == 0x000098, "Wrong size on CockroachMaster_C_DamageByPlayer");
static_assert(offsetof(CockroachMaster_C_DamageByPlayer, Player) == 0x000000, "Member 'CockroachMaster_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DamageByPlayer, Hit) == 0x000008, "Member 'CockroachMaster_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DamageByPlayer, Damage) == 0x000090, "Member 'CockroachMaster_C_DamageByPlayer::Damage' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Thrown) == 0x000008, "Wrong alignment on CockroachMaster_C_Thrown");
static_assert(sizeof(CockroachMaster_C_Thrown) == 0x000008, "Wrong size on CockroachMaster_C_Thrown");
static_assert(offsetof(CockroachMaster_C_Thrown, Player) == 0x000000, "Member 'CockroachMaster_C_Thrown::Player' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_SendName) == 0x000004, "Wrong alignment on CockroachMaster_C_SendName");
static_assert(sizeof(CockroachMaster_C_SendName) == 0x000008, "Wrong size on CockroachMaster_C_SendName");
static_assert(offsetof(CockroachMaster_C_SendName, Param_Name) == 0x000000, "Member 'CockroachMaster_C_SendName::Param_Name' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_Kicked) == 0x000001, "Wrong alignment on CockroachMaster_C_Kicked");
static_assert(sizeof(CockroachMaster_C_Kicked) == 0x000001, "Wrong size on CockroachMaster_C_Kicked");
static_assert(offsetof(CockroachMaster_C_Kicked, Kick) == 0x000000, "Member 'CockroachMaster_C_Kicked::Kick' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct CockroachMaster_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CockroachMaster_C_Player_use) == 0x000008, "Wrong alignment on CockroachMaster_C_Player_use");
static_assert(sizeof(CockroachMaster_C_Player_use) == 0x000090, "Wrong size on CockroachMaster_C_Player_use");
static_assert(offsetof(CockroachMaster_C_Player_use, Player) == 0x000000, "Member 'CockroachMaster_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Player_use, Hit) == 0x000008, "Member 'CockroachMaster_C_Player_use::Hit' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct CockroachMaster_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_TexturePickerApply) == 0x000008, "Wrong alignment on CockroachMaster_C_TexturePickerApply");
static_assert(sizeof(CockroachMaster_C_TexturePickerApply) == 0x000018, "Wrong size on CockroachMaster_C_TexturePickerApply");
static_assert(offsetof(CockroachMaster_C_TexturePickerApply, Picker) == 0x000000, "Member 'CockroachMaster_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TexturePickerApply, Texture) == 0x000008, "Member 'CockroachMaster_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TexturePickerApply, Param_Index) == 0x000010, "Member 'CockroachMaster_C_TexturePickerApply::Param_Index' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ApplyColor) == 0x000004, "Wrong alignment on CockroachMaster_C_ApplyColor");
static_assert(sizeof(CockroachMaster_C_ApplyColor) == 0x000010, "Wrong size on CockroachMaster_C_ApplyColor");
static_assert(offsetof(CockroachMaster_C_ApplyColor, Color) == 0x000000, "Member 'CockroachMaster_C_ApplyColor::Color' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct CockroachMaster_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_AnyKey) == 0x000008, "Wrong alignment on CockroachMaster_C_AnyKey");
static_assert(sizeof(CockroachMaster_C_AnyKey) == 0x000020, "Wrong size on CockroachMaster_C_AnyKey");
static_assert(offsetof(CockroachMaster_C_AnyKey, Key) == 0x000000, "Member 'CockroachMaster_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AnyKey, Pressed) == 0x000018, "Member 'CockroachMaster_C_AnyKey::Pressed' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_StuffUpgraded) == 0x000008, "Wrong alignment on CockroachMaster_C_StuffUpgraded");
static_assert(sizeof(CockroachMaster_C_StuffUpgraded) == 0x000008, "Wrong size on CockroachMaster_C_StuffUpgraded");
static_assert(offsetof(CockroachMaster_C_StuffUpgraded, GameMode) == 0x000000, "Member 'CockroachMaster_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.impactDamageCPP
// 0x00A8 (0x00A8 - 0x0000)
struct CockroachMaster_C_ImpactDamageCPP final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_ImpactDamageCPP) == 0x000008, "Wrong alignment on CockroachMaster_C_ImpactDamageCPP");
static_assert(sizeof(CockroachMaster_C_ImpactDamageCPP) == 0x0000A8, "Wrong size on CockroachMaster_C_ImpactDamageCPP");
static_assert(offsetof(CockroachMaster_C_ImpactDamageCPP, Damage) == 0x000000, "Member 'CockroachMaster_C_ImpactDamageCPP::Damage' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamageCPP, Hit) == 0x000004, "Member 'CockroachMaster_C_ImpactDamageCPP::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamageCPP, Actor) == 0x000090, "Member 'CockroachMaster_C_ImpactDamageCPP::Actor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ImpactDamageCPP, Impact) == 0x000098, "Member 'CockroachMaster_C_ImpactDamageCPP::Impact' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.addRoach
// 0x0280 (0x0280 - 0x0000)
struct CockroachMaster_C_AddRoach final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_Size;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassCheck;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0030(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0148(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0158(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_273[0x1];                                      // 0x0273(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_AddRoach) == 0x000010, "Wrong alignment on CockroachMaster_C_AddRoach");
static_assert(sizeof(CockroachMaster_C_AddRoach) == 0x000280, "Wrong size on CockroachMaster_C_AddRoach");
static_assert(offsetof(CockroachMaster_C_AddRoach, Location) == 0x000000, "Member 'CockroachMaster_C_AddRoach::Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, Param_Size) == 0x00000C, "Member 'CockroachMaster_C_AddRoach::Param_Size' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, bypassCheck) == 0x000018, "Member 'CockroachMaster_C_AddRoach::bypassCheck' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000019, "Member 'CockroachMaster_C_AddRoach::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'CockroachMaster_C_AddRoach::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'CockroachMaster_C_AddRoach::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_obj_statDyn_obj) == 0x000030, "Member 'CockroachMaster_C_AddRoach::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'CockroachMaster_C_AddRoach::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_RandomFloat_ReturnValue) == 0x00004C, "Member 'CockroachMaster_C_AddRoach::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Vector_Distance_ReturnValue) == 0x000050, "Member 'CockroachMaster_C_AddRoach::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Ease_ReturnValue) == 0x000054, "Member 'CockroachMaster_C_AddRoach::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'CockroachMaster_C_AddRoach::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00005C, "Member 'CockroachMaster_C_AddRoach::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'CockroachMaster_C_AddRoach::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_SelectVector_ReturnValue) == 0x00006C, "Member 'CockroachMaster_C_AddRoach::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'CockroachMaster_C_AddRoach::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_AddComponent_ReturnValue) == 0x0000B0, "Member 'CockroachMaster_C_AddRoach::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000B8, "Member 'CockroachMaster_C_AddRoach::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'CockroachMaster_C_AddRoach::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, Temp_object_Variable) == 0x000148, "Member 'CockroachMaster_C_AddRoach::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000158, "Member 'CockroachMaster_C_AddRoach::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001E0, "Member 'CockroachMaster_C_AddRoach::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Add_IntInt_ReturnValue) == 0x0001E4, "Member 'CockroachMaster_C_AddRoach::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_bBlockingHit) == 0x0001E8, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001E9, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_Time) == 0x0001EC, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_Distance) == 0x0001F0, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_Location) == 0x0001F4, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_ImpactPoint) == 0x000200, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_Normal) == 0x00020C, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_ImpactNormal) == 0x000218, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_PhysMat) == 0x000228, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_HitActor) == 0x000230, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_HitComponent) == 0x000238, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_HitBoneName) == 0x000240, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_HitItem) == 0x000248, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_ElementIndex) == 0x00024C, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_FaceIndex) == 0x000250, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_TraceStart) == 0x000254, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'CockroachMaster_C_AddRoach::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, Temp_int_Variable) == 0x00026C, "Member 'CockroachMaster_C_AddRoach::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000270, "Member 'CockroachMaster_C_AddRoach::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Array_Contains_ReturnValue) == 0x000271, "Member 'CockroachMaster_C_AddRoach::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_BooleanAND_ReturnValue) == 0x000272, "Member 'CockroachMaster_C_AddRoach::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_AddRoach, CallFunc_Array_Add_ReturnValue) == 0x000274, "Member 'CockroachMaster_C_AddRoach::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.updCurrent
// 0x0040 (0x0040 - 0x0000)
struct CockroachMaster_C_UpdCurrent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_UpdCurrent) == 0x000004, "Wrong alignment on CockroachMaster_C_UpdCurrent");
static_assert(sizeof(CockroachMaster_C_UpdCurrent) == 0x000040, "Wrong size on CockroachMaster_C_UpdCurrent");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000004, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_GetUpVector_ReturnValue) == 0x00001C, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_GetRightVector_ReturnValue) == 0x000028, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_UpdCurrent, CallFunc_GetForwardVector_ReturnValue) == 0x000034, "Member 'CockroachMaster_C_UpdCurrent::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.deleteRoach
// 0x0030 (0x0030 - 0x0000)
struct CockroachMaster_C_DeleteRoach final
{
public:
	int32                                         IndexToRemove;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crush;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UStaticMeshComponent*             Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_DeleteRoach) == 0x000008, "Wrong alignment on CockroachMaster_C_DeleteRoach");
static_assert(sizeof(CockroachMaster_C_DeleteRoach) == 0x000030, "Wrong size on CockroachMaster_C_DeleteRoach");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, IndexToRemove) == 0x000000, "Member 'CockroachMaster_C_DeleteRoach::IndexToRemove' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, Crush) == 0x000004, "Member 'CockroachMaster_C_DeleteRoach::Crush' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, Temp_int_Variable) == 0x000008, "Member 'CockroachMaster_C_DeleteRoach::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, Temp_object_Variable) == 0x000010, "Member 'CockroachMaster_C_DeleteRoach::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, CallFunc_Array_Get_Item) == 0x000018, "Member 'CockroachMaster_C_DeleteRoach::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'CockroachMaster_C_DeleteRoach::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DeleteRoach, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'CockroachMaster_C_DeleteRoach::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.dedt
// 0x01A0 (0x01A0 - 0x0000)
struct CockroachMaster_C_Dedt final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_deadRoach_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorInt_ReturnValue;           // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_Dedt) == 0x000010, "Wrong alignment on CockroachMaster_C_Dedt");
static_assert(sizeof(CockroachMaster_C_Dedt) == 0x0001A0, "Wrong size on CockroachMaster_C_Dedt");
static_assert(offsetof(CockroachMaster_C_Dedt, Hit) == 0x000000, "Member 'CockroachMaster_C_Dedt::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'CockroachMaster_C_Dedt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, Temp_int_Variable) == 0x00010C, "Member 'CockroachMaster_C_Dedt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000110, "Member 'CockroachMaster_C_Dedt::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'CockroachMaster_C_Dedt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000120, "Member 'CockroachMaster_C_Dedt::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000150, "Member 'CockroachMaster_C_Dedt::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000160, "Member 'CockroachMaster_C_Dedt::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_FinishSpawningActor_ReturnValue) == 0x000168, "Member 'CockroachMaster_C_Dedt::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000170, "Member 'CockroachMaster_C_Dedt::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_Add_IntInt_ReturnValue) == 0x00017C, "Member 'CockroachMaster_C_Dedt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_Subtract_VectorInt_ReturnValue) == 0x000180, "Member 'CockroachMaster_C_Dedt::CallFunc_Subtract_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_VSize_ReturnValue) == 0x00018C, "Member 'CockroachMaster_C_Dedt::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000190, "Member 'CockroachMaster_C_Dedt::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000194, "Member 'CockroachMaster_C_Dedt::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000195, "Member 'CockroachMaster_C_Dedt::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Dedt, CallFunc_Array_Find_ReturnValue) == 0x000198, "Member 'CockroachMaster_C_Dedt::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.checkRoof
// 0x0100 (0x0100 - 0x0000)
struct CockroachMaster_C_CheckRoof final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0020(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_CheckRoof) == 0x000008, "Wrong alignment on CockroachMaster_C_CheckRoof");
static_assert(sizeof(CockroachMaster_C_CheckRoof) == 0x000100, "Wrong size on CockroachMaster_C_CheckRoof");
static_assert(offsetof(CockroachMaster_C_CheckRoof, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CockroachMaster_C_CheckRoof::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CockroachMaster_C_CheckRoof::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, Temp_object_Variable) == 0x000010, "Member 'CockroachMaster_C_CheckRoof::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_obj_static_obj) == 0x000020, "Member 'CockroachMaster_C_CheckRoof::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'CockroachMaster_C_CheckRoof::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Array_Get_Item) == 0x000040, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00004C, "Member 'CockroachMaster_C_CheckRoof::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000064, "Member 'CockroachMaster_C_CheckRoof::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000070, "Member 'CockroachMaster_C_CheckRoof::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_CheckRoof, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000F8, "Member 'CockroachMaster_C_CheckRoof::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.tryCrush
// 0x00C0 (0x00C0 - 0x0000)
struct CockroachMaster_C_TryCrush final
{
public:
	struct FVector                                Param_Loc;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Object;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_deadRoach_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDistanceToCollision_ClosestPointOnCollision; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToCollision_ReturnValue;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_TryCrush) == 0x000010, "Wrong alignment on CockroachMaster_C_TryCrush");
static_assert(sizeof(CockroachMaster_C_TryCrush) == 0x0000C0, "Wrong size on CockroachMaster_C_TryCrush");
static_assert(offsetof(CockroachMaster_C_TryCrush, Param_Loc) == 0x000000, "Member 'CockroachMaster_C_TryCrush::Param_Loc' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, Object) == 0x000010, "Member 'CockroachMaster_C_TryCrush::Object' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, Temp_int_Array_Index_Variable) == 0x000018, "Member 'CockroachMaster_C_TryCrush::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'CockroachMaster_C_TryCrush::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'CockroachMaster_C_TryCrush::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'CockroachMaster_C_TryCrush::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_Array_Get_Item) == 0x000028, "Member 'CockroachMaster_C_TryCrush::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'CockroachMaster_C_TryCrush::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'CockroachMaster_C_TryCrush::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'CockroachMaster_C_TryCrush::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'CockroachMaster_C_TryCrush::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'CockroachMaster_C_TryCrush::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_GetDistanceToCollision_ClosestPointOnCollision) == 0x000090, "Member 'CockroachMaster_C_TryCrush::CallFunc_GetDistanceToCollision_ClosestPointOnCollision' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_GetDistanceToCollision_ReturnValue) == 0x00009C, "Member 'CockroachMaster_C_TryCrush::CallFunc_GetDistanceToCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000A0, "Member 'CockroachMaster_C_TryCrush::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_TryCrush, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'CockroachMaster_C_TryCrush::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.foodRoachSpawn
// 0x00F8 (0x00F8 - 0x0000)
struct CockroachMaster_C_FoodRoachSpawn final
{
public:
	float                                         A;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__Object;       // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           K2Node_DynamicCast_AsProp_Food;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_FoodRoachSpawn) == 0x000008, "Wrong alignment on CockroachMaster_C_FoodRoachSpawn");
static_assert(sizeof(CockroachMaster_C_FoodRoachSpawn) == 0x0000F8, "Wrong size on CockroachMaster_C_FoodRoachSpawn");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, A) == 0x000000, "Member 'CockroachMaster_C_FoodRoachSpawn::A' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'CockroachMaster_C_FoodRoachSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'CockroachMaster_C_FoodRoachSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, Temp_object_Variable) == 0x000018, "Member 'CockroachMaster_C_FoodRoachSpawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000038, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000040, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, K2Node_LowEntry_LocalVariable_Value__Object) == 0x00004C, "Member 'CockroachMaster_C_FoodRoachSpawn::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_SphereOverlapActors_OutActors) == 0x000060, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_SphereOverlapActors_ReturnValue) == 0x000070, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000074, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Array_Get_Item) == 0x000078, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_GetActorBounds_Origin) == 0x000088, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_GetActorBounds_BoxExtent) == 0x000094, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, K2Node_DynamicCast_AsProp_Food) == 0x0000A0, "Member 'CockroachMaster_C_FoodRoachSpawn::K2Node_DynamicCast_AsProp_Food' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'CockroachMaster_C_FoodRoachSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000C4, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0000D0, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000D8, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_FoodRoachSpawn, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'CockroachMaster_C_FoodRoachSpawn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.calc
// 0x0768 (0x0768 - 0x0000)
struct CockroachMaster_C_Calc final
{
public:
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           K2Node_DynamicCast_AsProp_Food;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0130(0x0010)(ReferenceParm)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue_1;  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x02C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0384(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors_1;          // 0x0418(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue_1;        // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue_2;  // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x2];                                      // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin_1;                  // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent_1;               // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_1;                        // 0x0478(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x04D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x057C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0588(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0594(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x064C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_2;       // 0x06D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x06E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CockroachMaster_C_Calc) == 0x000008, "Wrong alignment on CockroachMaster_C_Calc");
static_assert(sizeof(CockroachMaster_C_Calc) == 0x000768, "Wrong size on CockroachMaster_C_Calc");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000000, "Member 'CockroachMaster_C_Calc::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'CockroachMaster_C_Calc::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'CockroachMaster_C_Calc::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00000C, "Member 'CockroachMaster_C_Calc::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000018, "Member 'CockroachMaster_C_Calc::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'CockroachMaster_C_Calc::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000034, "Member 'CockroachMaster_C_Calc::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, Temp_object_Variable) == 0x000038, "Member 'CockroachMaster_C_Calc::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000048, "Member 'CockroachMaster_C_Calc::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomFloatInRange_ReturnValue) == 0x00004C, "Member 'CockroachMaster_C_Calc::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomFloat_ReturnValue) == 0x000054, "Member 'CockroachMaster_C_Calc::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Ease_ReturnValue) == 0x000058, "Member 'CockroachMaster_C_Calc::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'CockroachMaster_C_Calc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_IsValid_ReturnValue_1) == 0x00005D, "Member 'CockroachMaster_C_Calc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000060, "Member 'CockroachMaster_C_Calc::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000064, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomUnitVector_ReturnValue) == 0x000068, "Member 'CockroachMaster_C_Calc::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, Temp_object_Variable_1) == 0x000078, "Member 'CockroachMaster_C_Calc::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_IsValid_ReturnValue_2) == 0x000094, "Member 'CockroachMaster_C_Calc::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, Temp_object_Variable_2) == 0x000098, "Member 'CockroachMaster_C_Calc::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, Temp_object_Variable_3) == 0x0000A8, "Member 'CockroachMaster_C_Calc::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereOverlapActors_OutActors) == 0x0000B8, "Member 'CockroachMaster_C_Calc::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000C8, "Member 'CockroachMaster_C_Calc::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Array_LastIndex_ReturnValue) == 0x0000CC, "Member 'CockroachMaster_C_Calc::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000D0, "Member 'CockroachMaster_C_Calc::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'CockroachMaster_C_Calc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, K2Node_DynamicCast_AsProp_Food) == 0x0000E0, "Member 'CockroachMaster_C_Calc::K2Node_DynamicCast_AsProp_Food' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'CockroachMaster_C_Calc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetActorBounds_Origin) == 0x0000EC, "Member 'CockroachMaster_C_Calc::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetActorBounds_BoxExtent) == 0x0000F8, "Member 'CockroachMaster_C_Calc::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000104, "Member 'CockroachMaster_C_Calc::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000108, "Member 'CockroachMaster_C_Calc::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000114, "Member 'CockroachMaster_C_Calc::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Less_FloatFloat_ReturnValue) == 0x000118, "Member 'CockroachMaster_C_Calc::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00011C, "Member 'CockroachMaster_C_Calc::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BooleanAND_ReturnValue) == 0x000120, "Member 'CockroachMaster_C_Calc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000124, "Member 'CockroachMaster_C_Calc::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000128, "Member 'CockroachMaster_C_Calc::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_obj_statDyn_obj) == 0x000130, "Member 'CockroachMaster_C_Calc::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000140, "Member 'CockroachMaster_C_Calc::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000144, "Member 'CockroachMaster_C_Calc::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000148, "Member 'CockroachMaster_C_Calc::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00014C, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000150, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00015C, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000168, "Member 'CockroachMaster_C_Calc::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0001F0, "Member 'CockroachMaster_C_Calc::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F1, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F2, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Time) == 0x0001F4, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Distance) == 0x0001F8, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Location) == 0x0001FC, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Normal) == 0x000214, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ElementIndex) == 0x000254, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_FaceIndex) == 0x000258, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_TraceStart) == 0x00025C, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_EqualExactly_VectorVector_ReturnValue_1) == 0x000274, "Member 'CockroachMaster_C_Calc::CallFunc_EqualExactly_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_VLerp_ReturnValue) == 0x000278, "Member 'CockroachMaster_C_Calc::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000284, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000290, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00029C, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0002A8, "Member 'CockroachMaster_C_Calc::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SelectVector_ReturnValue) == 0x0002B4, "Member 'CockroachMaster_C_Calc::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Dot_VectorVector_ReturnValue) == 0x0002C0, "Member 'CockroachMaster_C_Calc::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0002C4, "Member 'CockroachMaster_C_Calc::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Abs_ReturnValue) == 0x00034C, "Member 'CockroachMaster_C_Calc::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Cross_VectorVector_ReturnValue) == 0x000350, "Member 'CockroachMaster_C_Calc::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00035C, "Member 'CockroachMaster_C_Calc::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000360, "Member 'CockroachMaster_C_Calc::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x00036C, "Member 'CockroachMaster_C_Calc::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SelectRotator_ReturnValue) == 0x000378, "Member 'CockroachMaster_C_Calc::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000384, "Member 'CockroachMaster_C_Calc::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00040C, "Member 'CockroachMaster_C_Calc::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereOverlapActors_OutActors_1) == 0x000418, "Member 'CockroachMaster_C_Calc::CallFunc_SphereOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereOverlapActors_ReturnValue_1) == 0x000428, "Member 'CockroachMaster_C_Calc::CallFunc_SphereOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_EqualExactly_VectorVector_ReturnValue_2) == 0x000429, "Member 'CockroachMaster_C_Calc::CallFunc_EqualExactly_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00042C, "Member 'CockroachMaster_C_Calc::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BooleanAND_ReturnValue_1) == 0x000430, "Member 'CockroachMaster_C_Calc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000434, "Member 'CockroachMaster_C_Calc::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Array_Get_Item_1) == 0x000438, "Member 'CockroachMaster_C_Calc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000440, "Member 'CockroachMaster_C_Calc::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetActorBounds_Origin_1) == 0x000444, "Member 'CockroachMaster_C_Calc::CallFunc_GetActorBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetActorBounds_BoxExtent_1) == 0x000450, "Member 'CockroachMaster_C_Calc::CallFunc_GetActorBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00045C, "Member 'CockroachMaster_C_Calc::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SelectVector_ReturnValue_1) == 0x000468, "Member 'CockroachMaster_C_Calc::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_obj_statDyn_obj_1) == 0x000478, "Member 'CockroachMaster_C_Calc::CallFunc_obj_statDyn_obj_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000488, "Member 'CockroachMaster_C_Calc::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Normal_ReturnValue) == 0x000494, "Member 'CockroachMaster_C_Calc::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0004A0, "Member 'CockroachMaster_C_Calc::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x0004A4, "Member 'CockroachMaster_C_Calc::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_DegAcos_ReturnValue) == 0x0004A8, "Member 'CockroachMaster_C_Calc::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0004AC, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0004B0, "Member 'CockroachMaster_C_Calc::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0004B4, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0004C0, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0004C4, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0004D0, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x0004D4, "Member 'CockroachMaster_C_Calc::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x00055C, "Member 'CockroachMaster_C_Calc::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SelectFloat_ReturnValue) == 0x000560, "Member 'CockroachMaster_C_Calc::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000564, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000565, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Time_1) == 0x000568, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Distance_1) == 0x00056C, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Location_1) == 0x000570, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00057C, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_Normal_1) == 0x000588, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000594, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_PhysMat_1) == 0x0005A0, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitActor_1) == 0x0005A8, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitComponent_1) == 0x0005B0, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005B8, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_HitItem_1) == 0x0005C0, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_ElementIndex_1) == 0x0005C4, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005C8, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_TraceStart_1) == 0x0005CC, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_BreakHitResult_TraceEnd_1) == 0x0005D8, "Member 'CockroachMaster_C_Calc::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_FloatFloat_ReturnValue) == 0x0005E4, "Member 'CockroachMaster_C_Calc::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_VLerp_ReturnValue_1) == 0x0005E8, "Member 'CockroachMaster_C_Calc::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0005F4, "Member 'CockroachMaster_C_Calc::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x0005F8, "Member 'CockroachMaster_C_Calc::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000604, "Member 'CockroachMaster_C_Calc::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RotateAngleAxis_ReturnValue) == 0x000610, "Member 'CockroachMaster_C_Calc::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Add_VectorVector_ReturnValue_5) == 0x00061C, "Member 'CockroachMaster_C_Calc::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x000628, "Member 'CockroachMaster_C_Calc::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_SelectVector_ReturnValue_2) == 0x000634, "Member 'CockroachMaster_C_Calc::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000640, "Member 'CockroachMaster_C_Calc::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x00064C, "Member 'CockroachMaster_C_Calc::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_MakeRotationFromAxes_ReturnValue_2) == 0x0006D4, "Member 'CockroachMaster_C_Calc::CallFunc_MakeRotationFromAxes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_Calc, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0006E0, "Member 'CockroachMaster_C_Calc::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct CockroachMaster_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_SetPath) == 0x000008, "Wrong alignment on CockroachMaster_C_SetPath");
static_assert(sizeof(CockroachMaster_C_SetPath) == 0x000018, "Wrong size on CockroachMaster_C_SetPath");
static_assert(offsetof(CockroachMaster_C_SetPath, Path) == 0x000000, "Member 'CockroachMaster_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_SetPath, Return) == 0x000010, "Member 'CockroachMaster_C_SetPath::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_GetOnlyKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_GetOnlyKey) == 0x000008, "Wrong alignment on CockroachMaster_C_GetOnlyKey");
static_assert(sizeof(CockroachMaster_C_GetOnlyKey) == 0x000010, "Wrong size on CockroachMaster_C_GetOnlyKey");
static_assert(offsetof(CockroachMaster_C_GetOnlyKey, Key) == 0x000000, "Member 'CockroachMaster_C_GetOnlyKey::Key' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_ProcessKeys) == 0x000001, "Wrong alignment on CockroachMaster_C_ProcessKeys");
static_assert(sizeof(CockroachMaster_C_ProcessKeys) == 0x000001, "Wrong size on CockroachMaster_C_ProcessKeys");
static_assert(offsetof(CockroachMaster_C_ProcessKeys, Return) == 0x000000, "Member 'CockroachMaster_C_ProcessKeys::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_CanBeUsedHold) == 0x000001, "Wrong alignment on CockroachMaster_C_CanBeUsedHold");
static_assert(sizeof(CockroachMaster_C_CanBeUsedHold) == 0x000001, "Wrong size on CockroachMaster_C_CanBeUsedHold");
static_assert(offsetof(CockroachMaster_C_CanBeUsedHold, Return) == 0x000000, "Member 'CockroachMaster_C_CanBeUsedHold::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.GetKey
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_GetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_GetKey) == 0x000008, "Wrong alignment on CockroachMaster_C_GetKey");
static_assert(sizeof(CockroachMaster_C_GetKey) == 0x000010, "Wrong size on CockroachMaster_C_GetKey");
static_assert(offsetof(CockroachMaster_C_GetKey, Key) == 0x000000, "Member 'CockroachMaster_C_GetKey::Key' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_ToolboxFix) == 0x000008, "Wrong alignment on CockroachMaster_C_ToolboxFix");
static_assert(sizeof(CockroachMaster_C_ToolboxFix) == 0x000010, "Wrong size on CockroachMaster_C_ToolboxFix");
static_assert(offsetof(CockroachMaster_C_ToolboxFix, Toolbox) == 0x000000, "Member 'CockroachMaster_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_ToolboxFix, Return) == 0x000008, "Member 'CockroachMaster_C_ToolboxFix::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct CockroachMaster_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(CockroachMaster_C_GetActionOptions) == 0x000008, "Wrong alignment on CockroachMaster_C_GetActionOptions");
static_assert(sizeof(CockroachMaster_C_GetActionOptions) == 0x000060, "Wrong size on CockroachMaster_C_GetActionOptions");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Player) == 0x000000, "Member 'CockroachMaster_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Component) == 0x000008, "Member 'CockroachMaster_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Actor) == 0x000010, "Member 'CockroachMaster_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Options) == 0x000018, "Member 'CockroachMaster_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Options_enum) == 0x000028, "Member 'CockroachMaster_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'CockroachMaster_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, Number) == 0x000048, "Member 'CockroachMaster_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'CockroachMaster_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_GascanFuel) == 0x000008, "Wrong alignment on CockroachMaster_C_GascanFuel");
static_assert(sizeof(CockroachMaster_C_GascanFuel) == 0x000010, "Wrong size on CockroachMaster_C_GascanFuel");
static_assert(offsetof(CockroachMaster_C_GascanFuel, Gascan) == 0x000000, "Member 'CockroachMaster_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_GascanFuel, Fueled) == 0x000008, "Member 'CockroachMaster_C_GascanFuel::Fueled' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_SkipRadial) == 0x000001, "Wrong alignment on CockroachMaster_C_SkipRadial");
static_assert(sizeof(CockroachMaster_C_SkipRadial) == 0x000001, "Wrong size on CockroachMaster_C_SkipRadial");
static_assert(offsetof(CockroachMaster_C_SkipRadial, Skip) == 0x000000, "Member 'CockroachMaster_C_SkipRadial::Skip' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.getPriceMultiplier
// 0x0004 (0x0004 - 0x0000)
struct CockroachMaster_C_GetPriceMultiplier final
{
public:
	float                                         PriceMult;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_GetPriceMultiplier) == 0x000004, "Wrong alignment on CockroachMaster_C_GetPriceMultiplier");
static_assert(sizeof(CockroachMaster_C_GetPriceMultiplier) == 0x000004, "Wrong size on CockroachMaster_C_GetPriceMultiplier");
static_assert(offsetof(CockroachMaster_C_GetPriceMultiplier, PriceMult) == 0x000000, "Member 'CockroachMaster_C_GetPriceMultiplier::PriceMult' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_CanBePutInContainer) == 0x000001, "Wrong alignment on CockroachMaster_C_CanBePutInContainer");
static_assert(sizeof(CockroachMaster_C_CanBePutInContainer) == 0x000001, "Wrong size on CockroachMaster_C_CanBePutInContainer");
static_assert(offsetof(CockroachMaster_C_CanBePutInContainer, Return) == 0x000000, "Member 'CockroachMaster_C_CanBePutInContainer::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct CockroachMaster_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_AsProp) == 0x000008, "Wrong alignment on CockroachMaster_C_AsProp");
static_assert(sizeof(CockroachMaster_C_AsProp) == 0x000008, "Wrong size on CockroachMaster_C_AsProp");
static_assert(offsetof(CockroachMaster_C_AsProp, Return) == 0x000000, "Member 'CockroachMaster_C_AsProp::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_CanPickup) == 0x000001, "Wrong alignment on CockroachMaster_C_CanPickup");
static_assert(sizeof(CockroachMaster_C_CanPickup) == 0x000001, "Wrong size on CockroachMaster_C_CanPickup");
static_assert(offsetof(CockroachMaster_C_CanPickup, Return) == 0x000000, "Member 'CockroachMaster_C_CanPickup::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct CockroachMaster_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_NoRespawn) == 0x000001, "Wrong alignment on CockroachMaster_C_NoRespawn");
static_assert(sizeof(CockroachMaster_C_NoRespawn) == 0x000002, "Wrong size on CockroachMaster_C_NoRespawn");
static_assert(offsetof(CockroachMaster_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'CockroachMaster_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_NoRespawn, Return) == 0x000001, "Member 'CockroachMaster_C_NoRespawn::Return' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct CockroachMaster_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_LookAt) == 0x000008, "Wrong alignment on CockroachMaster_C_LookAt");
static_assert(sizeof(CockroachMaster_C_LookAt) == 0x0000B8, "Wrong size on CockroachMaster_C_LookAt");
static_assert(offsetof(CockroachMaster_C_LookAt, Player) == 0x000000, "Member 'CockroachMaster_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LookAt, Hit) == 0x000008, "Member 'CockroachMaster_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LookAt, Return) == 0x000090, "Member 'CockroachMaster_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LookAt, Text) == 0x000098, "Member 'CockroachMaster_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'CockroachMaster_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LookAt, Number) == 0x0000B0, "Member 'CockroachMaster_C_LookAt::Number' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct CockroachMaster_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_IsButtonUsed) == 0x000001, "Wrong alignment on CockroachMaster_C_IsButtonUsed");
static_assert(sizeof(CockroachMaster_C_IsButtonUsed) == 0x000001, "Wrong size on CockroachMaster_C_IsButtonUsed");
static_assert(offsetof(CockroachMaster_C_IsButtonUsed, Failed) == 0x000000, "Member 'CockroachMaster_C_IsButtonUsed::Failed' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct CockroachMaster_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CockroachMaster_C_LandedOn) == 0x000008, "Wrong alignment on CockroachMaster_C_LandedOn");
static_assert(sizeof(CockroachMaster_C_LandedOn) == 0x000010, "Wrong size on CockroachMaster_C_LandedOn");
static_assert(offsetof(CockroachMaster_C_LandedOn, Player) == 0x000000, "Member 'CockroachMaster_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'CockroachMaster_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function cockroachMaster.cockroachMaster_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct CockroachMaster_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CockroachMaster_C_DreamInv) == 0x000008, "Wrong alignment on CockroachMaster_C_DreamInv");
static_assert(sizeof(CockroachMaster_C_DreamInv) == 0x000018, "Wrong size on CockroachMaster_C_DreamInv");
static_assert(offsetof(CockroachMaster_C_DreamInv, Invv) == 0x000000, "Member 'CockroachMaster_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(CockroachMaster_C_DreamInv, Base) == 0x000010, "Member 'CockroachMaster_C_DreamInv::Base' has a wrong offset!");

}

