#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosion

#include "Basic.hpp"

#include "Explosion_classes.hpp"
#include "Explosion_parameters.hpp"


namespace SDK
{

// Function explosion.explosion_C.ExecuteUbergraph_explosion
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosion_C::ExecuteUbergraph_explosion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("explosion_C", "ExecuteUbergraph_explosion");

	Params::Explosion_C_ExecuteUbergraph_explosion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function explosion.explosion_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AExplosion_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("explosion_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function explosion.explosion_C.a__UpdateFunc
// (BlueprintEvent)

void AExplosion_C::A__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("explosion_C", "a__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function explosion.explosion_C.a__FinishedFunc
// (BlueprintEvent)

void AExplosion_C::A__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("explosion_C", "a__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function explosion.explosion_C.runeCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AExplosion_C::RuneCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("explosion_C", "runeCheck");

	UObject::ProcessEvent(Func, nullptr);
}

}

