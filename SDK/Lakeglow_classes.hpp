#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lakeglow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass lakeglow.lakeglow_C
// 0x0090 (0x02B0 - 0x0220)
class ALakeglow_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Hole;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Splash;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_lakebeam;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Pulling;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Water_splash_Cue;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WaterEnt_pull;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WaterEnt_loop;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WaterEnt_init;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        WaterEnt_attack_Cue;                               // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Mist;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          PlayerIn;                                          // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attacking;                                         // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Temp;                                              // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AlpwaysActive;                                     // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Dmg;                                               // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_lakeglow(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__lakeglow_pulling_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__lakeglow_pulling_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PullDown();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetActive(bool Activate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"lakeglow_C">();
	}
	static class ALakeglow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALakeglow_C>();
	}
};
static_assert(alignof(ALakeglow_C) == 0x000008, "Wrong alignment on ALakeglow_C");
static_assert(sizeof(ALakeglow_C) == 0x0002B0, "Wrong size on ALakeglow_C");
static_assert(offsetof(ALakeglow_C, UberGraphFrame) == 0x000220, "Member 'ALakeglow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Hole) == 0x000228, "Member 'ALakeglow_C::Hole' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Splash) == 0x000230, "Member 'ALakeglow_C::Splash' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Eff_lakebeam) == 0x000238, "Member 'ALakeglow_C::Eff_lakebeam' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Pulling) == 0x000240, "Member 'ALakeglow_C::Pulling' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Water_splash_Cue) == 0x000248, "Member 'ALakeglow_C::Water_splash_Cue' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, WaterEnt_pull) == 0x000250, "Member 'ALakeglow_C::WaterEnt_pull' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, WaterEnt_loop) == 0x000258, "Member 'ALakeglow_C::WaterEnt_loop' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, WaterEnt_init) == 0x000260, "Member 'ALakeglow_C::WaterEnt_init' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, WaterEnt_attack_Cue) == 0x000268, "Member 'ALakeglow_C::WaterEnt_attack_Cue' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Mist) == 0x000270, "Member 'ALakeglow_C::Mist' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, PointLight) == 0x000278, "Member 'ALakeglow_C::PointLight' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, DefaultSceneRoot) == 0x000280, "Member 'ALakeglow_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, PlayerIn) == 0x000288, "Member 'ALakeglow_C::PlayerIn' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Attacking) == 0x000290, "Member 'ALakeglow_C::Attacking' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Temp) == 0x000298, "Member 'ALakeglow_C::Temp' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, IsActive) == 0x0002A0, "Member 'ALakeglow_C::IsActive' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, AlpwaysActive) == 0x0002A1, "Member 'ALakeglow_C::AlpwaysActive' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Dmg) == 0x0002A4, "Member 'ALakeglow_C::Dmg' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Delay) == 0x0002A8, "Member 'ALakeglow_C::Delay' has a wrong offset!");
static_assert(offsetof(ALakeglow_C, Duration) == 0x0002AC, "Member 'ALakeglow_C::Duration' has a wrong offset!");

}

