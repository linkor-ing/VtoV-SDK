#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_UI

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_mObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Struct_settings_structs.hpp"


namespace SDK::Params
{

// Function umg_UI.umg_UI_C.ExecuteUbergraph_umg_UI
// 0x0488 (0x0488 - 0x0000)
struct Umg_UI_C_ExecuteUbergraph_umg_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E2[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x003C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E4[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x00A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0128(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0148(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0188(0x0018)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x01C0(0x00CC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E5[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0298(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_compassAngle_ReturnValue;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E6[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x02D8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E7[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_size;                            // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_min;                             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_max;                             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_calcSize_origin;                          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrimaryMonitorResolution_Width;        // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrimaryMonitorResolution_Height;       // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E8[0x5];                                     // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E9[0x2];                                     // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x036C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x037C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EA[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EB[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EC[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x03AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x03B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x03FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32ED[0x4];                                     // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0408(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EE[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x0440(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x045C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0464(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32EF[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array_1;                          // 0x0478(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Umg_UI_C_ExecuteUbergraph_umg_UI) == 0x000008, "Wrong alignment on Umg_UI_C_ExecuteUbergraph_umg_UI");
static_assert(sizeof(Umg_UI_C_ExecuteUbergraph_umg_UI) == 0x000488, "Wrong size on Umg_UI_C_ExecuteUbergraph_umg_UI");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, EntryPoint) == 0x000000, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable) == 0x000004, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_1) == 0x000005, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_2) == 0x000006, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_gamemode) == 0x000008, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_key) == 0x000010, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_pressed) == 0x000028, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_color) == 0x00002C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_MyGeometry) == 0x00003C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_InDeltaTime) == 0x000074, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000078, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000080, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue) == 0x000090, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x0000A8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000D0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectString_ReturnValue) == 0x0000F0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000128, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000140, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000148, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000160, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000170, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000180, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000188, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X) == 0x0001A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y) == 0x0001A4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectFloat_ReturnValue) == 0x0001AC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue) == 0x0001B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001B8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0001BC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Event_settings) == 0x0001C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000290, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000298, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0002B0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_compassAngle_ReturnValue) == 0x0002C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_compassAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0002C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0002D8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsValid_ReturnValue) == 0x0002F0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_IsValid_ReturnValue_1) == 0x0002F1, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0002F8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_size) == 0x000300, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_min) == 0x000308, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_max) == 0x000310, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_calcSize_origin) == 0x000318, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_calcSize_origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000320, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetPrimaryMonitorResolution_Width) == 0x000328, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetPrimaryMonitorResolution_Width' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetPrimaryMonitorResolution_Height) == 0x00032C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetPrimaryMonitorResolution_Height' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeStruct_IntPoint) == 0x000330, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000338, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_1) == 0x000340, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_1) == 0x000344, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable) == 0x000348, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_1) == 0x000349, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_3) == 0x00034A, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000350, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default) == 0x000358, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_2) == 0x000359, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Not_PreBool_ReturnValue) == 0x00035A, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035B, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BooleanOR_ReturnValue) == 0x00035C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BooleanAND_ReturnValue) == 0x00035D, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_SelectFloat_ReturnValue_1) == 0x000360, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_1) == 0x000364, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_1) == 0x00036C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_2) == 0x000374, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_2) == 0x000378, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetDesiredSize_ReturnValue) == 0x00037C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_3) == 0x000384, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_3) == 0x000388, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_byte_Variable_3) == 0x00038C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_4) == 0x000390, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_4) == 0x000394, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, Temp_bool_Variable_4) == 0x000398, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Array_Length_ReturnValue) == 0x00039C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_2) == 0x0003A0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0003A4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003A8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_2) == 0x0003AC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_3) == 0x0003B4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_5) == 0x0003BC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_5) == 0x0003C0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue) == 0x0003C4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_1) == 0x0003C8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_2) == 0x0003CC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_3) == 0x0003D0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003D4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003D8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0003DC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0003E0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0003E4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0003E8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_4) == 0x0003EC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FMax_ReturnValue_5) == 0x0003F0, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0003F4, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0003F8, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_3) == 0x0003FC, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeArray_Array) == 0x000408, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000418, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_getMainPlayer_AsMain_Player) == 0x000420, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000428, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00042C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_FInterpTo_ReturnValue) == 0x000430, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_X_6) == 0x000434, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_BreakVector2D_Y_6) == 0x000438, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00043C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x000440, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000458, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_MakeVector2D_ReturnValue_4) == 0x00045C, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_Select_Default_4) == 0x000464, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000470, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ExecuteUbergraph_umg_UI, K2Node_MakeArray_Array_1) == 0x000478, "Member 'Umg_UI_C_ExecuteUbergraph_umg_UI::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.settingsApplied
// 0x00CC (0x00CC - 0x0000)
struct Umg_UI_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00CC)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_SettingsApplied) == 0x000004, "Wrong alignment on Umg_UI_C_SettingsApplied");
static_assert(sizeof(Umg_UI_C_SettingsApplied) == 0x0000CC, "Wrong size on Umg_UI_C_SettingsApplied");
static_assert(offsetof(Umg_UI_C_SettingsApplied, Settings) == 0x000000, "Member 'Umg_UI_C_SettingsApplied::Settings' has a wrong offset!");

// Function umg_UI.umg_UI_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_UI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_Tick) == 0x000004, "Wrong alignment on Umg_UI_C_Tick");
static_assert(sizeof(Umg_UI_C_Tick) == 0x00003C, "Wrong size on Umg_UI_C_Tick");
static_assert(offsetof(Umg_UI_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_UI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_UI_C_Tick::InDeltaTime' has a wrong offset!");

// Function umg_UI.umg_UI_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Umg_UI_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ApplyColor) == 0x000004, "Wrong alignment on Umg_UI_C_ApplyColor");
static_assert(sizeof(Umg_UI_C_ApplyColor) == 0x000010, "Wrong size on Umg_UI_C_ApplyColor");
static_assert(offsetof(Umg_UI_C_ApplyColor, Color) == 0x000000, "Member 'Umg_UI_C_ApplyColor::Color' has a wrong offset!");

// Function umg_UI.umg_UI_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct Umg_UI_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_AnyKey) == 0x000008, "Wrong alignment on Umg_UI_C_AnyKey");
static_assert(sizeof(Umg_UI_C_AnyKey) == 0x000020, "Wrong size on Umg_UI_C_AnyKey");
static_assert(offsetof(Umg_UI_C_AnyKey, Key) == 0x000000, "Member 'Umg_UI_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AnyKey, Pressed) == 0x000018, "Member 'Umg_UI_C_AnyKey::Pressed' has a wrong offset!");

// Function umg_UI.umg_UI_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Umg_UI_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_StuffUpgraded) == 0x000008, "Wrong alignment on Umg_UI_C_StuffUpgraded");
static_assert(sizeof(Umg_UI_C_StuffUpgraded) == 0x000008, "Wrong size on Umg_UI_C_StuffUpgraded");
static_assert(offsetof(Umg_UI_C_StuffUpgraded, GameMode) == 0x000000, "Member 'Umg_UI_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function umg_UI.umg_UI_C.openHovertext
// 0x0048 (0x0048 - 0x0000)
struct Umg_UI_C_OpenHovertext final
{
public:
	class UPrimitiveComponent*                    Param_HovertextLoc;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SettActive;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InText;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsActor;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hide;                                              // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F1[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_OpenHovertext) == 0x000008, "Wrong alignment on Umg_UI_C_OpenHovertext");
static_assert(sizeof(Umg_UI_C_OpenHovertext) == 0x000048, "Wrong size on Umg_UI_C_OpenHovertext");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Param_HovertextLoc) == 0x000000, "Member 'Umg_UI_C_OpenHovertext::Param_HovertextLoc' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, SettActive) == 0x000008, "Member 'Umg_UI_C_OpenHovertext::SettActive' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, InText) == 0x000010, "Member 'Umg_UI_C_OpenHovertext::InText' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, IsActor) == 0x000028, "Member 'Umg_UI_C_OpenHovertext::IsActor' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Hide) == 0x000029, "Member 'Umg_UI_C_OpenHovertext::Hide' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable) == 0x00002A, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_TextIsEmpty_ReturnValue) == 0x00002B, "Member 'Umg_UI_C_OpenHovertext::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'Umg_UI_C_OpenHovertext::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_1) == 0x00002D, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable) == 0x00002E, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_2) == 0x00002F, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_3) == 0x000030, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable_1) == 0x000031, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_4) == 0x000032, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_byte_Variable_5) == 0x000033, "Member 'Umg_UI_C_OpenHovertext::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_Not_PreBool_ReturnValue_1) == 0x000034, "Member 'Umg_UI_C_OpenHovertext::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'Umg_UI_C_OpenHovertext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_getMainSave_save_main) == 0x000038, "Member 'Umg_UI_C_OpenHovertext::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, Temp_bool_Variable_2) == 0x000040, "Member 'Umg_UI_C_OpenHovertext::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'Umg_UI_C_OpenHovertext::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default) == 0x000042, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default_1) == 0x000043, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_OpenHovertext, K2Node_Select_Default_2) == 0x000044, "Member 'Umg_UI_C_OpenHovertext::K2Node_Select_Default_2' has a wrong offset!");

// Function umg_UI.umg_UI_C.addHint
// 0x0030 (0x0030 - 0x0000)
struct Umg_UI_C_AddHint final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_hint_C*                            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_AddHint) == 0x000008, "Wrong alignment on Umg_UI_C_AddHint");
static_assert(sizeof(Umg_UI_C_AddHint) == 0x000030, "Wrong size on Umg_UI_C_AddHint");
static_assert(offsetof(Umg_UI_C_AddHint, InText) == 0x000000, "Member 'Umg_UI_C_AddHint::InText' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AddHint, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Umg_UI_C_AddHint::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AddHint, CallFunc_Create_ReturnValue) == 0x000020, "Member 'Umg_UI_C_AddHint::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AddHint, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'Umg_UI_C_AddHint::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.compassAngle
// 0x00E0 (0x00E0 - 0x0000)
struct Umg_UI_C_CompassAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F3[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F4[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_CompassAngle) == 0x000008, "Wrong alignment on Umg_UI_C_CompassAngle");
static_assert(sizeof(Umg_UI_C_CompassAngle) == 0x0000E0, "Wrong size on Umg_UI_C_CompassAngle");
static_assert(offsetof(Umg_UI_C_CompassAngle, ReturnValue) == 0x000000, "Member 'Umg_UI_C_CompassAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000010, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorRightVector_ReturnValue) == 0x000024, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Umg_UI_C_CompassAngle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x00003C, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_X) == 0x000048, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_Y) == 0x00004C, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakVector_Z) == 0x000050, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000054, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_DegAtan2_ReturnValue) == 0x000060, "Member 'Umg_UI_C_CompassAngle::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll) == 0x000064, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch) == 0x000068, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw) == 0x00006C, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000070, "Member 'Umg_UI_C_CompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000078, "Member 'Umg_UI_C_CompassAngle::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'Umg_UI_C_CompassAngle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000090, "Member 'Umg_UI_C_CompassAngle::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'Umg_UI_C_CompassAngle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A4, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'Umg_UI_C_CompassAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000B4, "Member 'Umg_UI_C_CompassAngle::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x0000C0, "Member 'Umg_UI_C_CompassAngle::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Roll_1) == 0x0000CC, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Pitch_1) == 0x0000D0, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_BreakRotator_Yaw_1) == 0x0000D4, "Member 'Umg_UI_C_CompassAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D8, "Member 'Umg_UI_C_CompassAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CompassAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000DC, "Member 'Umg_UI_C_CompassAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.calcSize
// 0x00F0 (0x00F0 - 0x0000)
struct Umg_UI_C_CalcSize final
{
public:
	struct FVector2D                              Size;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Min;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Max;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Origin;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             T;                                                 // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F5[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F6[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_BoundingBox2D_verts;                      // 0x0070(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_BoundingBox2D_min;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_max;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_origin;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BoundingBox2D_size;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoundingBox2D_clipX;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoundingBox2D_clipY;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F7[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F8[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_CalcSize) == 0x000010, "Wrong alignment on Umg_UI_C_CalcSize");
static_assert(sizeof(Umg_UI_C_CalcSize) == 0x0000F0, "Wrong size on Umg_UI_C_CalcSize");
static_assert(offsetof(Umg_UI_C_CalcSize, Size) == 0x000000, "Member 'Umg_UI_C_CalcSize::Size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Min) == 0x000008, "Member 'Umg_UI_C_CalcSize::Min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Max) == 0x000010, "Member 'Umg_UI_C_CalcSize::Max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, Origin) == 0x000018, "Member 'Umg_UI_C_CalcSize::Origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, T) == 0x000020, "Member 'Umg_UI_C_CalcSize::T' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_GetViewportScale_ReturnValue) == 0x000050, "Member 'Umg_UI_C_CalcSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'Umg_UI_C_CalcSize::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'Umg_UI_C_CalcSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'Umg_UI_C_CalcSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_verts) == 0x000070, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_verts' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_min) == 0x000080, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_min' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_max) == 0x000088, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_max' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_origin) == 0x000090, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_size) == 0x000098, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_size' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_clipX) == 0x0000A0, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_clipX' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_BoundingBox2D_clipY) == 0x0000A1, "Member 'Umg_UI_C_CalcSize::CallFunc_BoundingBox2D_clipY' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A4, "Member 'Umg_UI_C_CalcSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'Umg_UI_C_CalcSize::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0000B4, "Member 'Umg_UI_C_CalcSize::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CalcSize, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_CalcSize::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.projectClamped
// 0x0050 (0x0050 - 0x0000)
struct Umg_UI_C_ProjectClamped final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Vec;                                               // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FA[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_ProjectClamped) == 0x000008, "Wrong alignment on Umg_UI_C_ProjectClamped");
static_assert(sizeof(Umg_UI_C_ProjectClamped) == 0x000050, "Wrong size on Umg_UI_C_ProjectClamped");
static_assert(offsetof(Umg_UI_C_ProjectClamped, WorldLocation) == 0x000000, "Member 'Umg_UI_C_ProjectClamped::WorldLocation' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, Vec) == 0x00000C, "Member 'Umg_UI_C_ProjectClamped::Vec' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Umg_UI_C_ProjectClamped::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_X) == 0x000020, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000028, "Member 'Umg_UI_C_ProjectClamped::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000030, "Member 'Umg_UI_C_ProjectClamped::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_X_1) == 0x000034, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'Umg_UI_C_ProjectClamped::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_ProjectClamped::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_FClamp_ReturnValue_1) == 0x000040, "Member 'Umg_UI_C_ProjectClamped::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ProjectClamped, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'Umg_UI_C_ProjectClamped::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.bbox
// 0x0078 (0x0078 - 0x0000)
struct Umg_UI_C_bbox final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue_Origin;                                // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue_BoxExtent;                             // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FC[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x003C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_bbox) == 0x000008, "Wrong alignment on Umg_UI_C_bbox");
static_assert(sizeof(Umg_UI_C_bbox) == 0x000078, "Wrong size on Umg_UI_C_bbox");
static_assert(offsetof(Umg_UI_C_bbox, Object) == 0x000000, "Member 'Umg_UI_C_bbox::Object' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, ReturnValue_Origin) == 0x000008, "Member 'Umg_UI_C_bbox::ReturnValue_Origin' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, ReturnValue_BoxExtent) == 0x000014, "Member 'Umg_UI_C_bbox::ReturnValue_BoxExtent' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000020, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsSphere_Collision) == 0x000030, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_GetBounds_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_bbox::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'Umg_UI_C_bbox::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00005C, "Member 'Umg_UI_C_bbox::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_AsBox_Collision) == 0x000068, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_bbox, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'Umg_UI_C_bbox::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function umg_UI.umg_UI_C.updSelect
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_UpdSelect final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_UpdSelect) == 0x000008, "Wrong alignment on Umg_UI_C_UpdSelect");
static_assert(sizeof(Umg_UI_C_UpdSelect) == 0x000018, "Wrong size on Umg_UI_C_UpdSelect");
static_assert(offsetof(Umg_UI_C_UpdSelect, Temp_int_Variable) == 0x000000, "Member 'Umg_UI_C_UpdSelect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Umg_UI_C_UpdSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Array_Get_Item) == 0x000008, "Member 'Umg_UI_C_UpdSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Umg_UI_C_UpdSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdSelect, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Umg_UI_C_UpdSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.buildActions
// 0x00E8 (0x00E8 - 0x0000)
struct Umg_UI_C_buildActions final
{
public:
	TArray<Enum_interactionActions>               Actions_enums;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Actions_names;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FText>                           Actions_overlays;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUmg_objectActionButton_C*              CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FD[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FE[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FF[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3300[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x0088(0x0018)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3301[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_objectActionButton_C*              CallFunc_Create_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3302[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_buildActions) == 0x000008, "Wrong alignment on Umg_UI_C_buildActions");
static_assert(sizeof(Umg_UI_C_buildActions) == 0x0000E8, "Wrong size on Umg_UI_C_buildActions");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_enums) == 0x000000, "Member 'Umg_UI_C_buildActions::Actions_enums' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_names) == 0x000010, "Member 'Umg_UI_C_buildActions::Actions_names' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Actions_overlays) == 0x000020, "Member 'Umg_UI_C_buildActions::Actions_overlays' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Create_ReturnValue) == 0x000030, "Member 'Umg_UI_C_buildActions::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'Umg_UI_C_buildActions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item) == 0x000040, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00005C, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'Umg_UI_C_buildActions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'Umg_UI_C_buildActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'Umg_UI_C_buildActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'Umg_UI_C_buildActions::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'Umg_UI_C_buildActions::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000A0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Create_ReturnValue_1) == 0x0000A8, "Member 'Umg_UI_C_buildActions::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_AddChild_ReturnValue) == 0x0000C8, "Member 'Umg_UI_C_buildActions::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'Umg_UI_C_buildActions::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'Umg_UI_C_buildActions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'Umg_UI_C_buildActions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'Umg_UI_C_buildActions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_buildActions, CallFunc_AddChild_ReturnValue_1) == 0x0000E0, "Member 'Umg_UI_C_buildActions::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.clearActions
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_ClearActions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_ClearActions) == 0x000008, "Wrong alignment on Umg_UI_C_ClearActions");
static_assert(sizeof(Umg_UI_C_ClearActions) == 0x000018, "Wrong size on Umg_UI_C_ClearActions");
static_assert(offsetof(Umg_UI_C_ClearActions, Temp_int_Variable) == 0x000000, "Member 'Umg_UI_C_ClearActions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Umg_UI_C_ClearActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Array_Get_Item) == 0x000008, "Member 'Umg_UI_C_ClearActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Umg_UI_C_ClearActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_ClearActions, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Umg_UI_C_ClearActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.updHovertext
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_UpdHovertext final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Umg_UI_C_UpdHovertext) == 0x000008, "Wrong alignment on Umg_UI_C_UpdHovertext");
static_assert(sizeof(Umg_UI_C_UpdHovertext) == 0x000018, "Wrong size on Umg_UI_C_UpdHovertext");
static_assert(offsetof(Umg_UI_C_UpdHovertext, InText) == 0x000000, "Member 'Umg_UI_C_UpdHovertext::InText' has a wrong offset!");

// Function umg_UI.umg_UI_C.updateSlotInv
// 0x0198 (0x0198 - 0x0000)
struct Umg_UI_C_UpdateSlotInv final
{
public:
	int32                                         Lst;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Is;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lastind;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3303[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Listids;                                           // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Amts;                                              // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Nms;                                               // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         I;                                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3304[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_save>                   Loc;                                               // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3305[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_propToIcon_Output;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3306[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00C0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3307[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_Array_Get_Item_4;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3308[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item_5;                         // 0x0118(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3309[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_6;                         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330A[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330B[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330C[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_mObject                        CallFunc_Array_Get_Item_7;                         // 0x0178(0x0010)(HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_8;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_UpdateSlotInv) == 0x000008, "Wrong alignment on Umg_UI_C_UpdateSlotInv");
static_assert(sizeof(Umg_UI_C_UpdateSlotInv) == 0x000198, "Wrong size on Umg_UI_C_UpdateSlotInv");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Lst) == 0x000000, "Member 'Umg_UI_C_UpdateSlotInv::Lst' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Is) == 0x000004, "Member 'Umg_UI_C_UpdateSlotInv::Is' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Lastind) == 0x000008, "Member 'Umg_UI_C_UpdateSlotInv::Lastind' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Listids) == 0x000010, "Member 'Umg_UI_C_UpdateSlotInv::Listids' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Amts) == 0x000020, "Member 'Umg_UI_C_UpdateSlotInv::Amts' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Nms) == 0x000030, "Member 'Umg_UI_C_UpdateSlotInv::Nms' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, I) == 0x000040, "Member 'Umg_UI_C_UpdateSlotInv::I' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Loc) == 0x000048, "Member 'Umg_UI_C_UpdateSlotInv::Loc' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable) == 0x000058, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Array_Index_Variable) == 0x000070, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue) == 0x000078, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_1) == 0x000084, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item) == 0x000088, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_NameToString_ReturnValue) == 0x000090, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_propToIcon_Output) == 0x0000A0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_propToIcon_Output' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_1) == 0x0000BC, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_IntToText_ReturnValue) == 0x0000C0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000F0, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_4) == 0x0000F8, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_2) == 0x000100, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_3) == 0x000104, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_2) == 0x000108, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_3) == 0x00010C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000110, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_5) == 0x000118, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000128, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_6) == 0x000130, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Conv_StringToName_ReturnValue) == 0x000140, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Add_ReturnValue_4) == 0x000148, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Find_ReturnValue) == 0x00014C, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000150, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Add_IntInt_ReturnValue_4) == 0x000154, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, Temp_int_Variable_3) == 0x00015C, "Member 'Umg_UI_C_UpdateSlotInv::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000160, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000168, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000170, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_7) == 0x000178, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_Array_Get_Item_8) == 0x000188, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdateSlotInv, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000190, "Member 'Umg_UI_C_UpdateSlotInv::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.cusSelectHotbarSlot
// 0x0050 (0x0050 - 0x0000)
struct Umg_UI_C_CusSelectHotbarSlot final
{
public:
	int32                                         Param_Ind;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_CusSelectHotbarSlot) == 0x000008, "Wrong alignment on Umg_UI_C_CusSelectHotbarSlot");
static_assert(sizeof(Umg_UI_C_CusSelectHotbarSlot) == 0x000050, "Wrong size on Umg_UI_C_CusSelectHotbarSlot");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, Param_Ind) == 0x000000, "Member 'Umg_UI_C_CusSelectHotbarSlot::Param_Ind' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Array_Get_Item) == 0x000004, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_getMainPlayer_AsMain_Player) == 0x000010, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000038, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_CusSelectHotbarSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'Umg_UI_C_CusSelectHotbarSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.angleWheel
// 0x0060 (0x0060 - 0x0000)
struct Umg_UI_C_AngleWheel final
{
public:
	struct FVector2D                              Mouse;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3310[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_AngleWheel) == 0x000008, "Wrong alignment on Umg_UI_C_AngleWheel");
static_assert(sizeof(Umg_UI_C_AngleWheel) == 0x000060, "Wrong size on Umg_UI_C_AngleWheel");
static_assert(offsetof(Umg_UI_C_AngleWheel, Mouse) == 0x000000, "Member 'Umg_UI_C_AngleWheel::Mouse' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_getMainPlayer_AsMain_Player) == 0x000008, "Member 'Umg_UI_C_AngleWheel::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Umg_UI_C_AngleWheel::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Umg_UI_C_AngleWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000018, "Member 'Umg_UI_C_AngleWheel::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Normal2D_ReturnValue) == 0x000020, "Member 'Umg_UI_C_AngleWheel::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_VSize2D_ReturnValue) == 0x000028, "Member 'Umg_UI_C_AngleWheel::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'Umg_UI_C_AngleWheel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'Umg_UI_C_AngleWheel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'Umg_UI_C_AngleWheel::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Umg_UI_C_AngleWheel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_DegAtan2_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_AngleWheel::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'Umg_UI_C_AngleWheel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'Umg_UI_C_AngleWheel::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'Umg_UI_C_AngleWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'Umg_UI_C_AngleWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'Umg_UI_C_AngleWheel::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Round_ReturnValue) == 0x000054, "Member 'Umg_UI_C_AngleWheel::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_AngleWheel, CallFunc_Percent_IntInt_ReturnValue) == 0x000058, "Member 'Umg_UI_C_AngleWheel::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function umg_UI.umg_UI_C.updRadialText
// 0x00E8 (0x00E8 - 0x0000)
struct Umg_UI_C_UpdRadialText final
{
public:
	ETextJustify                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3311[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3312[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_radialText_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3313[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3314[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3315[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_radialText_C*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3316[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3317[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3318[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default_1;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3319[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331A[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_objectActionButton_C*              CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_UI_C_UpdRadialText) == 0x000008, "Wrong alignment on Umg_UI_C_UpdRadialText");
static_assert(sizeof(Umg_UI_C_UpdRadialText) == 0x0000E8, "Wrong size on Umg_UI_C_UpdRadialText");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable) == 0x000000, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Variable) == 0x000004, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable_1) == 0x000018, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000020, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000028, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_bool_Variable) == 0x000030, "Member 'Umg_UI_C_UpdRadialText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000040, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_byte_Variable_2) == 0x000054, "Member 'Umg_UI_C_UpdRadialText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_bool_Variable_1) == 0x000055, "Member 'Umg_UI_C_UpdRadialText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000058, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Get_Item) == 0x000060, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000074, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_GetRotated2D_ReturnValue) == 0x00007C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_BreakVector2D_X) == 0x000084, "Member 'Umg_UI_C_UpdRadialText::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'Umg_UI_C_UpdRadialText::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Abs_ReturnValue) == 0x000094, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'Umg_UI_C_UpdRadialText::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, K2Node_Select_Default) == 0x000099, "Member 'Umg_UI_C_UpdRadialText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SelectFloat_ReturnValue) == 0x00009C, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, K2Node_Select_Default_1) == 0x0000A0, "Member 'Umg_UI_C_UpdRadialText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A4, "Member 'Umg_UI_C_UpdRadialText::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000A8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000B0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Lerp_ReturnValue) == 0x0000B8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000BC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'Umg_UI_C_UpdRadialText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_UpdRadialText, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'Umg_UI_C_UpdRadialText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function umg_UI.umg_UI_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Umg_UI_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_UI_C_DreamInv) == 0x000008, "Wrong alignment on Umg_UI_C_DreamInv");
static_assert(sizeof(Umg_UI_C_DreamInv) == 0x000018, "Wrong size on Umg_UI_C_DreamInv");
static_assert(offsetof(Umg_UI_C_DreamInv, Invv) == 0x000000, "Member 'Umg_UI_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Umg_UI_C_DreamInv, Base) == 0x000010, "Member 'Umg_UI_C_DreamInv::Base' has a wrong offset!");

}

