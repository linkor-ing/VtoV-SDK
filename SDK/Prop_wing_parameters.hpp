#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_wing.prop_wing_C.ExecuteUbergraph_prop_wing
// 0x0130 (0x0130 - 0x0000)
struct Prop_wing_C_ExecuteUbergraph_prop_wing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AD[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue; // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1; // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37AE[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wing_C_ExecuteUbergraph_prop_wing) == 0x000010, "Wrong alignment on Prop_wing_C_ExecuteUbergraph_prop_wing");
static_assert(sizeof(Prop_wing_C_ExecuteUbergraph_prop_wing) == 0x000130, "Wrong size on Prop_wing_C_ExecuteUbergraph_prop_wing");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, EntryPoint) == 0x000000, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetActorForwardVector_ReturnValue) == 0x000004, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetActorUpVector_ReturnValue) == 0x000010, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_TransformLocation_ReturnValue) == 0x000060, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetTransform_ReturnValue_1) == 0x000070, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue) == 0x0000A0, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_TransformLocation_ReturnValue_1) == 0x0000AC, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1) == 0x0000B8, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetPhysicsLinearVelocityAtPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000C4, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0000D4, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_GetActorUpVector_ReturnValue_1) == 0x0000E0, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_VSize_ReturnValue) == 0x0000EC, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Normal_ReturnValue) == 0x0000F0, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000FC, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000100, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_SignOfFloat_ReturnValue) == 0x000104, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_SignOfFloat_ReturnValue_1) == 0x000108, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00010C, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000110, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Abs_ReturnValue) == 0x000114, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000118, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00011C, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_wing_C_ExecuteUbergraph_prop_wing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000120, "Member 'Prop_wing_C_ExecuteUbergraph_prop_wing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function prop_wing.prop_wing_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_wing_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wing_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_wing_C_ReceiveTick");
static_assert(sizeof(Prop_wing_C_ReceiveTick) == 0x000004, "Wrong size on Prop_wing_C_ReceiveTick");
static_assert(offsetof(Prop_wing_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_wing_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

