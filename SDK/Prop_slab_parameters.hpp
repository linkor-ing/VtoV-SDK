#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_slab

#include "Basic.hpp"


namespace SDK::Params
{

// Function prop_slab.prop_slab_C.ExecuteUbergraph_prop_slab
// 0x0138 (0x0138 - 0x0000)
struct Prop_slab_C_ExecuteUbergraph_prop_slab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3777[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3778[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3779[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_slab_C_ExecuteUbergraph_prop_slab) == 0x000008, "Wrong alignment on Prop_slab_C_ExecuteUbergraph_prop_slab");
static_assert(sizeof(Prop_slab_C_ExecuteUbergraph_prop_slab) == 0x000138, "Wrong size on Prop_slab_C_ExecuteUbergraph_prop_slab");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, EntryPoint) == 0x000000, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_Event_player) == 0x000008, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000020, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_9) == 0x000028, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_8) == 0x000044, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_7) == 0x00004C, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_6) == 0x000064, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_5) == 0x00007C, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, Temp_name_Variable) == 0x000094, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_5) == 0x00009C, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_4) == 0x0000AC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_3) == 0x0000B4, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000BC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000CC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_2) == 0x0000DC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName_1) == 0x0000E4, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000EC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000FC, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_CustomEvent_NotifyName) == 0x00010C, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, Temp_name_Variable_1) == 0x000114, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, K2Node_Event_player_1) == 0x000120, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000128, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_slab_C_ExecuteUbergraph_prop_slab, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'Prop_slab_C_ExecuteUbergraph_prop_slab::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnCompleted_F33B765A4B89B8480705839F48D37A17
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17) == 0x000004, "Wrong alignment on Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17");
static_assert(sizeof(Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17) == 0x000008, "Wrong size on Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17");
static_assert(offsetof(Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnCompleted_F33B765A4B89B8480705839F48D37A17::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnBlendOut_F33B765A4B89B8480705839F48D37A17
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17) == 0x000004, "Wrong alignment on Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17");
static_assert(sizeof(Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17) == 0x000008, "Wrong size on Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17");
static_assert(offsetof(Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnBlendOut_F33B765A4B89B8480705839F48D37A17::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnInterrupted_F33B765A4B89B8480705839F48D37A17
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17) == 0x000004, "Wrong alignment on Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17");
static_assert(sizeof(Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17) == 0x000008, "Wrong size on Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17");
static_assert(offsetof(Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnInterrupted_F33B765A4B89B8480705839F48D37A17::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnNotifyBegin_F33B765A4B89B8480705839F48D37A17
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17) == 0x000004, "Wrong alignment on Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17");
static_assert(sizeof(Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17) == 0x000008, "Wrong size on Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17");
static_assert(offsetof(Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnNotifyBegin_F33B765A4B89B8480705839F48D37A17::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnNotifyEnd_F33B765A4B89B8480705839F48D37A17
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17) == 0x000004, "Wrong alignment on Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17");
static_assert(sizeof(Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17) == 0x000008, "Wrong size on Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17");
static_assert(offsetof(Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnNotifyEnd_F33B765A4B89B8480705839F48D37A17::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnCompleted_63133FA64B24BB03D6ACED9E97197268
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268) == 0x000004, "Wrong alignment on Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268");
static_assert(sizeof(Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268) == 0x000008, "Wrong size on Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268");
static_assert(offsetof(Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnCompleted_63133FA64B24BB03D6ACED9E97197268::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnBlendOut_63133FA64B24BB03D6ACED9E97197268
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268) == 0x000004, "Wrong alignment on Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268");
static_assert(sizeof(Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268) == 0x000008, "Wrong size on Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268");
static_assert(offsetof(Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnBlendOut_63133FA64B24BB03D6ACED9E97197268::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnInterrupted_63133FA64B24BB03D6ACED9E97197268
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268) == 0x000004, "Wrong alignment on Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268");
static_assert(sizeof(Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268) == 0x000008, "Wrong size on Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268");
static_assert(offsetof(Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnInterrupted_63133FA64B24BB03D6ACED9E97197268::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268) == 0x000004, "Wrong alignment on Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268");
static_assert(sizeof(Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268) == 0x000008, "Wrong size on Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268");
static_assert(offsetof(Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnNotifyBegin_63133FA64B24BB03D6ACED9E97197268::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268) == 0x000004, "Wrong alignment on Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268");
static_assert(sizeof(Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268) == 0x000008, "Wrong size on Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268");
static_assert(offsetof(Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268, NotifyName) == 0x000000, "Member 'Prop_slab_C_OnNotifyEnd_63133FA64B24BB03D6ACED9E97197268::NotifyName' has a wrong offset!");

// Function prop_slab.prop_slab_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on Prop_slab_C_PlayerHandRelease_RMB");
static_assert(sizeof(Prop_slab_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on Prop_slab_C_PlayerHandRelease_RMB");
static_assert(offsetof(Prop_slab_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'Prop_slab_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function prop_slab.prop_slab_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_slab_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_slab_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_slab_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_slab_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_slab_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_slab_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_slab_C_PlayerHandUse_RMB::Player' has a wrong offset!");

}

