#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_signalDownload

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Struct_signalDataDynamic_structs.hpp"
#include "Struct_signal_data1_structs.hpp"
#include "Enum_quality_structs.hpp"
#include "Struct_signal_spawn_structs.hpp"
#include "Enum_freq_structs.hpp"
#include "Enum_objectType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "UMG_structs.hpp"
#include "Enum_difficulty_structs.hpp"


namespace SDK::Params
{

// Function umg_signalDownload.umg_signalDownload_C.ExecuteUbergraph_umg_signalDownload
// 0x07C0 (0x07C0 - 0x0000)
struct Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_quality                                  Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Active_calc, bool Active_downl, bool Active_coords, bool Active_play, bool Active_light)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0050(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00B8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0110(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0150(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01A0(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x01B8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x01D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0228(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0240(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_5;           // 0x0260(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0298(0x0018)()
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF[0x1];                                      // 0x02EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_313[0x1];                                      // 0x0313(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_difficulty                               Temp_byte_Variable_1;                              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_active_calc;                    // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_downl;                   // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_coords;                  // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_play;                    // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_light;                   // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5; // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393[0x5];                                      // 0x0393(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_ttrigger_C>       K2Node_DynamicCast_AsInt_Ttrigger;                 // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_ttrigger_C>       K2Node_DynamicCast_AsInt_Ttrigger_1;               // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x03E8(0x00F0)(HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x04DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_6;           // 0x04F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x0538(0x0018)()
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_552[0x2];                                      // 0x0552(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_7;           // 0x0568(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_7;          // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x05B0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_8;           // 0x05D0(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_8;          // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0608(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_8;          // 0x0620(0x0018)()
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_9;           // 0x0648(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_9;          // 0x0660(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_9;          // 0x0688(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_requestImage_TextureTarget;               // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_requestImage_rt;                          // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_6;        // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signal_spawn                   CallFunc_getSignalSData_data;                      // 0x06E0(0x002C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue_1;               // 0x0714(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_10;       // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6; // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_25;       // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_26;       // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_27;       // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7; // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D[0x3];                                      // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_8; // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_28;       // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload) == 0x000008, "Wrong alignment on Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload");
static_assert(sizeof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload) == 0x0007C0, "Wrong size on Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, EntryPoint) == 0x000000, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable) == 0x000004, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_byte_Variable) == 0x000008, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_1) == 0x00000C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_2) == 0x000010, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_3) == 0x000014, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_4) == 0x000018, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_5) == 0x00001C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_6) == 0x000020, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_7) == 0x000024, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_8) == 0x000028, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_9) == 0x00002C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_Has_Been_Initd_Variable) == 0x000030, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_IsClosed_Variable) == 0x000031, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_gamemode) == 0x000048, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_key) == 0x000050, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_pressed) == 0x000068, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_color) == 0x00006C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_picker) == 0x000080, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_texture) == 0x000088, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_index) == 0x000090, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000A0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000A4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_10) == 0x0000AC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_IsClosed_Variable_1) == 0x0000B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000B8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000110, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000128, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000138, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000150, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000168, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000180, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001A0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x0001B8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x0001D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0001E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_4) == 0x0001F8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000208, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000218, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000228, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000240, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000258, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_5) == 0x000260, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000278, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000288, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000298, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0002B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002B4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0002B8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0002BC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_11) == 0x0002C0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002C4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0002C8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0002D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x0002D8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetRotated2D_ReturnValue) == 0x0002E0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_12) == 0x0002E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002EC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002ED, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_BooleanAND_ReturnValue) == 0x0002EE, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0002F0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_float_Variable_13) == 0x0002F4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0002F8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0002FC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000300, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000304, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000308, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Select_Default) == 0x00030C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_1) == 0x000310, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_NotEqual_NameName_ReturnValue) == 0x000311, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_BooleanAND_ReturnValue_1) == 0x000312, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000314, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_byte_Variable_1) == 0x000318, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloat_ReturnValue) == 0x00031C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000320, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FMax_ReturnValue) == 0x000324, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000328, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue) == 0x00032C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_2) == 0x000330, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000334, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000338, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CustomEvent_active_calc) == 0x00033C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CustomEvent_active_calc' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CustomEvent_active_downl) == 0x00033D, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CustomEvent_active_downl' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CustomEvent_active_coords) == 0x00033E, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CustomEvent_active_coords' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CustomEvent_active_play) == 0x00033F, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CustomEvent_active_play' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_CustomEvent_active_light) == 0x000340, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_CustomEvent_active_light' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000344, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000348, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue_1) == 0x00034C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000350, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x000354, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloat_ReturnValue_1) == 0x000358, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloatInRange_ReturnValue) == 0x00035C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x000360, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000364, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000368, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloat_ReturnValue_2) == 0x00036C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4) == 0x000370, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_isDreaming_dreaming) == 0x000374, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x000378, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x00037C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000380, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000384, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000388, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5) == 0x00038C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000390, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_3) == 0x000391, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_Has_Been_Initd_Variable_1) == 0x000392, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_DynamicCast_AsInt_Ttrigger) == 0x000398, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_DynamicCast_AsInt_Ttrigger' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_DynamicCast_bSuccess) == 0x0003A8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0003A9, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_4) == 0x0003AA, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_IsClosed_Variable_2) == 0x0003AB, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_DynamicCast_AsInt_Ttrigger_1) == 0x0003B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_DynamicCast_AsInt_Ttrigger_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_DynamicCast_bSuccess_1) == 0x0003C0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_Has_Been_Initd_Variable_2) == 0x0003C1, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x0003C2, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_byte_Variable_2) == 0x0003C3, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x0003C4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue) == 0x0003C8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0003CC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue_1) == 0x0003D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x0003D4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0003D8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0003DC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0003E0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Event_settings) == 0x0003E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Select_Default_1) == 0x0004D8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0004DC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0004DD, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_byte_Variable_3) == 0x0004DE, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_5) == 0x0004DF, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0004E0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x0004E4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x0004E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0004EC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x0004F0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_6) == 0x0004F8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_6) == 0x000510, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000520, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_Has_Been_Initd_Variable_3) == 0x000530, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_6) == 0x000538, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_IsClosed_Variable_3) == 0x000550, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000551, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000554, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x000558, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue_2) == 0x00055C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x000560, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_7) == 0x000568, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_7) == 0x000580, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x000590, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000598, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, Temp_bool_Variable) == 0x0005A8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_7) == 0x0005B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, K2Node_Select_Default_2) == 0x0005C8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x0005CC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_8) == 0x0005D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0005E8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_8) == 0x0005F0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000600, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000608, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000618, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_8) == 0x000620, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000638, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00063C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FMax_ReturnValue_1) == 0x000640, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_FloatToText_ReturnValue_9) == 0x000648, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_FloatToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_TextToString_ReturnValue_9) == 0x000660, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_TextToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000670, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_IntInt_ReturnValue) == 0x000680, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_StringToText_ReturnValue_9) == 0x000688, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_StringToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_IsValid_ReturnValue_6) == 0x0006A0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_IntInt_ReturnValue) == 0x0006A4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0006A8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0006AC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue_2) == 0x0006B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0006B4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0006B8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_requestImage_TextureTarget) == 0x0006C0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_requestImage_TextureTarget' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_requestImage_rt) == 0x0006C8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_requestImage_rt' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0006D0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue_3) == 0x0006D4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0006D8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_VictoryFloatPlusEquals_FloatOut_6) == 0x0006DC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_VictoryFloatPlusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_getSignalSData_data) == 0x0006E0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_getSignalSData_data' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue_3) == 0x00070C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000710, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_GetRotated2D_ReturnValue_1) == 0x000714, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_GetRotated2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00071C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_DotProduct2D_ReturnValue) == 0x000720, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000724, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000728, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x00072C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Add_FloatFloat_ReturnValue) == 0x000730, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x000734, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x000738, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Abs_ReturnValue) == 0x00073C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x000740, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x000744, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue_4) == 0x000748, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x00074C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_FloatFloat_ReturnValue_10) == 0x000750, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x000754, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_FClamp_ReturnValue_5) == 0x000758, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6) == 0x00075C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_SelectFloat_ReturnValue) == 0x000760, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000764, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000768, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00076C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000770, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x000774, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue_4) == 0x000778, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_25) == 0x00077C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_26) == 0x000780, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_27) == 0x000784, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000788, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00078C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x000790, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Lerp_ReturnValue_5) == 0x000794, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7) == 0x000798, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00079C, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_8) == 0x0007A0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_BooleanOR_ReturnValue) == 0x0007A4, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0007A8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0007B0, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_Multiply_FloatFloat_ReturnValue_28) == 0x0007B8, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_Multiply_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0007BC, "Member 'Umg_signalDownload_C_ExecuteUbergraph_umg_signalDownload::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.settingsApplied
// 0x00F0 (0x00F0 - 0x0000)
struct Umg_signalDownload_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_SettingsApplied) == 0x000008, "Wrong alignment on Umg_signalDownload_C_SettingsApplied");
static_assert(sizeof(Umg_signalDownload_C_SettingsApplied) == 0x0000F0, "Wrong size on Umg_signalDownload_C_SettingsApplied");
static_assert(offsetof(Umg_signalDownload_C_SettingsApplied, Settings) == 0x000000, "Member 'Umg_signalDownload_C_SettingsApplied::Settings' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.powerChanged
// 0x0005 (0x0005 - 0x0000)
struct Umg_signalDownload_C_PowerChanged final
{
public:
	bool                                          Active_calc;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_downl;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_coords;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_play;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_light;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_signalDownload_C_PowerChanged) == 0x000001, "Wrong alignment on Umg_signalDownload_C_PowerChanged");
static_assert(sizeof(Umg_signalDownload_C_PowerChanged) == 0x000005, "Wrong size on Umg_signalDownload_C_PowerChanged");
static_assert(offsetof(Umg_signalDownload_C_PowerChanged, Active_calc) == 0x000000, "Member 'Umg_signalDownload_C_PowerChanged::Active_calc' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_PowerChanged, Active_downl) == 0x000001, "Member 'Umg_signalDownload_C_PowerChanged::Active_downl' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_PowerChanged, Active_coords) == 0x000002, "Member 'Umg_signalDownload_C_PowerChanged::Active_coords' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_PowerChanged, Active_play) == 0x000003, "Member 'Umg_signalDownload_C_PowerChanged::Active_play' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_PowerChanged, Active_light) == 0x000004, "Member 'Umg_signalDownload_C_PowerChanged::Active_light' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct Umg_signalDownload_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_TexturePickerApply) == 0x000008, "Wrong alignment on Umg_signalDownload_C_TexturePickerApply");
static_assert(sizeof(Umg_signalDownload_C_TexturePickerApply) == 0x000018, "Wrong size on Umg_signalDownload_C_TexturePickerApply");
static_assert(offsetof(Umg_signalDownload_C_TexturePickerApply, Picker) == 0x000000, "Member 'Umg_signalDownload_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_TexturePickerApply, Texture) == 0x000008, "Member 'Umg_signalDownload_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_TexturePickerApply, Param_Index) == 0x000010, "Member 'Umg_signalDownload_C_TexturePickerApply::Param_Index' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Umg_signalDownload_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_ApplyColor) == 0x000004, "Wrong alignment on Umg_signalDownload_C_ApplyColor");
static_assert(sizeof(Umg_signalDownload_C_ApplyColor) == 0x000010, "Wrong size on Umg_signalDownload_C_ApplyColor");
static_assert(offsetof(Umg_signalDownload_C_ApplyColor, Color) == 0x000000, "Member 'Umg_signalDownload_C_ApplyColor::Color' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct Umg_signalDownload_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_signalDownload_C_AnyKey) == 0x000008, "Wrong alignment on Umg_signalDownload_C_AnyKey");
static_assert(sizeof(Umg_signalDownload_C_AnyKey) == 0x000020, "Wrong size on Umg_signalDownload_C_AnyKey");
static_assert(offsetof(Umg_signalDownload_C_AnyKey, Key) == 0x000000, "Member 'Umg_signalDownload_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_AnyKey, Pressed) == 0x000018, "Member 'Umg_signalDownload_C_AnyKey::Pressed' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Umg_signalDownload_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        Param_GameMode;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_StuffUpgraded) == 0x000008, "Wrong alignment on Umg_signalDownload_C_StuffUpgraded");
static_assert(sizeof(Umg_signalDownload_C_StuffUpgraded) == 0x000008, "Wrong size on Umg_signalDownload_C_StuffUpgraded");
static_assert(offsetof(Umg_signalDownload_C_StuffUpgraded, Param_GameMode) == 0x000000, "Member 'Umg_signalDownload_C_StuffUpgraded::Param_GameMode' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.Init Download Sig
// 0x02C0 (0x02C0 - 0x0000)
struct Umg_signalDownload_C_Init_Download_Sig final
{
public:
	struct FVector2D                              SignalLocation;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signal_data1                   CallFunc_nameToSignal_data;                        // 0x0010(0x01D0)(HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_signalToDynamic_dynamic;                  // 0x01E0(0x0070)(HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              K2Node_SetFieldsInStruct_StructOut;                // 0x0250(0x0070)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_Init_Download_Sig) == 0x000008, "Wrong alignment on Umg_signalDownload_C_Init_Download_Sig");
static_assert(sizeof(Umg_signalDownload_C_Init_Download_Sig) == 0x0002C0, "Wrong size on Umg_signalDownload_C_Init_Download_Sig");
static_assert(offsetof(Umg_signalDownload_C_Init_Download_Sig, SignalLocation) == 0x000000, "Member 'Umg_signalDownload_C_Init_Download_Sig::SignalLocation' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Init_Download_Sig, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'Umg_signalDownload_C_Init_Download_Sig::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Init_Download_Sig, CallFunc_nameToSignal_data) == 0x000010, "Member 'Umg_signalDownload_C_Init_Download_Sig::CallFunc_nameToSignal_data' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Init_Download_Sig, CallFunc_signalToDynamic_dynamic) == 0x0001E0, "Member 'Umg_signalDownload_C_Init_Download_Sig::CallFunc_signalToDynamic_dynamic' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Init_Download_Sig, K2Node_SetFieldsInStruct_StructOut) == 0x000250, "Member 'Umg_signalDownload_C_Init_Download_Sig::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.initTutor
// 0x0008 (0x0008 - 0x0000)
struct Umg_signalDownload_C_InitTutor final
{
public:
	class APanel_download_tutorial3_C*            Param_Tutor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_InitTutor) == 0x000008, "Wrong alignment on Umg_signalDownload_C_InitTutor");
static_assert(sizeof(Umg_signalDownload_C_InitTutor) == 0x000008, "Wrong size on Umg_signalDownload_C_InitTutor");
static_assert(offsetof(Umg_signalDownload_C_InitTutor, Param_Tutor) == 0x000000, "Member 'Umg_signalDownload_C_InitTutor::Param_Tutor' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.texts
// 0x00E0 (0x00E0 - 0x0000)
struct Umg_signalDownload_C_Texts final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_quality                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_freq                                     Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_objectType                               Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_quality                                  K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_freq                                     K2Node_Select_Default_1;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0080(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0098(0x0018)()
	Enum_objectType                               K2Node_Select_Default_2;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x00C8(0x0018)()
};
static_assert(alignof(Umg_signalDownload_C_Texts) == 0x000008, "Wrong alignment on Umg_signalDownload_C_Texts");
static_assert(sizeof(Umg_signalDownload_C_Texts) == 0x0000E0, "Wrong size on Umg_signalDownload_C_Texts");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_bool_Variable) == 0x000000, "Member 'Umg_signalDownload_C_Texts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_byte_Variable) == 0x000001, "Member 'Umg_signalDownload_C_Texts::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_bool_Variable_1) == 0x000002, "Member 'Umg_signalDownload_C_Texts::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_byte_Variable_1) == 0x000003, "Member 'Umg_signalDownload_C_Texts::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_bool_Variable_2) == 0x000004, "Member 'Umg_signalDownload_C_Texts::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, Temp_byte_Variable_2) == 0x000005, "Member 'Umg_signalDownload_C_Texts::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'Umg_signalDownload_C_Texts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'Umg_signalDownload_C_Texts::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, K2Node_Select_Default) == 0x000059, "Member 'Umg_signalDownload_C_Texts::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, K2Node_Select_Default_1) == 0x00005A, "Member 'Umg_signalDownload_C_Texts::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000060, "Member 'Umg_signalDownload_C_Texts::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000070, "Member 'Umg_signalDownload_C_Texts::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000080, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000098, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, K2Node_Select_Default_2) == 0x0000B0, "Member 'Umg_signalDownload_C_Texts::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x0000B8, "Member 'Umg_signalDownload_C_Texts::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_Texts, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0000C8, "Member 'Umg_signalDownload_C_Texts::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");

// Function umg_signalDownload.umg_signalDownload_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Umg_signalDownload_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_signalDownload_C_DreamInv) == 0x000008, "Wrong alignment on Umg_signalDownload_C_DreamInv");
static_assert(sizeof(Umg_signalDownload_C_DreamInv) == 0x000018, "Wrong size on Umg_signalDownload_C_DreamInv");
static_assert(offsetof(Umg_signalDownload_C_DreamInv, Invv) == 0x000000, "Member 'Umg_signalDownload_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Umg_signalDownload_C_DreamInv, Base) == 0x000010, "Member 'Umg_signalDownload_C_DreamInv::Base' has a wrong offset!");

}

