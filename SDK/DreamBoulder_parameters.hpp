#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DreamBoulder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function dreamBoulder.dreamBoulder_C.ExecuteUbergraph_dreamBoulder
// 0x00D0 (0x00D0 - 0x0000)
struct DreamBoulder_C_ExecuteUbergraph_dreamBoulder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x002C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_DynamicCast_AsMain_Player;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addFood_full;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder) == 0x000008, "Wrong alignment on DreamBoulder_C_ExecuteUbergraph_dreamBoulder");
static_assert(sizeof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder) == 0x0000D0, "Wrong size on DreamBoulder_C_ExecuteUbergraph_dreamBoulder");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, EntryPoint) == 0x000000, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::EntryPoint' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_ComponentBoundEvent_Hit) == 0x00002C, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000B8, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_DynamicCast_AsMain_Player) == 0x0000C0, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_DynamicCast_AsMain_Player' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_ExecuteUbergraph_dreamBoulder, CallFunc_addFood_full) == 0x0000C9, "Member 'DreamBoulder_C_ExecuteUbergraph_dreamBoulder::CallFunc_addFood_full' has a wrong offset!");

// Function dreamBoulder.dreamBoulder_C.BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'DreamBoulder_C_BndEvt__dreamBoulder_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function dreamBoulder.dreamBoulder_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct DreamBoulder_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DreamBoulder_C_ReceiveTick) == 0x000004, "Wrong alignment on DreamBoulder_C_ReceiveTick");
static_assert(sizeof(DreamBoulder_C_ReceiveTick) == 0x000004, "Wrong size on DreamBoulder_C_ReceiveTick");
static_assert(offsetof(DreamBoulder_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'DreamBoulder_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

