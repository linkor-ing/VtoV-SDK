#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_driveRack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"
#include "Struct_signalDataDynamic_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_driveRack.prop_driveRack_C
// 0x0050 (0x03B8 - 0x0368)
class AProp_driveRack_C final : public AProp_C
{
public:
	uint8                                         Pad_3BC6[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_driveRack_C;                   // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Drives;                                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  Slots;                                             // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FStruct_signalDataDynamic>      Data;                                              // 0x0390(0x0010)(Edit, BlueprintVisible)
	TArray<bool>                                  Has;                                               // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Temp;                                              // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_driveRack(int32 EntryPoint);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, int32 Param_Index, Enum_interactionActions Action);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void Gen();
	void GetDrive(class UBoxComponent* Comp, class AActor* Target);
	void AddDrive(class AActor* InputPin);
	void UserConstructionScript();
	void LoadData(const struct FStruct_save& Param_Data, bool* Return);
	void GetData(struct FStruct_save* Param_Data);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_driveRack_C">();
	}
	static class AProp_driveRack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_driveRack_C>();
	}
};
static_assert(alignof(AProp_driveRack_C) == 0x000008, "Wrong alignment on AProp_driveRack_C");
static_assert(sizeof(AProp_driveRack_C) == 0x0003B8, "Wrong size on AProp_driveRack_C");
static_assert(offsetof(AProp_driveRack_C, UberGraphFrame_Prop_driveRack_C) == 0x000368, "Member 'AProp_driveRack_C::UberGraphFrame_Prop_driveRack_C' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Audio) == 0x000370, "Member 'AProp_driveRack_C::Audio' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Drives) == 0x000378, "Member 'AProp_driveRack_C::Drives' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Slots) == 0x000380, "Member 'AProp_driveRack_C::Slots' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Data) == 0x000390, "Member 'AProp_driveRack_C::Data' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Has) == 0x0003A0, "Member 'AProp_driveRack_C::Has' has a wrong offset!");
static_assert(offsetof(AProp_driveRack_C, Temp) == 0x0003B0, "Member 'AProp_driveRack_C::Temp' has a wrong offset!");

}

