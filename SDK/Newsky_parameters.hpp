#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Newsky

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function newsky.newsky_C.ExecuteUbergraph_newsky
// 0x00A4 (0x00A4 - 0x0000)
struct Newsky_C_ExecuteUbergraph_newsky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Newsky_C_ExecuteUbergraph_newsky) == 0x000004, "Wrong alignment on Newsky_C_ExecuteUbergraph_newsky");
static_assert(sizeof(Newsky_C_ExecuteUbergraph_newsky) == 0x0000A4, "Wrong size on Newsky_C_ExecuteUbergraph_newsky");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, EntryPoint) == 0x000000, "Member 'Newsky_C_ExecuteUbergraph_newsky::EntryPoint' has a wrong offset!");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Newsky_C_ExecuteUbergraph_newsky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Newsky_C_ExecuteUbergraph_newsky::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Newsky_C_ExecuteUbergraph_newsky::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'Newsky_C_ExecuteUbergraph_newsky::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_ExecuteUbergraph_newsky, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x00001C, "Member 'Newsky_C_ExecuteUbergraph_newsky::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");

// Function newsky.newsky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Newsky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Newsky_C_ReceiveTick) == 0x000004, "Wrong alignment on Newsky_C_ReceiveTick");
static_assert(sizeof(Newsky_C_ReceiveTick) == 0x000004, "Wrong size on Newsky_C_ReceiveTick");
static_assert(offsetof(Newsky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Newsky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function newsky.newsky_C.upd
// 0x0134 (0x0134 - 0x0000)
struct Newsky_C_Upd final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_280F[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_2;        // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_3;        // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Newsky_C_Upd) == 0x000004, "Wrong alignment on Newsky_C_Upd");
static_assert(sizeof(Newsky_C_Upd) == 0x000134, "Wrong size on Newsky_C_Upd");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'Newsky_C_Upd::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetLinearColorValue_ReturnValue) == 0x00000C, "Member 'Newsky_C_Upd::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Dot_VectorVector_ReturnValue) == 0x00001C, "Member 'Newsky_C_Upd::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_BreakColor_R) == 0x000020, "Member 'Newsky_C_Upd::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_BreakColor_G) == 0x000024, "Member 'Newsky_C_Upd::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_BreakColor_B) == 0x000028, "Member 'Newsky_C_Upd::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_BreakColor_A) == 0x00002C, "Member 'Newsky_C_Upd::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'Newsky_C_Upd::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000031, "Member 'Newsky_C_Upd::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetActorForwardVector_ReturnValue) == 0x000034, "Member 'Newsky_C_Upd::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000040, "Member 'Newsky_C_Upd::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetForwardVector_ReturnValue_1) == 0x000050, "Member 'Newsky_C_Upd::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x00005C, "Member 'Newsky_C_Upd::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000060, "Member 'Newsky_C_Upd::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'Newsky_C_Upd::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'Newsky_C_Upd::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000074, "Member 'Newsky_C_Upd::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000FC, "Member 'Newsky_C_Upd::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000100, "Member 'Newsky_C_Upd::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x000104, "Member 'Newsky_C_Upd::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetLinearColorValue_ReturnValue_2) == 0x000114, "Member 'Newsky_C_Upd::CallFunc_GetLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Newsky_C_Upd, CallFunc_GetLinearColorValue_ReturnValue_3) == 0x000124, "Member 'Newsky_C_Upd::CallFunc_GetLinearColorValue_ReturnValue_3' has a wrong offset!");

// Function newsky.newsky_C.Init
// 0x0018 (0x0018 - 0x0000)
struct Newsky_C_Init final
{
public:
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2810[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Newsky_C_Init) == 0x000008, "Wrong alignment on Newsky_C_Init");
static_assert(sizeof(Newsky_C_Init) == 0x000018, "Wrong size on Newsky_C_Init");
static_assert(offsetof(Newsky_C_Init, CallFunc_RandomFloat_ReturnValue) == 0x000000, "Member 'Newsky_C_Init::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Newsky_C_Init, CallFunc_RandomFloat_ReturnValue_1) == 0x000004, "Member 'Newsky_C_Init::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Newsky_C_Init, CallFunc_RandomFloat_ReturnValue_2) == 0x000008, "Member 'Newsky_C_Init::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Newsky_C_Init, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'Newsky_C_Init::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function newsky.newsky_C.skyVisibility
// 0x0010 (0x0010 - 0x0000)
struct Newsky_C_SkyVisibility final
{
public:
	bool                                          bNewHidden;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2811[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Newsky_C_SkyVisibility) == 0x000008, "Wrong alignment on Newsky_C_SkyVisibility");
static_assert(sizeof(Newsky_C_SkyVisibility) == 0x000010, "Wrong size on Newsky_C_SkyVisibility");
static_assert(offsetof(Newsky_C_SkyVisibility, bNewHidden) == 0x000000, "Member 'Newsky_C_SkyVisibility::bNewHidden' has a wrong offset!");
static_assert(offsetof(Newsky_C_SkyVisibility, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'Newsky_C_SkyVisibility::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");

}

