#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_rope

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_rope.prop_rope_C.ExecuteUbergraph_prop_rope
// 0x0290 (0x0290 - 0x0000)
struct Prop_rope_C_ExecuteUbergraph_prop_rope final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARope_C*                                CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0174(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rope_C_ExecuteUbergraph_prop_rope) == 0x000010, "Wrong alignment on Prop_rope_C_ExecuteUbergraph_prop_rope");
static_assert(sizeof(Prop_rope_C_ExecuteUbergraph_prop_rope) == 0x000290, "Wrong size on Prop_rope_C_ExecuteUbergraph_prop_rope");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, EntryPoint) == 0x000000, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, K2Node_Event_player) == 0x000008, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bBlockingHit) == 0x000010, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bInitialOverlap) == 0x000011, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Time) == 0x000014, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Distance) == 0x000018, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Location) == 0x00001C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactPoint) == 0x000028, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Normal) == 0x000034, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactNormal) == 0x000040, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_PhysMat) == 0x000050, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitActor) == 0x000058, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitComponent) == 0x000060, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitBoneName) == 0x000068, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitItem) == 0x000070, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ElementIndex) == 0x000074, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_FaceIndex) == 0x000078, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceStart) == 0x00007C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceEnd) == 0x000088, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D8, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, K2Node_Event_DeltaSeconds) == 0x0000E0, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_getMainPlayer_AsMain_Player) == 0x0000E8, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0000F0, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0000F1, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Time_1) == 0x0000F4, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Distance_1) == 0x0000F8, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Location_1) == 0x0000FC, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000108, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Normal_1) == 0x000114, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000120, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_PhysMat_1) == 0x000130, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitActor_1) == 0x000138, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitComponent_1) == 0x000140, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitBoneName_1) == 0x000148, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitItem_1) == 0x000150, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ElementIndex_1) == 0x000154, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_FaceIndex_1) == 0x000158, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceStart_1) == 0x00015C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceEnd_1) == 0x000168, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000174, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_IsValid_ReturnValue) == 0x0001FC, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, K2Node_Event_player_1) == 0x000200, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000208, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000209, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Time_2) == 0x00020C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Distance_2) == 0x000210, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Location_2) == 0x000214, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000220, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_Normal_2) == 0x00022C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000238, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_PhysMat_2) == 0x000248, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitActor_2) == 0x000250, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitComponent_2) == 0x000258, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitBoneName_2) == 0x000260, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_HitItem_2) == 0x000268, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_ElementIndex_2) == 0x00026C, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_FaceIndex_2) == 0x000270, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceStart_2) == 0x000274, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(Prop_rope_C_ExecuteUbergraph_prop_rope, CallFunc_BreakHitResult_TraceEnd_2) == 0x000280, "Member 'Prop_rope_C_ExecuteUbergraph_prop_rope::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");

// Function prop_rope.prop_rope_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_rope_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rope_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_rope_C_ReceiveTick");
static_assert(sizeof(Prop_rope_C_ReceiveTick) == 0x000004, "Wrong size on Prop_rope_C_ReceiveTick");
static_assert(offsetof(Prop_rope_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_rope_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_rope.prop_rope_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_rope_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rope_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_rope_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_rope_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_rope_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_rope_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_rope_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function prop_rope.prop_rope_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_rope_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rope_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on Prop_rope_C_PlayerHandRelease_LMB");
static_assert(sizeof(Prop_rope_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on Prop_rope_C_PlayerHandRelease_LMB");
static_assert(offsetof(Prop_rope_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'Prop_rope_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

}

