#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MurderKerfuroDig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function murderKerfuroDig.murderKerfuroDig_C.ExecuteUbergraph_murderKerfuroDig
// 0x0490 (0x0490 - 0x0000)
struct MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMurderKerfur_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_kick;                                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name;                                 // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0xC];                                      // 0x01C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_getNextPoint_Output;                      // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0xC];                                      // 0x0204(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0248(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0xE];                                      // 0x02D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0310(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   Temp_name_Variable;                                // 0x0398(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0xF];                                      // 0x03A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x03E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          CallFunc_setIgnoreSave_self_CastInput;             // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig) == 0x000010, "Wrong alignment on MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig");
static_assert(sizeof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig) == 0x000490, "Wrong size on MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, EntryPoint) == 0x000000, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::EntryPoint' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_6) == 0x000060, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_hit_2) == 0x000068, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_kick) == 0x0000F8, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_name) == 0x0000FC, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_5) == 0x000108, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_4) == 0x000110, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_hit_1) == 0x000118, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_damage) == 0x0001A0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_3) == 0x0001A8, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_2) == 0x0001B0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player_1) == 0x0001B8, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_DeltaSeconds) == 0x0001C0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_getNextPoint_Output) == 0x0001D0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_getNextPoint_Output' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000200, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_GetRelativeTransform_ReturnValue) == 0x000210, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_player) == 0x000240, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_hit) == 0x000248, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, K2Node_Event_action) == 0x0002D0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x0002D1, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_TInterpTo_ReturnValue) == 0x0002E0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000310, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, Temp_name_Variable) == 0x000398, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003A0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0003B0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x0003E0, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000468, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000470, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_setIgnoreSave_self_CastInput) == 0x000478, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_setIgnoreSave_self_CastInput' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000488, "Member 'MurderKerfuroDig_C_ExecuteUbergraph_murderKerfuroDig::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct MurderKerfuroDig_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_ActionOptionIndex) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_ActionOptionIndex");
static_assert(sizeof(MurderKerfuroDig_C_ActionOptionIndex) == 0x000098, "Wrong size on MurderKerfuroDig_C_ActionOptionIndex");
static_assert(offsetof(MurderKerfuroDig_C_ActionOptionIndex, Player) == 0x000000, "Member 'MurderKerfuroDig_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ActionOptionIndex, Hit) == 0x000008, "Member 'MurderKerfuroDig_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_ActionOptionIndex, Action) == 0x000090, "Member 'MurderKerfuroDig_C_ActionOptionIndex::Action' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MurderKerfuroDig_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_ReceiveTick) == 0x000004, "Wrong alignment on MurderKerfuroDig_C_ReceiveTick");
static_assert(sizeof(MurderKerfuroDig_C_ReceiveTick) == 0x000004, "Wrong size on MurderKerfuroDig_C_ReceiveTick");
static_assert(offsetof(MurderKerfuroDig_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MurderKerfuroDig_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_PlayerR) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_PlayerR");
static_assert(sizeof(MurderKerfuroDig_C_PlayerR) == 0x000008, "Wrong size on MurderKerfuroDig_C_PlayerR");
static_assert(offsetof(MurderKerfuroDig_C_PlayerR, Player) == 0x000000, "Member 'MurderKerfuroDig_C_PlayerR::Player' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_PlayerHold) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_PlayerHold");
static_assert(sizeof(MurderKerfuroDig_C_PlayerHold) == 0x000008, "Wrong size on MurderKerfuroDig_C_PlayerHold");
static_assert(offsetof(MurderKerfuroDig_C_PlayerHold, Player) == 0x000000, "Member 'MurderKerfuroDig_C_PlayerHold::Player' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_PlayerUnequip) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_PlayerUnequip");
static_assert(sizeof(MurderKerfuroDig_C_PlayerUnequip) == 0x000008, "Wrong size on MurderKerfuroDig_C_PlayerUnequip");
static_assert(offsetof(MurderKerfuroDig_C_PlayerUnequip, Player) == 0x000000, "Member 'MurderKerfuroDig_C_PlayerUnequip::Player' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct MurderKerfuroDig_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_DamageByPlayer) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_DamageByPlayer");
static_assert(sizeof(MurderKerfuroDig_C_DamageByPlayer) == 0x000098, "Wrong size on MurderKerfuroDig_C_DamageByPlayer");
static_assert(offsetof(MurderKerfuroDig_C_DamageByPlayer, Player) == 0x000000, "Member 'MurderKerfuroDig_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_DamageByPlayer, Hit) == 0x000008, "Member 'MurderKerfuroDig_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_DamageByPlayer, Damage) == 0x000090, "Member 'MurderKerfuroDig_C_DamageByPlayer::Damage' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_Thrown) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_Thrown");
static_assert(sizeof(MurderKerfuroDig_C_Thrown) == 0x000008, "Wrong size on MurderKerfuroDig_C_Thrown");
static_assert(offsetof(MurderKerfuroDig_C_Thrown, Player) == 0x000000, "Member 'MurderKerfuroDig_C_Thrown::Player' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_SendName) == 0x000004, "Wrong alignment on MurderKerfuroDig_C_SendName");
static_assert(sizeof(MurderKerfuroDig_C_SendName) == 0x000008, "Wrong size on MurderKerfuroDig_C_SendName");
static_assert(offsetof(MurderKerfuroDig_C_SendName, Param_Name) == 0x000000, "Member 'MurderKerfuroDig_C_SendName::Param_Name' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct MurderKerfuroDig_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_Kicked) == 0x000001, "Wrong alignment on MurderKerfuroDig_C_Kicked");
static_assert(sizeof(MurderKerfuroDig_C_Kicked) == 0x000001, "Wrong size on MurderKerfuroDig_C_Kicked");
static_assert(offsetof(MurderKerfuroDig_C_Kicked, Kick) == 0x000000, "Member 'MurderKerfuroDig_C_Kicked::Kick' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct MurderKerfuroDig_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MurderKerfuroDig_C_Player_use) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_Player_use");
static_assert(sizeof(MurderKerfuroDig_C_Player_use) == 0x000090, "Wrong size on MurderKerfuroDig_C_Player_use");
static_assert(offsetof(MurderKerfuroDig_C_Player_use, Player) == 0x000000, "Member 'MurderKerfuroDig_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_Player_use, Hit) == 0x000008, "Member 'MurderKerfuroDig_C_Player_use::Hit' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.getNextPoint
// 0x0070 (0x0070 - 0x0000)
struct MurderKerfuroDig_C_GetNextPoint final
{
public:
	struct FTransform                             Output;                                            // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_GetNextPoint) == 0x000010, "Wrong alignment on MurderKerfuroDig_C_GetNextPoint");
static_assert(sizeof(MurderKerfuroDig_C_GetNextPoint) == 0x000070, "Wrong size on MurderKerfuroDig_C_GetNextPoint");
static_assert(offsetof(MurderKerfuroDig_C_GetNextPoint, Output) == 0x000000, "Member 'MurderKerfuroDig_C_GetNextPoint::Output' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetNextPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'MurderKerfuroDig_C_GetNextPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetNextPoint, CallFunc_Array_Get_Item) == 0x000040, "Member 'MurderKerfuroDig_C_GetNextPoint::CallFunc_Array_Get_Item' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.digOut
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_DigOut final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_DigOut) == 0x000004, "Wrong alignment on MurderKerfuroDig_C_DigOut");
static_assert(sizeof(MurderKerfuroDig_C_DigOut) == 0x000008, "Wrong size on MurderKerfuroDig_C_DigOut");
static_assert(offsetof(MurderKerfuroDig_C_DigOut, Temp_int_Variable) == 0x000000, "Member 'MurderKerfuroDig_C_DigOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_DigOut, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'MurderKerfuroDig_C_DigOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct MurderKerfuroDig_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_CanBePutInContainer) == 0x000001, "Wrong alignment on MurderKerfuroDig_C_CanBePutInContainer");
static_assert(sizeof(MurderKerfuroDig_C_CanBePutInContainer) == 0x000001, "Wrong size on MurderKerfuroDig_C_CanBePutInContainer");
static_assert(offsetof(MurderKerfuroDig_C_CanBePutInContainer, Return) == 0x000000, "Member 'MurderKerfuroDig_C_CanBePutInContainer::Return' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct MurderKerfuroDig_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_AsProp) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_AsProp");
static_assert(sizeof(MurderKerfuroDig_C_AsProp) == 0x000008, "Wrong size on MurderKerfuroDig_C_AsProp");
static_assert(offsetof(MurderKerfuroDig_C_AsProp, Return) == 0x000000, "Member 'MurderKerfuroDig_C_AsProp::Return' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct MurderKerfuroDig_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_CanPickup) == 0x000001, "Wrong alignment on MurderKerfuroDig_C_CanPickup");
static_assert(sizeof(MurderKerfuroDig_C_CanPickup) == 0x000001, "Wrong size on MurderKerfuroDig_C_CanPickup");
static_assert(offsetof(MurderKerfuroDig_C_CanPickup, Return) == 0x000000, "Member 'MurderKerfuroDig_C_CanPickup::Return' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct MurderKerfuroDig_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_NoRespawn) == 0x000001, "Wrong alignment on MurderKerfuroDig_C_NoRespawn");
static_assert(sizeof(MurderKerfuroDig_C_NoRespawn) == 0x000002, "Wrong size on MurderKerfuroDig_C_NoRespawn");
static_assert(offsetof(MurderKerfuroDig_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'MurderKerfuroDig_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_NoRespawn, Return) == 0x000001, "Member 'MurderKerfuroDig_C_NoRespawn::Return' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct MurderKerfuroDig_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MurderKerfuroDig_C_LookAt) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_LookAt");
static_assert(sizeof(MurderKerfuroDig_C_LookAt) == 0x0000B8, "Wrong size on MurderKerfuroDig_C_LookAt");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, Player) == 0x000000, "Member 'MurderKerfuroDig_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, Hit) == 0x000008, "Member 'MurderKerfuroDig_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, Return) == 0x000090, "Member 'MurderKerfuroDig_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, Text) == 0x000098, "Member 'MurderKerfuroDig_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'MurderKerfuroDig_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LookAt, Number) == 0x0000B0, "Member 'MurderKerfuroDig_C_LookAt::Number' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct MurderKerfuroDig_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_IsButtonUsed) == 0x000001, "Wrong alignment on MurderKerfuroDig_C_IsButtonUsed");
static_assert(sizeof(MurderKerfuroDig_C_IsButtonUsed) == 0x000001, "Wrong size on MurderKerfuroDig_C_IsButtonUsed");
static_assert(offsetof(MurderKerfuroDig_C_IsButtonUsed, Failed) == 0x000000, "Member 'MurderKerfuroDig_C_IsButtonUsed::Failed' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct MurderKerfuroDig_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MurderKerfuroDig_C_LandedOn) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_LandedOn");
static_assert(sizeof(MurderKerfuroDig_C_LandedOn) == 0x000010, "Wrong size on MurderKerfuroDig_C_LandedOn");
static_assert(offsetof(MurderKerfuroDig_C_LandedOn, Player) == 0x000000, "Member 'MurderKerfuroDig_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'MurderKerfuroDig_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function murderKerfuroDig.murderKerfuroDig_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct MurderKerfuroDig_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(MurderKerfuroDig_C_GetActionOptions) == 0x000008, "Wrong alignment on MurderKerfuroDig_C_GetActionOptions");
static_assert(sizeof(MurderKerfuroDig_C_GetActionOptions) == 0x000060, "Wrong size on MurderKerfuroDig_C_GetActionOptions");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Player) == 0x000000, "Member 'MurderKerfuroDig_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Component) == 0x000008, "Member 'MurderKerfuroDig_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Actor) == 0x000010, "Member 'MurderKerfuroDig_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Options) == 0x000018, "Member 'MurderKerfuroDig_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Options_enum) == 0x000028, "Member 'MurderKerfuroDig_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'MurderKerfuroDig_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, Number) == 0x000048, "Member 'MurderKerfuroDig_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(MurderKerfuroDig_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'MurderKerfuroDig_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

