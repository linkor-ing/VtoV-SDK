#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_microwave

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_triggerSave_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mVector_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK::Params
{

// Function prop_microwave.prop_microwave_C.ExecuteUbergraph_prop_microwave
// 0x0370 (0x0370 - 0x0000)
struct Prop_microwave_C_ExecuteUbergraph_prop_microwave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_microwaveDoor_C*                  K2Node_DynamicCast_AsProp_Microwave_Door;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0120(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x01CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array;                            // 0x0270(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0298(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_Event_cord;                                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_DynamicCast_AsCord;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_ExecuteUbergraph_prop_microwave) == 0x000008, "Wrong alignment on Prop_microwave_C_ExecuteUbergraph_prop_microwave");
static_assert(sizeof(Prop_microwave_C_ExecuteUbergraph_prop_microwave) == 0x000370, "Wrong size on Prop_microwave_C_ExecuteUbergraph_prop_microwave");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, EntryPoint) == 0x000000, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_float_Variable) == 0x000004, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_float_Variable_1) == 0x000008, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_float_Variable_2) == 0x000018, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_owner) == 0x000020, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_index) == 0x000028, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_NewParam) == 0x00002C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_sentFrom) == 0x000030, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_active) == 0x000038, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00003C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000040, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000044, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000058, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E0, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_DeltaSeconds) == 0x0000E4, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetActorRightVector_ReturnValue) == 0x0000E8, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000F4, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Dot_VectorVector_ReturnValue) == 0x000100, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000104, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_int_Variable) == 0x000108, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Percent_IntInt_ReturnValue) == 0x00010C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_AsProp_Microwave_Door) == 0x000110, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_AsProp_Microwave_Door' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000120, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Array_Get_Item) == 0x000130, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_AsInt_Objects) == 0x000138, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000150, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_AsPrimitive_Component) == 0x000158, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_AsInt_Objects_1) == 0x000168, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetComponentBounds_Origin) == 0x00017C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetComponentBounds_BoxExtent) == 0x000188, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetComponentBounds_SphereRadius) == 0x000194, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000198, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetMaterial_ReturnValue) == 0x0001A0, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x0001B0, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_actor) == 0x0001C0, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_damage) == 0x0001C8, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_hit_1) == 0x0001CC, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_impact) == 0x000254, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_skipSetting) == 0x000260, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_float_Variable_3) == 0x000264, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000268, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_float_Variable_4) == 0x00026C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_MakeArray_Array) == 0x000270, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Array_Contains_ReturnValue) == 0x000280, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000281, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000282, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_RandomUnitVector_ReturnValue) == 0x000284, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_player) == 0x000290, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_hit) == 0x000298, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_action) == 0x000320, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000324, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_SwitchEnum_CmpSuccess) == 0x000330, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_cord_1) == 0x000338, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_socket_1) == 0x000340, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_cord) == 0x000348, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Event_socket) == 0x000350, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, Temp_int_Variable_1) == 0x000358, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_Select_Default) == 0x00035C, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_AsCord) == 0x000360, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_AsCord' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ExecuteUbergraph_prop_microwave, K2Node_DynamicCast_bSuccess_4) == 0x000368, "Member 'Prop_microwave_C_ExecuteUbergraph_prop_microwave::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_microwave_C_CordUnplugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_microwave_C_CordUnplugged");
static_assert(sizeof(Prop_microwave_C_CordUnplugged) == 0x000010, "Wrong size on Prop_microwave_C_CordUnplugged");
static_assert(offsetof(Prop_microwave_C_CordUnplugged, Param_Cord) == 0x000000, "Member 'Prop_microwave_C_CordUnplugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_microwave_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_microwave_C_CordPlugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_microwave_C_CordPlugged");
static_assert(sizeof(Prop_microwave_C_CordPlugged) == 0x000010, "Wrong size on Prop_microwave_C_CordPlugged");
static_assert(offsetof(Prop_microwave_C_CordPlugged, Param_Cord) == 0x000000, "Member 'Prop_microwave_C_CordPlugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_microwave_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_microwave_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_microwave_C_ReceiveTick");
static_assert(sizeof(Prop_microwave_C_ReceiveTick) == 0x000004, "Wrong size on Prop_microwave_C_ReceiveTick");
static_assert(offsetof(Prop_microwave_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_microwave_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_microwave_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Active;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_microwave_C_SetActiveTrigger");
static_assert(sizeof(Prop_microwave_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_microwave_C_SetActiveTrigger");
static_assert(offsetof(Prop_microwave_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_microwave_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_SetActiveTrigger, Param_Active) == 0x000008, "Member 'Prop_microwave_C_SetActiveTrigger::Param_Active' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_microwave_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_microwave_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_microwave_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_microwave_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_microwave_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_microwave_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_microwave_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_microwave_C_RunTrigger");
static_assert(sizeof(Prop_microwave_C_RunTrigger) == 0x000010, "Wrong size on Prop_microwave_C_RunTrigger");
static_assert(offsetof(Prop_microwave_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_microwave_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_microwave_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.closeDoor
// 0x0050 (0x0050 - 0x0000)
struct Prop_microwave_C_CloseDoor final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_CloseDoor) == 0x000010, "Wrong alignment on Prop_microwave_C_CloseDoor");
static_assert(sizeof(Prop_microwave_C_CloseDoor) == 0x000050, "Wrong size on Prop_microwave_C_CloseDoor");
static_assert(offsetof(Prop_microwave_C_CloseDoor, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'Prop_microwave_C_CloseDoor::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_CloseDoor, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00000C, "Member 'Prop_microwave_C_CloseDoor::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_CloseDoor, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'Prop_microwave_C_CloseDoor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.openDoor
// 0x0050 (0x0050 - 0x0000)
struct Prop_microwave_C_OpenDoor final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_OpenDoor) == 0x000010, "Wrong alignment on Prop_microwave_C_OpenDoor");
static_assert(sizeof(Prop_microwave_C_OpenDoor) == 0x000050, "Wrong size on Prop_microwave_C_OpenDoor");
static_assert(offsetof(Prop_microwave_C_OpenDoor, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'Prop_microwave_C_OpenDoor::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_OpenDoor, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00000C, "Member 'Prop_microwave_C_OpenDoor::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_OpenDoor, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'Prop_microwave_C_OpenDoor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_microwave_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_microwave_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_microwave_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_microwave_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_microwave_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_microwave_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_microwave_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_microwave_C_LoadTriggerData");
static_assert(sizeof(Prop_microwave_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_microwave_C_LoadTriggerData");
static_assert(offsetof(Prop_microwave_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_microwave_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_microwave_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_microwave_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_microwave_C_GetTriggerData");
static_assert(sizeof(Prop_microwave_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_microwave_C_GetTriggerData");
static_assert(offsetof(Prop_microwave_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_microwave_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.gatherDataFromKeyT
// 0x0001 (0x0001 - 0x0000)
struct Prop_microwave_C_GatherDataFromKeyT final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_GatherDataFromKeyT) == 0x000001, "Wrong alignment on Prop_microwave_C_GatherDataFromKeyT");
static_assert(sizeof(Prop_microwave_C_GatherDataFromKeyT) == 0x000001, "Wrong size on Prop_microwave_C_GatherDataFromKeyT");
static_assert(offsetof(Prop_microwave_C_GatherDataFromKeyT, Gather) == 0x000000, "Member 'Prop_microwave_C_GatherDataFromKeyT::Gather' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_microwave_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_microwave_C_ActionOptionIndex");
static_assert(sizeof(Prop_microwave_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_microwave_C_ActionOptionIndex");
static_assert(offsetof(Prop_microwave_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_microwave_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_microwave_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_microwave_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_microwave_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_AddDamage) == 0x000008, "Wrong alignment on Prop_microwave_C_AddDamage");
static_assert(sizeof(Prop_microwave_C_AddDamage) == 0x0000A8, "Wrong size on Prop_microwave_C_AddDamage");
static_assert(offsetof(Prop_microwave_C_AddDamage, Actor) == 0x000000, "Member 'Prop_microwave_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_AddDamage, Damage) == 0x000008, "Member 'Prop_microwave_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_AddDamage, Param_Hit) == 0x00000C, "Member 'Prop_microwave_C_AddDamage::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_AddDamage, Impact) == 0x000094, "Member 'Prop_microwave_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'Prop_microwave_C_AddDamage::SkipSetting' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.lookAt
// 0x0218 (0x0218 - 0x0000)
struct Prop_microwave_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00E0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0130(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0158(0x0018)()
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x01A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_LookAt) == 0x000008, "Wrong alignment on Prop_microwave_C_LookAt");
static_assert(sizeof(Prop_microwave_C_LookAt) == 0x000218, "Wrong size on Prop_microwave_C_LookAt");
static_assert(offsetof(Prop_microwave_C_LookAt, Player) == 0x000000, "Member 'Prop_microwave_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_microwave_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, Return) == 0x000090, "Member 'Prop_microwave_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, Text) == 0x000098, "Member 'Prop_microwave_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_microwave_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, Number) == 0x0000B0, "Member 'Prop_microwave_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B8, "Member 'Prop_microwave_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000E0, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000F8, "Member 'Prop_microwave_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000110, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000120, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000130, "Member 'Prop_microwave_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000148, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000158, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x000170, "Member 'Prop_microwave_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000180, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_SelectString_ReturnValue_1) == 0x000190, "Member 'Prop_microwave_C_LookAt::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0001A0, "Member 'Prop_microwave_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_5) == 0x0001B8, "Member 'Prop_microwave_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_SelectString_ReturnValue_2) == 0x0001C8, "Member 'Prop_microwave_C_LookAt::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_SelectString_ReturnValue_3) == 0x0001D8, "Member 'Prop_microwave_C_LookAt::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Concat_StrStr_ReturnValue) == 0x0001E8, "Member 'Prop_microwave_C_LookAt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001F8, "Member 'Prop_microwave_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000208, "Member 'Prop_microwave_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.loadData
// 0x0190 (0x0190 - 0x0000)
struct Prop_microwave_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mVector                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_microwave_C_LoadData) == 0x000010, "Wrong alignment on Prop_microwave_C_LoadData");
static_assert(sizeof(Prop_microwave_C_LoadData) == 0x000190, "Wrong size on Prop_microwave_C_LoadData");
static_assert(offsetof(Prop_microwave_C_LoadData, Data) == 0x000000, "Member 'Prop_microwave_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, Return) == 0x0000C0, "Member 'Prop_microwave_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_microwave_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_microwave_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D8, "Member 'Prop_microwave_C_LoadData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000DC, "Member 'Prop_microwave_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000E8, "Member 'Prop_microwave_C_LoadData::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000F4, "Member 'Prop_microwave_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_LoadData, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000100, "Member 'Prop_microwave_C_LoadData::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.getData
// 0x02D0 (0x02D0 - 0x0000)
struct Prop_microwave_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_mVector                        K2Node_MakeStruct_struct_mVector;                  // 0x01F0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mVector>                K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0210(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_microwave_C_GetData) == 0x000010, "Wrong alignment on Prop_microwave_C_GetData");
static_assert(sizeof(Prop_microwave_C_GetData) == 0x0002D0, "Wrong size on Prop_microwave_C_GetData");
static_assert(offsetof(Prop_microwave_C_GetData, Data) == 0x000000, "Member 'Prop_microwave_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_microwave_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000180, "Member 'Prop_microwave_C_GetData::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_BreakTransform_Location) == 0x0001B0, "Member 'Prop_microwave_C_GetData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_BreakTransform_Rotation) == 0x0001BC, "Member 'Prop_microwave_C_GetData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_BreakTransform_Scale) == 0x0001C8, "Member 'Prop_microwave_C_GetData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001D4, "Member 'Prop_microwave_C_GetData::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, K2Node_MakeArray_Array) == 0x0001E0, "Member 'Prop_microwave_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, K2Node_MakeStruct_struct_mVector) == 0x0001F0, "Member 'Prop_microwave_C_GetData::K2Node_MakeStruct_struct_mVector' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, K2Node_MakeArray_Array_1) == 0x000200, "Member 'Prop_microwave_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000210, "Member 'Prop_microwave_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.ignoreSave
// 0x0001 (0x0001 - 0x0000)
struct Prop_microwave_C_IgnoreSave final
{
public:
	bool                                          Param_IgnoreSave;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_microwave_C_IgnoreSave) == 0x000001, "Wrong alignment on Prop_microwave_C_IgnoreSave");
static_assert(sizeof(Prop_microwave_C_IgnoreSave) == 0x000001, "Wrong size on Prop_microwave_C_IgnoreSave");
static_assert(offsetof(Prop_microwave_C_IgnoreSave, Param_IgnoreSave) == 0x000000, "Member 'Prop_microwave_C_IgnoreSave::Param_IgnoreSave' has a wrong offset!");

// Function prop_microwave.prop_microwave_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_microwave_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_microwave_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_microwave_C_GetActionOptions");
static_assert(sizeof(Prop_microwave_C_GetActionOptions) == 0x000060, "Wrong size on Prop_microwave_C_GetActionOptions");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_microwave_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_microwave_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_microwave_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_microwave_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_microwave_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_microwave_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_microwave_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_microwave_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_microwave_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

