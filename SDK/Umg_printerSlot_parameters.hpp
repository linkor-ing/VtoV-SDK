#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_printerSlot

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function umg_printerSlot.umg_printerSlot_C.ExecuteUbergraph_umg_printerSlot
// 0x0020 (0x0020 - 0x0000)
struct Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2640[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
};
static_assert(alignof(Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot) == 0x000008, "Wrong alignment on Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot");
static_assert(sizeof(Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot) == 0x000020, "Wrong size on Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot");
static_assert(offsetof(Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot, EntryPoint) == 0x000000, "Member 'Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'Umg_printerSlot_C_ExecuteUbergraph_umg_printerSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function umg_printerSlot.umg_printerSlot_C.upd
// 0x0005 (0x0005 - 0x0000)
struct Umg_printerSlot_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printerSlot_C_Upd) == 0x000001, "Wrong alignment on Umg_printerSlot_C_Upd");
static_assert(sizeof(Umg_printerSlot_C_Upd) == 0x000005, "Wrong size on Umg_printerSlot_C_Upd");
static_assert(offsetof(Umg_printerSlot_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Umg_printerSlot_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printerSlot_C_Upd, Temp_byte_Variable) == 0x000001, "Member 'Umg_printerSlot_C_Upd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printerSlot_C_Upd, Temp_byte_Variable_1) == 0x000002, "Member 'Umg_printerSlot_C_Upd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_printerSlot_C_Upd, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000003, "Member 'Umg_printerSlot_C_Upd::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printerSlot_C_Upd, K2Node_Select_Default) == 0x000004, "Member 'Umg_printerSlot_C_Upd::K2Node_Select_Default' has a wrong offset!");

}

