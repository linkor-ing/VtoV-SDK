#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_printer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_multisectionCustomMesh_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Struct_customMesh_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function umg_printer.umg_printer_C.ExecuteUbergraph_umg_printer
// 0x00D8 (0x00D8 - 0x0000)
struct Umg_printer_C_ExecuteUbergraph_umg_printer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0010(0x0008)(NoDestructor)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_3;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_3;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_2;         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_2;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                CallFunc_nameToFilter_Filter;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                CallFunc_nameToFilter_Filter_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_1;         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                CallFunc_nameToFilter_Filter_2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_nameToMaterial_mat;                       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant_;                      // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAssetFolder_path;                      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_ExecuteUbergraph_umg_printer) == 0x000008, "Wrong alignment on Umg_printer_C_ExecuteUbergraph_umg_printer");
static_assert(sizeof(Umg_printer_C_ExecuteUbergraph_umg_printer) == 0x0000D8, "Wrong size on Umg_printer_C_ExecuteUbergraph_umg_printer");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, EntryPoint) == 0x000000, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_getMainPlayer_AsMain_Player) == 0x000008, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_Event_InFocusEvent) == 0x000010, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_setActiveInterface_return) == 0x000018, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_setActiveInterface_return' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectedItem_3) == 0x000020, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectedItem_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectionType_3) == 0x000030, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectionType_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectedItem_2) == 0x000038, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectedItem_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectionType_2) == 0x000048, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectionType_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_nameToFilter_Filter) == 0x000049, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_nameToFilter_Filter' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_nameToFilter_Filter_1) == 0x00004A, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_nameToFilter_Filter_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectedItem_1) == 0x000050, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectionType_1) == 0x000060, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectedItem) == 0x000068, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, K2Node_ComponentBoundEvent_SelectionType) == 0x000078, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_nameToFilter_Filter_2) == 0x000079, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_nameToFilter_Filter_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_nameToMaterial_mat) == 0x00007A, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_nameToMaterial_mat' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_isBuoyant__buoyant_) == 0x00007B, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_isBuoyant__buoyant_' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000080, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_GetAssetFolder_path) == 0x000088, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_GetAssetFolder_path' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_ExecuteUbergraph_umg_printer, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'Umg_printer_C_ExecuteUbergraph_umg_printer::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function umg_printer.umg_printer_C.BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_physmat_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function umg_printer.umg_printer_C.BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterTex_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function umg_printer.umg_printer_C.BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterPbr_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function umg_printer.umg_printer_C.BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Umg_printer_C_BndEvt__umg_printer_combobox_filterNorm_K2Node_ComponentBoundEvent_2_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function umg_printer.umg_printer_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_printer_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_printer_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_printer_C_OnFocusLost");
static_assert(sizeof(Umg_printer_C_OnFocusLost) == 0x000008, "Wrong size on Umg_printer_C_OnFocusLost");
static_assert(offsetof(Umg_printer_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_printer_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_printer.umg_printer_C.gen
// 0x0078 (0x0078 - 0x0000)
struct Umg_printer_C_Gen final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_printerSlot_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_printerSlot_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAssetFolder_path;                      // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_printer_C_Gen) == 0x000008, "Wrong alignment on Umg_printer_C_Gen");
static_assert(sizeof(Umg_printer_C_Gen) == 0x000078, "Wrong size on Umg_printer_C_Gen");
static_assert(offsetof(Umg_printer_C_Gen, Temp_int_Variable) == 0x000000, "Member 'Umg_printer_C_Gen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Umg_printer_C_Gen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Umg_printer_C_Gen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Umg_printer_C_Gen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Umg_printer_C_Gen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'Umg_printer_C_Gen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Array_Get_Item) == 0x000020, "Member 'Umg_printer_C_Gen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'Umg_printer_C_Gen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'Umg_printer_C_Gen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Umg_printer_C_Gen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'Umg_printer_C_Gen::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_GetAssetFolder_path) == 0x000040, "Member 'Umg_printer_C_Gen::CallFunc_GetAssetFolder_path' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000050, "Member 'Umg_printer_C_Gen::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'Umg_printer_C_Gen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Umg_printer_C_Gen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Gen, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'Umg_printer_C_Gen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function umg_printer.umg_printer_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct Umg_printer_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0140(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_printer_C_OnKeyDown) == 0x000008, "Wrong alignment on Umg_printer_C_OnKeyDown");
static_assert(sizeof(Umg_printer_C_OnKeyDown) == 0x000200, "Wrong size on Umg_printer_C_OnKeyDown");
static_assert(offsetof(Umg_printer_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'Umg_printer_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'Umg_printer_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'Umg_printer_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'Umg_printer_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000140, "Member 'Umg_printer_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'Umg_printer_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function umg_printer.umg_printer_C.Info
// 0x00D8 (0x00D8 - 0x0000)
struct Umg_printer_C_Info final
{
public:
	TArray<struct FVector>                        TotalVerts;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	struct FStruct_customMesh                     CallFunc_Array_Get_Item;                           // 0x0048(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00A0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00C0(0x0018)()
};
static_assert(alignof(Umg_printer_C_Info) == 0x000008, "Wrong alignment on Umg_printer_C_Info");
static_assert(sizeof(Umg_printer_C_Info) == 0x0000D8, "Wrong size on Umg_printer_C_Info");
static_assert(offsetof(Umg_printer_C_Info, TotalVerts) == 0x000000, "Member 'Umg_printer_C_Info::TotalVerts' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Umg_printer_C_Info::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'Umg_printer_C_Info::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'Umg_printer_C_Info::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Array_Get_Item) == 0x000048, "Member 'Umg_printer_C_Info::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'Umg_printer_C_Info::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000A0, "Member 'Umg_printer_C_Info::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'Umg_printer_C_Info::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_Info, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000C0, "Member 'Umg_printer_C_Info::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");

// Function umg_printer.umg_printer_C.nameToFilter
// 0x0060 (0x0060 - 0x0000)
struct Umg_printer_C_NameToFilter final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ETextureFilter                                Filter;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETextureFilter>                        B;                                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         A;                                                 // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<ETextureFilter>                        K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                CallFunc_Array_Get_Item;                           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_NameToFilter) == 0x000008, "Wrong alignment on Umg_printer_C_NameToFilter");
static_assert(sizeof(Umg_printer_C_NameToFilter) == 0x000060, "Wrong size on Umg_printer_C_NameToFilter");
static_assert(offsetof(Umg_printer_C_NameToFilter, Param_Name) == 0x000000, "Member 'Umg_printer_C_NameToFilter::Param_Name' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, Filter) == 0x000010, "Member 'Umg_printer_C_NameToFilter::Filter' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, B) == 0x000018, "Member 'Umg_printer_C_NameToFilter::B' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, A) == 0x000028, "Member 'Umg_printer_C_NameToFilter::A' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, K2Node_MakeArray_Array) == 0x000038, "Member 'Umg_printer_C_NameToFilter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, K2Node_MakeArray_Array_1) == 0x000048, "Member 'Umg_printer_C_NameToFilter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, CallFunc_Array_Find_ReturnValue) == 0x000058, "Member 'Umg_printer_C_NameToFilter::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToFilter, CallFunc_Array_Get_Item) == 0x00005C, "Member 'Umg_printer_C_NameToFilter::CallFunc_Array_Get_Item' has a wrong offset!");

// Function umg_printer.umg_printer_C.nameToMaterial
// 0x0060 (0x0060 - 0x0000)
struct Umg_printer_C_NameToMaterial final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Mat;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ETextureFilter>                        B;                                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         A;                                                 // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<ETextureFilter>                        K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_NameToMaterial) == 0x000008, "Wrong alignment on Umg_printer_C_NameToMaterial");
static_assert(sizeof(Umg_printer_C_NameToMaterial) == 0x000060, "Wrong size on Umg_printer_C_NameToMaterial");
static_assert(offsetof(Umg_printer_C_NameToMaterial, Param_Name) == 0x000000, "Member 'Umg_printer_C_NameToMaterial::Param_Name' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, Mat) == 0x000010, "Member 'Umg_printer_C_NameToMaterial::Mat' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, B) == 0x000018, "Member 'Umg_printer_C_NameToMaterial::B' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, A) == 0x000028, "Member 'Umg_printer_C_NameToMaterial::A' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, K2Node_MakeArray_Array) == 0x000038, "Member 'Umg_printer_C_NameToMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, K2Node_MakeArray_Array_1) == 0x000048, "Member 'Umg_printer_C_NameToMaterial::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, CallFunc_Array_Find_ReturnValue) == 0x000058, "Member 'Umg_printer_C_NameToMaterial::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_NameToMaterial, CallFunc_Conv_IntToByte_ReturnValue) == 0x00005C, "Member 'Umg_printer_C_NameToMaterial::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function umg_printer.umg_printer_C.prepareCfg
// 0x01E0 (0x01E0 - 0x0000)
struct Umg_printer_C_PrepareCfg final
{
public:
	class FString                                 Cfg;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Lines;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0040(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0060(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x00E0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_7;                            // 0x0108(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_PrepareCfg) == 0x000008, "Wrong alignment on Umg_printer_C_PrepareCfg");
static_assert(sizeof(Umg_printer_C_PrepareCfg) == 0x0001E0, "Wrong size on Umg_printer_C_PrepareCfg");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Cfg) == 0x000000, "Member 'Umg_printer_C_PrepareCfg::Cfg' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Lines) == 0x000010, "Member 'Umg_printer_C_PrepareCfg::Lines' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable) == 0x000020, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_1) == 0x000030, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_2) == 0x000040, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_3) == 0x000050, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_4) == 0x000060, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'Umg_printer_C_PrepareCfg::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'Umg_printer_C_PrepareCfg::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_1) == 0x0000C0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_2) == 0x0000C4, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_3) == 0x0000C8, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_4) == 0x0000CC, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_JoinStringArray_ReturnValue) == 0x0000D0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_5) == 0x0000E0, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_6) == 0x0000F0, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_5) == 0x000100, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, Temp_string_Variable_7) == 0x000108, "Member 'Umg_printer_C_PrepareCfg::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_6) == 0x000118, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_7) == 0x00011C, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Get_Item) == 0x000128, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000150, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000160, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_8) == 0x000170, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000178, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000188, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_9) == 0x000198, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001A0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001B0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_10) == 0x0001C0, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001C8, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_PrepareCfg, CallFunc_Array_Add_ReturnValue_11) == 0x0001D8, "Member 'Umg_printer_C_PrepareCfg::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");

// Function umg_printer.umg_printer_C.gatherConfig
// 0x02E8 (0x02E8 - 0x0000)
struct Umg_printer_C_GatherConfig final
{
public:
	struct FStruct_multisectionCustomMesh         Struct_multisectionCustomMesh;                     // 0x0000(0x0118)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         Types;                                             // 0x0118(0x0010)(Edit, BlueprintVisible)
	int32                                         Textype;                                           // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Temp_byte_Variable;                                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Temp_byte_Variable_1;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAssetFolder_path;                      // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_LoadStringArrayFromFile_StringArray;      // 0x01A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_LoadStringArrayFromFile_ArraySize;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadStringArrayFromFile_ReturnValue;      // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetKeyValue_Key;                          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetKeyValue_Value;                        // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_1;         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_StringToVector_OutConvertedVector;   // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_StringToVector_OutIsValid;           // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_StringToColor_OutConvertedColor;     // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_StringToColor_OutIsValid;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_2;         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetKeyValue_Key_1;                        // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetKeyValue_Value_1;                      // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ETextureFilter                                K2Node_Select_Default;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_1;                       // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_Select_Default_1;                           // 0x02C0(0x0010)(ReferenceParm)
	TArray<uint8>                                 K2Node_Select_Default_2;                           // 0x02D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_printer_C_GatherConfig) == 0x000008, "Wrong alignment on Umg_printer_C_GatherConfig");
static_assert(sizeof(Umg_printer_C_GatherConfig) == 0x0002E8, "Wrong size on Umg_printer_C_GatherConfig");
static_assert(offsetof(Umg_printer_C_GatherConfig, Struct_multisectionCustomMesh) == 0x000000, "Member 'Umg_printer_C_GatherConfig::Struct_multisectionCustomMesh' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Types) == 0x000118, "Member 'Umg_printer_C_GatherConfig::Types' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Textype) == 0x000128, "Member 'Umg_printer_C_GatherConfig::Textype' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_byte_Variable) == 0x00012C, "Member 'Umg_printer_C_GatherConfig::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_int_Variable) == 0x000130, "Member 'Umg_printer_C_GatherConfig::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, K2Node_MakeArray_Array) == 0x000138, "Member 'Umg_printer_C_GatherConfig::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_int_Array_Index_Variable) == 0x000148, "Member 'Umg_printer_C_GatherConfig::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'Umg_printer_C_GatherConfig::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'Umg_printer_C_GatherConfig::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_byte_Variable_1) == 0x000154, "Member 'Umg_printer_C_GatherConfig::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_int_Variable_1) == 0x000158, "Member 'Umg_printer_C_GatherConfig::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, Temp_int_Variable_2) == 0x00015C, "Member 'Umg_printer_C_GatherConfig::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_GetAssetFolder_path) == 0x000160, "Member 'Umg_printer_C_GatherConfig::CallFunc_GetAssetFolder_path' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Concat_StrStr_ReturnValue) == 0x000170, "Member 'Umg_printer_C_GatherConfig::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000180, "Member 'Umg_printer_C_GatherConfig::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'Umg_printer_C_GatherConfig::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_LoadStringArrayFromFile_StringArray) == 0x0001A0, "Member 'Umg_printer_C_GatherConfig::CallFunc_LoadStringArrayFromFile_StringArray' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_LoadStringArrayFromFile_ArraySize) == 0x0001B0, "Member 'Umg_printer_C_GatherConfig::CallFunc_LoadStringArrayFromFile_ArraySize' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_LoadStringArrayFromFile_ReturnValue) == 0x0001B4, "Member 'Umg_printer_C_GatherConfig::CallFunc_LoadStringArrayFromFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Array_Length_ReturnValue) == 0x0001B8, "Member 'Umg_printer_C_GatherConfig::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'Umg_printer_C_GatherConfig::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Less_IntInt_ReturnValue) == 0x0001D0, "Member 'Umg_printer_C_GatherConfig::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_GetKeyValue_Key) == 0x0001D8, "Member 'Umg_printer_C_GatherConfig::CallFunc_GetKeyValue_Key' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_GetKeyValue_Value) == 0x0001E8, "Member 'Umg_printer_C_GatherConfig::CallFunc_GetKeyValue_Value' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToInt_ReturnValue) == 0x0001F8, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToFloat_ReturnValue) == 0x0001FC, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_IntToBool_ReturnValue) == 0x000200, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToFloat_ReturnValue_1) == 0x000204, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000208, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_IntToByte_ReturnValue) == 0x00020C, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToVector_OutConvertedVector) == 0x000210, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToVector_OutConvertedVector' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToVector_OutIsValid) == 0x00021C, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToVector_OutIsValid' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToColor_OutConvertedColor) == 0x000220, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToColor_OutConvertedColor' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToColor_OutIsValid) == 0x000230, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToColor_OutIsValid' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000234, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x000238, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToFloat_ReturnValue_2) == 0x00023C, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, K2Node_SwitchString_CmpSuccess) == 0x000240, "Member 'Umg_printer_C_GatherConfig::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_RightChop_ReturnValue) == 0x000248, "Member 'Umg_printer_C_GatherConfig::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Left_ReturnValue) == 0x000258, "Member 'Umg_printer_C_GatherConfig::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_GetKeyValue_Key_1) == 0x000268, "Member 'Umg_printer_C_GatherConfig::CallFunc_GetKeyValue_Key_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_GetKeyValue_Value_1) == 0x000278, "Member 'Umg_printer_C_GatherConfig::CallFunc_GetKeyValue_Value_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000288, "Member 'Umg_printer_C_GatherConfig::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x00028C, "Member 'Umg_printer_C_GatherConfig::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000290, "Member 'Umg_printer_C_GatherConfig::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, K2Node_Select_Default) == 0x0002A0, "Member 'Umg_printer_C_GatherConfig::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_FindSubstring_ReturnValue) == 0x0002A4, "Member 'Umg_printer_C_GatherConfig::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Left_ReturnValue_1) == 0x0002A8, "Member 'Umg_printer_C_GatherConfig::CallFunc_Left_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Array_Find_ReturnValue) == 0x0002B8, "Member 'Umg_printer_C_GatherConfig::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, K2Node_Select_Default_1) == 0x0002C0, "Member 'Umg_printer_C_GatherConfig::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, K2Node_Select_Default_2) == 0x0002D0, "Member 'Umg_printer_C_GatherConfig::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_GatherConfig, CallFunc_Array_Find_ReturnValue_1) == 0x0002E0, "Member 'Umg_printer_C_GatherConfig::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");

// Function umg_printer.umg_printer_C.createConfig
// 0x0060 (0x0060 - 0x0000)
struct Umg_printer_C_CreateConfig final
{
public:
	bool                                          SkipCheck;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAssetFolder_path;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_prepareCfg_cfg;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FileExists_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveStringToFile_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_printer_C_CreateConfig) == 0x000008, "Wrong alignment on Umg_printer_C_CreateConfig");
static_assert(sizeof(Umg_printer_C_CreateConfig) == 0x000060, "Wrong size on Umg_printer_C_CreateConfig");
static_assert(offsetof(Umg_printer_C_CreateConfig, SkipCheck) == 0x000000, "Member 'Umg_printer_C_CreateConfig::SkipCheck' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_GetAssetFolder_path) == 0x000008, "Member 'Umg_printer_C_CreateConfig::CallFunc_GetAssetFolder_path' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_prepareCfg_cfg) == 0x000018, "Member 'Umg_printer_C_CreateConfig::CallFunc_prepareCfg_cfg' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'Umg_printer_C_CreateConfig::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'Umg_printer_C_CreateConfig::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'Umg_printer_C_CreateConfig::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_FileExists_ReturnValue) == 0x000058, "Member 'Umg_printer_C_CreateConfig::CallFunc_FileExists_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_printer_C_CreateConfig, CallFunc_SaveStringToFile_ReturnValue) == 0x000059, "Member 'Umg_printer_C_CreateConfig::CallFunc_SaveStringToFile_ReturnValue' has a wrong offset!");

}

