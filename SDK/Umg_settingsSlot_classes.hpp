#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_settingsSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_settingsSlot.umg_settingsSlot_C
// 0x0078 (0x02D8 - 0x0260)
class UUmg_settingsSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              CheckBox_vres;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_v_flo;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_v_res;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_v_res;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Textv;                                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_55;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Index_Umg_settingsSlot_C;                          // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Var;                                               // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min;                                               // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USave_main_C*                           Save;                                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_Umg_settingsSlot_C;                           // 0x02B0(0x0018)(Edit, BlueprintVisible)
	class UUmg_settings_C*                        Parent;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VarType;                                           // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_umg_settingsSlot(int32 EntryPoint);
	void BndEvt__slider_v_flo_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__CheckBox_vres_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void Construct();
	void BndEvt__slider_v_res_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void Upd();
	void Set();
	void begin(class UUmg_settings_C* Param_Parent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_settingsSlot_C">();
	}
	static class UUmg_settingsSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_settingsSlot_C>();
	}
};
static_assert(alignof(UUmg_settingsSlot_C) == 0x000008, "Wrong alignment on UUmg_settingsSlot_C");
static_assert(sizeof(UUmg_settingsSlot_C) == 0x0002D8, "Wrong size on UUmg_settingsSlot_C");
static_assert(offsetof(UUmg_settingsSlot_C, UberGraphFrame) == 0x000260, "Member 'UUmg_settingsSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, CheckBox_vres) == 0x000268, "Member 'UUmg_settingsSlot_C::CheckBox_vres' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Slider_v_flo) == 0x000270, "Member 'UUmg_settingsSlot_C::Slider_v_flo' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Slider_v_res) == 0x000278, "Member 'UUmg_settingsSlot_C::Slider_v_res' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Text_v_res) == 0x000280, "Member 'UUmg_settingsSlot_C::Text_v_res' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Textv) == 0x000288, "Member 'UUmg_settingsSlot_C::Textv' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, WidgetSwitcher_55) == 0x000290, "Member 'UUmg_settingsSlot_C::WidgetSwitcher_55' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Index_Umg_settingsSlot_C) == 0x000298, "Member 'UUmg_settingsSlot_C::Index_Umg_settingsSlot_C' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Var) == 0x00029C, "Member 'UUmg_settingsSlot_C::Var' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Min) == 0x0002A0, "Member 'UUmg_settingsSlot_C::Min' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Max) == 0x0002A4, "Member 'UUmg_settingsSlot_C::Max' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Save) == 0x0002A8, "Member 'UUmg_settingsSlot_C::Save' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Name_Umg_settingsSlot_C) == 0x0002B0, "Member 'UUmg_settingsSlot_C::Name_Umg_settingsSlot_C' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, Parent) == 0x0002C8, "Member 'UUmg_settingsSlot_C::Parent' has a wrong offset!");
static_assert(offsetof(UUmg_settingsSlot_C, VarType) == 0x0002D0, "Member 'UUmg_settingsSlot_C::VarType' has a wrong offset!");

}

