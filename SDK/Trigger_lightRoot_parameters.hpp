#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trigger_lightRoot

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"


namespace SDK::Params
{

// Function trigger_lightRoot.trigger_lightRoot_C.ExecuteUbergraph_trigger_lightRoot
// 0x00A0 (0x00A0 - 0x0000)
struct Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACeilingLamp_C*                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmbLigh_C*                             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACeilingLamp_C*                         CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAmbLigh_C*                             CallFunc_Array_Get_Item_3;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot) == 0x000008, "Wrong alignment on Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot");
static_assert(sizeof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot) == 0x0000A0, "Wrong size on Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, EntryPoint) == 0x000000, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_int_Variable) == 0x000004, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_int_Variable_1) == 0x000008, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_int_Variable_2) == 0x000014, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_int_Variable_3) == 0x000018, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Add_IntInt_ReturnValue_3) == 0x000020, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_bool_Has_Been_Initd_Variable) == 0x000024, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_int_Variable_4) == 0x000028, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Add_IntInt_ReturnValue_4) == 0x00002C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, K2Node_Event_owner) == 0x000038, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, K2Node_Event_index) == 0x000040, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Get_Item) == 0x000048, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Less_IntInt_ReturnValue_2) == 0x000074, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000078, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Get_Item_3) == 0x000080, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000088, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Less_IntInt_ReturnValue_3) == 0x00008C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008D, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Array_Length_ReturnValue_3) == 0x000090, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_RandomFloatInRange_ReturnValue) == 0x000094, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_Less_IntInt_ReturnValue_4) == 0x000098, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00009C, "Member 'Trigger_lightRoot_C_ExecuteUbergraph_trigger_lightRoot::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Trigger_lightRoot_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_RunTrigger) == 0x000008, "Wrong alignment on Trigger_lightRoot_C_RunTrigger");
static_assert(sizeof(Trigger_lightRoot_C_RunTrigger) == 0x000010, "Wrong size on Trigger_lightRoot_C_RunTrigger");
static_assert(offsetof(Trigger_lightRoot_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Trigger_lightRoot_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_RunTrigger, Param_Index) == 0x000008, "Member 'Trigger_lightRoot_C_RunTrigger::Param_Index' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.updLig
// 0x0030 (0x0030 - 0x0000)
struct Trigger_lightRoot_C_UpdLig final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmbLigh_C*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACeilingLamp_C*                         CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_lightRoot_C_UpdLig) == 0x000008, "Wrong alignment on Trigger_lightRoot_C_UpdLig");
static_assert(sizeof(Trigger_lightRoot_C_UpdLig) == 0x000030, "Wrong size on Trigger_lightRoot_C_UpdLig");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, Temp_int_Variable) == 0x000000, "Member 'Trigger_lightRoot_C_UpdLig::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, Temp_int_Variable_1) == 0x000004, "Member 'Trigger_lightRoot_C_UpdLig::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Array_Get_Item) == 0x000010, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UpdLig, CallFunc_Less_IntInt_ReturnValue_1) == 0x000029, "Member 'Trigger_lightRoot_C_UpdLig::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct Trigger_lightRoot_C_SetActive final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_lightRoot_C_SetActive) == 0x000001, "Wrong alignment on Trigger_lightRoot_C_SetActive");
static_assert(sizeof(Trigger_lightRoot_C_SetActive) == 0x000001, "Wrong size on Trigger_lightRoot_C_SetActive");
static_assert(offsetof(Trigger_lightRoot_C_SetActive, Param_Active) == 0x000000, "Member 'Trigger_lightRoot_C_SetActive::Param_Active' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.UserConstructionScript
// 0x0088 (0x0088 - 0x0000)
struct Trigger_lightRoot_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmbLigh_C*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        CallFunc_getKey_self_CastInput;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_getKey_key;                               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACeilingLamp_C*                         CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        CallFunc_getKey_self_CastInput_1;                  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_getKey_key_1;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_UserConstructionScript) == 0x000008, "Wrong alignment on Trigger_lightRoot_C_UserConstructionScript");
static_assert(sizeof(Trigger_lightRoot_C_UserConstructionScript) == 0x000088, "Wrong size on Trigger_lightRoot_C_UserConstructionScript");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'Trigger_lightRoot_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Trigger_lightRoot_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'Trigger_lightRoot_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_getKey_self_CastInput) == 0x000020, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_getKey_self_CastInput' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_getKey_key) == 0x000030, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_getKey_key' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'Trigger_lightRoot_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_getKey_self_CastInput_1) == 0x000060, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_getKey_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_getKey_key_1) == 0x000070, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_getKey_key_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'Trigger_lightRoot_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.loadTriggerData
// 0x0150 (0x0150 - 0x0000)
struct Trigger_lightRoot_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         I;                                                 // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadTriggerData_return;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_LoadTriggerData) == 0x000010, "Wrong alignment on Trigger_lightRoot_C_LoadTriggerData");
static_assert(sizeof(Trigger_lightRoot_C_LoadTriggerData) == 0x000150, "Wrong size on Trigger_lightRoot_C_LoadTriggerData");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, Data) == 0x000000, "Member 'Trigger_lightRoot_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Trigger_lightRoot_C_LoadTriggerData::Return' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, I) == 0x0000F4, "Member 'Trigger_lightRoot_C_LoadTriggerData::I' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'Trigger_lightRoot_C_LoadTriggerData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Get_Item) == 0x000100, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Get_Item_1) == 0x000114, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Get_Item_2) == 0x000118, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Get_Item_3) == 0x000119, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_loadTriggerData_return) == 0x00011A, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_loadTriggerData_return' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Conv_BoolToString_ReturnValue) == 0x000120, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Add_ReturnValue) == 0x000130, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Array_Add_ReturnValue_1) == 0x000134, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'Trigger_lightRoot_C_LoadTriggerData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Less_IntInt_ReturnValue) == 0x00013D, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_LoadTriggerData, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'Trigger_lightRoot_C_LoadTriggerData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.getTriggerData
// 0x0320 (0x0320 - 0x0000)
struct Trigger_lightRoot_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         I;                                                 // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         A;                                                 // 0x00F8(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_triggerSave                    CallFunc_getTriggerData_data;                      // 0x0140(0x00F0)(HasGetValueTypeHash)
	struct FStruct_triggerSave                    K2Node_SetFieldsInStruct_StructOut;                // 0x0230(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_GetTriggerData) == 0x000010, "Wrong alignment on Trigger_lightRoot_C_GetTriggerData");
static_assert(sizeof(Trigger_lightRoot_C_GetTriggerData) == 0x000320, "Wrong size on Trigger_lightRoot_C_GetTriggerData");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, Data) == 0x000000, "Member 'Trigger_lightRoot_C_GetTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, I) == 0x0000F0, "Member 'Trigger_lightRoot_C_GetTriggerData::I' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, A) == 0x0000F8, "Member 'Trigger_lightRoot_C_GetTriggerData::A' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, CallFunc_Conv_BoolToString_ReturnValue) == 0x000108, "Member 'Trigger_lightRoot_C_GetTriggerData::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, K2Node_MakeArray_Array) == 0x000118, "Member 'Trigger_lightRoot_C_GetTriggerData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, K2Node_MakeArray_Array_1) == 0x000128, "Member 'Trigger_lightRoot_C_GetTriggerData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, CallFunc_Array_LastIndex_ReturnValue) == 0x000138, "Member 'Trigger_lightRoot_C_GetTriggerData::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, CallFunc_getTriggerData_data) == 0x000140, "Member 'Trigger_lightRoot_C_GetTriggerData::CallFunc_getTriggerData_data' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_GetTriggerData, K2Node_SetFieldsInStruct_StructOut) == 0x000230, "Member 'Trigger_lightRoot_C_GetTriggerData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function trigger_lightRoot.trigger_lightRoot_C.processKeys
// 0x0090 (0x0090 - 0x0000)
struct Trigger_lightRoot_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_processKeys_return;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_getObjectFromKey_Output;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAmbLigh_C*                             K2Node_DynamicCast_AsAmb_Ligh;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_getObjectFromKey_Output_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACeilingLamp_C*                         K2Node_DynamicCast_AsCeiling_Lamp;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_lightRoot_C_ProcessKeys) == 0x000008, "Wrong alignment on Trigger_lightRoot_C_ProcessKeys");
static_assert(sizeof(Trigger_lightRoot_C_ProcessKeys) == 0x000090, "Wrong size on Trigger_lightRoot_C_ProcessKeys");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, Return) == 0x000000, "Member 'Trigger_lightRoot_C_ProcessKeys::Return' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Trigger_lightRoot_C_ProcessKeys::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Trigger_lightRoot_C_ProcessKeys::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'Trigger_lightRoot_C_ProcessKeys::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_processKeys_return) == 0x000020, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_processKeys_return' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'Trigger_lightRoot_C_ProcessKeys::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Get_Item) == 0x000030, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_getObjectFromKey_Output) == 0x000050, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_getObjectFromKey_Output' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, K2Node_DynamicCast_AsAmb_Ligh) == 0x000058, "Member 'Trigger_lightRoot_C_ProcessKeys::K2Node_DynamicCast_AsAmb_Ligh' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Trigger_lightRoot_C_ProcessKeys::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000070, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_getObjectFromKey_Output_1) == 0x000078, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_getObjectFromKey_Output_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, K2Node_DynamicCast_AsCeiling_Lamp) == 0x000080, "Member 'Trigger_lightRoot_C_ProcessKeys::K2Node_DynamicCast_AsCeiling_Lamp' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'Trigger_lightRoot_C_ProcessKeys::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Trigger_lightRoot_C_ProcessKeys, CallFunc_Array_Add_ReturnValue_1) == 0x00008C, "Member 'Trigger_lightRoot_C_ProcessKeys::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}

