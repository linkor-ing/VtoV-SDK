#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FileSDK

#include "Basic.hpp"

#include "FileSDK_classes.hpp"
#include "FileSDK_parameters.hpp"


namespace SDK
{

// Function FileSDK.FileSDKBPLibrary.CopyDirectory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>ProgressCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    OverwriteDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChunkSizeInKilobytes                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::CopyDirectory(const class FString& Source, const class FString& Destination, const TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>& ProgressCallback, bool OverwriteDestination, int32 ChunkSizeInKilobytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CopyDirectory");

	Params::FileSDKBPLibrary_CopyDirectory Parms{};

	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);
	Parms.ProgressCallback = ProgressCallback;
	Parms.OverwriteDestination = OverwriteDestination;
	Parms.ChunkSizeInKilobytes = ChunkSizeInKilobytes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.CopyDirectoryAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>ProgressCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    OverwriteDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChunkSizeInKilobytes                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFileSDKBPLibrary::CopyDirectoryAsync(const class FString& Source, const class FString& Destination, const TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>& ProgressCallback, bool OverwriteDestination, int32 ChunkSizeInKilobytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CopyDirectoryAsync");

	Params::FileSDKBPLibrary_CopyDirectoryAsync Parms{};

	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);
	Parms.ProgressCallback = ProgressCallback;
	Parms.OverwriteDestination = OverwriteDestination;
	Parms.ChunkSizeInKilobytes = ChunkSizeInKilobytes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FileSDK.FileSDKBPLibrary.CopyFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>ProgressCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFileSDKDelegatePreInfo          PreInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ChunkSizeInKilobytes                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OverwriteDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::CopyFile(const class FString& Source, const class FString& Destination, const TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>& ProgressCallback, const struct FFileSDKDelegatePreInfo& PreInfo, int32 ChunkSizeInKilobytes, bool OverwriteDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CopyFile");

	Params::FileSDKBPLibrary_CopyFile Parms{};

	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);
	Parms.ProgressCallback = ProgressCallback;
	Parms.PreInfo = std::move(PreInfo);
	Parms.ChunkSizeInKilobytes = ChunkSizeInKilobytes;
	Parms.OverwriteDestination = OverwriteDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.CopyFileAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>ProgressCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFileSDKDelegatePreInfo          PreInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ChunkSizeInKilobytes                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFileSDKBPLibrary::CopyFileAsync(const class FString& Source, const class FString& Destination, const TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>& ProgressCallback, const struct FFileSDKDelegatePreInfo& PreInfo, int32 ChunkSizeInKilobytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CopyFileAsync");

	Params::FileSDKBPLibrary_CopyFileAsync Parms{};

	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);
	Parms.ProgressCallback = ProgressCallback;
	Parms.PreInfo = std::move(PreInfo);
	Parms.ChunkSizeInKilobytes = ChunkSizeInKilobytes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FileSDK.FileSDKBPLibrary.CreateDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DirectoryName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CreateDirectoryTree                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::CreateDirectory(const class FString& DirectoryName, bool CreateDirectoryTree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CreateDirectory");

	Params::FileSDKBPLibrary_CreateDirectory Parms{};

	Parms.DirectoryName = std::move(DirectoryName);
	Parms.CreateDirectoryTree = CreateDirectoryTree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.CreateFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ClearContentsIfExists                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CreateDirectoryTree                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFileSDKBPLibrary::CreateFile(const class FString& Filename, bool ClearContentsIfExists, bool CreateDirectoryTree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "CreateFile");

	Params::FileSDKBPLibrary_CreateFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.ClearContentsIfExists = ClearContentsIfExists;
	Parms.CreateDirectoryTree = CreateDirectoryTree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FileSDK.FileSDKBPLibrary.DeleteDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DirectoryName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Recursive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::DeleteDirectory(const class FString& DirectoryName, bool Recursive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "DeleteDirectory");

	Params::FileSDKBPLibrary_DeleteDirectory Parms{};

	Parms.DirectoryName = std::move(DirectoryName);
	Parms.Recursive = Recursive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.DeleteFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::DeleteFile(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "DeleteFile");

	Params::FileSDKBPLibrary_DeleteFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.GetCurrentUserHomeDirectory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFileSDKBPLibrary::GetCurrentUserHomeDirectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetCurrentUserHomeDirectory");

	Params::FileSDKBPLibrary_GetCurrentUserHomeDirectory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.GetCurrentUsername
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFileSDKBPLibrary::GetCurrentUsername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetCurrentUsername");

	Params::FileSDKBPLibrary_GetCurrentUsername Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.GetDirectoryContentsWithFileInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Directory                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SearchSubfolders                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFileSDKFileInfo>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFileSDKFileInfo> UFileSDKBPLibrary::GetDirectoryContentsWithFileInfo(const class FString& Directory, bool SearchSubfolders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetDirectoryContentsWithFileInfo");

	Params::FileSDKBPLibrary_GetDirectoryContentsWithFileInfo Parms{};

	Parms.Directory = std::move(Directory);
	Parms.SearchSubfolders = SearchSubfolders;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.GetEnvironmentVariable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFileSDKBPLibrary::GetEnvironmentVariable(const class FString& VariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetEnvironmentVariable");

	Params::FileSDKBPLibrary_GetEnvironmentVariable Parms{};

	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.GetFileOrDirectoryInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFileSDKFileInfo                 Info                                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void UFileSDKBPLibrary::GetFileOrDirectoryInfo(const class FString& Path, struct FFileSDKFileInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetFileOrDirectoryInfo");

	Params::FileSDKBPLibrary_GetFileOrDirectoryInfo Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function FileSDK.FileSDKBPLibrary.GetFilesFromDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DirectoryToSearch                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FilterFilesWithExtension                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SearchSubfolders                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFileSDKFileType                        FileType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFileSDKBPLibrary::GetFilesFromDirectory(const class FString& DirectoryToSearch, const class FString& FilterFilesWithExtension, bool SearchSubfolders, EFileSDKFileType FileType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "GetFilesFromDirectory");

	Params::FileSDKBPLibrary_GetFilesFromDirectory Parms{};

	Parms.DirectoryToSearch = std::move(DirectoryToSearch);
	Parms.FilterFilesWithExtension = std::move(FilterFilesWithExtension);
	Parms.SearchSubfolders = SearchSubfolders;
	Parms.FileType = FileType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.OpenFileReader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OpenInBinaryMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFileSDKFileReader*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFileSDKFileReader* UFileSDKBPLibrary::OpenFileReader(const class FString& Filename, bool OpenInBinaryMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "OpenFileReader");

	Params::FileSDKBPLibrary_OpenFileReader Parms{};

	Parms.Filename = std::move(Filename);
	Parms.OpenInBinaryMode = OpenInBinaryMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.ReadBytesFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Content                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::ReadBytesFromFile(const class FString& Filename, TArray<uint8>* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "ReadBytesFromFile");

	Params::FileSDKBPLibrary_ReadBytesFromFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.ReadLinesFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFileSDKLineReader>   LineReader                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Lines                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::ReadLinesFromFile(const class FString& Filename, TSubclassOf<class UFileSDKLineReader> LineReader, TArray<class FString>* Lines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "ReadLinesFromFile");

	Params::FileSDKBPLibrary_ReadLinesFromFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.LineReader = LineReader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Lines != nullptr)
		*Lines = std::move(Parms.Lines);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.ReadStringFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Content                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::ReadStringFromFile(const class FString& Filename, class FString* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "ReadStringFromFile");

	Params::FileSDKBPLibrary_ReadStringFromFile Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.RenameFileOrDirectory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::RenameFileOrDirectory(const class FString& Source, const class FString& Destination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "RenameFileOrDirectory");

	Params::FileSDKBPLibrary_RenameFileOrDirectory Parms{};

	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.WriteBytesToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Content                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::WriteBytesToFile(const class FString& Filename, const TArray<uint8>& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "WriteBytesToFile");

	Params::FileSDKBPLibrary_WriteBytesToFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.Content = std::move(Content);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKBPLibrary.WriteStringToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Append                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFileSDKEncodingOptions                 Encoding                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKBPLibrary::WriteStringToFile(const class FString& Filename, const class FString& Content, bool Append, EFileSDKEncodingOptions Encoding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKBPLibrary", "WriteStringToFile");

	Params::FileSDKBPLibrary_WriteStringToFile Parms{};

	Parms.Filename = std::move(Filename);
	Parms.Content = std::move(Content);
	Parms.Append = Append;
	Parms.Encoding = Encoding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKCopyFileAsync.CopyFileAsync
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>ProgressCallback                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    OverwriteDestination                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChunkSizeInKilobytes                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFileSDKCopyFileAsync*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFileSDKCopyFileAsync* UFileSDKCopyFileAsync::CopyFileAsync(class UObject* WorldContextObject, const class FString& Source, const class FString& Destination, const TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)>& ProgressCallback, bool OverwriteDestination, int32 ChunkSizeInKilobytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FileSDKCopyFileAsync", "CopyFileAsync");

	Params::FileSDKCopyFileAsync_CopyFileAsync Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Source = std::move(Source);
	Parms.Destination = std::move(Destination);
	Parms.ProgressCallback = ProgressCallback;
	Parms.OverwriteDestination = OverwriteDestination;
	Parms.ChunkSizeInKilobytes = ChunkSizeInKilobytes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.Close
// (Final, Native, Public, BlueprintCallable)

void UFileSDKFileReader::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FileSDK.FileSDKFileReader.IsGood
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKFileReader::IsGood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "IsGood");

	Params::FileSDKFileReader_IsGood Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.ReadBytes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Content                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFileSDKFileReader::ReadBytes(int32 Num, TArray<uint8>* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "ReadBytes");

	Params::FileSDKFileReader_ReadBytes Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.ReadBytesToEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           Content                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFileSDKFileReader::ReadBytesToEnd(TArray<uint8>* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "ReadBytesToEnd");

	Params::FileSDKFileReader_ReadBytesToEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.ReadString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Content                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFileSDKFileReader::ReadString(int32 Num, class FString* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "ReadString");

	Params::FileSDKFileReader_ReadString Parms{};

	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.ReadStringToEnd
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Content                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFileSDKFileReader::ReadStringToEnd(class FString* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "ReadStringToEnd");

	Params::FileSDKFileReader_ReadStringToEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Content != nullptr)
		*Content = std::move(Parms.Content);

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKFileReader.SeekFilePosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFileSDKFileAnchor                      Anchor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKFileReader::SeekFilePosition(EFileSDKFileAnchor Anchor, int32 Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKFileReader", "SeekFilePosition");

	Params::FileSDKFileReader_SeekFilePosition Parms{};

	Parms.Anchor = Anchor;
	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FileSDK.FileSDKLineReader.FilterLine
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Line                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFileSDKLineReader::FilterLine(const class FString& Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FileSDKLineReader", "FilterLine");

	Params::FileSDKLineReader_FilterLine Parms{};

	Parms.Line = std::move(Line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

