#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeomOctaLazer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass geomOctaLazer.geomOctaLazer_C
// 0x0028 (0x0248 - 0x0220)
class AGeomOctaLazer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        OctBeamShoot;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_geomOctaLazer(int32 EntryPoint);
	void BndEvt__geomOctaLazer_octBeamShoot_K2Node_ComponentBoundEvent_1_OnAudioFinished__DelegateSignature();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"geomOctaLazer_C">();
	}
	static class AGeomOctaLazer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGeomOctaLazer_C>();
	}
};
static_assert(alignof(AGeomOctaLazer_C) == 0x000008, "Wrong alignment on AGeomOctaLazer_C");
static_assert(sizeof(AGeomOctaLazer_C) == 0x000248, "Wrong size on AGeomOctaLazer_C");
static_assert(offsetof(AGeomOctaLazer_C, UberGraphFrame) == 0x000220, "Member 'AGeomOctaLazer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGeomOctaLazer_C, OctBeamShoot) == 0x000228, "Member 'AGeomOctaLazer_C::OctBeamShoot' has a wrong offset!");
static_assert(offsetof(AGeomOctaLazer_C, Arrow) == 0x000230, "Member 'AGeomOctaLazer_C::Arrow' has a wrong offset!");
static_assert(offsetof(AGeomOctaLazer_C, ParticleSystem) == 0x000238, "Member 'AGeomOctaLazer_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AGeomOctaLazer_C, A) == 0x000240, "Member 'AGeomOctaLazer_C::A' has a wrong offset!");

}

