#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dream_climb

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DreamBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass dream_climb.dream_climb_C
// 0x0200 (0x0470 - 0x0270)
class ADream_climb_C final : public ADreamBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Dream_climb_C;                      // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Fill;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube50;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube49;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube48;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube47;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube46;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Door0;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube45;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube44;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube43;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube42;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube41;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube40;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube39;                                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube38;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube37;                                            // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube36;                                            // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube35;                                            // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube34;                                            // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube33;                                            // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube32;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube31;                                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube30;                                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube29;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube28;                                            // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube27;                                            // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube26;                                            // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube25;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube24;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube23;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube22;                                            // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube21;                                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube20;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube19;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube18;                                            // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube17;                                            // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube16;                                            // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube15;                                            // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube14;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube13;                                            // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube12;                                            // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube8;                                             // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube2;                                             // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube6;                                             // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube5;                                             // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube1;                                             // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube10;                                            // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube9;                                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube11;                                            // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Planks;                                            // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube7;                                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube4;                                             // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube3;                                             // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Pillars;                                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall4;                                             // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall3;                                             // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall2;                                             // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall1;                                             // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wall0;                                             // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Walls;                                             // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         A;                                                 // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_dream_climb(int32 EntryPoint);
	void BndEvt__dream_climb_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"dream_climb_C">();
	}
	static class ADream_climb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADream_climb_C>();
	}
};
static_assert(alignof(ADream_climb_C) == 0x000008, "Wrong alignment on ADream_climb_C");
static_assert(sizeof(ADream_climb_C) == 0x000470, "Wrong size on ADream_climb_C");
static_assert(offsetof(ADream_climb_C, UberGraphFrame_Dream_climb_C) == 0x000270, "Member 'ADream_climb_C::UberGraphFrame_Dream_climb_C' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Box) == 0x000278, "Member 'ADream_climb_C::Box' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Fill) == 0x000280, "Member 'ADream_climb_C::Fill' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube50) == 0x000288, "Member 'ADream_climb_C::Cube50' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube49) == 0x000290, "Member 'ADream_climb_C::Cube49' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube48) == 0x000298, "Member 'ADream_climb_C::Cube48' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube47) == 0x0002A0, "Member 'ADream_climb_C::Cube47' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube46) == 0x0002A8, "Member 'ADream_climb_C::Cube46' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Door0) == 0x0002B0, "Member 'ADream_climb_C::Door0' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube45) == 0x0002B8, "Member 'ADream_climb_C::Cube45' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube44) == 0x0002C0, "Member 'ADream_climb_C::Cube44' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube43) == 0x0002C8, "Member 'ADream_climb_C::Cube43' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube42) == 0x0002D0, "Member 'ADream_climb_C::Cube42' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube41) == 0x0002D8, "Member 'ADream_climb_C::Cube41' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube40) == 0x0002E0, "Member 'ADream_climb_C::Cube40' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube39) == 0x0002E8, "Member 'ADream_climb_C::Cube39' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube38) == 0x0002F0, "Member 'ADream_climb_C::Cube38' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube37) == 0x0002F8, "Member 'ADream_climb_C::Cube37' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube36) == 0x000300, "Member 'ADream_climb_C::Cube36' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube35) == 0x000308, "Member 'ADream_climb_C::Cube35' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube34) == 0x000310, "Member 'ADream_climb_C::Cube34' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube33) == 0x000318, "Member 'ADream_climb_C::Cube33' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube32) == 0x000320, "Member 'ADream_climb_C::Cube32' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube31) == 0x000328, "Member 'ADream_climb_C::Cube31' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube30) == 0x000330, "Member 'ADream_climb_C::Cube30' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube29) == 0x000338, "Member 'ADream_climb_C::Cube29' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube28) == 0x000340, "Member 'ADream_climb_C::Cube28' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube27) == 0x000348, "Member 'ADream_climb_C::Cube27' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube26) == 0x000350, "Member 'ADream_climb_C::Cube26' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube25) == 0x000358, "Member 'ADream_climb_C::Cube25' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube24) == 0x000360, "Member 'ADream_climb_C::Cube24' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube23) == 0x000368, "Member 'ADream_climb_C::Cube23' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube22) == 0x000370, "Member 'ADream_climb_C::Cube22' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube21) == 0x000378, "Member 'ADream_climb_C::Cube21' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube20) == 0x000380, "Member 'ADream_climb_C::Cube20' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube19) == 0x000388, "Member 'ADream_climb_C::Cube19' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube18) == 0x000390, "Member 'ADream_climb_C::Cube18' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube17) == 0x000398, "Member 'ADream_climb_C::Cube17' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube16) == 0x0003A0, "Member 'ADream_climb_C::Cube16' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube15) == 0x0003A8, "Member 'ADream_climb_C::Cube15' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube14) == 0x0003B0, "Member 'ADream_climb_C::Cube14' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube13) == 0x0003B8, "Member 'ADream_climb_C::Cube13' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube12) == 0x0003C0, "Member 'ADream_climb_C::Cube12' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube8) == 0x0003C8, "Member 'ADream_climb_C::Cube8' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube2) == 0x0003D0, "Member 'ADream_climb_C::Cube2' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube6) == 0x0003D8, "Member 'ADream_climb_C::Cube6' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube5) == 0x0003E0, "Member 'ADream_climb_C::Cube5' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube1) == 0x0003E8, "Member 'ADream_climb_C::Cube1' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube10) == 0x0003F0, "Member 'ADream_climb_C::Cube10' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube9) == 0x0003F8, "Member 'ADream_climb_C::Cube9' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube11) == 0x000400, "Member 'ADream_climb_C::Cube11' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Planks) == 0x000408, "Member 'ADream_climb_C::Planks' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube7) == 0x000410, "Member 'ADream_climb_C::Cube7' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube4) == 0x000418, "Member 'ADream_climb_C::Cube4' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube3) == 0x000420, "Member 'ADream_climb_C::Cube3' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Cube) == 0x000428, "Member 'ADream_climb_C::Cube' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Pillars) == 0x000430, "Member 'ADream_climb_C::Pillars' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Wall4) == 0x000438, "Member 'ADream_climb_C::Wall4' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Wall3) == 0x000440, "Member 'ADream_climb_C::Wall3' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Wall2) == 0x000448, "Member 'ADream_climb_C::Wall2' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Wall1) == 0x000450, "Member 'ADream_climb_C::Wall1' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Wall0) == 0x000458, "Member 'ADream_climb_C::Wall0' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, Walls) == 0x000460, "Member 'ADream_climb_C::Walls' has a wrong offset!");
static_assert(offsetof(ADream_climb_C, A) == 0x000468, "Member 'ADream_climb_C::A' has a wrong offset!");

}

