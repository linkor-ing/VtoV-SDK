#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InstancedArray

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function instancedArray.instancedArray_C.Build
// 0x00D0 (0x00D0 - 0x0000)
struct InstancedArray_C_Build final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotatorFromStream_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InstancedArray_C_Build) == 0x000010, "Wrong alignment on InstancedArray_C_Build");
static_assert(sizeof(InstancedArray_C_Build) == 0x0000D0, "Wrong size on InstancedArray_C_Build");
static_assert(offsetof(InstancedArray_C_Build, Temp_int_Variable) == 0x000000, "Member 'InstancedArray_C_Build::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'InstancedArray_C_Build::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'InstancedArray_C_Build::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, Temp_int_Variable_1) == 0x00000C, "Member 'InstancedArray_C_Build::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'InstancedArray_C_Build::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'InstancedArray_C_Build::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000018, "Member 'InstancedArray_C_Build::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00001C, "Member 'InstancedArray_C_Build::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000020, "Member 'InstancedArray_C_Build::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_RandomRotatorFromStream_ReturnValue) == 0x000024, "Member 'InstancedArray_C_Build::CallFunc_RandomRotatorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000030, "Member 'InstancedArray_C_Build::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'InstancedArray_C_Build::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'InstancedArray_C_Build::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'InstancedArray_C_Build::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'InstancedArray_C_Build::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'InstancedArray_C_Build::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'InstancedArray_C_Build::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_MakeRotator_ReturnValue) == 0x000054, "Member 'InstancedArray_C_Build::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, Temp_int_Variable_2) == 0x000060, "Member 'InstancedArray_C_Build::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_ComposeRotators_ReturnValue) == 0x000064, "Member 'InstancedArray_C_Build::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000070, "Member 'InstancedArray_C_Build::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'InstancedArray_C_Build::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'InstancedArray_C_Build::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000084, "Member 'InstancedArray_C_Build::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'InstancedArray_C_Build::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_AddInstance_ReturnValue) == 0x0000C0, "Member 'InstancedArray_C_Build::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'InstancedArray_C_Build::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C5, "Member 'InstancedArray_C_Build::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InstancedArray_C_Build, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C6, "Member 'InstancedArray_C_Build::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function instancedArray.instancedArray_C.ExecuteUbergraph_instancedArray
// 0x0004 (0x0004 - 0x0000)
struct InstancedArray_C_ExecuteUbergraph_instancedArray final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InstancedArray_C_ExecuteUbergraph_instancedArray) == 0x000004, "Wrong alignment on InstancedArray_C_ExecuteUbergraph_instancedArray");
static_assert(sizeof(InstancedArray_C_ExecuteUbergraph_instancedArray) == 0x000004, "Wrong size on InstancedArray_C_ExecuteUbergraph_instancedArray");
static_assert(offsetof(InstancedArray_C_ExecuteUbergraph_instancedArray, EntryPoint) == 0x000000, "Member 'InstancedArray_C_ExecuteUbergraph_instancedArray::EntryPoint' has a wrong offset!");

}

