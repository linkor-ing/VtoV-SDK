#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FridgeGlow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function fridgeGlow.fridgeGlow_C.BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'FridgeGlow_C_BndEvt__fridgeGlow_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function fridgeGlow.fridgeGlow_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FridgeGlow_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FridgeGlow_C_ReceiveTick) == 0x000004, "Wrong alignment on FridgeGlow_C_ReceiveTick");
static_assert(sizeof(FridgeGlow_C_ReceiveTick) == 0x000004, "Wrong size on FridgeGlow_C_ReceiveTick");
static_assert(offsetof(FridgeGlow_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FridgeGlow_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function fridgeGlow.fridgeGlow_C.ExecuteUbergraph_fridgeGlow
// 0x01A8 (0x01A8 - 0x0000)
struct FridgeGlow_C_ExecuteUbergraph_fridgeGlow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x00E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow) == 0x000008, "Wrong alignment on FridgeGlow_C_ExecuteUbergraph_fridgeGlow");
static_assert(sizeof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow) == 0x0001A8, "Wrong size on FridgeGlow_C_ExecuteUbergraph_fridgeGlow");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, EntryPoint) == 0x000000, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::EntryPoint' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, Temp_object_Variable) == 0x000008, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000018, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_OtherActor) == 0x000020, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_OtherComp) == 0x000028, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000030, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_Lerp_ReturnValue) == 0x0000C0, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_Lerp_ReturnValue_1) == 0x0000C4, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_Lerp_ReturnValue_2) == 0x0000C8, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000D0, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, K2Node_Event_DeltaSeconds) == 0x0000D8, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_obj_static_obj) == 0x0000E0, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000F1, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_BooleanAND_ReturnValue) == 0x0000F2, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000F8, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00010C, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000118, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(FridgeGlow_C_ExecuteUbergraph_fridgeGlow, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001A0, "Member 'FridgeGlow_C_ExecuteUbergraph_fridgeGlow::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

}

