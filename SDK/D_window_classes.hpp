#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: D_window

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass d_window.d_window_C
// 0x0070 (0x0290 - 0x0220)
class AD_window_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ratio;                                             // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26AE[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Rt_w;                                              // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canv;                                              // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             Cont;                                              // 0x0258(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FIntPoint                              Size;                                              // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              A;                                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cv;                                                // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26AF[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Code;                                              // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_d_window(int32 EntryPoint);
	void CleanAtPoint(class AProp_sponge_C* Sponge, const struct FVector& Location);
	void ReceiveBeginPlay();
	void Canvas();
	void BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetDraw();
	void EndDraw();
	void GetCode(TArray<uint8>* ByteArray);
	void SetCode(const TArray<uint8>& ByteArray);
	void Dirty();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"d_window_C">();
	}
	static class AD_window_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AD_window_C>();
	}
};
static_assert(alignof(AD_window_C) == 0x000008, "Wrong alignment on AD_window_C");
static_assert(sizeof(AD_window_C) == 0x000290, "Wrong size on AD_window_C");
static_assert(offsetof(AD_window_C, UberGraphFrame) == 0x000220, "Member 'AD_window_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AD_window_C, StaticMesh) == 0x000228, "Member 'AD_window_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AD_window_C, DefaultSceneRoot) == 0x000230, "Member 'AD_window_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AD_window_C, Dynmat) == 0x000238, "Member 'AD_window_C::Dynmat' has a wrong offset!");
static_assert(offsetof(AD_window_C, Ratio) == 0x000240, "Member 'AD_window_C::Ratio' has a wrong offset!");
static_assert(offsetof(AD_window_C, Rt_w) == 0x000248, "Member 'AD_window_C::Rt_w' has a wrong offset!");
static_assert(offsetof(AD_window_C, Canv) == 0x000250, "Member 'AD_window_C::Canv' has a wrong offset!");
static_assert(offsetof(AD_window_C, Cont) == 0x000258, "Member 'AD_window_C::Cont' has a wrong offset!");
static_assert(offsetof(AD_window_C, Size) == 0x000268, "Member 'AD_window_C::Size' has a wrong offset!");
static_assert(offsetof(AD_window_C, A) == 0x000270, "Member 'AD_window_C::A' has a wrong offset!");
static_assert(offsetof(AD_window_C, Cv) == 0x000278, "Member 'AD_window_C::Cv' has a wrong offset!");
static_assert(offsetof(AD_window_C, Code) == 0x000280, "Member 'AD_window_C::Code' has a wrong offset!");

}

