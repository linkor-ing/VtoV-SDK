#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_container

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_mInt_structs.hpp"


namespace SDK::Params
{

// Function prop_container.prop_container_C.ExecuteUbergraph_prop_container
// 0x0420 (0x0420 - 0x0000)
struct Prop_container_C_ExecuteUbergraph_prop_container final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addObject_return;                         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420D[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addObject_err;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420E[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420F[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4210[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_Array_Get_Item;                           // 0x0130(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4211[0xB];                                     // 0x01F5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0200(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0270(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4212[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4213[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4214[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4215[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4216[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4217[0x3];                                     // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4218[0x3];                                     // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0388(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_container_C_ExecuteUbergraph_prop_container) == 0x000010, "Wrong alignment on Prop_container_C_ExecuteUbergraph_prop_container");
static_assert(sizeof(Prop_container_C_ExecuteUbergraph_prop_container) == 0x000420, "Wrong size on Prop_container_C_ExecuteUbergraph_prop_container");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, EntryPoint) == 0x000000, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_Event_player) == 0x000008, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000018, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000020, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000028, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000030, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000C0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_addObject_return) == 0x0000C1, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_addObject_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_addObject_err) == 0x0000C8, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_addObject_err' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_AsInt_Save_1) == 0x0000D8, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_ignoreSave_ignoreSave) == 0x0000E9, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000F0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F8, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherComp) == 0x000100, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000108, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000110, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000118, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000120, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Array_Get_Item) == 0x000130, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Array_Length_ReturnValue) == 0x0001F0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Less_IntInt_ReturnValue) == 0x0001F4, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetTransform_ReturnValue) == 0x000200, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BreakTransform_Location) == 0x000230, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BreakTransform_Rotation) == 0x00023C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BreakTransform_Scale) == 0x000248, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetComponentBounds_Origin) == 0x000254, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetComponentBounds_BoxExtent) == 0x000260, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetComponentBounds_SphereRadius) == 0x00026C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetBounds_ReturnValue) == 0x000270, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00028C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000298, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0002A4, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Add_VectorVector_ReturnValue) == 0x0002B0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_MakeTransform_ReturnValue) == 0x0002C0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002F0, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002F8, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Not_PreBool_ReturnValue) == 0x000300, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000308, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_bSuccess_1) == 0x000318, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BooleanAND_ReturnValue_1) == 0x000319, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_loadData_return) == 0x00031A, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_BooleanAND_ReturnValue_2) == 0x00031B, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000320, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_AsInt_Objects) == 0x000328, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_bSuccess_2) == 0x000338, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_AsPrimitive_Component) == 0x000340, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_DynamicCast_bSuccess_3) == 0x000348, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000350, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetMass_ReturnValue) == 0x000358, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Array_Add_ReturnValue) == 0x00035C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000360, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Array_RemoveItem_ReturnValue) == 0x000368, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_GetComponentVelocity_ReturnValue) == 0x00036C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_IsValid_ReturnValue) == 0x000378, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00037C, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_Event_player_1) == 0x000380, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_Event_hit) == 0x000388, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_Event_index) == 0x000410, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_Event_action) == 0x000414, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ExecuteUbergraph_prop_container, K2Node_SwitchEnum_CmpSuccess) == 0x000415, "Member 'Prop_container_C_ExecuteUbergraph_prop_container::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function prop_container.prop_container_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_container_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_container_C_ActionOptionIndex");
static_assert(sizeof(Prop_container_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_container_C_ActionOptionIndex");
static_assert(offsetof(Prop_container_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_container_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_container_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_container_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_container_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_container_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_container.prop_container_C.BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_container.prop_container_C.BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4219[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_container_C_BndEvt__overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_container.prop_container_C.extract
// 0x01D0 (0x01D0 - 0x0000)
struct Prop_container_C_Extract final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421B[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421C[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_takeObj_return;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421D[0xF];                                     // 0x00B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_takeObj_Output;                           // 0x00C0(0x00C0)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_takeObj_object;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421E[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421F[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_container_C_Extract) == 0x000010, "Wrong alignment on Prop_container_C_Extract");
static_assert(sizeof(Prop_container_C_Extract) == 0x0001D0, "Wrong size on Prop_container_C_Extract");
static_assert(offsetof(Prop_container_C_Extract, Param_Index) == 0x000000, "Member 'Prop_container_C_Extract::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'Prop_container_C_Extract::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'Prop_container_C_Extract::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'Prop_container_C_Extract::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_BreakTransform_Location) == 0x000050, "Member 'Prop_container_C_Extract::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'Prop_container_C_Extract::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'Prop_container_C_Extract::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'Prop_container_C_Extract::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_takeObj_return) == 0x0000B0, "Member 'Prop_container_C_Extract::CallFunc_takeObj_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_takeObj_Output) == 0x0000C0, "Member 'Prop_container_C_Extract::CallFunc_takeObj_Output' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_takeObj_object) == 0x000180, "Member 'Prop_container_C_Extract::CallFunc_takeObj_object' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000188, "Member 'Prop_container_C_Extract::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_FinishSpawningActor_ReturnValue) == 0x000190, "Member 'Prop_container_C_Extract::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_putObjectInventory2_return) == 0x000198, "Member 'Prop_container_C_Extract::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001A0, "Member 'Prop_container_C_Extract::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x0001A8, "Member 'Prop_container_C_Extract::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'Prop_container_C_Extract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, K2Node_DynamicCast_AsInt_Save_1) == 0x0001B8, "Member 'Prop_container_C_Extract::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'Prop_container_C_Extract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_Extract, CallFunc_loadData_return) == 0x0001C9, "Member 'Prop_container_C_Extract::CallFunc_loadData_return' has a wrong offset!");

// Function prop_container.prop_container_C.spawned
// 0x0001 (0x0001 - 0x0000)
struct Prop_container_C_Spawned final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_container_C_Spawned) == 0x000001, "Wrong alignment on Prop_container_C_Spawned");
static_assert(sizeof(Prop_container_C_Spawned) == 0x000001, "Wrong size on Prop_container_C_Spawned");
static_assert(offsetof(Prop_container_C_Spawned, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Prop_container_C_Spawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function prop_container.prop_container_C.getObject
// 0x01E0 (0x01E0 - 0x0000)
struct Prop_container_C_GetObject final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomLoc;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4220[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Loc;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4221[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OutputPin;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4222[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_takeObj_return;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4223[0xF];                                     // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_takeObj_Output;                           // 0x00D0(0x00C0)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_takeObj_object;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4224[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_container_C_GetObject) == 0x000010, "Wrong alignment on Prop_container_C_GetObject");
static_assert(sizeof(Prop_container_C_GetObject) == 0x0001E0, "Wrong size on Prop_container_C_GetObject");
static_assert(offsetof(Prop_container_C_GetObject, Param_Index) == 0x000000, "Member 'Prop_container_C_GetObject::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CustomLoc) == 0x000004, "Member 'Prop_container_C_GetObject::CustomLoc' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, Loc) == 0x000008, "Member 'Prop_container_C_GetObject::Loc' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, OutputPin) == 0x000018, "Member 'Prop_container_C_GetObject::OutputPin' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'Prop_container_C_GetObject::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'Prop_container_C_GetObject::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_BreakTransform_Location) == 0x000060, "Member 'Prop_container_C_GetObject::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'Prop_container_C_GetObject::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'Prop_container_C_GetObject::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_SelectVector_ReturnValue) == 0x000084, "Member 'Prop_container_C_GetObject::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'Prop_container_C_GetObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_takeObj_return) == 0x0000C0, "Member 'Prop_container_C_GetObject::CallFunc_takeObj_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_takeObj_Output) == 0x0000D0, "Member 'Prop_container_C_GetObject::CallFunc_takeObj_Output' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_takeObj_object) == 0x000190, "Member 'Prop_container_C_GetObject::CallFunc_takeObj_object' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000198, "Member 'Prop_container_C_GetObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A0, "Member 'Prop_container_C_GetObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001A8, "Member 'Prop_container_C_GetObject::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, K2Node_DynamicCast_AsInt_Save_1) == 0x0001B0, "Member 'Prop_container_C_GetObject::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'Prop_container_C_GetObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x0001C8, "Member 'Prop_container_C_GetObject::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'Prop_container_C_GetObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetObject, CallFunc_loadData_return) == 0x0001D1, "Member 'Prop_container_C_GetObject::CallFunc_loadData_return' has a wrong offset!");

// Function prop_container.prop_container_C.updateVolumesAndMass
// 0x0040 (0x0040 - 0x0000)
struct Prop_container_C_UpdateVolumesAndMass final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4225[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Get_Volume_volume;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Volume_mass;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_UpdateVolumesAndMass) == 0x000008, "Wrong alignment on Prop_container_C_UpdateVolumesAndMass");
static_assert(sizeof(Prop_container_C_UpdateVolumesAndMass) == 0x000040, "Wrong size on Prop_container_C_UpdateVolumesAndMass");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Prop_container_C_UpdateVolumesAndMass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Prop_container_C_UpdateVolumesAndMass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Array_Get_Item) == 0x000010, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Get_Volume_volume) == 0x000024, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Get_Volume_volume' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Get_Volume_mass) == 0x000028, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Get_Volume_mass' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00002C, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000034, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_UpdateVolumesAndMass, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'Prop_container_C_UpdateVolumesAndMass::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function prop_container.prop_container_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_container_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_container_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_container_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_container_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_container_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_container_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function prop_container.prop_container_C.loadData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_container_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4226[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_LoadData) == 0x000010, "Wrong alignment on Prop_container_C_LoadData");
static_assert(sizeof(Prop_container_C_LoadData) == 0x0000F0, "Wrong size on Prop_container_C_LoadData");
static_assert(offsetof(Prop_container_C_LoadData, Data) == 0x000000, "Member 'Prop_container_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LoadData, Return) == 0x0000C0, "Member 'Prop_container_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_container_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_container_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_container_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_container_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function prop_container.prop_container_C.lookAt
// 0x00D8 (0x00D8 - 0x0000)
struct Prop_container_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4227[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_LookAt) == 0x000008, "Wrong alignment on Prop_container_C_LookAt");
static_assert(sizeof(Prop_container_C_LookAt) == 0x0000D8, "Wrong size on Prop_container_C_LookAt");
static_assert(offsetof(Prop_container_C_LookAt, Player) == 0x000000, "Member 'Prop_container_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_container_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, Return) == 0x000090, "Member 'Prop_container_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, Text) == 0x000098, "Member 'Prop_container_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_container_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B0, "Member 'Prop_container_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_container_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'Prop_container_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_container.prop_container_C.getData
// 0x02B0 (0x02B0 - 0x0000)
struct Prop_container_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_mString                        K2Node_MakeStruct_struct_mString;                  // 0x00C0(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00D0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x01A0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x01B0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	struct FStruct_mString                        CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mString>                K2Node_MakeArray_Array_2;                          // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01F0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_container_C_GetData) == 0x000010, "Wrong alignment on Prop_container_C_GetData");
static_assert(sizeof(Prop_container_C_GetData) == 0x0002B0, "Wrong size on Prop_container_C_GetData");
static_assert(offsetof(Prop_container_C_GetData, Data) == 0x000000, "Member 'Prop_container_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_MakeStruct_struct_mString) == 0x0000C0, "Member 'Prop_container_C_GetData::K2Node_MakeStruct_struct_mString' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, CallFunc_getData_data) == 0x0000D0, "Member 'Prop_container_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_MakeArray_Array) == 0x000190, "Member 'Prop_container_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x0001A0, "Member 'Prop_container_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'Prop_container_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'Prop_container_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'Prop_container_C_GetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_MakeArray_Array_2) == 0x0001E0, "Member 'Prop_container_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001F0, "Member 'Prop_container_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_container.prop_container_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Prop_container_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_container_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_container_C_GetActionOptions");
static_assert(sizeof(Prop_container_C_GetActionOptions) == 0x000058, "Wrong size on Prop_container_C_GetActionOptions");
static_assert(offsetof(Prop_container_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_container_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_container_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_container_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_container_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_container_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_container_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_container_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Prop_container_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

