#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_flipflop

#include "Basic.hpp"

#include "Prop_wireComponent_flipflop_classes.hpp"
#include "Prop_wireComponent_flipflop_parameters.hpp"


namespace SDK
{

// Function prop_wireComponent_flipflop.prop_wireComponent_flipflop_C.ExecuteUbergraph_prop_wireComponent_flipflop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_wireComponent_flipflop_C::ExecuteUbergraph_prop_wireComponent_flipflop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_flipflop_C", "ExecuteUbergraph_prop_wireComponent_flipflop");

	Params::Prop_wireComponent_flipflop_C_ExecuteUbergraph_prop_wireComponent_flipflop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_wireComponent_flipflop.prop_wireComponent_flipflop_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_wireComponent_flipflop_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_flipflop_C", "ReceiveTick");

	Params::Prop_wireComponent_flipflop_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_wireComponent_flipflop.prop_wireComponent_flipflop_C.wireDisconnected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWire_C*                          Param_Wire                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_wireComponent_flipflop_C::WireDisconnected(class AWire_C* Param_Wire, bool Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_flipflop_C", "wireDisconnected");

	Params::Prop_wireComponent_flipflop_C_WireDisconnected Parms{};

	Parms.Param_Wire = Param_Wire;
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_wireComponent_flipflop.prop_wireComponent_flipflop_C.wireConnected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWire_C*                          Param_Wire                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AProp_wireComponent_flipflop_C::WireConnected(class AWire_C* Param_Wire, bool Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_flipflop_C", "wireConnected");

	Params::Prop_wireComponent_flipflop_C_WireConnected Parms{};

	Parms.Param_Wire = Param_Wire;
	Parms.Side = Side;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_wireComponent_flipflop.prop_wireComponent_flipflop_C.wirePass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWire_C*                          Param_Wire                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_wireComponent_flipflop_C::WirePass(class AWire_C* Param_Wire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_wireComponent_flipflop_C", "wirePass");

	Params::Prop_wireComponent_flipflop_C_WirePass Parms{};

	Parms.Param_Wire = Param_Wire;

	UObject::ProcessEvent(Func, &Parms);
}

}

