#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AriralNoTaker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TriggerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ariralNoTaker.ariralNoTaker_C
// 0x0030 (0x02B8 - 0x0288)
class AAriralNoTaker_C final : public ATriggerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AriralNoTaker_C;                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       DragAway;                                          // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Counter;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AffectedObjects;                                   // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Active;                                            // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void BndEvt__ariralNoTaker_dragAway_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ariralNoTaker_dragAway_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_ariralNoTaker(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ariralNoTaker_C">();
	}
	static class AAriralNoTaker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAriralNoTaker_C>();
	}
};
static_assert(alignof(AAriralNoTaker_C) == 0x000008, "Wrong alignment on AAriralNoTaker_C");
static_assert(sizeof(AAriralNoTaker_C) == 0x0002B8, "Wrong size on AAriralNoTaker_C");
static_assert(offsetof(AAriralNoTaker_C, UberGraphFrame_AriralNoTaker_C) == 0x000288, "Member 'AAriralNoTaker_C::UberGraphFrame_AriralNoTaker_C' has a wrong offset!");
static_assert(offsetof(AAriralNoTaker_C, DragAway) == 0x000290, "Member 'AAriralNoTaker_C::DragAway' has a wrong offset!");
static_assert(offsetof(AAriralNoTaker_C, Counter) == 0x000298, "Member 'AAriralNoTaker_C::Counter' has a wrong offset!");
static_assert(offsetof(AAriralNoTaker_C, AffectedObjects) == 0x0002A0, "Member 'AAriralNoTaker_C::AffectedObjects' has a wrong offset!");
static_assert(offsetof(AAriralNoTaker_C, Active) == 0x0002B0, "Member 'AAriralNoTaker_C::Active' has a wrong offset!");

}

