#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_glowstick_col

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_glowstick_col.prop_glowstick_col_C.ExecuteUbergraph_prop_glowstick_col
// 0x0128 (0x0128 - 0x0000)
struct Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_color;                                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_H;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_S;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_V;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_A;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue_1;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue_2;                   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col) == 0x000008, "Wrong alignment on Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col");
static_assert(sizeof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col) == 0x000128, "Wrong size on Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, EntryPoint) == 0x000000, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_X) == 0x000004, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_Y) == 0x000008, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_Z) == 0x00000C, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, K2Node_Event_color) == 0x000010, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_HSVToRGB_ReturnValue) == 0x000020, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_RGBToHSV_H) == 0x000030, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_RGBToHSV_H' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_RGBToHSV_S) == 0x000034, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_RGBToHSV_S' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_RGBToHSV_V) == 0x000038, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_RGBToHSV_V' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_RGBToHSV_A) == 0x00003C, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_RGBToHSV_A' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000040, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_HSVToRGB_ReturnValue_1) == 0x000058, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_HSVToRGB_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, K2Node_Event_player) == 0x000068, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, K2Node_Event_hit) == 0x000070, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, K2Node_Event_action) == 0x0000F8, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000100, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, K2Node_SwitchEnum_CmpSuccess) == 0x000108, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_X_1) == 0x00010C, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_BreakVector_Z_1) == 0x000114, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col, CallFunc_HSVToRGB_ReturnValue_2) == 0x000118, "Member 'Prop_glowstick_col_C_ExecuteUbergraph_prop_glowstick_col::CallFunc_HSVToRGB_ReturnValue_2' has a wrong offset!");

// Function prop_glowstick_col.prop_glowstick_col_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_glowstick_col_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_glowstick_col_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_glowstick_col_C_ActionOptionIndex");
static_assert(sizeof(Prop_glowstick_col_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_glowstick_col_C_ActionOptionIndex");
static_assert(offsetof(Prop_glowstick_col_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_glowstick_col_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_glowstick_col_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_glowstick_col_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_glowstick_col.prop_glowstick_col_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct Prop_glowstick_col_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_glowstick_col_C_ApplyColor) == 0x000004, "Wrong alignment on Prop_glowstick_col_C_ApplyColor");
static_assert(sizeof(Prop_glowstick_col_C_ApplyColor) == 0x000010, "Wrong size on Prop_glowstick_col_C_ApplyColor");
static_assert(offsetof(Prop_glowstick_col_C_ApplyColor, Color) == 0x000000, "Member 'Prop_glowstick_col_C_ApplyColor::Color' has a wrong offset!");

// Function prop_glowstick_col.prop_glowstick_col_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_glowstick_col_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_glowstick_col_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_glowstick_col_C_GetActionOptions");
static_assert(sizeof(Prop_glowstick_col_C_GetActionOptions) == 0x000060, "Wrong size on Prop_glowstick_col_C_GetActionOptions");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_glowstick_col_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_glowstick_col_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_glowstick_col_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_glowstick_col_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_glowstick_col_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_glowstick_col_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_glowstick_col_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_glowstick_col_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_glowstick_col_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

