#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CordSocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass cordSocket.cordSocket_C
// 0x0050 (0x0298 - 0x0248)
class ACordSocket_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CordSocket_C;                       // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Head;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Dir;                                               // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Root;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                Cord;                                              // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unplugged;                                         // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                Parent;                                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Powered;                                           // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          baseSocket;                                        // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_cordSocket(int32 EntryPoint);
	void GamemodeBeginPlay();
	void SetActiveTrigger(class AActor* SentFrom, bool Active);
	void ReceiveBeginPlay();
	void BndEvt__cordSocket_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__cordSocket_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void ApplyColor(const struct FLinearColor& Color);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Param_Key, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void SettingsApplied(const struct FStruct_settings& Settings);
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void SignalSaved();
	void SignalDeleted();
	void CordUnplugged(class ACord_C* Param_Cord, class ACordSocket_C* Socket);
	void CordPlugged(class ACord_C* Param_Cord, class ACordSocket_C* Socket);
	void Set_ignoreSave_trigger(bool NewParam);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void SetActiveCord(bool Plug);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);
	void IgnoreSave_trigger(bool* Ignore);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void GatherDataFromKeyT(bool* Gather);
	void IgnoreSave(bool* Param_IgnoreSave);
	void SkipPreDelete(bool* Skip);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"cordSocket_C">();
	}
	static class ACordSocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACordSocket_C>();
	}
};
static_assert(alignof(ACordSocket_C) == 0x000008, "Wrong alignment on ACordSocket_C");
static_assert(sizeof(ACordSocket_C) == 0x000298, "Wrong size on ACordSocket_C");
static_assert(offsetof(ACordSocket_C, UberGraphFrame_CordSocket_C) == 0x000248, "Member 'ACordSocket_C::UberGraphFrame_CordSocket_C' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Audio) == 0x000250, "Member 'ACordSocket_C::Audio' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Head) == 0x000258, "Member 'ACordSocket_C::Head' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Dir) == 0x000260, "Member 'ACordSocket_C::Dir' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Sphere) == 0x000268, "Member 'ACordSocket_C::Sphere' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Root) == 0x000270, "Member 'ACordSocket_C::Root' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Cord) == 0x000278, "Member 'ACordSocket_C::Cord' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Unplugged) == 0x000280, "Member 'ACordSocket_C::Unplugged' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Parent) == 0x000288, "Member 'ACordSocket_C::Parent' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, Powered) == 0x000290, "Member 'ACordSocket_C::Powered' has a wrong offset!");
static_assert(offsetof(ACordSocket_C, baseSocket) == 0x000291, "Member 'ACordSocket_C::baseSocket' has a wrong offset!");

}

