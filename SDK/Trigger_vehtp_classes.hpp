#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trigger_vehtp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "TriggerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass trigger_vehtp.trigger_vehtp_C
// 0x0030 (0x02B8 - 0x0288)
class ATrigger_vehtp_C final : public ATriggerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Trigger_vehtp_C;                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ACar1_C*                                Vehicle;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Tp;                                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos;                                               // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void UserConstructionScript();
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void GamemodeBeginPlay();
	void ExecuteUbergraph_trigger_vehtp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"trigger_vehtp_C">();
	}
	static class ATrigger_vehtp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrigger_vehtp_C>();
	}
};
static_assert(alignof(ATrigger_vehtp_C) == 0x000008, "Wrong alignment on ATrigger_vehtp_C");
static_assert(sizeof(ATrigger_vehtp_C) == 0x0002B8, "Wrong size on ATrigger_vehtp_C");
static_assert(offsetof(ATrigger_vehtp_C, UberGraphFrame_Trigger_vehtp_C) == 0x000288, "Member 'ATrigger_vehtp_C::UberGraphFrame_Trigger_vehtp_C' has a wrong offset!");
static_assert(offsetof(ATrigger_vehtp_C, PointLight) == 0x000290, "Member 'ATrigger_vehtp_C::PointLight' has a wrong offset!");
static_assert(offsetof(ATrigger_vehtp_C, Vehicle) == 0x000298, "Member 'ATrigger_vehtp_C::Vehicle' has a wrong offset!");
static_assert(offsetof(ATrigger_vehtp_C, Tp) == 0x0002A0, "Member 'ATrigger_vehtp_C::Tp' has a wrong offset!");
static_assert(offsetof(ATrigger_vehtp_C, Pos) == 0x0002A8, "Member 'ATrigger_vehtp_C::Pos' has a wrong offset!");

}

