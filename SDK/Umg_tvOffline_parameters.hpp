#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_tvOffline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_tv_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "Enum_playlist_structs.hpp"


namespace SDK::Params
{

// Function umg_tvOffline.umg_tvOffline_C.ExecuteUbergraph_umg_tvOffline
// 0x00F0 (0x00F0 - 0x0000)
struct Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_playlist                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_playlist                                 Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_playlist                                 Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_playlist                                 Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2761[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_tv2_C*                            K2Node_CustomEvent_radio;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0020(0x0008)(NoDestructor)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2762[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetDuration_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0038(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_playlist                                 Temp_byte_Variable_4;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Pause_ReturnValue;                        // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2763[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	Enum_playlist                                 K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2764[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2765[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2766[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetTime_ReturnValue;                      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline) == 0x000008, "Wrong alignment on Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline");
static_assert(sizeof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline) == 0x0000F0, "Wrong size on Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, EntryPoint) == 0x000000, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, Temp_byte_Variable) == 0x000008, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, Temp_byte_Variable_1) == 0x000009, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, Temp_byte_Variable_2) == 0x00000A, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, Temp_byte_Variable_3) == 0x00000B, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_CustomEvent_radio) == 0x000010, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_CustomEvent_radio' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_getMainPlayer_AsMain_Player) == 0x000018, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_Event_InFocusEvent) == 0x000020, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_ComponentBoundEvent_Value_1) == 0x000028, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetDuration_ReturnValue) == 0x000030, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Conv_FloatToText_ReturnValue) == 0x000038, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Play_ReturnValue) == 0x000054, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, Temp_byte_Variable_4) == 0x000055, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Pause_ReturnValue) == 0x000056, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Pause_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000058, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_Select_Default) == 0x000080, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000088, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_setActiveInterface_return) == 0x000090, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_setActiveInterface_return' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_ComponentBoundEvent_Value) == 0x000094, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_Event_MyGeometry) == 0x000098, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, K2Node_Event_InDeltaTime) == 0x0000D0, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetTime_ReturnValue) == 0x0000D8, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetTotalSeconds_ReturnValue) == 0x0000E0, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x0000E4, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'Umg_tvOffline_C_ExecuteUbergraph_umg_tvOffline::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_tvOffline_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_Tick) == 0x000004, "Wrong alignment on Umg_tvOffline_C_Tick");
static_assert(sizeof(Umg_tvOffline_C_Tick) == 0x00003C, "Wrong size on Umg_tvOffline_C_Tick");
static_assert(offsetof(Umg_tvOffline_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_tvOffline_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_tvOffline_C_Tick::InDeltaTime' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'Umg_tvOffline_C_BndEvt__umg_tvOffline_Slider_playback_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'Umg_tvOffline_C_BndEvt__umg_onlineRadio_Slider_volume_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_tvOffline_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_tvOffline_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_tvOffline_C_OnFocusLost");
static_assert(sizeof(Umg_tvOffline_C_OnFocusLost) == 0x000008, "Wrong size on Umg_tvOffline_C_OnFocusLost");
static_assert(offsetof(Umg_tvOffline_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_tvOffline_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.Open
// 0x0008 (0x0008 - 0x0000)
struct Umg_tvOffline_C_Open final
{
public:
	class AProp_tv2_C*                            Param_Radio;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_Open) == 0x000008, "Wrong alignment on Umg_tvOffline_C_Open");
static_assert(sizeof(Umg_tvOffline_C_Open) == 0x000008, "Wrong size on Umg_tvOffline_C_Open");
static_assert(offsetof(Umg_tvOffline_C_Open, Param_Radio) == 0x000000, "Member 'Umg_tvOffline_C_Open::Param_Radio' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.gen
// 0x0080 (0x0080 - 0x0000)
struct Umg_tvOffline_C_Gen final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2767[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_tvOfflineSlot_C*                   CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_tvOfflineSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_tv                             CallFunc_Array_Get_Item_1;                         // 0x0040(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2768[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_Gen) == 0x000008, "Wrong alignment on Umg_tvOffline_C_Gen");
static_assert(sizeof(Umg_tvOffline_C_Gen) == 0x000080, "Wrong size on Umg_tvOffline_C_Gen");
static_assert(offsetof(Umg_tvOffline_C_Gen, Param_Name) == 0x000000, "Member 'Umg_tvOffline_C_Gen::Param_Name' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, Temp_int_Variable) == 0x000010, "Member 'Umg_tvOffline_C_Gen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Umg_tvOffline_C_Gen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Umg_tvOffline_C_Gen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, Temp_int_Array_Index_Variable) == 0x000024, "Member 'Umg_tvOffline_C_Gen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Umg_tvOffline_C_Gen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'Umg_tvOffline_C_Gen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000030, "Member 'Umg_tvOffline_C_Gen::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Array_Get_Item) == 0x000038, "Member 'Umg_tvOffline_C_Gen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Umg_tvOffline_C_Gen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Umg_tvOffline_C_Gen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'Umg_tvOffline_C_Gen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'Umg_tvOffline_C_Gen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Less_IntInt_ReturnValue_1) == 0x000071, "Member 'Umg_tvOffline_C_Gen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'Umg_tvOffline_C_Gen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Gen, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'Umg_tvOffline_C_Gen::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.OnKeyDown
// 0x0200 (0x0200 - 0x0000)
struct Umg_tvOffline_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_tvOffline_C_OnKeyDown) == 0x000008, "Wrong alignment on Umg_tvOffline_C_OnKeyDown");
static_assert(sizeof(Umg_tvOffline_C_OnKeyDown) == 0x000200, "Wrong size on Umg_tvOffline_C_OnKeyDown");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'Umg_tvOffline_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'Umg_tvOffline_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'Umg_tvOffline_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000128, "Member 'Umg_tvOffline_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'Umg_tvOffline_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001F8, "Member 'Umg_tvOffline_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.select
// 0x0060 (0x0060 - 0x0000)
struct Umg_tvOffline_C_Select final
{
public:
	struct FStruct_tv                             Param_Data;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          PausePlayer;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2769[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_tvOfflineSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_tvOffline_C_Select) == 0x000008, "Wrong alignment on Umg_tvOffline_C_Select");
static_assert(sizeof(Umg_tvOffline_C_Select) == 0x000060, "Wrong size on Umg_tvOffline_C_Select");
static_assert(offsetof(Umg_tvOffline_C_Select, Param_Data) == 0x000000, "Member 'Umg_tvOffline_C_Select::Param_Data' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, PausePlayer) == 0x000028, "Member 'Umg_tvOffline_C_Select::PausePlayer' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, Temp_int_Variable) == 0x00002C, "Member 'Umg_tvOffline_C_Select::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'Umg_tvOffline_C_Select::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Umg_tvOffline_C_Select::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Umg_tvOffline_C_Select::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, CallFunc_Array_Get_Item) == 0x000050, "Member 'Umg_tvOffline_C_Select::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_Select, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Umg_tvOffline_C_Select::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.selectDeco
// 0x0030 (0x0030 - 0x0000)
struct Umg_tvOffline_C_SelectDeco final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
	class UUmg_tvOfflineSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_tvOffline_C_SelectDeco) == 0x000008, "Wrong alignment on Umg_tvOffline_C_SelectDeco");
static_assert(sizeof(Umg_tvOffline_C_SelectDeco) == 0x000030, "Wrong size on Umg_tvOffline_C_SelectDeco");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, Temp_int_Variable) == 0x000000, "Member 'Umg_tvOffline_C_SelectDeco::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Umg_tvOffline_C_SelectDeco::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'Umg_tvOffline_C_SelectDeco::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, CallFunc_Array_Get_Item) == 0x000020, "Member 'Umg_tvOffline_C_SelectDeco::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Umg_tvOffline_C_SelectDeco::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SelectDeco, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Umg_tvOffline_C_SelectDeco::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.SetDuration
// 0x0008 (0x0008 - 0x0000)
struct Umg_tvOffline_C_SetDuration final
{
public:
	struct FTimespan                              Param_Duration;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_SetDuration) == 0x000008, "Wrong alignment on Umg_tvOffline_C_SetDuration");
static_assert(sizeof(Umg_tvOffline_C_SetDuration) == 0x000008, "Wrong size on Umg_tvOffline_C_SetDuration");
static_assert(offsetof(Umg_tvOffline_C_SetDuration, Param_Duration) == 0x000000, "Member 'Umg_tvOffline_C_SetDuration::Param_Duration' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.setPlaybackTime
// 0x0150 (0x0150 - 0x0000)
struct Umg_tvOffline_C_SetPlaybackTime final
{
public:
	struct FTimespan                              InTimespan;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Days;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Hours;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Minutes;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Seconds;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_FractionNano;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
};
static_assert(alignof(Umg_tvOffline_C_SetPlaybackTime) == 0x000008, "Wrong alignment on Umg_tvOffline_C_SetPlaybackTime");
static_assert(sizeof(Umg_tvOffline_C_SetPlaybackTime) == 0x000150, "Wrong size on Umg_tvOffline_C_SetPlaybackTime");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, InTimespan) == 0x000000, "Member 'Umg_tvOffline_C_SetPlaybackTime::InTimespan' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_BreakTimespan2_Days) == 0x000008, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_BreakTimespan2_Days' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_BreakTimespan2_Hours) == 0x00000C, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_BreakTimespan2_Hours' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_BreakTimespan2_Minutes) == 0x000010, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_BreakTimespan2_Minutes' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_BreakTimespan2_Seconds) == 0x000014, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_BreakTimespan2_Seconds' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_BreakTimespan2_FractionNano) == 0x000018, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_BreakTimespan2_FractionNano' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000038, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Umg_tvOffline_C_SetPlaybackTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'Umg_tvOffline_C_SetPlaybackTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000D0, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'Umg_tvOffline_C_SetPlaybackTime::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, K2Node_MakeArray_Array) == 0x000128, "Member 'Umg_tvOffline_C_SetPlaybackTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPlaybackTime, CallFunc_Format_ReturnValue) == 0x000138, "Member 'Umg_tvOffline_C_SetPlaybackTime::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function umg_tvOffline.umg_tvOffline_C.setPB
// 0x0058 (0x0058 - 0x0000)
struct Umg_tvOffline_C_SetPB final
{
public:
	float                                         Scalar;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Multiply_TimespanFloat_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Seek_ReturnValue;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_276C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours_1;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_tvOffline_C_SetPB) == 0x000008, "Wrong alignment on Umg_tvOffline_C_SetPB");
static_assert(sizeof(Umg_tvOffline_C_SetPB) == 0x000058, "Wrong size on Umg_tvOffline_C_SetPB");
static_assert(offsetof(Umg_tvOffline_C_SetPB, Scalar) == 0x000000, "Member 'Umg_tvOffline_C_SetPB::Scalar' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Days) == 0x000004, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Hours) == 0x000008, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Minutes) == 0x00000C, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Seconds) == 0x000010, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Milliseconds) == 0x000014, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_MakeTimespan_ReturnValue) == 0x000018, "Member 'Umg_tvOffline_C_SetPB::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_GetTotalSeconds_ReturnValue) == 0x000020, "Member 'Umg_tvOffline_C_SetPB::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_Multiply_TimespanFloat_ReturnValue) == 0x000028, "Member 'Umg_tvOffline_C_SetPB::CallFunc_Multiply_TimespanFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_Seek_ReturnValue) == 0x000030, "Member 'Umg_tvOffline_C_SetPB::CallFunc_Seek_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Days_1) == 0x000034, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Days_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Hours_1) == 0x000038, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Hours_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Minutes_1) == 0x00003C, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Minutes_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Seconds_1) == 0x000040, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Seconds_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_BreakTimespan_Milliseconds_1) == 0x000044, "Member 'Umg_tvOffline_C_SetPB::CallFunc_BreakTimespan_Milliseconds_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_MakeTimespan_ReturnValue_1) == 0x000048, "Member 'Umg_tvOffline_C_SetPB::CallFunc_MakeTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x000050, "Member 'Umg_tvOffline_C_SetPB::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_tvOffline_C_SetPB, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'Umg_tvOffline_C_SetPB::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

