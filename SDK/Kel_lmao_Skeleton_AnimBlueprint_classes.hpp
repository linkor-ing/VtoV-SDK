#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Kel_lmao_Skeleton_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass kel_lmao_Skeleton_AnimBlueprint.kel_lmao_Skeleton_AnimBlueprint_C
// 0x01F0 (0x04B0 - 0x02C0)
class UKel_lmao_Skeleton_AnimBlueprint_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x02C8(0x0118)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x03E0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0400(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0420(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0450(0x0048)()
	struct FRotator                               Rot;                                               // 0x0498(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_kel_lmao_Skeleton_AnimBlueprint(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"kel_lmao_Skeleton_AnimBlueprint_C">();
	}
	static class UKel_lmao_Skeleton_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKel_lmao_Skeleton_AnimBlueprint_C>();
	}
};
static_assert(alignof(UKel_lmao_Skeleton_AnimBlueprint_C) == 0x000010, "Wrong alignment on UKel_lmao_Skeleton_AnimBlueprint_C");
static_assert(sizeof(UKel_lmao_Skeleton_AnimBlueprint_C) == 0x0004B0, "Wrong size on UKel_lmao_Skeleton_AnimBlueprint_C");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, UberGraphFrame) == 0x0002C0, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, AnimGraphNode_LinkedInputPose) == 0x0002C8, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x0003E0, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x000400, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, AnimGraphNode_Root) == 0x000420, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot) == 0x000450, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UKel_lmao_Skeleton_AnimBlueprint_C, Rot) == 0x000498, "Member 'UKel_lmao_Skeleton_AnimBlueprint_C::Rot' has a wrong offset!");

}

