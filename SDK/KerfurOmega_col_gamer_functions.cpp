#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KerfurOmega_col_gamer

#include "Basic.hpp"

#include "KerfurOmega_col_gamer_classes.hpp"
#include "KerfurOmega_col_gamer_parameters.hpp"


namespace SDK
{

// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.ExecuteUbergraph_kerfurOmega_col_gamer
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AKerfurOmega_col_gamer_C::ExecuteUbergraph_kerfurOmega_col_gamer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("kerfurOmega_col_gamer_C", "ExecuteUbergraph_kerfurOmega_col_gamer");

	Params::KerfurOmega_col_gamer_C_ExecuteUbergraph_kerfurOmega_col_gamer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AKerfurOmega_col_gamer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("kerfurOmega_col_gamer_C", "ReceiveTick");

	Params::KerfurOmega_col_gamer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function kerfurOmega_col_gamer.kerfurOmega_col_gamer_C.dropKerfurProp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AKerfurOmega_col_gamer_C::DropKerfurProp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("kerfurOmega_col_gamer_C", "dropKerfurProp");

	UObject::ProcessEvent(Func, nullptr);
}

}

