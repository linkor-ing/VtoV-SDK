#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheEvil

#include "Basic.hpp"

#include "Struct_mBool_structs.hpp"
#include "Struct_signal_data2_structs.hpp"
#include "Struct_signalDataDynamic_structs.hpp"
#include "Struct_mObject_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function theEvil.theEvil_C.ExecuteUbergraph_theEvil
// 0x00A0 (0x00A0 - 0x0000)
struct TheEvil_C_ExecuteUbergraph_theEvil final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameover_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_checkForEvil_evil;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375F[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3760[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheEvil_C_ExecuteUbergraph_theEvil) == 0x000010, "Wrong alignment on TheEvil_C_ExecuteUbergraph_theEvil");
static_assert(sizeof(TheEvil_C_ExecuteUbergraph_theEvil) == 0x0000A0, "Wrong size on TheEvil_C_ExecuteUbergraph_theEvil");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, EntryPoint) == 0x000000, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::EntryPoint' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, Temp_text_Variable) == 0x000008, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_SpawnSound2D_ReturnValue) == 0x000060, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, K2Node_Event_DeltaSeconds) == 0x000068, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x00006C, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000078, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_checkForEvil_evil) == 0x000080, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_checkForEvil_evil' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000088, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000094, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_ExecuteUbergraph_theEvil, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'TheEvil_C_ExecuteUbergraph_theEvil::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function theEvil.theEvil_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TheEvil_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TheEvil_C_ReceiveTick) == 0x000004, "Wrong alignment on TheEvil_C_ReceiveTick");
static_assert(sizeof(TheEvil_C_ReceiveTick) == 0x000004, "Wrong size on TheEvil_C_ReceiveTick");
static_assert(offsetof(TheEvil_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TheEvil_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function theEvil.theEvil_C.checkForEvil
// 0x06B0 (0x06B0 - 0x0000)
struct TheEvil_C_CheckForEvil final
{
public:
	bool                                          Evil;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3761[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_driveRack_C*                      CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_1;                         // 0x0098(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3762[0x1];                                     // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3763[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3764[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_2;                         // 0x0130(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3765[0x1];                                     // 0x01A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3766[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_3;                         // 0x01B8(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3767[0x1];                                     // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3768[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mObject                        CallFunc_Array_Get_Item_4;                         // 0x0238(0x0010)(HasGetValueTypeHash)
	uint8                                         Pad_3769[0x8];                                     // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_Array_Get_Item_5;                         // 0x0250(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376A[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_6;                         // 0x0318(0x0070)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x038E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x038F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_5;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_7;                         // 0x03A0(0x0070)(HasGetValueTypeHash)
	struct FStruct_signal_data2                   CallFunc_Array_Get_Item_8;                         // 0x0410(0x01D0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_8;        // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_9;        // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_10;       // 0x05E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x05E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x05ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376B[0x2];                                     // 0x05EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376C[0x3];                                     // 0x05F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376D[0x4];                                     // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_6;        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_drive_C*                          CallFunc_Array_Get_Item_9;                         // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_box_C*                            CallFunc_Array_Get_Item_10;                        // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_signalDataDynamic              CallFunc_Array_Get_Item_11;                        // 0x0618(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_11;       // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_12;       // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_13;       // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x068B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_14;       // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376E[0x2];                                     // 0x068E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376F[0x3];                                     // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3770[0x3];                                     // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheEvil_C_CheckForEvil) == 0x000010, "Wrong alignment on TheEvil_C_CheckForEvil");
static_assert(sizeof(TheEvil_C_CheckForEvil) == 0x0006B0, "Wrong size on TheEvil_C_CheckForEvil");
static_assert(offsetof(TheEvil_C_CheckForEvil, Evil) == 0x000000, "Member 'TheEvil_C_CheckForEvil::Evil' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_4) == 0x000034, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_5) == 0x000038, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_5) == 0x000040, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_5) == 0x000048, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_6) == 0x00004C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_6) == 0x000050, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_6) == 0x000054, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_7) == 0x000058, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_7) == 0x00005C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_8) == 0x000060, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_7) == 0x000064, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_8) == 0x000068, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_8) == 0x00006C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_9) == 0x000070, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_9) == 0x000074, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_9) == 0x000078, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_10) == 0x00007C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000080, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000088, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item) == 0x000090, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00010D, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00010E, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue) == 0x000114, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_10) == 0x00011C, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000120, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_1) == 0x000128, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_3) == 0x0001A0, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0001A5, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0001A6, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_10) == 0x0001A8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_1) == 0x0001AC, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x0001B0, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_3) == 0x0001B8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_4) == 0x000228, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_3) == 0x00022C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x00022D, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x00022E, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Array_Index_Variable_11) == 0x000230, "Member 'TheEvil_C_CheckForEvil::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_2) == 0x000234, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_4) == 0x000238, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_5) == 0x000250, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_5) == 0x000310, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_4) == 0x000314, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_6) == 0x000318, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_6) == 0x000388, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x00038C, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_5) == 0x00038D, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x00038E, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_3) == 0x00038F, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x000390, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_5) == 0x000398, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_7) == 0x0003A0, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_8) == 0x000410, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_8) == 0x0005E0, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_9) == 0x0005E1, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_10) == 0x0005E2, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_4) == 0x0005E3, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_7) == 0x0005E4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_8) == 0x0005E8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_6) == 0x0005EC, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_7) == 0x0005ED, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, Temp_int_Loop_Counter_Variable_11) == 0x0005F0, "Member 'TheEvil_C_CheckForEvil::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_8) == 0x0005F4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Add_IntInt_ReturnValue_11) == 0x0005F8, "Member 'TheEvil_C_CheckForEvil::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_getMainGamemode_AsMain_Gamemode_6) == 0x000600, "Member 'TheEvil_C_CheckForEvil::CallFunc_getMainGamemode_AsMain_Gamemode_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_9) == 0x000608, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_10) == 0x000610, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Get_Item_11) == 0x000618, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_11) == 0x000688, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_12) == 0x000689, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_13) == 0x00068A, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_5) == 0x00068B, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_EqualEqual_NameName_ReturnValue_14) == 0x00068C, "Member 'TheEvil_C_CheckForEvil::CallFunc_EqualEqual_NameName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_BooleanOR_ReturnValue_6) == 0x00068D, "Member 'TheEvil_C_CheckForEvil::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_9) == 0x000690, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_9) == 0x000694, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_10) == 0x000698, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_10) == 0x00069C, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Array_Length_ReturnValue_11) == 0x0006A0, "Member 'TheEvil_C_CheckForEvil::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(TheEvil_C_CheckForEvil, CallFunc_Less_IntInt_ReturnValue_11) == 0x0006A4, "Member 'TheEvil_C_CheckForEvil::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");

// Function theEvil.theEvil_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct TheEvil_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3771[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TheEvil_C_LoadData) == 0x000010, "Wrong alignment on TheEvil_C_LoadData");
static_assert(sizeof(TheEvil_C_LoadData) == 0x0000E0, "Wrong size on TheEvil_C_LoadData");
static_assert(offsetof(TheEvil_C_LoadData, Data) == 0x000000, "Member 'TheEvil_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, Return) == 0x0000C0, "Member 'TheEvil_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'TheEvil_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'TheEvil_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'TheEvil_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function theEvil.theEvil_C.getData
// 0x02C0 (0x02C0 - 0x0000)
struct TheEvil_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00E0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x00F0(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0100(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01C0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x01E0(0x0010)(ReferenceParm)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_3;                          // 0x01F0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0200(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(TheEvil_C_GetData) == 0x000010, "Wrong alignment on TheEvil_C_GetData");
static_assert(sizeof(TheEvil_C_GetData) == 0x0002C0, "Wrong size on TheEvil_C_GetData");
static_assert(offsetof(TheEvil_C_GetData, Data) == 0x000000, "Member 'TheEvil_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000E0, "Member 'TheEvil_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x0000F0, "Member 'TheEvil_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_getData_data) == 0x000100, "Member 'TheEvil_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'TheEvil_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'TheEvil_C_GetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_2) == 0x0001E0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_MakeArray_Array_3) == 0x0001F0, "Member 'TheEvil_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(TheEvil_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000200, "Member 'TheEvil_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

