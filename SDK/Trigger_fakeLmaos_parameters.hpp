#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trigger_fakeLmaos

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"


namespace SDK::Params
{

// Function trigger_fakeLmaos.trigger_fakeLmaos_C.getTriggerData
// 0x02E0 (0x02E0 - 0x0000)
struct Trigger_fakeLmaos_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_triggerSave                    CallFunc_getTriggerData_data;                      // 0x00F0(0x00F0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	struct FStruct_triggerSave                    K2Node_SetFieldsInStruct_StructOut;                // 0x01F0(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(Trigger_fakeLmaos_C_GetTriggerData) == 0x000010, "Wrong alignment on Trigger_fakeLmaos_C_GetTriggerData");
static_assert(sizeof(Trigger_fakeLmaos_C_GetTriggerData) == 0x0002E0, "Wrong size on Trigger_fakeLmaos_C_GetTriggerData");
static_assert(offsetof(Trigger_fakeLmaos_C_GetTriggerData, Data) == 0x000000, "Member 'Trigger_fakeLmaos_C_GetTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_GetTriggerData, CallFunc_getTriggerData_data) == 0x0000F0, "Member 'Trigger_fakeLmaos_C_GetTriggerData::CallFunc_getTriggerData_data' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_GetTriggerData, K2Node_MakeArray_Array) == 0x0001E0, "Member 'Trigger_fakeLmaos_C_GetTriggerData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_GetTriggerData, K2Node_SetFieldsInStruct_StructOut) == 0x0001F0, "Member 'Trigger_fakeLmaos_C_GetTriggerData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function trigger_fakeLmaos.trigger_fakeLmaos_C.loadTriggerData
// 0x0130 (0x0130 - 0x0000)
struct Trigger_fakeLmaos_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadTriggerData_return;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43B3[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B4[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B5[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADish_C*                                CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Trigger_fakeLmaos_C_LoadTriggerData) == 0x000010, "Wrong alignment on Trigger_fakeLmaos_C_LoadTriggerData");
static_assert(sizeof(Trigger_fakeLmaos_C_LoadTriggerData) == 0x000130, "Wrong size on Trigger_fakeLmaos_C_LoadTriggerData");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, Data) == 0x000000, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::Return' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_loadTriggerData_return) == 0x0000F1, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_loadTriggerData_return' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000108, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_LoadTriggerData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000121, "Member 'Trigger_fakeLmaos_C_LoadTriggerData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function trigger_fakeLmaos.trigger_fakeLmaos_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Trigger_fakeLmaos_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_fakeLmaos_C_RunTrigger) == 0x000008, "Wrong alignment on Trigger_fakeLmaos_C_RunTrigger");
static_assert(sizeof(Trigger_fakeLmaos_C_RunTrigger) == 0x000010, "Wrong size on Trigger_fakeLmaos_C_RunTrigger");
static_assert(offsetof(Trigger_fakeLmaos_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Trigger_fakeLmaos_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_RunTrigger, Param_Index) == 0x000008, "Member 'Trigger_fakeLmaos_C_RunTrigger::Param_Index' has a wrong offset!");

// Function trigger_fakeLmaos.trigger_fakeLmaos_C.ExecuteUbergraph_trigger_fakeLmaos
// 0x0018 (0x0018 - 0x0000)
struct Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43B6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos) == 0x000008, "Wrong alignment on Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos");
static_assert(sizeof(Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos) == 0x000018, "Wrong size on Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos");
static_assert(offsetof(Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos, EntryPoint) == 0x000000, "Member 'Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos::EntryPoint' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos, K2Node_Event_owner) == 0x000008, "Member 'Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos, K2Node_Event_index) == 0x000010, "Member 'Trigger_fakeLmaos_C_ExecuteUbergraph_trigger_fakeLmaos::K2Node_Event_index' has a wrong offset!");

}

