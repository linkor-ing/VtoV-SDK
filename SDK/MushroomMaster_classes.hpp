#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MushroomMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Struct_shroom_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass mushroomMaster.mushroomMaster_C
// 0x0148 (0x0368 - 0x0220)
class AMushroomMaster_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0230(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Types;                                             // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Height;                                            // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Radius;                                            // 0x0254(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_shroom>                 Data;                                              // 0x0260(0x0010)(Edit, BlueprintVisible)
	int32                                         Type;                                              // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Surface;                                           // 0x0274(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_shroom                         Rand;                                              // 0x0300(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Is;                                                // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Form();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void Spawn();
	void ExecuteUbergraph_mushroomMaster(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mushroomMaster_C">();
	}
	static class AMushroomMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMushroomMaster_C>();
	}
};
static_assert(alignof(AMushroomMaster_C) == 0x000008, "Wrong alignment on AMushroomMaster_C");
static_assert(sizeof(AMushroomMaster_C) == 0x000368, "Wrong size on AMushroomMaster_C");
static_assert(offsetof(AMushroomMaster_C, UberGraphFrame) == 0x000220, "Member 'AMushroomMaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, DefaultSceneRoot) == 0x000228, "Member 'AMushroomMaster_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Loc) == 0x000230, "Member 'AMushroomMaster_C::Loc' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Types) == 0x000240, "Member 'AMushroomMaster_C::Types' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Height) == 0x000250, "Member 'AMushroomMaster_C::Height' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Radius) == 0x000254, "Member 'AMushroomMaster_C::Radius' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Data) == 0x000260, "Member 'AMushroomMaster_C::Data' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Type) == 0x000270, "Member 'AMushroomMaster_C::Type' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Surface) == 0x000274, "Member 'AMushroomMaster_C::Surface' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Rand) == 0x000300, "Member 'AMushroomMaster_C::Rand' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Length) == 0x000358, "Member 'AMushroomMaster_C::Length' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Is) == 0x00035C, "Member 'AMushroomMaster_C::Is' has a wrong offset!");
static_assert(offsetof(AMushroomMaster_C, Time) == 0x000360, "Member 'AMushroomMaster_C::Time' has a wrong offset!");

}

