#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PropInventory

#include "Basic.hpp"

#include "PropInventory_classes.hpp"
#include "PropInventory_parameters.hpp"


namespace SDK
{

// Function propInventory.propInventory_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AProp_container_C*                Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPropInventory_C::Init(class UStaticMeshComponent* Target, class AProp_container_C* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "Init");

	Params::PropInventory_C_Init Parms{};

	Parms.Target = Target;
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function propInventory.propInventory_C.addObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InsertIndex1                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Err                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UPropInventory_C::AddObject(class AActor* Actor, int32 InsertIndex1, bool* Return, class FString* Err)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "addObject");

	Params::PropInventory_C_AddObject Parms{};

	Parms.Actor = Actor;
	Parms.InsertIndex1 = InsertIndex1;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Err != nullptr)
		*Err = std::move(Parms.Err);
}


// Function propInventory.propInventory_C.takeObj
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_RemoveVol                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FStruct_save                     Output                                                 (Parm, OutParm, HasGetValueTypeHash)
// class AActor*                           Object                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPropInventory_C::TakeObj(int32 Param_Index, bool Param_RemoveVol, bool* Return, struct FStruct_save* Output, class AActor** Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "takeObj");

	Params::PropInventory_C_TakeObj Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Param_RemoveVol = Param_RemoveVol;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Output != nullptr)
		*Output = std::move(Parms.Output);

	if (Object != nullptr)
		*Object = Parms.Object;
}


// Function propInventory.propInventory_C.removeVol
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPropInventory_C::RemoveVol(class UStaticMeshComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "removeVol");

	Params::PropInventory_C_RemoveVol Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function propInventory.propInventory_C.moveIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPropInventory_C::MoveIndex(int32 ID, int32 Add, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "moveIndex");

	Params::PropInventory_C_MoveIndex Parms{};

	Parms.ID = ID;
	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function propInventory.propInventory_C.addLoot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPropInventory_C::AddLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "addLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function propInventory.propInventory_C.getObj
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FStruct_save                     Output                                                 (Parm, OutParm, HasGetValueTypeHash)

void UPropInventory_C::GetObj(int32 Param_Index, bool* Return, struct FStruct_save* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("propInventory_C", "getObj");

	Params::PropInventory_C_GetObj Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}

}

