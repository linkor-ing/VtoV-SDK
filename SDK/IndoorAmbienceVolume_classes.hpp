#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IndoorAmbienceVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass indoorAmbienceVolume.indoorAmbienceVolume_C
// 0x0068 (0x0288 - 0x0220)
class AIndoorAmbienceVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         A_a_AA1AB4DA4672C2E455F9339C96E3D27B;              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            A__Direction_AA1AB4DA4672C2E455F9339C96E3D27B;     // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     A;                                                 // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Room;                                              // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound;                                             // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReverbEffect*                          Reverb;                                            // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Priority;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInside;                                          // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_indoorAmbienceVolume(int32 EntryPoint);
	void Activate(bool Param_Activate, bool IsOn);
	void A__UpdateFunc();
	void A__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"indoorAmbienceVolume_C">();
	}
	static class AIndoorAmbienceVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIndoorAmbienceVolume_C>();
	}
};
static_assert(alignof(AIndoorAmbienceVolume_C) == 0x000008, "Wrong alignment on AIndoorAmbienceVolume_C");
static_assert(sizeof(AIndoorAmbienceVolume_C) == 0x000288, "Wrong size on AIndoorAmbienceVolume_C");
static_assert(offsetof(AIndoorAmbienceVolume_C, UberGraphFrame) == 0x000220, "Member 'AIndoorAmbienceVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, StaticMesh) == 0x000228, "Member 'AIndoorAmbienceVolume_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Audio) == 0x000230, "Member 'AIndoorAmbienceVolume_C::Audio' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Box) == 0x000238, "Member 'AIndoorAmbienceVolume_C::Box' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, DefaultSceneRoot) == 0x000240, "Member 'AIndoorAmbienceVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, A_a_AA1AB4DA4672C2E455F9339C96E3D27B) == 0x000248, "Member 'AIndoorAmbienceVolume_C::A_a_AA1AB4DA4672C2E455F9339C96E3D27B' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, A__Direction_AA1AB4DA4672C2E455F9339C96E3D27B) == 0x00024C, "Member 'AIndoorAmbienceVolume_C::A__Direction_AA1AB4DA4672C2E455F9339C96E3D27B' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, A) == 0x000250, "Member 'AIndoorAmbienceVolume_C::A' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Room) == 0x000258, "Member 'AIndoorAmbienceVolume_C::Room' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Volume) == 0x000268, "Member 'AIndoorAmbienceVolume_C::Volume' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Sound) == 0x000270, "Member 'AIndoorAmbienceVolume_C::Sound' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Reverb) == 0x000278, "Member 'AIndoorAmbienceVolume_C::Reverb' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, Priority) == 0x000280, "Member 'AIndoorAmbienceVolume_C::Priority' has a wrong offset!");
static_assert(offsetof(AIndoorAmbienceVolume_C, IsInside) == 0x000284, "Member 'AIndoorAmbienceVolume_C::IsInside' has a wrong offset!");

}

