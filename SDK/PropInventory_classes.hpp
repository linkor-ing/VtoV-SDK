#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PropInventory

#include "Basic.hpp"

#include "Struct_lootWeighted_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass propInventory.propInventory_C
// 0x0068 (0x0118 - 0x00B0)
class UPropInventory_C final : public UActorComponent
{
public:
	int32                                         Index_PropInventory_C;                             // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxVol;                                            // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrVol;                                           // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Obj;                                               // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mass;                                              // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_container_C*                      Owner;                                             // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OwnMass;                                           // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_lootWeighted>           RandomLoot;                                        // 0x00E0(0x0010)(Edit, BlueprintVisible)
	bool                                          Infinite;                                          // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Player;                                            // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VolumeMult;                                        // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomVolume;                                      // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Filter;                                            // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NewVar_0;                                          // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxLoot;                                           // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Init(class UStaticMeshComponent* Target, class AProp_container_C* Param_Owner);
	void AddObject(class AActor* Actor, int32 InsertIndex1, bool* Return, class FString* Err);
	void TakeObj(int32 Param_Index, bool Param_RemoveVol, bool* Return, struct FStruct_save* Output, class AActor** Object);
	void RemoveVol(class UStaticMeshComponent* Target);
	void MoveIndex(int32 ID, int32 Add, bool* Return);
	void AddLoot();
	void GetObj(int32 Param_Index, bool* Return, struct FStruct_save* Output);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"propInventory_C">();
	}
	static class UPropInventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPropInventory_C>();
	}
};
static_assert(alignof(UPropInventory_C) == 0x000008, "Wrong alignment on UPropInventory_C");
static_assert(sizeof(UPropInventory_C) == 0x000118, "Wrong size on UPropInventory_C");
static_assert(offsetof(UPropInventory_C, Index_PropInventory_C) == 0x0000B0, "Member 'UPropInventory_C::Index_PropInventory_C' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, MaxVol) == 0x0000B4, "Member 'UPropInventory_C::MaxVol' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, CurrVol) == 0x0000B8, "Member 'UPropInventory_C::CurrVol' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Obj) == 0x0000C0, "Member 'UPropInventory_C::Obj' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Mass) == 0x0000C8, "Member 'UPropInventory_C::Mass' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Owner) == 0x0000D0, "Member 'UPropInventory_C::Owner' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, OwnMass) == 0x0000D8, "Member 'UPropInventory_C::OwnMass' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, RandomLoot) == 0x0000E0, "Member 'UPropInventory_C::RandomLoot' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Infinite) == 0x0000F0, "Member 'UPropInventory_C::Infinite' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Player) == 0x0000F1, "Member 'UPropInventory_C::Player' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, VolumeMult) == 0x0000F4, "Member 'UPropInventory_C::VolumeMult' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, CustomVolume) == 0x0000F8, "Member 'UPropInventory_C::CustomVolume' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, Filter) == 0x000100, "Member 'UPropInventory_C::Filter' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, NewVar_0) == 0x000110, "Member 'UPropInventory_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UPropInventory_C, MaxLoot) == 0x000114, "Member 'UPropInventory_C::MaxLoot' has a wrong offset!");

}

