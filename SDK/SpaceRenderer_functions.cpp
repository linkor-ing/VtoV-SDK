#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpaceRenderer

#include "Basic.hpp"

#include "SpaceRenderer_classes.hpp"
#include "SpaceRenderer_parameters.hpp"


namespace SDK
{

// Function spaceRenderer.spaceRenderer_C.ExecuteUbergraph_spaceRenderer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::ExecuteUbergraph_spaceRenderer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "ExecuteUbergraph_spaceRenderer");

	Params::SpaceRenderer_C_ExecuteUbergraph_spaceRenderer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function spaceRenderer.spaceRenderer_C.signalFound
// (BlueprintCallable, BlueprintEvent)

void ASpaceRenderer_C::SignalFound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "signalFound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function spaceRenderer.spaceRenderer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASpaceRenderer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function spaceRenderer.spaceRenderer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "ReceiveTick");

	Params::SpaceRenderer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function spaceRenderer.spaceRenderer_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASpaceRenderer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function spaceRenderer.spaceRenderer_C.getCoords
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::GetCoords(const struct FVector2D& InVec, struct FVector* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "getCoords");

	Params::SpaceRenderer_C_GetCoords Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function spaceRenderer.spaceRenderer_C.generate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASpaceRenderer_C::Generate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "generate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function spaceRenderer.spaceRenderer_C.convertCoords
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::ConvertCoords(const struct FVector2D& InVec, struct FVector* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "convertCoords");

	Params::SpaceRenderer_C_ConvertCoords Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function spaceRenderer.spaceRenderer_C.gatherSignal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_signal_spawn             Data                                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::GatherSignal(bool* Return, int32* Param_Index, struct FStruct_signal_spawn* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "gatherSignal");

	Params::SpaceRenderer_C_GatherSignal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function spaceRenderer.spaceRenderer_C.addSignal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpaceRenderer_C::AddSignal(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "addSignal");

	Params::SpaceRenderer_C_AddSignal Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function spaceRenderer.spaceRenderer_C.addSignal_cursor
// (Public, BlueprintCallable, BlueprintEvent)

void ASpaceRenderer_C::AddSignal_cursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("spaceRenderer_C", "addSignal_cursor");

	UObject::ProcessEvent(Func, nullptr);
}

}

