#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_computer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"


namespace SDK::Params
{

// Function panel_computer.panel_computer_C.ExecuteUbergraph_panel_computer
// 0x0410 (0x0410 - 0x0000)
struct Panel_computer_C_ExecuteUbergraph_panel_computer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3099[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309A[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AProp_drive_C*                          K2Node_DynamicCast_AsProp_Drive;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309B[0xF];                                     // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309C[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_uploadData_succ;                          // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_start_succ;                               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309D[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309E[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309F[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A0[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A1[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0278(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A2[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x02B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A3[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A4[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A5[0x2];                                     // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A6[0x3];                                     // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x03E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A7[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x03F4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x03FC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_ExecuteUbergraph_panel_computer) == 0x000010, "Wrong alignment on Panel_computer_C_ExecuteUbergraph_panel_computer");
static_assert(sizeof(Panel_computer_C_ExecuteUbergraph_panel_computer) == 0x000410, "Wrong size on Panel_computer_C_ExecuteUbergraph_panel_computer");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, EntryPoint) == 0x000000, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000010, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000018, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000020, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000028, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_bFromSweep) == 0x00002C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_SweepResult) == 0x000030, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_DynamicCast_AsProp_Drive) == 0x0000B8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_DynamicCast_AsProp_Drive' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000D0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakTransform_Location) == 0x000100, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakTransform_Rotation) == 0x00010C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000124, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001AC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001B0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherActor) == 0x0001B8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherComp) == 0x0001C0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001C8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001CC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001CD, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001CE, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_uploadData_succ) == 0x0001CF, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_uploadData_succ' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_start_succ) == 0x0001D0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_start_succ' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, Temp_int_Variable) == 0x0001D4, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_getMainPlayer_AsMain_Player) == 0x0001D8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_DeltaSeconds) == 0x0001E0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, Temp_int_Variable_1) == 0x0001E4, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Percent_IntInt_ReturnValue) == 0x0001EC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_getMainGameInstance_AsGame_Inst) == 0x0001F0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_IsValid_ReturnValue_1) == 0x0001F8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001F9, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_CreateDelegate_OutputDelegate) == 0x0001FC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00020C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Add_IntInt_ReturnValue) == 0x000210, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Concat_StrStr_ReturnValue) == 0x000218, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000228, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Conv_StringToName_ReturnValue) == 0x000238, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000240, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000248, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_getMainPlayer_AsMain_Player_1) == 0x000258, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000260, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_getSaveSlot_saveSlot) == 0x000268, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_gamemode) == 0x000270, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_MakeLiteralText_ReturnValue) == 0x000278, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Greater_IntInt_ReturnValue) == 0x000290, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Conv_TextToString_ReturnValue) == 0x000298, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_player) == 0x0002A8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_hit) == 0x0002B0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_index) == 0x000338, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Event_action) == 0x00033C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000340, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_SwitchEnum_CmpSuccess) == 0x000350, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_Conv_StringToName_ReturnValue_3) == 0x000354, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_bBlockingHit) == 0x00035C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_bInitialOverlap) == 0x00035D, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_Time) == 0x000360, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_Distance) == 0x000364, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_Location) == 0x000368, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_ImpactPoint) == 0x000374, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_Normal) == 0x000380, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_ImpactNormal) == 0x00038C, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_PhysMat) == 0x000398, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_HitActor) == 0x0003A0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_HitComponent) == 0x0003A8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_HitBoneName) == 0x0003B0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_HitItem) == 0x0003B8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_ElementIndex) == 0x0003BC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_FaceIndex) == 0x0003C0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_TraceStart) == 0x0003C4, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_BreakHitResult_TraceEnd) == 0x0003D0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, Temp_bool_Variable) == 0x0003DC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_CustomEvent_DestroyedActor) == 0x0003E0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, Temp_name_Variable) == 0x0003E8, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, CallFunc_IsValid_ReturnValue_2) == 0x0003F0, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Select_Default) == 0x0003F4, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ExecuteUbergraph_panel_computer, K2Node_Select_Default_1) == 0x0003FC, "Member 'Panel_computer_C_ExecuteUbergraph_panel_computer::K2Node_Select_Default_1' has a wrong offset!");

// Function panel_computer.panel_computer_C.Dest
// 0x0008 (0x0008 - 0x0000)
struct Panel_computer_C_Dest final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_Dest) == 0x000008, "Wrong alignment on Panel_computer_C_Dest");
static_assert(sizeof(Panel_computer_C_Dest) == 0x000008, "Wrong size on Panel_computer_C_Dest");
static_assert(offsetof(Panel_computer_C_Dest, DestroyedActor) == 0x000000, "Member 'Panel_computer_C_Dest::DestroyedActor' has a wrong offset!");

// Function panel_computer.panel_computer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Panel_computer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_ReceiveTick) == 0x000004, "Wrong alignment on Panel_computer_C_ReceiveTick");
static_assert(sizeof(Panel_computer_C_ReceiveTick) == 0x000004, "Wrong size on Panel_computer_C_ReceiveTick");
static_assert(offsetof(Panel_computer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Panel_computer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function panel_computer.panel_computer_C.BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function panel_computer.panel_computer_C.BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Panel_computer_C_BndEvt__drivePort_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function panel_computer.panel_computer_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Panel_computer_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Panel_computer_C_ActionOptionIndex");
static_assert(sizeof(Panel_computer_C_ActionOptionIndex) == 0x000098, "Wrong size on Panel_computer_C_ActionOptionIndex");
static_assert(offsetof(Panel_computer_C_ActionOptionIndex, Player) == 0x000000, "Member 'Panel_computer_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ActionOptionIndex, Hit) == 0x000008, "Member 'Panel_computer_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Panel_computer_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_ActionOptionIndex, Action) == 0x000094, "Member 'Panel_computer_C_ActionOptionIndex::Action' has a wrong offset!");

// Function panel_computer.panel_computer_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct Panel_computer_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_StuffUpgraded) == 0x000008, "Wrong alignment on Panel_computer_C_StuffUpgraded");
static_assert(sizeof(Panel_computer_C_StuffUpgraded) == 0x000008, "Wrong size on Panel_computer_C_StuffUpgraded");
static_assert(offsetof(Panel_computer_C_StuffUpgraded, GameMode) == 0x000000, "Member 'Panel_computer_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function panel_computer.panel_computer_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Panel_computer_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_computer_C_IsButtonUsed) == 0x000001, "Wrong alignment on Panel_computer_C_IsButtonUsed");
static_assert(sizeof(Panel_computer_C_IsButtonUsed) == 0x000001, "Wrong size on Panel_computer_C_IsButtonUsed");
static_assert(offsetof(Panel_computer_C_IsButtonUsed, Failed) == 0x000000, "Member 'Panel_computer_C_IsButtonUsed::Failed' has a wrong offset!");

// Function panel_computer.panel_computer_C.lookAt
// 0x0260 (0x0260 - 0x0000)
struct Panel_computer_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A9[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AA[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AB[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AC[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0138(0x0018)()
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AD[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AE[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AF[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0208(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B0[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0238(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_LookAt) == 0x000008, "Wrong alignment on Panel_computer_C_LookAt");
static_assert(sizeof(Panel_computer_C_LookAt) == 0x000260, "Wrong size on Panel_computer_C_LookAt");
static_assert(offsetof(Panel_computer_C_LookAt, Player) == 0x000000, "Member 'Panel_computer_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, Hit) == 0x000008, "Member 'Panel_computer_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, Return) == 0x000090, "Member 'Panel_computer_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, Text) == 0x000098, "Member 'Panel_computer_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Panel_computer_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B0, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B1, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'Panel_computer_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x000138, "Member 'Panel_computer_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_getSaveSlot_saveSlot) == 0x000150, "Member 'Panel_computer_C_LookAt::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x000158, "Member 'Panel_computer_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000168, "Member 'Panel_computer_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000180, "Member 'Panel_computer_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Greater_IntInt_ReturnValue) == 0x000190, "Member 'Panel_computer_C_LookAt::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'Panel_computer_C_LookAt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'Panel_computer_C_LookAt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Conv_IntToString_ReturnValue) == 0x0001B0, "Member 'Panel_computer_C_LookAt::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001C0, "Member 'Panel_computer_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001D0, "Member 'Panel_computer_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, K2Node_MakeArray_Array) == 0x0001E0, "Member 'Panel_computer_C_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x0001F0, "Member 'Panel_computer_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Array_Find_ReturnValue) == 0x000200, "Member 'Panel_computer_C_LookAt::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Conv_StringToText_ReturnValue) == 0x000208, "Member 'Panel_computer_C_LookAt::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000220, "Member 'Panel_computer_C_LookAt::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, K2Node_MakeArray_Array_1) == 0x000228, "Member 'Panel_computer_C_LookAt::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Array_Get_Item) == 0x000238, "Member 'Panel_computer_C_LookAt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000250, "Member 'Panel_computer_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");

// Function panel_computer.panel_computer_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct Panel_computer_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_computer_C_DreamInv) == 0x000008, "Wrong alignment on Panel_computer_C_DreamInv");
static_assert(sizeof(Panel_computer_C_DreamInv) == 0x000018, "Wrong size on Panel_computer_C_DreamInv");
static_assert(offsetof(Panel_computer_C_DreamInv, Invv) == 0x000000, "Member 'Panel_computer_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_DreamInv, Base) == 0x000010, "Member 'Panel_computer_C_DreamInv::Base' has a wrong offset!");

// Function panel_computer.panel_computer_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Panel_computer_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Panel_computer_C_GetActionOptions) == 0x000008, "Wrong alignment on Panel_computer_C_GetActionOptions");
static_assert(sizeof(Panel_computer_C_GetActionOptions) == 0x000058, "Wrong size on Panel_computer_C_GetActionOptions");
static_assert(offsetof(Panel_computer_C_GetActionOptions, Player) == 0x000000, "Member 'Panel_computer_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, Component) == 0x000008, "Member 'Panel_computer_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, Actor) == 0x000010, "Member 'Panel_computer_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, Options) == 0x000018, "Member 'Panel_computer_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Panel_computer_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Panel_computer_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Panel_computer_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Panel_computer_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

