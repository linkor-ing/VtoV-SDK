#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_laser

#include "Basic.hpp"


namespace SDK::Params
{

// Function prop_wireComponent_laser.prop_wireComponent_laser_C.ExecuteUbergraph_prop_wireComponent_laser
// 0x0020 (0x0020 - 0x0000)
struct Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWire_C*                                K2Node_Event_wire;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALaserEmitter_C*                        K2Node_DynamicCast_AsLaser_Emitter;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser) == 0x000008, "Wrong alignment on Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser");
static_assert(sizeof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser) == 0x000020, "Wrong size on Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser");
static_assert(offsetof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser, EntryPoint) == 0x000000, "Member 'Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser, K2Node_Event_wire) == 0x000008, "Member 'Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser::K2Node_Event_wire' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser, K2Node_DynamicCast_AsLaser_Emitter) == 0x000010, "Member 'Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser::K2Node_DynamicCast_AsLaser_Emitter' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Prop_wireComponent_laser_C_ExecuteUbergraph_prop_wireComponent_laser::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function prop_wireComponent_laser.prop_wireComponent_laser_C.wirePass
// 0x0008 (0x0008 - 0x0000)
struct Prop_wireComponent_laser_C_WirePass final
{
public:
	class AWire_C*                                Wire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_laser_C_WirePass) == 0x000008, "Wrong alignment on Prop_wireComponent_laser_C_WirePass");
static_assert(sizeof(Prop_wireComponent_laser_C_WirePass) == 0x000008, "Wrong size on Prop_wireComponent_laser_C_WirePass");
static_assert(offsetof(Prop_wireComponent_laser_C_WirePass, Wire) == 0x000000, "Member 'Prop_wireComponent_laser_C_WirePass::Wire' has a wrong offset!");

}

