#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_UI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_UI.umg_UI_C
// 0x0310 (0x0570 - 0x0260)
class UUmg_UI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           borders;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canv_NGOUD;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_borders;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_hotbar;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_hotbarPivot;                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_hovertext;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_hovertextS;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_lookatBounds;                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_lookatP;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_radial;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_radialtexts;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_rotateRadial;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_193;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cur;                                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cur_0;                                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cur_1;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cur_2;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cur_3;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        DreamBlur;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_42;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_44;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_186;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_256;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_stuck;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_compass;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_hovertext;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_radial;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_0;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_1;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_2;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_3;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_4;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_5;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_6;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_7;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_8;                                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_slot_9;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_66;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_battery;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_heal;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_hovertext;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_hunger;                                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_points;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_sleep;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_9;                                       // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_45;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_61;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_0;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_1;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_2;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_3;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_4;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_5;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_6;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_7;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_8;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_amSlot_9;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_fps;                                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_carmap_C*                          Umg_carmap;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_cheatMenu_C*                       Umg_cheatMenu;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_damageIndicator_C*                 Umg_damageIndicator;                               // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_inventory_C*                       Umg_inventory;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_quicksave_C*                       Umg_quicksave;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_signalName_C*                      Umg_signalName;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUmg_subtitles_C*                       Umg_subtitles;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Vbox_actionList;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_achievements;                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              HovertextSize;                                     // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HovertextLoc;                                      // 0x0498(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHovertextActive;                                 // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ChangeHovertext;                                   // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A6[0x2];                                      // 0x04A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HovertextComp;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HovTxt_actorCenter;                                // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fpss;                                              // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Mirror;                                            // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Viewport;                                          // 0x04BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUmg_objectActionButton_C*>      ActionSlots;                                       // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<Enum_interactionActions>               Actions;                                           // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Hidden;                                            // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DisableBoundingBox;                                // 0x04E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         SlotInv;                                           // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         MaxAvailableItem;                                  // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Selec;                                             // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Names;                                             // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsNames;                                           // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HideInterface;                                     // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51A[0x6];                                      // 0x051A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynmat_radial;                                     // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxIndex;                                          // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RadAngle;                                          // 0x052C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUmg_radialText_C*>              RadialTexts;                                       // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UTextBlock*>                     SlotTexts;                                         // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<int32>                                 Ind;                                               // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Stacking;                                          // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_umg_UI(int32 EntryPoint);
	void Unfocused();
	void Construct();
	void GamemodePreLoad();
	void AnyKey(const struct FKey& Key, bool Pressed);
	void GamemodeMakeKeys();
	void PropRenderer_finishProps();
	void ApplyColor(const struct FLinearColor& Color);
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Unfoc();
	void SignalDeleted();
	void SignalSaved();
	void SelectedHotbar();
	void GamemodeBeginPlay();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void SettingsApplied(const struct FStruct_settings& Settings);
	void OpenHovertext(class UPrimitiveComponent* Param_HovertextLoc, bool SettActive, const class FText& InText, bool IsActor, bool Hide);
	void AddHint(const class FText& InText);
	float CompassAngle();
	void CalcSize(struct FVector2D* Size, struct FVector2D* Min, struct FVector2D* Max, struct FVector2D* Origin);
	void ProjectClamped(const struct FVector& WorldLocation, struct FVector2D* Vec);
	void bbox(class UObject* Object, struct FVector* ReturnValue_Origin, struct FVector* ReturnValue_BoxExtent);
	void UpdSelect();
	void buildActions(TArray<Enum_interactionActions>& Actions_enums, TArray<class FString>& Actions_names, TArray<class FText>& Actions_overlays);
	void ClearActions();
	void UpdHovertext(const class FText& InText);
	void UpdateSlotInv();
	void CusSelectHotbarSlot(int32 Param_Ind);
	void AngleWheel(const struct FVector2D& Mouse);
	void UpdRadialText();
	struct FLinearColor C(int32 Param_Index);
	class FString ProcessInt(TArray<uint8>& Dasasdasd);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_UI_C">();
	}
	static class UUmg_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_UI_C>();
	}
};
static_assert(alignof(UUmg_UI_C) == 0x000008, "Wrong alignment on UUmg_UI_C");
static_assert(sizeof(UUmg_UI_C) == 0x000570, "Wrong size on UUmg_UI_C");
static_assert(offsetof(UUmg_UI_C, UberGraphFrame) == 0x000260, "Member 'UUmg_UI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, borders) == 0x000268, "Member 'UUmg_UI_C::borders' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canv_NGOUD) == 0x000270, "Member 'UUmg_UI_C::Canv_NGOUD' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_borders) == 0x000278, "Member 'UUmg_UI_C::Canvas_borders' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_hotbar) == 0x000280, "Member 'UUmg_UI_C::Canvas_hotbar' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_hotbarPivot) == 0x000288, "Member 'UUmg_UI_C::Canvas_hotbarPivot' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_hovertext) == 0x000290, "Member 'UUmg_UI_C::Canvas_hovertext' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_hovertextS) == 0x000298, "Member 'UUmg_UI_C::Canvas_hovertextS' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_lookatBounds) == 0x0002A0, "Member 'UUmg_UI_C::Canvas_lookatBounds' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_lookatP) == 0x0002A8, "Member 'UUmg_UI_C::Canvas_lookatP' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_radial) == 0x0002B0, "Member 'UUmg_UI_C::Canvas_radial' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_radialtexts) == 0x0002B8, "Member 'UUmg_UI_C::Canvas_radialtexts' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Canvas_rotateRadial) == 0x0002C0, "Member 'UUmg_UI_C::Canvas_rotateRadial' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, CanvasPanel_193) == 0x0002C8, "Member 'UUmg_UI_C::CanvasPanel_193' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Cur) == 0x0002D0, "Member 'UUmg_UI_C::Cur' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Cur_0) == 0x0002D8, "Member 'UUmg_UI_C::Cur_0' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Cur_1) == 0x0002E0, "Member 'UUmg_UI_C::Cur_1' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Cur_2) == 0x0002E8, "Member 'UUmg_UI_C::Cur_2' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Cur_3) == 0x0002F0, "Member 'UUmg_UI_C::Cur_3' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, DreamBlur) == 0x0002F8, "Member 'UUmg_UI_C::DreamBlur' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_3) == 0x000300, "Member 'UUmg_UI_C::Image_3' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_4) == 0x000308, "Member 'UUmg_UI_C::Image_4' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_42) == 0x000310, "Member 'UUmg_UI_C::Image_42' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_44) == 0x000318, "Member 'UUmg_UI_C::Image_44' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_186) == 0x000320, "Member 'UUmg_UI_C::Image_186' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_256) == 0x000328, "Member 'UUmg_UI_C::Image_256' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Image_stuck) == 0x000330, "Member 'UUmg_UI_C::Image_stuck' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_compass) == 0x000338, "Member 'UUmg_UI_C::Img_compass' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_hovertext) == 0x000340, "Member 'UUmg_UI_C::Img_hovertext' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_radial) == 0x000348, "Member 'UUmg_UI_C::Img_radial' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_0) == 0x000350, "Member 'UUmg_UI_C::Img_slot_0' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_1) == 0x000358, "Member 'UUmg_UI_C::Img_slot_1' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_2) == 0x000360, "Member 'UUmg_UI_C::Img_slot_2' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_3) == 0x000368, "Member 'UUmg_UI_C::Img_slot_3' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_4) == 0x000370, "Member 'UUmg_UI_C::Img_slot_4' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_5) == 0x000378, "Member 'UUmg_UI_C::Img_slot_5' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_6) == 0x000380, "Member 'UUmg_UI_C::Img_slot_6' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_7) == 0x000388, "Member 'UUmg_UI_C::Img_slot_7' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_8) == 0x000390, "Member 'UUmg_UI_C::Img_slot_8' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Img_slot_9) == 0x000398, "Member 'UUmg_UI_C::Img_slot_9' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, RetainerBox_66) == 0x0003A0, "Member 'UUmg_UI_C::RetainerBox_66' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_battery) == 0x0003A8, "Member 'UUmg_UI_C::Text_battery' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_heal) == 0x0003B0, "Member 'UUmg_UI_C::Text_heal' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_hovertext) == 0x0003B8, "Member 'UUmg_UI_C::Text_hovertext' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_hunger) == 0x0003C0, "Member 'UUmg_UI_C::Text_hunger' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_points) == 0x0003C8, "Member 'UUmg_UI_C::Text_points' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Text_sleep) == 0x0003D0, "Member 'UUmg_UI_C::Text_sleep' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, TextBlock_9) == 0x0003D8, "Member 'UUmg_UI_C::TextBlock_9' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, TextBlock_45) == 0x0003E0, "Member 'UUmg_UI_C::TextBlock_45' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, TextBlock_61) == 0x0003E8, "Member 'UUmg_UI_C::TextBlock_61' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_0) == 0x0003F0, "Member 'UUmg_UI_C::Txt_amSlot_0' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_1) == 0x0003F8, "Member 'UUmg_UI_C::Txt_amSlot_1' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_2) == 0x000400, "Member 'UUmg_UI_C::Txt_amSlot_2' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_3) == 0x000408, "Member 'UUmg_UI_C::Txt_amSlot_3' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_4) == 0x000410, "Member 'UUmg_UI_C::Txt_amSlot_4' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_5) == 0x000418, "Member 'UUmg_UI_C::Txt_amSlot_5' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_6) == 0x000420, "Member 'UUmg_UI_C::Txt_amSlot_6' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_7) == 0x000428, "Member 'UUmg_UI_C::Txt_amSlot_7' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_8) == 0x000430, "Member 'UUmg_UI_C::Txt_amSlot_8' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_amSlot_9) == 0x000438, "Member 'UUmg_UI_C::Txt_amSlot_9' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Txt_fps) == 0x000440, "Member 'UUmg_UI_C::Txt_fps' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_carmap) == 0x000448, "Member 'UUmg_UI_C::Umg_carmap' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_cheatMenu) == 0x000450, "Member 'UUmg_UI_C::Umg_cheatMenu' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_damageIndicator) == 0x000458, "Member 'UUmg_UI_C::Umg_damageIndicator' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_inventory) == 0x000460, "Member 'UUmg_UI_C::Umg_inventory' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_quicksave) == 0x000468, "Member 'UUmg_UI_C::Umg_quicksave' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_signalName) == 0x000470, "Member 'UUmg_UI_C::Umg_signalName' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Umg_subtitles) == 0x000478, "Member 'UUmg_UI_C::Umg_subtitles' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Vbox_actionList) == 0x000480, "Member 'UUmg_UI_C::Vbox_actionList' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, VerticalBox_achievements) == 0x000488, "Member 'UUmg_UI_C::VerticalBox_achievements' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, HovertextSize) == 0x000490, "Member 'UUmg_UI_C::HovertextSize' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, HovertextLoc) == 0x000498, "Member 'UUmg_UI_C::HovertextLoc' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, IsHovertextActive) == 0x0004A4, "Member 'UUmg_UI_C::IsHovertextActive' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, ChangeHovertext) == 0x0004A5, "Member 'UUmg_UI_C::ChangeHovertext' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, HovertextComp) == 0x0004A8, "Member 'UUmg_UI_C::HovertextComp' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, HovTxt_actorCenter) == 0x0004B0, "Member 'UUmg_UI_C::HovTxt_actorCenter' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Fpss) == 0x0004B4, "Member 'UUmg_UI_C::Fpss' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Mirror) == 0x0004B8, "Member 'UUmg_UI_C::Mirror' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Viewport) == 0x0004BC, "Member 'UUmg_UI_C::Viewport' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, ActionSlots) == 0x0004C8, "Member 'UUmg_UI_C::ActionSlots' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Actions) == 0x0004D8, "Member 'UUmg_UI_C::Actions' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Hidden) == 0x0004E8, "Member 'UUmg_UI_C::Hidden' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, DisableBoundingBox) == 0x0004E9, "Member 'UUmg_UI_C::DisableBoundingBox' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, SlotInv) == 0x0004F0, "Member 'UUmg_UI_C::SlotInv' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, MaxAvailableItem) == 0x000500, "Member 'UUmg_UI_C::MaxAvailableItem' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Selec) == 0x000504, "Member 'UUmg_UI_C::Selec' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Names) == 0x000508, "Member 'UUmg_UI_C::Names' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, IsNames) == 0x000518, "Member 'UUmg_UI_C::IsNames' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, HideInterface) == 0x000519, "Member 'UUmg_UI_C::HideInterface' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Dynmat_radial) == 0x000520, "Member 'UUmg_UI_C::Dynmat_radial' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, MaxIndex) == 0x000528, "Member 'UUmg_UI_C::MaxIndex' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, RadAngle) == 0x00052C, "Member 'UUmg_UI_C::RadAngle' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, RadialTexts) == 0x000538, "Member 'UUmg_UI_C::RadialTexts' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, SlotTexts) == 0x000548, "Member 'UUmg_UI_C::SlotTexts' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Ind) == 0x000558, "Member 'UUmg_UI_C::Ind' has a wrong offset!");
static_assert(offsetof(UUmg_UI_C, Stacking) == 0x000568, "Member 'UUmg_UI_C::Stacking' has a wrong offset!");

}

