#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_badSun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_badSun.umg_badSun_C
// 0x0058 (0x02B8 - 0x0260)
class UUmg_badSun_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canv;                                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_45;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         A;                                                 // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide;                                              // 0x028C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD5[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AbadSun_C*                              SunObj;                                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UPhysicalMaterial*>              SeeThrough;                                        // 0x0298(0x0010)(Edit, BlueprintVisible)
	bool                                          D;                                                 // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD6[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DryAlpha;                                          // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dry;                                               // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Super;                                             // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_umg_badSun(int32 EntryPoint);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_badSun_C">();
	}
	static class UUmg_badSun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_badSun_C>();
	}
};
static_assert(alignof(UUmg_badSun_C) == 0x000008, "Wrong alignment on UUmg_badSun_C");
static_assert(sizeof(UUmg_badSun_C) == 0x0002B8, "Wrong size on UUmg_badSun_C");
static_assert(offsetof(UUmg_badSun_C, UberGraphFrame) == 0x000260, "Member 'UUmg_badSun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Canv) == 0x000268, "Member 'UUmg_badSun_C::Canv' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Image_45) == 0x000270, "Member 'UUmg_badSun_C::Image_45' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Obj) == 0x000278, "Member 'UUmg_badSun_C::Obj' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, A) == 0x000288, "Member 'UUmg_badSun_C::A' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Hide) == 0x00028C, "Member 'UUmg_badSun_C::Hide' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, SunObj) == 0x000290, "Member 'UUmg_badSun_C::SunObj' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, SeeThrough) == 0x000298, "Member 'UUmg_badSun_C::SeeThrough' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, D) == 0x0002A8, "Member 'UUmg_badSun_C::D' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, DryAlpha) == 0x0002AC, "Member 'UUmg_badSun_C::DryAlpha' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Dry) == 0x0002B0, "Member 'UUmg_badSun_C::Dry' has a wrong offset!");
static_assert(offsetof(UUmg_badSun_C, Super) == 0x0002B1, "Member 'UUmg_badSun_C::Super' has a wrong offset!");

}

