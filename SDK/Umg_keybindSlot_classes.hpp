#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_keybindSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_keybind_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_keybindSlot.umg_keybindSlot_C
// 0x0078 (0x02D8 - 0x0260)
class UUmg_keybindSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                button_bind;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_reset;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_v_res;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_179;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_sel;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_key;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_name;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Index_Umg_keybindSlot_C;                           // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_208B[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_keybind                        Data;                                              // 0x02A8(0x0030)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_umg_keybindSlot(int32 EntryPoint);
	void BndEvt__button_reset_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void Construct();
	void BndEvt__button_bind_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Upd();
	void SetBind(const struct FKey& Key);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_keybindSlot_C">();
	}
	static class UUmg_keybindSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_keybindSlot_C>();
	}
};
static_assert(alignof(UUmg_keybindSlot_C) == 0x000008, "Wrong alignment on UUmg_keybindSlot_C");
static_assert(sizeof(UUmg_keybindSlot_C) == 0x0002D8, "Wrong size on UUmg_keybindSlot_C");
static_assert(offsetof(UUmg_keybindSlot_C, UberGraphFrame) == 0x000260, "Member 'UUmg_keybindSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, button_bind) == 0x000268, "Member 'UUmg_keybindSlot_C::button_bind' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Button_reset) == 0x000270, "Member 'UUmg_keybindSlot_C::Button_reset' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Canvas_v_res) == 0x000278, "Member 'UUmg_keybindSlot_C::Canvas_v_res' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Image_179) == 0x000280, "Member 'UUmg_keybindSlot_C::Image_179' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Img_sel) == 0x000288, "Member 'UUmg_keybindSlot_C::Img_sel' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Text_key) == 0x000290, "Member 'UUmg_keybindSlot_C::Text_key' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Text_name) == 0x000298, "Member 'UUmg_keybindSlot_C::Text_name' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Index_Umg_keybindSlot_C) == 0x0002A0, "Member 'UUmg_keybindSlot_C::Index_Umg_keybindSlot_C' has a wrong offset!");
static_assert(offsetof(UUmg_keybindSlot_C, Data) == 0x0002A8, "Member 'UUmg_keybindSlot_C::Data' has a wrong offset!");

}

