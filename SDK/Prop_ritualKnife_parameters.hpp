#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_ritualKnife

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_ritualKnife.prop_ritualKnife_C.ExecuteUbergraph_prop_ritualKnife
// 0x01B0 (0x01B0 - 0x0000)
struct Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F0[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F1[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F2[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_name;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F4[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_trigger_obj;                          // 0x00E8(0x0010)(ReferenceParm)
	TDelegate<void(class FName Name)>             K2Node_CreateDelegate_OutputDelegate;              // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F5[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_bloodGib_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0168(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F6[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAltar_C*                               K2Node_DynamicCast_AsAltar;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife) == 0x000010, "Wrong alignment on Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife");
static_assert(sizeof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife) == 0x0001B0, "Wrong size on Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, EntryPoint) == 0x000000, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_Event_player) == 0x000008, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, Temp_int_Variable) == 0x000010, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, Temp_name_Variable) == 0x000014, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_bBlockingHit) == 0x00001C, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_bInitialOverlap) == 0x00001D, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_Time) == 0x000020, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_Distance) == 0x000024, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_Location) == 0x000028, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_ImpactPoint) == 0x000034, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_Normal) == 0x000040, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_ImpactNormal) == 0x00004C, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_PhysMat) == 0x000058, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_HitActor) == 0x000060, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_HitComponent) == 0x000068, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_HitBoneName) == 0x000070, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_HitItem) == 0x000078, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_ElementIndex) == 0x00007C, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_FaceIndex) == 0x000080, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_TraceStart) == 0x000084, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BreakHitResult_TraceEnd) == 0x000090, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_DynamicCast_AsInt_Objects) == 0x0000A0, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, Temp_name_Variable_1) == 0x0000B4, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, Temp_name_Variable_2) == 0x0000BC, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_Event_player_1) == 0x0000C8, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_CustomEvent_name) == 0x0000D0, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_CustomEvent_name' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_SwitchName_CmpSuccess) == 0x0000D8, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_obj_trigger_obj) == 0x0000E8, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_obj_trigger_obj' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000108, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000114, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_Select_Default) == 0x000158, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, Temp_object_Variable) == 0x000168, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_SphereOverlapActors_OutActors) == 0x000178, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_SphereOverlapActors_ReturnValue) == 0x000188, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, CallFunc_Array_Get_Item) == 0x000190, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_DynamicCast_AsAltar) == 0x000198, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_DynamicCast_AsAltar' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'Prop_ritualKnife_C_ExecuteUbergraph_prop_ritualKnife::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function prop_ritualKnife.prop_ritualKnife_C.montageEvent
// 0x0008 (0x0008 - 0x0000)
struct Prop_ritualKnife_C_MontageEvent final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ritualKnife_C_MontageEvent) == 0x000004, "Wrong alignment on Prop_ritualKnife_C_MontageEvent");
static_assert(sizeof(Prop_ritualKnife_C_MontageEvent) == 0x000008, "Wrong size on Prop_ritualKnife_C_MontageEvent");
static_assert(offsetof(Prop_ritualKnife_C_MontageEvent, Param_Name) == 0x000000, "Member 'Prop_ritualKnife_C_MontageEvent::Param_Name' has a wrong offset!");

// Function prop_ritualKnife.prop_ritualKnife_C.upd
// 0x0020 (0x0020 - 0x0000)
struct Prop_ritualKnife_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ritualKnife_C_Upd) == 0x000008, "Wrong alignment on Prop_ritualKnife_C_Upd");
static_assert(sizeof(Prop_ritualKnife_C_Upd) == 0x000020, "Wrong size on Prop_ritualKnife_C_Upd");
static_assert(offsetof(Prop_ritualKnife_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_ritualKnife_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_Upd, Temp_object_Variable) == 0x000008, "Member 'Prop_ritualKnife_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_ritualKnife_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_ritualKnife_C_Upd, K2Node_Select_Default) == 0x000018, "Member 'Prop_ritualKnife_C_Upd::K2Node_Select_Default' has a wrong offset!");

// Function prop_ritualKnife.prop_ritualKnife_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_ritualKnife_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ritualKnife_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_ritualKnife_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_ritualKnife_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_ritualKnife_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_ritualKnife_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_ritualKnife_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function prop_ritualKnife.prop_ritualKnife_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_ritualKnife_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_ritualKnife_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_ritualKnife_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_ritualKnife_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_ritualKnife_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_ritualKnife_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_ritualKnife_C_PlayerHandUse_RMB::Player' has a wrong offset!");

}

