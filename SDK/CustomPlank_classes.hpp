#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomPlank

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass customPlank.customPlank_C
// 0x0008 (0x0370 - 0x0368)
class ACustomPlank_C final : public AProp_C
{
public:
	uint8                                         Pad_17F1[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_CustomPlank_C;                      // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_customPlank(int32 EntryPoint);
	void AddDamage(class AActor* Actor, float Damage, const struct FHitResult& Param_Hit, const struct FVector& Impact, bool SkipSetting);
	void Cut(const struct FHitResult& Param_Hit);
	void CanBePutInContainer(bool* Return);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool Param_NoRespawn, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace);
	void IsButtonUsed(bool* Failed);
	void Init();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"customPlank_C">();
	}
	static class ACustomPlank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACustomPlank_C>();
	}
};
static_assert(alignof(ACustomPlank_C) == 0x000008, "Wrong alignment on ACustomPlank_C");
static_assert(sizeof(ACustomPlank_C) == 0x000370, "Wrong size on ACustomPlank_C");
static_assert(offsetof(ACustomPlank_C, UberGraphFrame_CustomPlank_C) == 0x000368, "Member 'ACustomPlank_C::UberGraphFrame_CustomPlank_C' has a wrong offset!");

}

