#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_photo

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Struct_byteImage_structs.hpp"
#include "Struct_mInt_structs.hpp"


namespace SDK::Params
{

// Function prop_photo.prop_photo_C.ExecuteUbergraph_prop_photo
// 0x0010 (0x0010 - 0x0000)
struct Prop_photo_C_ExecuteUbergraph_prop_photo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E20[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_photo_C_ExecuteUbergraph_prop_photo) == 0x000008, "Wrong alignment on Prop_photo_C_ExecuteUbergraph_prop_photo");
static_assert(sizeof(Prop_photo_C_ExecuteUbergraph_prop_photo) == 0x000010, "Wrong size on Prop_photo_C_ExecuteUbergraph_prop_photo");
static_assert(offsetof(Prop_photo_C_ExecuteUbergraph_prop_photo, EntryPoint) == 0x000000, "Member 'Prop_photo_C_ExecuteUbergraph_prop_photo::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_ExecuteUbergraph_prop_photo, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'Prop_photo_C_ExecuteUbergraph_prop_photo::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function prop_photo.prop_photo_C.loadImage
// 0x0020 (0x0020 - 0x0000)
struct Prop_photo_C_LoadImage final
{
public:
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_byteImage                      CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_BytesToImage_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_photo_C_LoadImage) == 0x000008, "Wrong alignment on Prop_photo_C_LoadImage");
static_assert(sizeof(Prop_photo_C_LoadImage) == 0x000020, "Wrong size on Prop_photo_C_LoadImage");
static_assert(offsetof(Prop_photo_C_LoadImage, CallFunc_getSaveSlot_saveSlot) == 0x000000, "Member 'Prop_photo_C_LoadImage::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadImage, CallFunc_Array_Get_Item) == 0x000008, "Member 'Prop_photo_C_LoadImage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadImage, CallFunc_BytesToImage_ReturnValue) == 0x000018, "Member 'Prop_photo_C_LoadImage::CallFunc_BytesToImage_ReturnValue' has a wrong offset!");

// Function prop_photo.prop_photo_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_photo_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E21[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_photo_C_LoadData) == 0x000010, "Wrong alignment on Prop_photo_C_LoadData");
static_assert(sizeof(Prop_photo_C_LoadData) == 0x0000E0, "Wrong size on Prop_photo_C_LoadData");
static_assert(offsetof(Prop_photo_C_LoadData, Data) == 0x000000, "Member 'Prop_photo_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadData, Return) == 0x0000C0, "Member 'Prop_photo_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_photo_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_photo_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_photo_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_photo.prop_photo_C.getData
// 0x0280 (0x0280 - 0x0000)
struct Prop_photo_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0190(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x01A0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01C0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_photo_C_GetData) == 0x000010, "Wrong alignment on Prop_photo_C_GetData");
static_assert(sizeof(Prop_photo_C_GetData) == 0x000280, "Wrong size on Prop_photo_C_GetData");
static_assert(offsetof(Prop_photo_C_GetData, Data) == 0x000000, "Member 'Prop_photo_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_photo_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_photo_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000190, "Member 'Prop_photo_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'Prop_photo_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'Prop_photo_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_photo_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001C0, "Member 'Prop_photo_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

