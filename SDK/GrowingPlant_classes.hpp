#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrowingPlant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass growingPlant.growingPlant_C
// 0x0038 (0x0280 - 0x0248)
class AGrowingPlant_C : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GrowingPlant_C;                     // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   Plant;                                             // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Grow;                                              // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowRate;                                          // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DFF[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            VisualMesh;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Obj;                                               // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_growingPlant(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UpdateStrAgl();
	void DamageByPlayer(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void Thrown(class AMainPlayer_C* Player);
	void broken_fire();
	void broken();
	void SendName(class FName Param_Name);
	void Kicked(bool Kick);
	void Player_use(class AMainPlayer_C* Player, const struct FHitResult& Hit);
	void DriveDetached();
	void Upd();
	void CanBePutInContainer(bool* Return);
	void AsProp(class AProp_C** Return);
	void CanPickup(bool* Return);
	void NoRespawn(bool Param_NoRespawn, bool* Return);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace);
	void IsButtonUsed(bool* Failed);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, int32 Param_Index, Enum_interactionActions Action);
	void UserConstructionScript();
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"growingPlant_C">();
	}
	static class AGrowingPlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrowingPlant_C>();
	}
};
static_assert(alignof(AGrowingPlant_C) == 0x000008, "Wrong alignment on AGrowingPlant_C");
static_assert(sizeof(AGrowingPlant_C) == 0x000280, "Wrong size on AGrowingPlant_C");
static_assert(offsetof(AGrowingPlant_C, UberGraphFrame_GrowingPlant_C) == 0x000248, "Member 'AGrowingPlant_C::UberGraphFrame_GrowingPlant_C' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Mesh) == 0x000250, "Member 'AGrowingPlant_C::Mesh' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Plant) == 0x000258, "Member 'AGrowingPlant_C::Plant' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Grow) == 0x000260, "Member 'AGrowingPlant_C::Grow' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, GrowRate) == 0x000264, "Member 'AGrowingPlant_C::GrowRate' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Amount) == 0x000268, "Member 'AGrowingPlant_C::Amount' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, VisualMesh) == 0x000270, "Member 'AGrowingPlant_C::VisualMesh' has a wrong offset!");
static_assert(offsetof(AGrowingPlant_C, Obj) == 0x000278, "Member 'AGrowingPlant_C::Obj' has a wrong offset!");

}

