#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKELEON

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SKELEON.SKELEON_C
// 0x0080 (0x02E0 - 0x0260)
class USKELEON_C final : public UUserWidget
{
public:
	class UCanvasPanel*                           Canvas_halloween;                                  // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_skel;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_skele;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_skul;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Fire;                                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_70;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_137;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_appears;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_peener;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Pos_A;                                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos_B;                                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetPos(const struct FVector& WorldLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SKELEON_C">();
	}
	static class USKELEON_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USKELEON_C>();
	}
};
static_assert(alignof(USKELEON_C) == 0x000008, "Wrong alignment on USKELEON_C");
static_assert(sizeof(USKELEON_C) == 0x0002E0, "Wrong size on USKELEON_C");
static_assert(offsetof(USKELEON_C, Canvas_halloween) == 0x000260, "Member 'USKELEON_C::Canvas_halloween' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Canvas_skel) == 0x000268, "Member 'USKELEON_C::Canvas_skel' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Canvas_skele) == 0x000270, "Member 'USKELEON_C::Canvas_skele' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Canvas_skul) == 0x000278, "Member 'USKELEON_C::Canvas_skul' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Fire) == 0x000280, "Member 'USKELEON_C::Fire' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image) == 0x000288, "Member 'USKELEON_C::Image' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_1) == 0x000290, "Member 'USKELEON_C::Image_1' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_2) == 0x000298, "Member 'USKELEON_C::Image_2' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_3) == 0x0002A0, "Member 'USKELEON_C::Image_3' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_4) == 0x0002A8, "Member 'USKELEON_C::Image_4' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_70) == 0x0002B0, "Member 'USKELEON_C::Image_70' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Image_137) == 0x0002B8, "Member 'USKELEON_C::Image_137' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Txt_appears) == 0x0002C0, "Member 'USKELEON_C::Txt_appears' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Txt_peener) == 0x0002C8, "Member 'USKELEON_C::Txt_peener' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Pos_A) == 0x0002D0, "Member 'USKELEON_C::Pos_A' has a wrong offset!");
static_assert(offsetof(USKELEON_C, Pos_B) == 0x0002D8, "Member 'USKELEON_C::Pos_B' has a wrong offset!");

}

