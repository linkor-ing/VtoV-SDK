#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_texturePicker

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function umg_texturePicker.umg_texturePicker_C.ExecuteUbergraph_umg_texturePicker
// 0x000C (0x000C - 0x0000)
struct Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0004(0x0008)(NoDestructor)
};
static_assert(alignof(Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker) == 0x000004, "Wrong alignment on Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker");
static_assert(sizeof(Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker) == 0x00000C, "Wrong size on Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker");
static_assert(offsetof(Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker, EntryPoint) == 0x000000, "Member 'Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker, K2Node_Event_InFocusEvent) == 0x000004, "Member 'Umg_texturePicker_C_ExecuteUbergraph_umg_texturePicker::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function umg_texturePicker.umg_texturePicker_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_texturePicker_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_texturePicker_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_texturePicker_C_OnFocusLost");
static_assert(sizeof(Umg_texturePicker_C_OnFocusLost) == 0x000008, "Wrong size on Umg_texturePicker_C_OnFocusLost");
static_assert(offsetof(Umg_texturePicker_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_texturePicker_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_texturePicker.umg_texturePicker_C.loadArray
// 0x0068 (0x0068 - 0x0000)
struct Umg_texturePicker_C_LoadArray final
{
public:
	TArray<class UTexture2D*>                     Textures;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_texturePickerButton_C*             CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_texturePickerButton_C*             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_texturePicker_C_LoadArray) == 0x000008, "Wrong alignment on Umg_texturePicker_C_LoadArray");
static_assert(sizeof(Umg_texturePicker_C_LoadArray) == 0x000068, "Wrong size on Umg_texturePicker_C_LoadArray");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, Textures) == 0x000000, "Member 'Umg_texturePicker_C_LoadArray::Textures' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, Temp_int_Variable) == 0x000010, "Member 'Umg_texturePicker_C_LoadArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, Temp_int_Array_Index_Variable) == 0x000024, "Member 'Umg_texturePicker_C_LoadArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Umg_texturePicker_C_LoadArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Percent_IntInt_ReturnValue) == 0x000044, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000048, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_LoadArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'Umg_texturePicker_C_LoadArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function umg_texturePicker.umg_texturePicker_C.pick
// 0x0038 (0x0038 - 0x0000)
struct Umg_texturePicker_C_Pick final
{
public:
	class UTexture2D*                             Tex;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_texturePicker_C_Pick) == 0x000008, "Wrong alignment on Umg_texturePicker_C_Pick");
static_assert(sizeof(Umg_texturePicker_C_Pick) == 0x000038, "Wrong size on Umg_texturePicker_C_Pick");
static_assert(offsetof(Umg_texturePicker_C_Pick, Tex) == 0x000000, "Member 'Umg_texturePicker_C_Pick::Tex' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Pick, Param_Index) == 0x000008, "Member 'Umg_texturePicker_C_Pick::Param_Index' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Pick, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'Umg_texturePicker_C_Pick::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Pick, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Umg_texturePicker_C_Pick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Pick, K2Node_DynamicCast_AsInt_Coms) == 0x000020, "Member 'Umg_texturePicker_C_Pick::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Pick, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Umg_texturePicker_C_Pick::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function umg_texturePicker.umg_texturePicker_C.unfocus
// 0x0010 (0x0010 - 0x0000)
struct Umg_texturePicker_C_Unfocus final
{
public:
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_texturePicker_C_Unfocus) == 0x000008, "Wrong alignment on Umg_texturePicker_C_Unfocus");
static_assert(sizeof(Umg_texturePicker_C_Unfocus) == 0x000010, "Wrong size on Umg_texturePicker_C_Unfocus");
static_assert(offsetof(Umg_texturePicker_C_Unfocus, CallFunc_getMainPlayer_AsMain_Player) == 0x000000, "Member 'Umg_texturePicker_C_Unfocus::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Umg_texturePicker_C_Unfocus, CallFunc_setActiveInterface_return) == 0x000008, "Member 'Umg_texturePicker_C_Unfocus::CallFunc_setActiveInterface_return' has a wrong offset!");

}

