#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RelativeField

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function relativeField.relativeField_C.ExecuteUbergraph_relativeField
// 0x0490 (0x0490 - 0x0000)
struct RelativeField_C_ExecuteUbergraph_relativeField final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377D[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0038(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377E[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_377F[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3780[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3781[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3782[0x8];                                     // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x01FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3783[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3784[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3785[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0308(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3786[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3787[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_1;        // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3788[0x3];                                     // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1; // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue_1;       // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_2;         // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_3;         // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3789[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x048F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RelativeField_C_ExecuteUbergraph_relativeField) == 0x000010, "Wrong alignment on RelativeField_C_ExecuteUbergraph_relativeField");
static_assert(sizeof(RelativeField_C_ExecuteUbergraph_relativeField) == 0x000490, "Wrong size on RelativeField_C_ExecuteUbergraph_relativeField");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, EntryPoint) == 0x000000, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::EntryPoint' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, Temp_int_Array_Index_Variable) == 0x000004, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000018, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000020, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000028, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000030, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_bFromSweep) == 0x000034, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_SweepResult) == 0x000038, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000DC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000E4, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000F8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetTransform_ReturnValue) == 0x000100, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_DynamicCast_AsPrimitive_Component) == 0x000130, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000140, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000170, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetComponentVelocity_ReturnValue) == 0x00017C, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetTransform_ReturnValue_1) == 0x000190, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_ComposeTransforms_ReturnValue) == 0x0001C0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_InverseTransformDirection_ReturnValue) == 0x0001F0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0001FC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000284, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000288, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x000294, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_TransformDirection_ReturnValue) == 0x0002A0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x0002AC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_TransformDirection_ReturnValue_1) == 0x0002B8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_MyComp) == 0x0002C8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_Other) == 0x0002D0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_OtherComp) == 0x0002D8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_bSelfMoved) == 0x0002E0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_HitLocation) == 0x0002E4, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_HitNormal) == 0x0002F0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_NormalImpulse) == 0x0002FC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_hit_1) == 0x000308, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, Temp_int_Loop_Counter_Variable_1) == 0x000390, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_Get_Item_1) == 0x000398, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0003A0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Less_IntInt_ReturnValue) == 0x0003A8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_DynamicCast_AsPrimitive_Component_1) == 0x0003B0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_DynamicCast_AsPrimitive_Component_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_DynamicCast_bSuccess_1) == 0x0003B8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1) == 0x0003BC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_GetComponentVelocity_ReturnValue_1) == 0x0003C8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_GetComponentVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Divide_VectorFloat_ReturnValue_2) == 0x0003D4, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Divide_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Divide_VectorFloat_ReturnValue_3) == 0x0003E0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Divide_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003EC, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Array_Length_ReturnValue_1) == 0x0003F0, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_player) == 0x0003F8, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_hit) == 0x000400, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_index) == 0x000488, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_Event_action) == 0x00048C, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Less_IntInt_ReturnValue_1) == 0x00048D, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, K2Node_SwitchEnum_CmpSuccess) == 0x00048E, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ExecuteUbergraph_relativeField, CallFunc_Not_PreBool_ReturnValue) == 0x00048F, "Member 'RelativeField_C_ExecuteUbergraph_relativeField::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function relativeField.relativeField_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct RelativeField_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RelativeField_C_ActionOptionIndex) == 0x000008, "Wrong alignment on RelativeField_C_ActionOptionIndex");
static_assert(sizeof(RelativeField_C_ActionOptionIndex) == 0x000098, "Wrong size on RelativeField_C_ActionOptionIndex");
static_assert(offsetof(RelativeField_C_ActionOptionIndex, Player) == 0x000000, "Member 'RelativeField_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'RelativeField_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'RelativeField_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ActionOptionIndex, Action) == 0x000094, "Member 'RelativeField_C_ActionOptionIndex::Action' has a wrong offset!");

// Function relativeField.relativeField_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct RelativeField_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RelativeField_C_ReceiveHit) == 0x000008, "Wrong alignment on RelativeField_C_ReceiveHit");
static_assert(sizeof(RelativeField_C_ReceiveHit) == 0x0000C8, "Wrong size on RelativeField_C_ReceiveHit");
static_assert(offsetof(RelativeField_C_ReceiveHit, MyComp) == 0x000000, "Member 'RelativeField_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, Other) == 0x000008, "Member 'RelativeField_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, OtherComp) == 0x000010, "Member 'RelativeField_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'RelativeField_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'RelativeField_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, HitNormal) == 0x000028, "Member 'RelativeField_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'RelativeField_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(RelativeField_C_ReceiveHit, Param_Hit) == 0x000040, "Member 'RelativeField_C_ReceiveHit::Param_Hit' has a wrong offset!");

// Function relativeField.relativeField_C.BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function relativeField.relativeField_C.BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RelativeField_C_BndEvt__relativeField_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function relativeField.relativeField_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RelativeField_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RelativeField_C_ReceiveTick) == 0x000004, "Wrong alignment on RelativeField_C_ReceiveTick");
static_assert(sizeof(RelativeField_C_ReceiveTick) == 0x000004, "Wrong size on RelativeField_C_ReceiveTick");
static_assert(offsetof(RelativeField_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RelativeField_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function relativeField.relativeField_C.upd
// 0x0020 (0x0020 - 0x0000)
struct RelativeField_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RelativeField_C_Upd) == 0x000008, "Wrong alignment on RelativeField_C_Upd");
static_assert(sizeof(RelativeField_C_Upd) == 0x000020, "Wrong size on RelativeField_C_Upd");
static_assert(offsetof(RelativeField_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'RelativeField_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RelativeField_C_Upd, Temp_object_Variable) == 0x000008, "Member 'RelativeField_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RelativeField_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'RelativeField_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RelativeField_C_Upd, K2Node_Select_Default) == 0x000018, "Member 'RelativeField_C_Upd::K2Node_Select_Default' has a wrong offset!");

// Function relativeField.relativeField_C.NewFunction_0
// 0x0038 (0x0038 - 0x0000)
struct RelativeField_C_NewFunction_0 final
{
public:
	class UPrimitiveComponent*                    Self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RelativeField_C_NewFunction_0) == 0x000008, "Wrong alignment on RelativeField_C_NewFunction_0");
static_assert(sizeof(RelativeField_C_NewFunction_0) == 0x000038, "Wrong size on RelativeField_C_NewFunction_0");
static_assert(offsetof(RelativeField_C_NewFunction_0, Self2) == 0x000000, "Member 'RelativeField_C_NewFunction_0::Self2' has a wrong offset!");
static_assert(offsetof(RelativeField_C_NewFunction_0, CallFunc_GetCenterOfMass_ReturnValue) == 0x000008, "Member 'RelativeField_C_NewFunction_0::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_NewFunction_0, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'RelativeField_C_NewFunction_0::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_NewFunction_0, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000020, "Member 'RelativeField_C_NewFunction_0::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RelativeField_C_NewFunction_0, CallFunc_SetVectorLength_ReturnValue) == 0x00002C, "Member 'RelativeField_C_NewFunction_0::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");

// Function relativeField.relativeField_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct RelativeField_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(RelativeField_C_GetActionOptions) == 0x000008, "Wrong alignment on RelativeField_C_GetActionOptions");
static_assert(sizeof(RelativeField_C_GetActionOptions) == 0x000058, "Wrong size on RelativeField_C_GetActionOptions");
static_assert(offsetof(RelativeField_C_GetActionOptions, Player) == 0x000000, "Member 'RelativeField_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, Component) == 0x000008, "Member 'RelativeField_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, Actor) == 0x000010, "Member 'RelativeField_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, Options) == 0x000018, "Member 'RelativeField_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, Options_enum) == 0x000028, "Member 'RelativeField_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'RelativeField_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(RelativeField_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'RelativeField_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

