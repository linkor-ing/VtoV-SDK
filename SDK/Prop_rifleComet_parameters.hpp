#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_rifleComet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_rifleComet.prop_rifleComet_C.ExecuteUbergraph_prop_rifleComet
// 0x00A0 (0x00A0 - 0x0000)
struct Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_comet_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet) == 0x000010, "Wrong alignment on Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet");
static_assert(sizeof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet) == 0x0000A0, "Wrong size on Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, EntryPoint) == 0x000000, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, K2Node_Event_player) == 0x000008, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_RandomUnitVector_ReturnValue) == 0x000010, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_VLerp_ReturnValue) == 0x000040, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00004C, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'Prop_rifleComet_C_ExecuteUbergraph_prop_rifleComet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function prop_rifleComet.prop_rifleComet_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_rifleComet_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_rifleComet_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_rifleComet_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_rifleComet_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_rifleComet_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_rifleComet_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_rifleComet_C_PlayerHandUse_LMB::Player' has a wrong offset!");

}

