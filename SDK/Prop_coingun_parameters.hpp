#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_coingun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_coingun.prop_coingun_C.ExecuteUbergraph_prop_coingun
// 0x0188 (0x0188 - 0x0000)
struct Prop_coingun_C_ExecuteUbergraph_prop_coingun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x0010(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_arm_start;                                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B4E[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4F[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B50[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B51[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B52[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_sellObject_points;                        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_sellObject_sold;                          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_coingun_C_ExecuteUbergraph_prop_coingun) == 0x000008, "Wrong alignment on Prop_coingun_C_ExecuteUbergraph_prop_coingun");
static_assert(sizeof(Prop_coingun_C_ExecuteUbergraph_prop_coingun) == 0x000188, "Wrong size on Prop_coingun_C_ExecuteUbergraph_prop_coingun");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, EntryPoint) == 0x000000, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, K2Node_Event_player) == 0x000008, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_obj_statDynPhys_obj) == 0x000010, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_arm_start) == 0x000020, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_arm_end) == 0x00002C, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, Temp_object_Variable) == 0x000038, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000048, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000D0, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D1, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D2, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, K2Node_DynamicCast_AsInt_Player) == 0x000158, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_asProp_return) == 0x000170, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_DoesImplementInterface_ReturnValue) == 0x000178, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_IsValid_ReturnValue) == 0x000179, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_sellObject_points) == 0x00017C, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_sellObject_points' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_ExecuteUbergraph_prop_coingun, CallFunc_sellObject_sold) == 0x000180, "Member 'Prop_coingun_C_ExecuteUbergraph_prop_coingun::CallFunc_sellObject_sold' has a wrong offset!");

// Function prop_coingun.prop_coingun_C.sell
// 0x0140 (0x0140 - 0x0000)
struct Prop_coingun_C_Sell final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B53[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Comp;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   C;                                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B54[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             T;                                                 // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         P;                                                 // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B55[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B56[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_rnd_ReturnValue;                          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Abaocoin_C*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_rnd_ReturnValue_1;                        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B57[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B58[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B59[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class Abaocoin_C*                             CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_VictoryIntMinusEquals_IntOut;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_coingun_C_Sell) == 0x000010, "Wrong alignment on Prop_coingun_C_Sell");
static_assert(sizeof(Prop_coingun_C_Sell) == 0x000140, "Wrong size on Prop_coingun_C_Sell");
static_assert(offsetof(Prop_coingun_C_Sell, Param_Index) == 0x000000, "Member 'Prop_coingun_C_Sell::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, Comp) == 0x000008, "Member 'Prop_coingun_C_Sell::Comp' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, C) == 0x000010, "Member 'Prop_coingun_C_Sell::C' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, T) == 0x000020, "Member 'Prop_coingun_C_Sell::T' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, P) == 0x000050, "Member 'Prop_coingun_C_Sell::P' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000058, "Member 'Prop_coingun_C_Sell::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Prop_coingun_C_Sell::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_rnd_ReturnValue) == 0x000064, "Member 'Prop_coingun_C_Sell::CallFunc_rnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'Prop_coingun_C_Sell::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'Prop_coingun_C_Sell::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'Prop_coingun_C_Sell::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_rnd_ReturnValue_1) == 0x0000B0, "Member 'Prop_coingun_C_Sell::CallFunc_rnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_MakeTransform_ReturnValue_1) == 0x0000C0, "Member 'Prop_coingun_C_Sell::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_RandomUnitVector_ReturnValue) == 0x0000F0, "Member 'Prop_coingun_C_Sell::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000100, "Member 'Prop_coingun_C_Sell::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'Prop_coingun_C_Sell::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000118, "Member 'Prop_coingun_C_Sell::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'Prop_coingun_C_Sell::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_VictoryIntMinusEquals_IntOut) == 0x00012C, "Member 'Prop_coingun_C_Sell::CallFunc_VictoryIntMinusEquals_IntOut' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Sell, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'Prop_coingun_C_Sell::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function prop_coingun.prop_coingun_C.rnd
// 0x00C0 (0x00C0 - 0x0000)
struct Prop_coingun_C_Rnd final
{
public:
	class UStaticMeshComponent*                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    C;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0070(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorFloat_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_coingun_C_Rnd) == 0x000010, "Wrong alignment on Prop_coingun_C_Rnd");
static_assert(sizeof(Prop_coingun_C_Rnd) == 0x0000C0, "Wrong size on Prop_coingun_C_Rnd");
static_assert(offsetof(Prop_coingun_C_Rnd, InputPin) == 0x000000, "Member 'Prop_coingun_C_Rnd::InputPin' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, C) == 0x000008, "Member 'Prop_coingun_C_Rnd::C' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, ReturnValue) == 0x000010, "Member 'Prop_coingun_C_Rnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'Prop_coingun_C_Rnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_GetComponentBounds_Origin) == 0x000020, "Member 'Prop_coingun_C_Rnd::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_GetComponentBounds_BoxExtent) == 0x00002C, "Member 'Prop_coingun_C_Rnd::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'Prop_coingun_C_Rnd::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'Prop_coingun_C_Rnd::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_GetBounds_ReturnValue) == 0x000070, "Member 'Prop_coingun_C_Rnd::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_Subtract_VectorFloat_ReturnValue) == 0x00008C, "Member 'Prop_coingun_C_Rnd::CallFunc_Subtract_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_Vector_GetAbs_ReturnValue) == 0x000098, "Member 'Prop_coingun_C_Rnd::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x0000A4, "Member 'Prop_coingun_C_Rnd::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_coingun_C_Rnd, CallFunc_TransformLocation_ReturnValue) == 0x0000B0, "Member 'Prop_coingun_C_Rnd::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function prop_coingun.prop_coingun_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_coingun_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_coingun_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_coingun_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_coingun_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_coingun_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_coingun_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_coingun_C_PlayerHandUse_LMB::Player' has a wrong offset!");

}

