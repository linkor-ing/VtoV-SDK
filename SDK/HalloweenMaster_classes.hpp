#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HalloweenMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass halloweenMaster.halloweenMaster_C
// 0x0050 (0x0270 - 0x0220)
class AHalloweenMaster_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        HalloweenAmb;                                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         PumpkinS;                                          // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Conv;                                              // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FVector>                        Locs;                                              // 0x0250(0x0010)(Edit, BlueprintVisible)
	bool                                          Completed;                                         // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MapLoc;                                            // 0x0264(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_halloweenMaster(int32 EntryPoint);
	void GamemodeBeginPlay();
	void ReceiveBeginPlay();
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void ApplyColor(const struct FLinearColor& Color);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Key, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void SettingsApplied(const struct FStruct_settings& Settings);
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void SignalSaved();
	void SignalDeleted();
	void UserConstructionScript();
	void Check(bool* Return);
	void SpawnInsomniac(bool* CanSpawn, struct FVector* Loc);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"halloweenMaster_C">();
	}
	static class AHalloweenMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHalloweenMaster_C>();
	}
};
static_assert(alignof(AHalloweenMaster_C) == 0x000008, "Wrong alignment on AHalloweenMaster_C");
static_assert(sizeof(AHalloweenMaster_C) == 0x000270, "Wrong size on AHalloweenMaster_C");
static_assert(offsetof(AHalloweenMaster_C, UberGraphFrame) == 0x000220, "Member 'AHalloweenMaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, HalloweenAmb) == 0x000228, "Member 'AHalloweenMaster_C::HalloweenAmb' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, DefaultSceneRoot) == 0x000230, "Member 'AHalloweenMaster_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, PumpkinS) == 0x000238, "Member 'AHalloweenMaster_C::PumpkinS' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, Conv) == 0x000240, "Member 'AHalloweenMaster_C::Conv' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, Locs) == 0x000250, "Member 'AHalloweenMaster_C::Locs' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, Completed) == 0x000260, "Member 'AHalloweenMaster_C::Completed' has a wrong offset!");
static_assert(offsetof(AHalloweenMaster_C, MapLoc) == 0x000264, "Member 'AHalloweenMaster_C::MapLoc' has a wrong offset!");

}

