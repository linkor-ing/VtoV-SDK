#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DroneSellBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_signalResponse_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass droneSellBox.droneSellBox_C
// 0x0020 (0x0240 - 0x0220)
class ADroneSellBox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Overlapping;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_droneSellBox(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Sell(TArray<struct FStruct_signalDataDynamic>& Array, const class FString& Info, bool Itembox, const struct FStruct_save& Data, int32* Points, Enum_signalResponse* ResponseEmail, bool* Checked);
	void CanSell(class UObject* InputPin, bool* Can, bool* IsItembox);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"droneSellBox_C">();
	}
	static class ADroneSellBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADroneSellBox_C>();
	}
};
static_assert(alignof(ADroneSellBox_C) == 0x000008, "Wrong alignment on ADroneSellBox_C");
static_assert(sizeof(ADroneSellBox_C) == 0x000240, "Wrong size on ADroneSellBox_C");
static_assert(offsetof(ADroneSellBox_C, UberGraphFrame) == 0x000220, "Member 'ADroneSellBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADroneSellBox_C, Box) == 0x000228, "Member 'ADroneSellBox_C::Box' has a wrong offset!");
static_assert(offsetof(ADroneSellBox_C, DefaultSceneRoot) == 0x000230, "Member 'ADroneSellBox_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADroneSellBox_C, Overlapping) == 0x000238, "Member 'ADroneSellBox_C::Overlapping' has a wrong offset!");

}

