#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeFilesDownloader

#include "Basic.hpp"

#include "RuntimeFilesDownloader_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class RuntimeFilesDownloader.RuntimeFilesDownloaderLibrary
// 0x0028 (0x0050 - 0x0028)
class URuntimeFilesDownloaderLibrary : public UObject
{
public:
	FMulticastInlineDelegateProperty_             OnDownloadProgress;                                // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FString BytesToString(const TArray<uint8>& bytes);
	static class UTexture2D* BytesToTexture(const TArray<uint8>& bytes);
	static bool LoadFileToArray(TArray<uint8>* Result, const class FString& Filename);
	static bool LoadFileToString(class FString* Result, const class FString& Filename);
	static bool SaveArrayToFile(const TArray<uint8>& bytes, const class FString& Filename);
	static bool SaveStringToFile(const class FString& String, const class FString& Filename);

	bool CancelDownload();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RuntimeFilesDownloaderLibrary">();
	}
	static class URuntimeFilesDownloaderLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<URuntimeFilesDownloaderLibrary>();
	}
};
static_assert(alignof(URuntimeFilesDownloaderLibrary) == 0x000008, "Wrong alignment on URuntimeFilesDownloaderLibrary");
static_assert(sizeof(URuntimeFilesDownloaderLibrary) == 0x000050, "Wrong size on URuntimeFilesDownloaderLibrary");
static_assert(offsetof(URuntimeFilesDownloaderLibrary, OnDownloadProgress) == 0x000028, "Member 'URuntimeFilesDownloaderLibrary::OnDownloadProgress' has a wrong offset!");

// Class RuntimeFilesDownloader.FileToMemoryDownloader
// 0x0020 (0x0070 - 0x0050)
class UFileToMemoryDownloader final : public URuntimeFilesDownloaderLibrary
{
public:
	FMulticastInlineDelegateProperty_             OnDownloadComplete;                                // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void BP_DownloadFileToMemory(const class FString& URL, float Timeout, const class FString& ContentType, const TDelegate<void(int32 BytesReceived, int32 ContentLength)>& OnProgress, const TDelegate<void(TArray<uint8>& DownloadedContent, EDownloadToMemoryResult Result)>& OnComplete);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FileToMemoryDownloader">();
	}
	static class UFileToMemoryDownloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFileToMemoryDownloader>();
	}
};
static_assert(alignof(UFileToMemoryDownloader) == 0x000008, "Wrong alignment on UFileToMemoryDownloader");
static_assert(sizeof(UFileToMemoryDownloader) == 0x000070, "Wrong size on UFileToMemoryDownloader");
static_assert(offsetof(UFileToMemoryDownloader, OnDownloadComplete) == 0x000050, "Member 'UFileToMemoryDownloader::OnDownloadComplete' has a wrong offset!");

// Class RuntimeFilesDownloader.FileToStorageDownloader
// 0x0030 (0x0080 - 0x0050)
class UFileToStorageDownloader final : public URuntimeFilesDownloaderLibrary
{
public:
	FMulticastInlineDelegateProperty_             OnDownloadComplete;                                // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x20];                                      // 0x0060(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFileToStorageDownloader* BP_DownloadFileToStorage(const class FString& URL, const class FString& SavePath, float Timeout, const class FString& ContentType, const TDelegate<void(int32 BytesReceived, int32 ContentLength)>& OnProgress, const TDelegate<void(EDownloadToStorageResult Result)>& OnComplete);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FileToStorageDownloader">();
	}
	static class UFileToStorageDownloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFileToStorageDownloader>();
	}
};
static_assert(alignof(UFileToStorageDownloader) == 0x000008, "Wrong alignment on UFileToStorageDownloader");
static_assert(sizeof(UFileToStorageDownloader) == 0x000080, "Wrong size on UFileToStorageDownloader");
static_assert(offsetof(UFileToStorageDownloader, OnDownloadComplete) == 0x000050, "Member 'UFileToStorageDownloader::OnDownloadComplete' has a wrong offset!");

}

