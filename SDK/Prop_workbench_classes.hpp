#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_workbench

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_crafting_structs.hpp"
#include "Struct_prop_structs.hpp"
#include "Prop_container_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_workbench.prop_workbench_C
// 0x0130 (0x0528 - 0x03F8)
class AProp_workbench_C final : public AProp_container_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_workbench_C;                   // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   NavmeshBlock3;                                     // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavmeshBlock2;                                     // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   NavmeshBlock1;                                     // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CraftLookat;                                       // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoundingBox;                                       // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Objects;                                           // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FStruct_crafting                       PossibleCraft;                                     // 0x0440(0x0040)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsCrafting;                                        // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanCraft;                                          // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentBlueprint;                                  // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ObjsDebug;                                         // 0x0498(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CraftTagsDebug;                                    // 0x04A8(0x0010)(Edit, BlueprintVisible)
	bool                                          ScrapCraft;                                        // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ScrapRemove;                                       // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class FString>                         ObjectsNames;                                      // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         ObjectCrafts;                                      // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         ObjectsCraftGroups;                                // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FStruct_prop>                   PropsDatas;                                        // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           ObjectCraftNames;                                  // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   bpName;                                            // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_prop_workbench(int32 EntryPoint);
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, Enum_interactionActions Action);
	void BndEvt__prop_workbench_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__prop_workbench_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void Update(bool* HasCraft);
	void boundingBoxCalc();
	void PlayerLookAway(class AMainPlayer_C* Player);
	void ActionName(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, const class FString& Param_Name);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_workbench_C">();
	}
	static class AProp_workbench_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_workbench_C>();
	}
};
static_assert(alignof(AProp_workbench_C) == 0x000008, "Wrong alignment on AProp_workbench_C");
static_assert(sizeof(AProp_workbench_C) == 0x000528, "Wrong size on AProp_workbench_C");
static_assert(offsetof(AProp_workbench_C, UberGraphFrame_Prop_workbench_C) == 0x0003F8, "Member 'AProp_workbench_C::UberGraphFrame_Prop_workbench_C' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, NavmeshBlock3) == 0x000400, "Member 'AProp_workbench_C::NavmeshBlock3' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, NavmeshBlock2) == 0x000408, "Member 'AProp_workbench_C::NavmeshBlock2' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, NavmeshBlock1) == 0x000410, "Member 'AProp_workbench_C::NavmeshBlock1' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, CraftLookat) == 0x000418, "Member 'AProp_workbench_C::CraftLookat' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, BoundingBox) == 0x000420, "Member 'AProp_workbench_C::BoundingBox' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, Box) == 0x000428, "Member 'AProp_workbench_C::Box' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, Objects) == 0x000430, "Member 'AProp_workbench_C::Objects' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, PossibleCraft) == 0x000440, "Member 'AProp_workbench_C::PossibleCraft' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, IsCrafting) == 0x000480, "Member 'AProp_workbench_C::IsCrafting' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, CanCraft) == 0x000481, "Member 'AProp_workbench_C::CanCraft' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, CurrentBlueprint) == 0x000488, "Member 'AProp_workbench_C::CurrentBlueprint' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ObjsDebug) == 0x000498, "Member 'AProp_workbench_C::ObjsDebug' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, CraftTagsDebug) == 0x0004A8, "Member 'AProp_workbench_C::CraftTagsDebug' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ScrapCraft) == 0x0004B8, "Member 'AProp_workbench_C::ScrapCraft' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ScrapRemove) == 0x0004C0, "Member 'AProp_workbench_C::ScrapRemove' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ObjectsNames) == 0x0004D0, "Member 'AProp_workbench_C::ObjectsNames' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ObjectCrafts) == 0x0004E0, "Member 'AProp_workbench_C::ObjectCrafts' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ObjectsCraftGroups) == 0x0004F0, "Member 'AProp_workbench_C::ObjectsCraftGroups' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, PropsDatas) == 0x000500, "Member 'AProp_workbench_C::PropsDatas' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, ObjectCraftNames) == 0x000510, "Member 'AProp_workbench_C::ObjectCraftNames' has a wrong offset!");
static_assert(offsetof(AProp_workbench_C, bpName) == 0x000520, "Member 'AProp_workbench_C::bpName' has a wrong offset!");

}

