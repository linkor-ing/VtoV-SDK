#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_passlock

#include "Basic.hpp"

#include "Umg_passlock_classes.hpp"
#include "Umg_passlock_parameters.hpp"


namespace SDK
{

// Function umg_passlock.umg_passlock_C.ExecuteUbergraph_umg_passlock
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_passlock_C::ExecuteUbergraph_umg_passlock(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "ExecuteUbergraph_umg_passlock");

	Params::Umg_passlock_C_ExecuteUbergraph_umg_passlock Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUmg_passlock_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "OnFocusLost");

	Params::Umg_passlock_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.en
// (BlueprintCallable, BlueprintEvent)

void UUmg_passlock_C::En()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "en");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_passlock.umg_passlock_C.BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_passlock_C::BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::Umg_passlock_C_BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUmg_passlock_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_passlock.umg_passlock_C.Exit
// (BlueprintCallable, BlueprintEvent)

void UUmg_passlock_C::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_passlock.umg_passlock_C.BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUmg_passlock_C::BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::Umg_passlock_C_BndEvt__EditableTextBox_91_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.quit
// (BlueprintCallable, BlueprintEvent)

void UUmg_passlock_C::Quit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "quit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_passlock.umg_passlock_C.Input
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUmg_passlock_C::Input(int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "Input");

	Params::Umg_passlock_C_Input Parms{};

	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Password                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUmg_passlock_C::Init(const class FString& Param_Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "Init");

	Params::Umg_passlock_C_Init Parms{};

	Parms.Param_Password = std::move(Param_Password);

	UObject::ProcessEvent(Func, &Parms);
}


// Function umg_passlock.umg_passlock_C.upd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUmg_passlock_C::Upd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "upd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function umg_passlock.umg_passlock_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUmg_passlock_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("umg_passlock_C", "OnKeyDown");

	Params::Umg_passlock_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

