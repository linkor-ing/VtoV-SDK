#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LogFence

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function logFence.logFence_C.gen
// 0x0600 (0x0600 - 0x0000)
struct LogFence_C_Gen final
{
public:
	struct FTransform                             Tr;                                                // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         I2;                                                // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bh;                                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ah;                                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ind;                                               // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Br;                                                // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               AR;                                                // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         R;                                                 // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          C;                                                 // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Str;                                               // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         I;                                                 // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                A;                                                 // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ml;                                                // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L;                                                 // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0xC];                                      // 0x0144(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue_1;      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0254(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeightFromStream_ReturnValue; // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0280(0x0010)(ReferenceParm)
	TArray<uint8>                                 CallFunc_Pearson_ReturnValue;                      // 0x0290(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_3;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BytesToInteger_ReturnValue;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x02B0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_4;                               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          K2Node_Select_Default_1;                           // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue_2;      // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0458(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0468(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0xF];                                      // 0x04F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0500(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue_3;      // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0535(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_536[0x2];                                      // 0x0536(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0540(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x054C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x05E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LogFence_C_Gen) == 0x000010, "Wrong alignment on LogFence_C_Gen");
static_assert(sizeof(LogFence_C_Gen) == 0x000600, "Wrong size on LogFence_C_Gen");
static_assert(offsetof(LogFence_C_Gen, Tr) == 0x000000, "Member 'LogFence_C_Gen::Tr' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, I2) == 0x000030, "Member 'LogFence_C_Gen::I2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Bh) == 0x000034, "Member 'LogFence_C_Gen::Bh' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Ah) == 0x000038, "Member 'LogFence_C_Gen::Ah' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Ind) == 0x00003C, "Member 'LogFence_C_Gen::Ind' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Br) == 0x000040, "Member 'LogFence_C_Gen::Br' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, AR) == 0x00004C, "Member 'LogFence_C_Gen::AR' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, R) == 0x000058, "Member 'LogFence_C_Gen::R' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, C) == 0x00005C, "Member 'LogFence_C_Gen::C' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Str) == 0x000060, "Member 'LogFence_C_Gen::Str' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, I) == 0x000068, "Member 'LogFence_C_Gen::I' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, B) == 0x00006C, "Member 'LogFence_C_Gen::B' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, A) == 0x000078, "Member 'LogFence_C_Gen::A' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Ml) == 0x000084, "Member 'LogFence_C_Gen::Ml' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, L) == 0x000088, "Member 'LogFence_C_Gen::L' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable) == 0x00008C, "Member 'LogFence_C_Gen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'LogFence_C_Gen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'LogFence_C_Gen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'LogFence_C_Gen::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A4, "Member 'LogFence_C_Gen::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_object_Variable) == 0x0000B0, "Member 'LogFence_C_Gen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_VSize_ReturnValue) == 0x0000C0, "Member 'LogFence_C_Gen::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable_1) == 0x0000C4, "Member 'LogFence_C_Gen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'LogFence_C_Gen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Percent_IntInt_ReturnValue) == 0x0000CC, "Member 'LogFence_C_Gen::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'LogFence_C_Gen::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'LogFence_C_Gen::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_obj_static_obj) == 0x000110, "Member 'LogFence_C_Gen::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_AddInstanceWorldSpace_ReturnValue) == 0x000120, "Member 'LogFence_C_Gen::CallFunc_AddInstanceWorldSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000124, "Member 'LogFence_C_Gen::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000128, "Member 'LogFence_C_Gen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'LogFence_C_Gen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_IntInt_ReturnValue_2) == 0x000130, "Member 'LogFence_C_Gen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomFloatInRange_ReturnValue) == 0x000134, "Member 'LogFence_C_Gen::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeVector_ReturnValue_1) == 0x000138, "Member 'LogFence_C_Gen::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeTransform_ReturnValue_1) == 0x000150, "Member 'LogFence_C_Gen::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000180, "Member 'LogFence_C_Gen::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000184, "Member 'LogFence_C_Gen::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000188, "Member 'LogFence_C_Gen::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetUpVector_ReturnValue) == 0x00018C, "Member 'LogFence_C_Gen::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000198, "Member 'LogFence_C_Gen::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetUpVector_ReturnValue_1) == 0x0001A4, "Member 'LogFence_C_Gen::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001B0, "Member 'LogFence_C_Gen::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001BC, "Member 'LogFence_C_Gen::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C8, "Member 'LogFence_C_Gen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x0001CC, "Member 'LogFence_C_Gen::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001D0, "Member 'LogFence_C_Gen::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001DC, "Member 'LogFence_C_Gen::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable_2) == 0x0001E8, "Member 'LogFence_C_Gen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001EC, "Member 'LogFence_C_Gen::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_VSize_ReturnValue_1) == 0x0001F8, "Member 'LogFence_C_Gen::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, K2Node_Select_Default) == 0x000200, "Member 'LogFence_C_Gen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000208, "Member 'LogFence_C_Gen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_AddInstanceWorldSpace_ReturnValue_1) == 0x00020C, "Member 'LogFence_C_Gen::CallFunc_AddInstanceWorldSpace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeVector_ReturnValue_2) == 0x000210, "Member 'LogFence_C_Gen::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeTransform_ReturnValue_2) == 0x000220, "Member 'LogFence_C_Gen::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000250, "Member 'LogFence_C_Gen::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeRandomStream_ReturnValue) == 0x000254, "Member 'LogFence_C_Gen::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00025C, "Member 'LogFence_C_Gen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Conv_VectorToString_ReturnValue) == 0x000268, "Member 'LogFence_C_Gen::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RandomBoolWithWeightFromStream_ReturnValue) == 0x000278, "Member 'LogFence_C_Gen::CallFunc_RandomBoolWithWeightFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000280, "Member 'LogFence_C_Gen::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Pearson_ReturnValue) == 0x000290, "Member 'LogFence_C_Gen::CallFunc_Pearson_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable_3) == 0x0002A0, "Member 'LogFence_C_Gen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BytesToInteger_ReturnValue) == 0x0002A4, "Member 'LogFence_C_Gen::CallFunc_BytesToInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Percent_IntInt_ReturnValue_2) == 0x0002A8, "Member 'LogFence_C_Gen::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_obj_static_obj_1) == 0x0002B0, "Member 'LogFence_C_Gen::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable_4) == 0x0002C0, "Member 'LogFence_C_Gen::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0002C4, "Member 'LogFence_C_Gen::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0002D0, "Member 'LogFence_C_Gen::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002DC, "Member 'LogFence_C_Gen::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002E8, "Member 'LogFence_C_Gen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002EC, "Member 'LogFence_C_Gen::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0002F0, "Member 'LogFence_C_Gen::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002F4, "Member 'LogFence_C_Gen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0002F8, "Member 'LogFence_C_Gen::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetLocationAtTime_ReturnValue) == 0x0002FC, "Member 'LogFence_C_Gen::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_FTrunc_ReturnValue) == 0x000308, "Member 'LogFence_C_Gen::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Add_VectorVector_ReturnValue_4) == 0x00030C, "Member 'LogFence_C_Gen::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000318, "Member 'LogFence_C_Gen::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x00031C, "Member 'LogFence_C_Gen::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000328, "Member 'LogFence_C_Gen::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0003B0, "Member 'LogFence_C_Gen::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_int_Variable_5) == 0x0003B4, "Member 'LogFence_C_Gen::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_bBlockingHit) == 0x0003B8, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003B9, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Time) == 0x0003BC, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Distance) == 0x0003C0, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Location) == 0x0003C4, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ImpactPoint) == 0x0003D0, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Normal) == 0x0003DC, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ImpactNormal) == 0x0003E8, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_PhysMat) == 0x0003F8, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitActor) == 0x000400, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitComponent) == 0x000408, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitBoneName) == 0x000410, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitItem) == 0x000418, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ElementIndex) == 0x00041C, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_FaceIndex) == 0x000420, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_TraceStart) == 0x000424, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_TraceEnd) == 0x000430, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_SelectVector_ReturnValue) == 0x00043C, "Member 'LogFence_C_Gen::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, K2Node_Select_Default_1) == 0x000448, "Member 'LogFence_C_Gen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_AddInstanceWorldSpace_ReturnValue_2) == 0x000450, "Member 'LogFence_C_Gen::CallFunc_AddInstanceWorldSpace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, Temp_object_Variable_1) == 0x000458, "Member 'LogFence_C_Gen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000468, "Member 'LogFence_C_Gen::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0004F0, "Member 'LogFence_C_Gen::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeTransform_ReturnValue_3) == 0x000500, "Member 'LogFence_C_Gen::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_AddInstanceWorldSpace_ReturnValue_3) == 0x000530, "Member 'LogFence_C_Gen::CallFunc_AddInstanceWorldSpace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000534, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000535, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Time_1) == 0x000538, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Distance_1) == 0x00053C, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Location_1) == 0x000540, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00054C, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_Normal_1) == 0x000558, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000564, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_PhysMat_1) == 0x000570, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitActor_1) == 0x000578, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitComponent_1) == 0x000580, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitBoneName_1) == 0x000588, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_HitItem_1) == 0x000590, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_ElementIndex_1) == 0x000594, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_FaceIndex_1) == 0x000598, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_TraceStart_1) == 0x00059C, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_BreakHitResult_TraceEnd_1) == 0x0005A8, "Member 'LogFence_C_Gen::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x0005B4, "Member 'LogFence_C_Gen::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_RotateAngleAxis_ReturnValue) == 0x0005C0, "Member 'LogFence_C_Gen::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0005CC, "Member 'LogFence_C_Gen::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_Cross_VectorVector_ReturnValue) == 0x0005D8, "Member 'LogFence_C_Gen::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0005E4, "Member 'LogFence_C_Gen::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(LogFence_C_Gen, CallFunc_GetSplineLength_ReturnValue) == 0x0005F0, "Member 'LogFence_C_Gen::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");

// Function logFence.logFence_C.ExecuteUbergraph_logFence
// 0x0004 (0x0004 - 0x0000)
struct LogFence_C_ExecuteUbergraph_logFence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LogFence_C_ExecuteUbergraph_logFence) == 0x000004, "Wrong alignment on LogFence_C_ExecuteUbergraph_logFence");
static_assert(sizeof(LogFence_C_ExecuteUbergraph_logFence) == 0x000004, "Wrong size on LogFence_C_ExecuteUbergraph_logFence");
static_assert(offsetof(LogFence_C_ExecuteUbergraph_logFence, EntryPoint) == 0x000000, "Member 'LogFence_C_ExecuteUbergraph_logFence::EntryPoint' has a wrong offset!");

}

