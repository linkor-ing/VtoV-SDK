#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SignalSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function signalSlot.signalSlot_C.ExecuteUbergraph_signalSlot
// 0x0138 (0x0138 - 0x0000)
struct SignalSlot_C_ExecuteUbergraph_signalSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A5[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0048(0x0010)(NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0058(0x0018)()
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0070(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A6[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x008C(0x0008)(NoDestructor)
	uint8                                         Pad_31A7[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DateTime_ToString_String;                 // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31A8[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A9[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AA[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0110(0x0028)()
};
static_assert(alignof(SignalSlot_C_ExecuteUbergraph_signalSlot) == 0x000008, "Wrong alignment on SignalSlot_C_ExecuteUbergraph_signalSlot");
static_assert(sizeof(SignalSlot_C_ExecuteUbergraph_signalSlot) == 0x000138, "Wrong size on SignalSlot_C_ExecuteUbergraph_signalSlot");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, EntryPoint) == 0x000000, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_struct_Variable) == 0x000004, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_struct_Variable_1) == 0x000014, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_struct_Variable_2) == 0x000024, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_struct_Variable_3) == 0x000034, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_bool_Variable) == 0x000044, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_byte_Variable) == 0x000045, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_byte_Variable_1) == 0x000046, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_MakeStruct_Anchors) == 0x000048, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000058, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_ComponentBoundEvent_Text) == 0x000070, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_ComponentBoundEvent_CommitMethod) == 0x000088, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_Event_InFocusEvent) == 0x00008C, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_DateTime_ToString_String) == 0x000098, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_DateTime_ToString_String' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_Select_Default) == 0x0000A8, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000E0, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000E8, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, Temp_int_Variable) == 0x0000F4, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_Event_index) == 0x0000F8, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_Select_Default_1) == 0x0000FC, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_ExecuteUbergraph_signalSlot, K2Node_MakeStruct_SlateColor) == 0x000110, "Member 'SignalSlot_C_ExecuteUbergraph_signalSlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function signalSlot.signalSlot_C.setIndex
// 0x0004 (0x0004 - 0x0000)
struct SignalSlot_C_SetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SignalSlot_C_SetIndex) == 0x000004, "Wrong alignment on SignalSlot_C_SetIndex");
static_assert(sizeof(SignalSlot_C_SetIndex) == 0x000004, "Wrong size on SignalSlot_C_SetIndex");
static_assert(offsetof(SignalSlot_C_SetIndex, Param_Index) == 0x000000, "Member 'SignalSlot_C_SetIndex::Param_Index' has a wrong offset!");

// Function signalSlot.signalSlot_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct SignalSlot_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(SignalSlot_C_OnFocusLost) == 0x000004, "Wrong alignment on SignalSlot_C_OnFocusLost");
static_assert(sizeof(SignalSlot_C_OnFocusLost) == 0x000008, "Wrong size on SignalSlot_C_OnFocusLost");
static_assert(offsetof(SignalSlot_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'SignalSlot_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function signalSlot.signalSlot_C.BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'SignalSlot_C_BndEvt__EditableTextBox_135_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function signalSlot.signalSlot_C.sett
// 0x0005 (0x0005 - 0x0000)
struct SignalSlot_C_Sett final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SignalSlot_C_Sett) == 0x000001, "Wrong alignment on SignalSlot_C_Sett");
static_assert(sizeof(SignalSlot_C_Sett) == 0x000005, "Wrong size on SignalSlot_C_Sett");
static_assert(offsetof(SignalSlot_C_Sett, Temp_bool_Variable) == 0x000000, "Member 'SignalSlot_C_Sett::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_Sett, Temp_byte_Variable) == 0x000001, "Member 'SignalSlot_C_Sett::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_Sett, Temp_byte_Variable_1) == 0x000002, "Member 'SignalSlot_C_Sett::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_Sett, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000003, "Member 'SignalSlot_C_Sett::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_Sett, K2Node_Select_Default) == 0x000004, "Member 'SignalSlot_C_Sett::K2Node_Select_Default' has a wrong offset!");

// Function signalSlot.signalSlot_C.OnKeyDown
// 0x01E0 (0x01E0 - 0x0000)
struct SignalSlot_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0128(0x00B8)()
};
static_assert(alignof(SignalSlot_C_OnKeyDown) == 0x000008, "Wrong alignment on SignalSlot_C_OnKeyDown");
static_assert(sizeof(SignalSlot_C_OnKeyDown) == 0x0001E0, "Wrong size on SignalSlot_C_OnKeyDown");
static_assert(offsetof(SignalSlot_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'SignalSlot_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'SignalSlot_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'SignalSlot_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000128, "Member 'SignalSlot_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function signalSlot.signalSlot_C.setPos
// 0x0028 (0x0028 - 0x0000)
struct SignalSlot_C_SetPos final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SignalSlot_C_SetPos) == 0x000008, "Wrong alignment on SignalSlot_C_SetPos");
static_assert(sizeof(SignalSlot_C_SetPos) == 0x000028, "Wrong size on SignalSlot_C_SetPos");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'SignalSlot_C_SetPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'SignalSlot_C_SetPos::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SignalSlot_C_SetPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'SignalSlot_C_SetPos::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'SignalSlot_C_SetPos::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'SignalSlot_C_SetPos::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SignalSlot_C_SetPos, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'SignalSlot_C_SetPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function signalSlot.signalSlot_C.updName
// 0x0018 (0x0018 - 0x0000)
struct SignalSlot_C_UpdName final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
};
static_assert(alignof(SignalSlot_C_UpdName) == 0x000008, "Wrong alignment on SignalSlot_C_UpdName");
static_assert(sizeof(SignalSlot_C_UpdName) == 0x000018, "Wrong size on SignalSlot_C_UpdName");
static_assert(offsetof(SignalSlot_C_UpdName, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'SignalSlot_C_UpdName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

