#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeatherFogController

#include "Basic.hpp"


namespace SDK::Params
{

// Function weatherFogController.weatherFogController_C.ExecuteUbergraph_weatherFogController
// 0x0048 (0x0048 - 0x0000)
struct WeatherFogController_C_ExecuteUbergraph_weatherFogController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeatherFogController_C_ExecuteUbergraph_weatherFogController) == 0x000008, "Wrong alignment on WeatherFogController_C_ExecuteUbergraph_weatherFogController");
static_assert(sizeof(WeatherFogController_C_ExecuteUbergraph_weatherFogController) == 0x000048, "Wrong size on WeatherFogController_C_ExecuteUbergraph_weatherFogController");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, EntryPoint) == 0x000000, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_PerlinNoise1D_ReturnValue) == 0x000010, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_DegSin_ReturnValue) == 0x000028, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Lerp_ReturnValue) == 0x00002C, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000034, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000038, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00003C, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(WeatherFogController_C_ExecuteUbergraph_weatherFogController, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000040, "Member 'WeatherFogController_C_ExecuteUbergraph_weatherFogController::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");

// Function weatherFogController.weatherFogController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WeatherFogController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeatherFogController_C_ReceiveTick) == 0x000004, "Wrong alignment on WeatherFogController_C_ReceiveTick");
static_assert(sizeof(WeatherFogController_C_ReceiveTick) == 0x000004, "Wrong size on WeatherFogController_C_ReceiveTick");
static_assert(offsetof(WeatherFogController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WeatherFogController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

