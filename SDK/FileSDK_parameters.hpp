#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FileSDK

#include "Basic.hpp"

#include "FileSDK_structs.hpp"


namespace SDK::Params
{

// Function FileSDK.FileSDKBPLibrary.CopyDirectory
// 0x0040 (0x0040 - 0x0000)
struct FileSDKBPLibrary_CopyDirectory final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)> ProgressCallback;                                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          OverwriteDestination;                              // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChunkSizeInKilobytes;                              // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_CopyDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CopyDirectory");
static_assert(sizeof(FileSDKBPLibrary_CopyDirectory) == 0x000040, "Wrong size on FileSDKBPLibrary_CopyDirectory");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, Source) == 0x000000, "Member 'FileSDKBPLibrary_CopyDirectory::Source' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, Destination) == 0x000010, "Member 'FileSDKBPLibrary_CopyDirectory::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, ProgressCallback) == 0x000020, "Member 'FileSDKBPLibrary_CopyDirectory::ProgressCallback' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, OverwriteDestination) == 0x000030, "Member 'FileSDKBPLibrary_CopyDirectory::OverwriteDestination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, ChunkSizeInKilobytes) == 0x000034, "Member 'FileSDKBPLibrary_CopyDirectory::ChunkSizeInKilobytes' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectory, ReturnValue) == 0x000038, "Member 'FileSDKBPLibrary_CopyDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.CopyDirectoryAsync
// 0x0038 (0x0038 - 0x0000)
struct FileSDKBPLibrary_CopyDirectoryAsync final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)> ProgressCallback;                                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          OverwriteDestination;                              // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChunkSizeInKilobytes;                              // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_CopyDirectoryAsync) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CopyDirectoryAsync");
static_assert(sizeof(FileSDKBPLibrary_CopyDirectoryAsync) == 0x000038, "Wrong size on FileSDKBPLibrary_CopyDirectoryAsync");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectoryAsync, Source) == 0x000000, "Member 'FileSDKBPLibrary_CopyDirectoryAsync::Source' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectoryAsync, Destination) == 0x000010, "Member 'FileSDKBPLibrary_CopyDirectoryAsync::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectoryAsync, ProgressCallback) == 0x000020, "Member 'FileSDKBPLibrary_CopyDirectoryAsync::ProgressCallback' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectoryAsync, OverwriteDestination) == 0x000030, "Member 'FileSDKBPLibrary_CopyDirectoryAsync::OverwriteDestination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyDirectoryAsync, ChunkSizeInKilobytes) == 0x000034, "Member 'FileSDKBPLibrary_CopyDirectoryAsync::ChunkSizeInKilobytes' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.CopyFile
// 0x0040 (0x0040 - 0x0000)
struct FileSDKBPLibrary_CopyFile final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)> ProgressCallback;                                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFileSDKDelegatePreInfo                PreInfo;                                           // 0x0030(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ChunkSizeInKilobytes;                              // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OverwriteDestination;                              // 0x003C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x003D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_CopyFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CopyFile");
static_assert(sizeof(FileSDKBPLibrary_CopyFile) == 0x000040, "Wrong size on FileSDKBPLibrary_CopyFile");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, Source) == 0x000000, "Member 'FileSDKBPLibrary_CopyFile::Source' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, Destination) == 0x000010, "Member 'FileSDKBPLibrary_CopyFile::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, ProgressCallback) == 0x000020, "Member 'FileSDKBPLibrary_CopyFile::ProgressCallback' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, PreInfo) == 0x000030, "Member 'FileSDKBPLibrary_CopyFile::PreInfo' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, ChunkSizeInKilobytes) == 0x000038, "Member 'FileSDKBPLibrary_CopyFile::ChunkSizeInKilobytes' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, OverwriteDestination) == 0x00003C, "Member 'FileSDKBPLibrary_CopyFile::OverwriteDestination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFile, ReturnValue) == 0x00003D, "Member 'FileSDKBPLibrary_CopyFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.CopyFileAsync
// 0x0040 (0x0040 - 0x0000)
struct FileSDKBPLibrary_CopyFileAsync final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)> ProgressCallback;                                  // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FFileSDKDelegatePreInfo                PreInfo;                                           // 0x0030(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ChunkSizeInKilobytes;                              // 0x0038(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_CopyFileAsync) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CopyFileAsync");
static_assert(sizeof(FileSDKBPLibrary_CopyFileAsync) == 0x000040, "Wrong size on FileSDKBPLibrary_CopyFileAsync");
static_assert(offsetof(FileSDKBPLibrary_CopyFileAsync, Source) == 0x000000, "Member 'FileSDKBPLibrary_CopyFileAsync::Source' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFileAsync, Destination) == 0x000010, "Member 'FileSDKBPLibrary_CopyFileAsync::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFileAsync, ProgressCallback) == 0x000020, "Member 'FileSDKBPLibrary_CopyFileAsync::ProgressCallback' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFileAsync, PreInfo) == 0x000030, "Member 'FileSDKBPLibrary_CopyFileAsync::PreInfo' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CopyFileAsync, ChunkSizeInKilobytes) == 0x000038, "Member 'FileSDKBPLibrary_CopyFileAsync::ChunkSizeInKilobytes' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.CreateDirectory
// 0x0018 (0x0018 - 0x0000)
struct FileSDKBPLibrary_CreateDirectory final
{
public:
	class FString                                 DirectoryName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CreateDirectoryTree;                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_CreateDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CreateDirectory");
static_assert(sizeof(FileSDKBPLibrary_CreateDirectory) == 0x000018, "Wrong size on FileSDKBPLibrary_CreateDirectory");
static_assert(offsetof(FileSDKBPLibrary_CreateDirectory, DirectoryName) == 0x000000, "Member 'FileSDKBPLibrary_CreateDirectory::DirectoryName' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CreateDirectory, CreateDirectoryTree) == 0x000010, "Member 'FileSDKBPLibrary_CreateDirectory::CreateDirectoryTree' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CreateDirectory, ReturnValue) == 0x000011, "Member 'FileSDKBPLibrary_CreateDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.CreateFile
// 0x0018 (0x0018 - 0x0000)
struct FileSDKBPLibrary_CreateFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ClearContentsIfExists;                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CreateDirectoryTree;                               // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_CreateFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_CreateFile");
static_assert(sizeof(FileSDKBPLibrary_CreateFile) == 0x000018, "Wrong size on FileSDKBPLibrary_CreateFile");
static_assert(offsetof(FileSDKBPLibrary_CreateFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_CreateFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CreateFile, ClearContentsIfExists) == 0x000010, "Member 'FileSDKBPLibrary_CreateFile::ClearContentsIfExists' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_CreateFile, CreateDirectoryTree) == 0x000011, "Member 'FileSDKBPLibrary_CreateFile::CreateDirectoryTree' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.DeleteDirectory
// 0x0018 (0x0018 - 0x0000)
struct FileSDKBPLibrary_DeleteDirectory final
{
public:
	class FString                                 DirectoryName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Recursive;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_DeleteDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_DeleteDirectory");
static_assert(sizeof(FileSDKBPLibrary_DeleteDirectory) == 0x000018, "Wrong size on FileSDKBPLibrary_DeleteDirectory");
static_assert(offsetof(FileSDKBPLibrary_DeleteDirectory, DirectoryName) == 0x000000, "Member 'FileSDKBPLibrary_DeleteDirectory::DirectoryName' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_DeleteDirectory, Recursive) == 0x000010, "Member 'FileSDKBPLibrary_DeleteDirectory::Recursive' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_DeleteDirectory, ReturnValue) == 0x000011, "Member 'FileSDKBPLibrary_DeleteDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.DeleteFile
// 0x0018 (0x0018 - 0x0000)
struct FileSDKBPLibrary_DeleteFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_DeleteFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_DeleteFile");
static_assert(sizeof(FileSDKBPLibrary_DeleteFile) == 0x000018, "Wrong size on FileSDKBPLibrary_DeleteFile");
static_assert(offsetof(FileSDKBPLibrary_DeleteFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_DeleteFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_DeleteFile, ReturnValue) == 0x000010, "Member 'FileSDKBPLibrary_DeleteFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetCurrentUserHomeDirectory
// 0x0010 (0x0010 - 0x0000)
struct FileSDKBPLibrary_GetCurrentUserHomeDirectory final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetCurrentUserHomeDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetCurrentUserHomeDirectory");
static_assert(sizeof(FileSDKBPLibrary_GetCurrentUserHomeDirectory) == 0x000010, "Wrong size on FileSDKBPLibrary_GetCurrentUserHomeDirectory");
static_assert(offsetof(FileSDKBPLibrary_GetCurrentUserHomeDirectory, ReturnValue) == 0x000000, "Member 'FileSDKBPLibrary_GetCurrentUserHomeDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetCurrentUsername
// 0x0010 (0x0010 - 0x0000)
struct FileSDKBPLibrary_GetCurrentUsername final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetCurrentUsername) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetCurrentUsername");
static_assert(sizeof(FileSDKBPLibrary_GetCurrentUsername) == 0x000010, "Wrong size on FileSDKBPLibrary_GetCurrentUsername");
static_assert(offsetof(FileSDKBPLibrary_GetCurrentUsername, ReturnValue) == 0x000000, "Member 'FileSDKBPLibrary_GetCurrentUsername::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetDirectoryContentsWithFileInfo
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_GetDirectoryContentsWithFileInfo final
{
public:
	class FString                                 Directory;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SearchSubfolders;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFileSDKFileInfo>               ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetDirectoryContentsWithFileInfo) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetDirectoryContentsWithFileInfo");
static_assert(sizeof(FileSDKBPLibrary_GetDirectoryContentsWithFileInfo) == 0x000028, "Wrong size on FileSDKBPLibrary_GetDirectoryContentsWithFileInfo");
static_assert(offsetof(FileSDKBPLibrary_GetDirectoryContentsWithFileInfo, Directory) == 0x000000, "Member 'FileSDKBPLibrary_GetDirectoryContentsWithFileInfo::Directory' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetDirectoryContentsWithFileInfo, SearchSubfolders) == 0x000010, "Member 'FileSDKBPLibrary_GetDirectoryContentsWithFileInfo::SearchSubfolders' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetDirectoryContentsWithFileInfo, ReturnValue) == 0x000018, "Member 'FileSDKBPLibrary_GetDirectoryContentsWithFileInfo::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetEnvironmentVariable
// 0x0020 (0x0020 - 0x0000)
struct FileSDKBPLibrary_GetEnvironmentVariable final
{
public:
	class FString                                 VariableName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetEnvironmentVariable) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetEnvironmentVariable");
static_assert(sizeof(FileSDKBPLibrary_GetEnvironmentVariable) == 0x000020, "Wrong size on FileSDKBPLibrary_GetEnvironmentVariable");
static_assert(offsetof(FileSDKBPLibrary_GetEnvironmentVariable, VariableName) == 0x000000, "Member 'FileSDKBPLibrary_GetEnvironmentVariable::VariableName' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetEnvironmentVariable, ReturnValue) == 0x000010, "Member 'FileSDKBPLibrary_GetEnvironmentVariable::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetFileOrDirectoryInfo
// 0x0058 (0x0058 - 0x0000)
struct FileSDKBPLibrary_GetFileOrDirectoryInfo final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFileSDKFileInfo                       Info;                                              // 0x0010(0x0048)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetFileOrDirectoryInfo) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetFileOrDirectoryInfo");
static_assert(sizeof(FileSDKBPLibrary_GetFileOrDirectoryInfo) == 0x000058, "Wrong size on FileSDKBPLibrary_GetFileOrDirectoryInfo");
static_assert(offsetof(FileSDKBPLibrary_GetFileOrDirectoryInfo, Path) == 0x000000, "Member 'FileSDKBPLibrary_GetFileOrDirectoryInfo::Path' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetFileOrDirectoryInfo, Info) == 0x000010, "Member 'FileSDKBPLibrary_GetFileOrDirectoryInfo::Info' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.GetFilesFromDirectory
// 0x0038 (0x0038 - 0x0000)
struct FileSDKBPLibrary_GetFilesFromDirectory final
{
public:
	class FString                                 DirectoryToSearch;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FilterFilesWithExtension;                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SearchSubfolders;                                  // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFileSDKFileType                              FileType;                                          // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_GetFilesFromDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_GetFilesFromDirectory");
static_assert(sizeof(FileSDKBPLibrary_GetFilesFromDirectory) == 0x000038, "Wrong size on FileSDKBPLibrary_GetFilesFromDirectory");
static_assert(offsetof(FileSDKBPLibrary_GetFilesFromDirectory, DirectoryToSearch) == 0x000000, "Member 'FileSDKBPLibrary_GetFilesFromDirectory::DirectoryToSearch' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetFilesFromDirectory, FilterFilesWithExtension) == 0x000010, "Member 'FileSDKBPLibrary_GetFilesFromDirectory::FilterFilesWithExtension' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetFilesFromDirectory, SearchSubfolders) == 0x000020, "Member 'FileSDKBPLibrary_GetFilesFromDirectory::SearchSubfolders' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetFilesFromDirectory, FileType) == 0x000021, "Member 'FileSDKBPLibrary_GetFilesFromDirectory::FileType' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_GetFilesFromDirectory, ReturnValue) == 0x000028, "Member 'FileSDKBPLibrary_GetFilesFromDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.OpenFileReader
// 0x0020 (0x0020 - 0x0000)
struct FileSDKBPLibrary_OpenFileReader final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OpenInBinaryMode;                                  // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFileSDKFileReader*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKBPLibrary_OpenFileReader) == 0x000008, "Wrong alignment on FileSDKBPLibrary_OpenFileReader");
static_assert(sizeof(FileSDKBPLibrary_OpenFileReader) == 0x000020, "Wrong size on FileSDKBPLibrary_OpenFileReader");
static_assert(offsetof(FileSDKBPLibrary_OpenFileReader, Filename) == 0x000000, "Member 'FileSDKBPLibrary_OpenFileReader::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_OpenFileReader, OpenInBinaryMode) == 0x000010, "Member 'FileSDKBPLibrary_OpenFileReader::OpenInBinaryMode' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_OpenFileReader, ReturnValue) == 0x000018, "Member 'FileSDKBPLibrary_OpenFileReader::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.ReadBytesFromFile
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_ReadBytesFromFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Content;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_ReadBytesFromFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_ReadBytesFromFile");
static_assert(sizeof(FileSDKBPLibrary_ReadBytesFromFile) == 0x000028, "Wrong size on FileSDKBPLibrary_ReadBytesFromFile");
static_assert(offsetof(FileSDKBPLibrary_ReadBytesFromFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_ReadBytesFromFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadBytesFromFile, Content) == 0x000010, "Member 'FileSDKBPLibrary_ReadBytesFromFile::Content' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadBytesFromFile, ReturnValue) == 0x000020, "Member 'FileSDKBPLibrary_ReadBytesFromFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.ReadLinesFromFile
// 0x0030 (0x0030 - 0x0000)
struct FileSDKBPLibrary_ReadLinesFromFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFileSDKLineReader>         LineReader;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Lines;                                             // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_ReadLinesFromFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_ReadLinesFromFile");
static_assert(sizeof(FileSDKBPLibrary_ReadLinesFromFile) == 0x000030, "Wrong size on FileSDKBPLibrary_ReadLinesFromFile");
static_assert(offsetof(FileSDKBPLibrary_ReadLinesFromFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_ReadLinesFromFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadLinesFromFile, LineReader) == 0x000010, "Member 'FileSDKBPLibrary_ReadLinesFromFile::LineReader' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadLinesFromFile, Lines) == 0x000018, "Member 'FileSDKBPLibrary_ReadLinesFromFile::Lines' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadLinesFromFile, ReturnValue) == 0x000028, "Member 'FileSDKBPLibrary_ReadLinesFromFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.ReadStringFromFile
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_ReadStringFromFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_ReadStringFromFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_ReadStringFromFile");
static_assert(sizeof(FileSDKBPLibrary_ReadStringFromFile) == 0x000028, "Wrong size on FileSDKBPLibrary_ReadStringFromFile");
static_assert(offsetof(FileSDKBPLibrary_ReadStringFromFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_ReadStringFromFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadStringFromFile, Content) == 0x000010, "Member 'FileSDKBPLibrary_ReadStringFromFile::Content' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_ReadStringFromFile, ReturnValue) == 0x000020, "Member 'FileSDKBPLibrary_ReadStringFromFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.RenameFileOrDirectory
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_RenameFileOrDirectory final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_RenameFileOrDirectory) == 0x000008, "Wrong alignment on FileSDKBPLibrary_RenameFileOrDirectory");
static_assert(sizeof(FileSDKBPLibrary_RenameFileOrDirectory) == 0x000028, "Wrong size on FileSDKBPLibrary_RenameFileOrDirectory");
static_assert(offsetof(FileSDKBPLibrary_RenameFileOrDirectory, Source) == 0x000000, "Member 'FileSDKBPLibrary_RenameFileOrDirectory::Source' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_RenameFileOrDirectory, Destination) == 0x000010, "Member 'FileSDKBPLibrary_RenameFileOrDirectory::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_RenameFileOrDirectory, ReturnValue) == 0x000020, "Member 'FileSDKBPLibrary_RenameFileOrDirectory::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.WriteBytesToFile
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_WriteBytesToFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Content;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_WriteBytesToFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_WriteBytesToFile");
static_assert(sizeof(FileSDKBPLibrary_WriteBytesToFile) == 0x000028, "Wrong size on FileSDKBPLibrary_WriteBytesToFile");
static_assert(offsetof(FileSDKBPLibrary_WriteBytesToFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_WriteBytesToFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteBytesToFile, Content) == 0x000010, "Member 'FileSDKBPLibrary_WriteBytesToFile::Content' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteBytesToFile, ReturnValue) == 0x000020, "Member 'FileSDKBPLibrary_WriteBytesToFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKBPLibrary.WriteStringToFile
// 0x0028 (0x0028 - 0x0000)
struct FileSDKBPLibrary_WriteStringToFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Content;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Append;                                            // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFileSDKEncodingOptions                       Encoding;                                          // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0022(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKBPLibrary_WriteStringToFile) == 0x000008, "Wrong alignment on FileSDKBPLibrary_WriteStringToFile");
static_assert(sizeof(FileSDKBPLibrary_WriteStringToFile) == 0x000028, "Wrong size on FileSDKBPLibrary_WriteStringToFile");
static_assert(offsetof(FileSDKBPLibrary_WriteStringToFile, Filename) == 0x000000, "Member 'FileSDKBPLibrary_WriteStringToFile::Filename' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteStringToFile, Content) == 0x000010, "Member 'FileSDKBPLibrary_WriteStringToFile::Content' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteStringToFile, Append) == 0x000020, "Member 'FileSDKBPLibrary_WriteStringToFile::Append' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteStringToFile, Encoding) == 0x000021, "Member 'FileSDKBPLibrary_WriteStringToFile::Encoding' has a wrong offset!");
static_assert(offsetof(FileSDKBPLibrary_WriteStringToFile, ReturnValue) == 0x000022, "Member 'FileSDKBPLibrary_WriteStringToFile::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKCopyFileAsync.CopyFileAsync
// 0x0048 (0x0048 - 0x0000)
struct FileSDKCopyFileAsync_CopyFileAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Source;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Destination;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(int32 KilobytesWritten, int32 TotalKilobytes)> ProgressCallback;                                  // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          OverwriteDestination;                              // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChunkSizeInKilobytes;                              // 0x003C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFileSDKCopyFileAsync*                  ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKCopyFileAsync_CopyFileAsync) == 0x000008, "Wrong alignment on FileSDKCopyFileAsync_CopyFileAsync");
static_assert(sizeof(FileSDKCopyFileAsync_CopyFileAsync) == 0x000048, "Wrong size on FileSDKCopyFileAsync_CopyFileAsync");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, WorldContextObject) == 0x000000, "Member 'FileSDKCopyFileAsync_CopyFileAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, Source) == 0x000008, "Member 'FileSDKCopyFileAsync_CopyFileAsync::Source' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, Destination) == 0x000018, "Member 'FileSDKCopyFileAsync_CopyFileAsync::Destination' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, ProgressCallback) == 0x000028, "Member 'FileSDKCopyFileAsync_CopyFileAsync::ProgressCallback' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, OverwriteDestination) == 0x000038, "Member 'FileSDKCopyFileAsync_CopyFileAsync::OverwriteDestination' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, ChunkSizeInKilobytes) == 0x00003C, "Member 'FileSDKCopyFileAsync_CopyFileAsync::ChunkSizeInKilobytes' has a wrong offset!");
static_assert(offsetof(FileSDKCopyFileAsync_CopyFileAsync, ReturnValue) == 0x000040, "Member 'FileSDKCopyFileAsync_CopyFileAsync::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.IsGood
// 0x0001 (0x0001 - 0x0000)
struct FileSDKFileReader_IsGood final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FileSDKFileReader_IsGood) == 0x000001, "Wrong alignment on FileSDKFileReader_IsGood");
static_assert(sizeof(FileSDKFileReader_IsGood) == 0x000001, "Wrong size on FileSDKFileReader_IsGood");
static_assert(offsetof(FileSDKFileReader_IsGood, ReturnValue) == 0x000000, "Member 'FileSDKFileReader_IsGood::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.ReadBytes
// 0x0020 (0x0020 - 0x0000)
struct FileSDKFileReader_ReadBytes final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Content;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKFileReader_ReadBytes) == 0x000008, "Wrong alignment on FileSDKFileReader_ReadBytes");
static_assert(sizeof(FileSDKFileReader_ReadBytes) == 0x000020, "Wrong size on FileSDKFileReader_ReadBytes");
static_assert(offsetof(FileSDKFileReader_ReadBytes, Num) == 0x000000, "Member 'FileSDKFileReader_ReadBytes::Num' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadBytes, Content) == 0x000008, "Member 'FileSDKFileReader_ReadBytes::Content' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadBytes, ReturnValue) == 0x000018, "Member 'FileSDKFileReader_ReadBytes::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.ReadBytesToEnd
// 0x0018 (0x0018 - 0x0000)
struct FileSDKFileReader_ReadBytesToEnd final
{
public:
	TArray<uint8>                                 Content;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKFileReader_ReadBytesToEnd) == 0x000008, "Wrong alignment on FileSDKFileReader_ReadBytesToEnd");
static_assert(sizeof(FileSDKFileReader_ReadBytesToEnd) == 0x000018, "Wrong size on FileSDKFileReader_ReadBytesToEnd");
static_assert(offsetof(FileSDKFileReader_ReadBytesToEnd, Content) == 0x000000, "Member 'FileSDKFileReader_ReadBytesToEnd::Content' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadBytesToEnd, ReturnValue) == 0x000010, "Member 'FileSDKFileReader_ReadBytesToEnd::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.ReadString
// 0x0020 (0x0020 - 0x0000)
struct FileSDKFileReader_ReadString final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Content;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKFileReader_ReadString) == 0x000008, "Wrong alignment on FileSDKFileReader_ReadString");
static_assert(sizeof(FileSDKFileReader_ReadString) == 0x000020, "Wrong size on FileSDKFileReader_ReadString");
static_assert(offsetof(FileSDKFileReader_ReadString, Num) == 0x000000, "Member 'FileSDKFileReader_ReadString::Num' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadString, Content) == 0x000008, "Member 'FileSDKFileReader_ReadString::Content' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadString, ReturnValue) == 0x000018, "Member 'FileSDKFileReader_ReadString::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.ReadStringToEnd
// 0x0018 (0x0018 - 0x0000)
struct FileSDKFileReader_ReadStringToEnd final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKFileReader_ReadStringToEnd) == 0x000008, "Wrong alignment on FileSDKFileReader_ReadStringToEnd");
static_assert(sizeof(FileSDKFileReader_ReadStringToEnd) == 0x000018, "Wrong size on FileSDKFileReader_ReadStringToEnd");
static_assert(offsetof(FileSDKFileReader_ReadStringToEnd, Content) == 0x000000, "Member 'FileSDKFileReader_ReadStringToEnd::Content' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_ReadStringToEnd, ReturnValue) == 0x000010, "Member 'FileSDKFileReader_ReadStringToEnd::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKFileReader.SeekFilePosition
// 0x000C (0x000C - 0x0000)
struct FileSDKFileReader_SeekFilePosition final
{
public:
	EFileSDKFileAnchor                            Anchor;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Offset;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKFileReader_SeekFilePosition) == 0x000004, "Wrong alignment on FileSDKFileReader_SeekFilePosition");
static_assert(sizeof(FileSDKFileReader_SeekFilePosition) == 0x00000C, "Wrong size on FileSDKFileReader_SeekFilePosition");
static_assert(offsetof(FileSDKFileReader_SeekFilePosition, Anchor) == 0x000000, "Member 'FileSDKFileReader_SeekFilePosition::Anchor' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_SeekFilePosition, Offset) == 0x000004, "Member 'FileSDKFileReader_SeekFilePosition::Offset' has a wrong offset!");
static_assert(offsetof(FileSDKFileReader_SeekFilePosition, ReturnValue) == 0x000008, "Member 'FileSDKFileReader_SeekFilePosition::ReturnValue' has a wrong offset!");

// Function FileSDK.FileSDKLineReader.FilterLine
// 0x0018 (0x0018 - 0x0000)
struct FileSDKLineReader_FilterLine final
{
public:
	class FString                                 Line;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FileSDKLineReader_FilterLine) == 0x000008, "Wrong alignment on FileSDKLineReader_FilterLine");
static_assert(sizeof(FileSDKLineReader_FilterLine) == 0x000018, "Wrong size on FileSDKLineReader_FilterLine");
static_assert(offsetof(FileSDKLineReader_FilterLine, Line) == 0x000000, "Member 'FileSDKLineReader_FilterLine::Line' has a wrong offset!");
static_assert(offsetof(FileSDKLineReader_FilterLine, ReturnValue) == 0x000010, "Member 'FileSDKLineReader_FilterLine::ReturnValue' has a wrong offset!");

}

