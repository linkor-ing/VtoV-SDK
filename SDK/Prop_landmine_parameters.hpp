#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_landmine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_landmine.prop_landmine_C.ExecuteUbergraph_prop_landmine
// 0x0140 (0x0140 - 0x0000)
struct Prop_landmine_C_ExecuteUbergraph_prop_landmine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorBeingDestroyed_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3900[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0100(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3901[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosion_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_static;                               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3902[0x5];                                     // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_landmine_C_ExecuteUbergraph_prop_landmine) == 0x000010, "Wrong alignment on Prop_landmine_C_ExecuteUbergraph_prop_landmine");
static_assert(sizeof(Prop_landmine_C_ExecuteUbergraph_prop_landmine) == 0x000140, "Wrong size on Prop_landmine_C_ExecuteUbergraph_prop_landmine");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, EntryPoint) == 0x000000, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_IsActorBeingDestroyed_ReturnValue) == 0x000004, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_IsActorBeingDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000100, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_Event_static) == 0x000128, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_Event_frozen) == 0x000129, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, K2Node_Event_active) == 0x00012A, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_GetAttachParentActor_ReturnValue) == 0x000130, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_ExecuteUbergraph_prop_landmine, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000138, "Member 'Prop_landmine_C_ExecuteUbergraph_prop_landmine::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function prop_landmine.prop_landmine_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct Prop_landmine_C_SetPropProps final
{
public:
	bool                                          Param_Static;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Frozen;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Active;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_landmine_C_SetPropProps) == 0x000001, "Wrong alignment on Prop_landmine_C_SetPropProps");
static_assert(sizeof(Prop_landmine_C_SetPropProps) == 0x000003, "Wrong size on Prop_landmine_C_SetPropProps");
static_assert(offsetof(Prop_landmine_C_SetPropProps, Param_Static) == 0x000000, "Member 'Prop_landmine_C_SetPropProps::Param_Static' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_SetPropProps, Param_Frozen) == 0x000001, "Member 'Prop_landmine_C_SetPropProps::Param_Frozen' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_SetPropProps, Param_Active) == 0x000002, "Member 'Prop_landmine_C_SetPropProps::Param_Active' has a wrong offset!");

// Function prop_landmine.prop_landmine_C.BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_landmine.prop_landmine_C.BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3903[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_landmine_C_BndEvt__prop_landmine_Cylinder_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_landmine.prop_landmine_C.Init
// 0x0004 (0x0004 - 0x0000)
struct Prop_landmine_C_Init final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_landmine_C_Init) == 0x000001, "Wrong alignment on Prop_landmine_C_Init");
static_assert(sizeof(Prop_landmine_C_Init) == 0x000004, "Wrong size on Prop_landmine_C_Init");
static_assert(offsetof(Prop_landmine_C_Init, Temp_bool_Variable) == 0x000000, "Member 'Prop_landmine_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_Init, Temp_byte_Variable) == 0x000001, "Member 'Prop_landmine_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_Init, Temp_byte_Variable_1) == 0x000002, "Member 'Prop_landmine_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_Init, K2Node_Select_Default) == 0x000003, "Member 'Prop_landmine_C_Init::K2Node_Select_Default' has a wrong offset!");

// Function prop_landmine.prop_landmine_C.canPickup
// 0x0002 (0x0002 - 0x0000)
struct Prop_landmine_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_landmine_C_CanPickup) == 0x000001, "Wrong alignment on Prop_landmine_C_CanPickup");
static_assert(sizeof(Prop_landmine_C_CanPickup) == 0x000002, "Wrong size on Prop_landmine_C_CanPickup");
static_assert(offsetof(Prop_landmine_C_CanPickup, Return) == 0x000000, "Member 'Prop_landmine_C_CanPickup::Return' has a wrong offset!");
static_assert(offsetof(Prop_landmine_C_CanPickup, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Prop_landmine_C_CanPickup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

