#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Portal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass portal.portal_C
// 0x0080 (0x02A0 - 0x0220)
class APortal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    Light_R;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        back;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               RenderCam1;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Base;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Rev;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Rt;                                                // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APortal_C*                              Out;                                               // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh;                                              // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeshScale;                                         // 0x0280(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeshOffset;                                        // 0x028C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRender;                                         // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RenderDistance;                                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Param_Base);
	void SetActive(bool Param_IsActive);
	void ApplyVisual();
	void Render();
	void MakeRt();
	void UserConstructionScript();
	void ApplyColor(const struct FLinearColor& Color);
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void SettingsApplied(const struct FStruct_settings& Settings);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Key, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void SignalSaved();
	void SignalDeleted();
	void GamemodeBeginPlay();
	void Fl(class USpotLightComponent* Light, bool Visible);
	void ExecuteUbergraph_portal(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"portal_C">();
	}
	static class APortal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APortal_C>();
	}
};
static_assert(alignof(APortal_C) == 0x000008, "Wrong alignment on APortal_C");
static_assert(sizeof(APortal_C) == 0x0002A0, "Wrong size on APortal_C");
static_assert(offsetof(APortal_C, UberGraphFrame) == 0x000220, "Member 'APortal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APortal_C, Light_R) == 0x000228, "Member 'APortal_C::Light_R' has a wrong offset!");
static_assert(offsetof(APortal_C, back) == 0x000230, "Member 'APortal_C::back' has a wrong offset!");
static_assert(offsetof(APortal_C, RenderCam1) == 0x000238, "Member 'APortal_C::RenderCam1' has a wrong offset!");
static_assert(offsetof(APortal_C, Base) == 0x000240, "Member 'APortal_C::Base' has a wrong offset!");
static_assert(offsetof(APortal_C, Rev) == 0x000248, "Member 'APortal_C::Rev' has a wrong offset!");
static_assert(offsetof(APortal_C, Arrow) == 0x000250, "Member 'APortal_C::Arrow' has a wrong offset!");
static_assert(offsetof(APortal_C, Plane) == 0x000258, "Member 'APortal_C::Plane' has a wrong offset!");
static_assert(offsetof(APortal_C, Rt) == 0x000260, "Member 'APortal_C::Rt' has a wrong offset!");
static_assert(offsetof(APortal_C, Out) == 0x000268, "Member 'APortal_C::Out' has a wrong offset!");
static_assert(offsetof(APortal_C, Dynmat) == 0x000270, "Member 'APortal_C::Dynmat' has a wrong offset!");
static_assert(offsetof(APortal_C, Mesh) == 0x000278, "Member 'APortal_C::Mesh' has a wrong offset!");
static_assert(offsetof(APortal_C, MeshScale) == 0x000280, "Member 'APortal_C::MeshScale' has a wrong offset!");
static_assert(offsetof(APortal_C, MeshOffset) == 0x00028C, "Member 'APortal_C::MeshOffset' has a wrong offset!");
static_assert(offsetof(APortal_C, CanRender) == 0x000298, "Member 'APortal_C::CanRender' has a wrong offset!");
static_assert(offsetof(APortal_C, IsActive) == 0x000299, "Member 'APortal_C::IsActive' has a wrong offset!");
static_assert(offsetof(APortal_C, RenderDistance) == 0x00029C, "Member 'APortal_C::RenderDistance' has a wrong offset!");

}

