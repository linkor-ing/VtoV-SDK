#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FiretankDeploy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass firetankDeploy.firetankDeploy_C
// 0x0088 (0x02A8 - 0x0220)
class AFiretankDeploy_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_thruster4;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_thruster3;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_thruster2;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_thruster1;                                     // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Eff_smoke;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_ambience;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_deploying;                                   // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Light;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FiretankBox;                                       // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocStart;                                          // 0x0294(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_firetankDeploy(int32 EntryPoint);
	void ReceiveDestroyed();
	void BndEvt__firetankDeploy_firetankBox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void SpawnParts();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"firetankDeploy_C">();
	}
	static class AFiretankDeploy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFiretankDeploy_C>();
	}
};
static_assert(alignof(AFiretankDeploy_C) == 0x000008, "Wrong alignment on AFiretankDeploy_C");
static_assert(sizeof(AFiretankDeploy_C) == 0x0002A8, "Wrong size on AFiretankDeploy_C");
static_assert(offsetof(AFiretankDeploy_C, UberGraphFrame) == 0x000220, "Member 'AFiretankDeploy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, PointLight) == 0x000228, "Member 'AFiretankDeploy_C::PointLight' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Eff_thruster4) == 0x000230, "Member 'AFiretankDeploy_C::Eff_thruster4' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Eff_thruster3) == 0x000238, "Member 'AFiretankDeploy_C::Eff_thruster3' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Eff_thruster2) == 0x000240, "Member 'AFiretankDeploy_C::Eff_thruster2' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Eff_thruster1) == 0x000248, "Member 'AFiretankDeploy_C::Eff_thruster1' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Eff_smoke) == 0x000250, "Member 'AFiretankDeploy_C::Eff_smoke' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Audio_ambience) == 0x000258, "Member 'AFiretankDeploy_C::Audio_ambience' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Audio_deploying) == 0x000260, "Member 'AFiretankDeploy_C::Audio_deploying' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Light) == 0x000268, "Member 'AFiretankDeploy_C::Light' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, SkeletalMesh) == 0x000270, "Member 'AFiretankDeploy_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, FiretankBox) == 0x000278, "Member 'AFiretankDeploy_C::FiretankBox' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Billboard) == 0x000280, "Member 'AFiretankDeploy_C::Billboard' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, DefaultSceneRoot) == 0x000288, "Member 'AFiretankDeploy_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Alpha) == 0x000290, "Member 'AFiretankDeploy_C::Alpha' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, LocStart) == 0x000294, "Member 'AFiretankDeploy_C::LocStart' has a wrong offset!");
static_assert(offsetof(AFiretankDeploy_C, Speed) == 0x0002A0, "Member 'AFiretankDeploy_C::Speed' has a wrong offset!");

}

