#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: D_window

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function d_window.d_window_C.ExecuteUbergraph_d_window
// 0x0430 (0x0430 - 0x0000)
struct D_window_C_ExecuteUbergraph_d_window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_sponge_C*                         K2Node_CustomEvent_sponge;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_wash_FloatOut;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_wash_dynmat;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_size;                                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_sponge_C*                         K2Node_CustomEvent_InputPin_1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit_1;                          // 0x0070(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue_1;    // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_sponge_C*                         K2Node_CustomEvent_InputPin;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x01C0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACleanball_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue;        // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_wash_FloatOut_1;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_wash_dynmat_1;                            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_size_1;                              // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x03B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbs2D_ReturnValue;                     // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue_1;     // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_ExecuteUbergraph_d_window) == 0x000010, "Wrong alignment on D_window_C_ExecuteUbergraph_d_window");
static_assert(sizeof(D_window_C_ExecuteUbergraph_d_window) == 0x000430, "Wrong size on D_window_C_ExecuteUbergraph_d_window");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, EntryPoint) == 0x000000, "Member 'D_window_C_ExecuteUbergraph_d_window::EntryPoint' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000010, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_sponge) == 0x000018, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_sponge' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_Location) == 0x000020, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_FloatOut) == 0x00003C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_FloatOut' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_dynmat) == 0x000040, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_dynmat' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_size) == 0x000048, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_size' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_1) == 0x00005C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000064, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_InputPin_1) == 0x000068, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_InputPin_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_Hit_1) == 0x000070, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Location) == 0x000104, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Normal) == 0x00011C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactNormal) == 0x000128, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ElementIndex) == 0x00015C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_FaceIndex) == 0x000160, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceStart) == 0x000164, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceEnd) == 0x000170, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntPointToVector2D_ReturnValue_1) == 0x00017C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntPointToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000184, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_SetVectorLength_ReturnValue) == 0x000190, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001A0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001A8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_InputPin) == 0x0001B8, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_Hit) == 0x0001C0, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000280, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000281, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Time_1) == 0x000284, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Distance_1) == 0x000288, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Location_1) == 0x00028C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000298, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Normal_1) == 0x0002A4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002B0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_PhysMat_1) == 0x0002C0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitActor_1) == 0x0002C8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitComponent_1) == 0x0002D0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002D8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitItem_1) == 0x0002E0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002E4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002E8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceStart_1) == 0x0002EC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002F8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000308, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntToString_ReturnValue) == 0x000310, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_FinishSpawningActor_ReturnValue) == 0x000320, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_FindCollisionUV_UV) == 0x000328, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_FindCollisionUV_ReturnValue) == 0x000330, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000338, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_Vector2dToString_ReturnValue) == 0x000340, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_Vector2dToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000350, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Not_PreBool_ReturnValue) == 0x000351, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetComponentVelocity_ReturnValue) == 0x000354, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000360, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_VSize_ReturnValue) == 0x000368, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00036C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000370, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000371, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000374, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BooleanOR_ReturnValue) == 0x000380, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BooleanAND_ReturnValue) == 0x000381, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_FloatOut_1) == 0x000384, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_FloatOut_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_dynmat_1) == 0x000388, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_dynmat_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_size_1) == 0x000390, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_size_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000394, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_2) == 0x000398, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x0003A0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_IsEmpty_ReturnValue) == 0x0003A8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetTransform_ReturnValue) == 0x0003B0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_InverseTransformLocation_ReturnValue) == 0x0003E0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_X) == 0x0003EC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Y) == 0x0003F0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Z) == 0x0003F4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_3) == 0x0003F8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000400, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000408, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000410, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000418, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetAbs2D_ReturnValue) == 0x000420, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetAbs2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DFloat_ReturnValue_1) == 0x000428, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DFloat_ReturnValue_1' has a wrong offset!");

// Function d_window.d_window_C.cleanPhys
// 0x0090 (0x0090 - 0x0000)
struct D_window_C_CleanPhys final
{
public:
	class AProp_sponge_C*                         InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(D_window_C_CleanPhys) == 0x000008, "Wrong alignment on D_window_C_CleanPhys");
static_assert(sizeof(D_window_C_CleanPhys) == 0x000090, "Wrong size on D_window_C_CleanPhys");
static_assert(offsetof(D_window_C_CleanPhys, InputPin) == 0x000000, "Member 'D_window_C_CleanPhys::InputPin' has a wrong offset!");
static_assert(offsetof(D_window_C_CleanPhys, Hit) == 0x000008, "Member 'D_window_C_CleanPhys::Hit' has a wrong offset!");

// Function d_window.d_window_C.cleanOnHit
// 0x0090 (0x0090 - 0x0000)
struct D_window_C_CleanOnHit final
{
public:
	class AProp_sponge_C*                         InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(D_window_C_CleanOnHit) == 0x000008, "Wrong alignment on D_window_C_CleanOnHit");
static_assert(sizeof(D_window_C_CleanOnHit) == 0x000090, "Wrong size on D_window_C_CleanOnHit");
static_assert(offsetof(D_window_C_CleanOnHit, InputPin) == 0x000000, "Member 'D_window_C_CleanOnHit::InputPin' has a wrong offset!");
static_assert(offsetof(D_window_C_CleanOnHit, Hit) == 0x000008, "Member 'D_window_C_CleanOnHit::Hit' has a wrong offset!");

// Function d_window.d_window_C.cleanAtPoint
// 0x0018 (0x0018 - 0x0000)
struct D_window_C_CleanAtPoint final
{
public:
	class AProp_sponge_C*                         Sponge;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_CleanAtPoint) == 0x000008, "Wrong alignment on D_window_C_CleanAtPoint");
static_assert(sizeof(D_window_C_CleanAtPoint) == 0x000018, "Wrong size on D_window_C_CleanAtPoint");
static_assert(offsetof(D_window_C_CleanAtPoint, Sponge) == 0x000000, "Member 'D_window_C_CleanAtPoint::Sponge' has a wrong offset!");
static_assert(offsetof(D_window_C_CleanAtPoint, Location) == 0x000008, "Member 'D_window_C_CleanAtPoint::Location' has a wrong offset!");

// Function d_window.d_window_C.setDraw
// 0x0020 (0x0020 - 0x0000)
struct D_window_C_SetDraw final
{
public:
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0010(0x0010)(NoDestructor)
};
static_assert(alignof(D_window_C_SetDraw) == 0x000008, "Wrong alignment on D_window_C_SetDraw");
static_assert(sizeof(D_window_C_SetDraw) == 0x000020, "Wrong size on D_window_C_SetDraw");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000000, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000008, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000010, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");

// Function d_window.d_window_C.getCode
// 0x0020 (0x0020 - 0x0000)
struct D_window_C_GetCode final
{
public:
	TArray<uint8>                                 ByteArray;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<uint8>                                 CallFunc_TextureRenderTarget2DToBytes_ByteArray;   // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(D_window_C_GetCode) == 0x000008, "Wrong alignment on D_window_C_GetCode");
static_assert(sizeof(D_window_C_GetCode) == 0x000020, "Wrong size on D_window_C_GetCode");
static_assert(offsetof(D_window_C_GetCode, ByteArray) == 0x000000, "Member 'D_window_C_GetCode::ByteArray' has a wrong offset!");
static_assert(offsetof(D_window_C_GetCode, CallFunc_TextureRenderTarget2DToBytes_ByteArray) == 0x000010, "Member 'D_window_C_GetCode::CallFunc_TextureRenderTarget2DToBytes_ByteArray' has a wrong offset!");

// Function d_window.d_window_C.setCode
// 0x0048 (0x0048 - 0x0000)
struct D_window_C_SetCode final
{
public:
	TArray<uint8>                                 ByteArray;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<uint8>                                 CallFunc_Pearson_ReturnValue;                      // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BytesToBase64Url_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_BytesToImage_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_SetCode) == 0x000008, "Wrong alignment on D_window_C_SetCode");
static_assert(sizeof(D_window_C_SetCode) == 0x000048, "Wrong size on D_window_C_SetCode");
static_assert(offsetof(D_window_C_SetCode, ByteArray) == 0x000000, "Member 'D_window_C_SetCode::ByteArray' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_Pearson_ReturnValue) == 0x000010, "Member 'D_window_C_SetCode::CallFunc_Pearson_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'D_window_C_SetCode::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_BytesToBase64Url_ReturnValue) == 0x000028, "Member 'D_window_C_SetCode::CallFunc_BytesToBase64Url_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_BytesToImage_ReturnValue) == 0x000038, "Member 'D_window_C_SetCode::CallFunc_BytesToImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000040, "Member 'D_window_C_SetCode::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");

// Function d_window.d_window_C.dirty
// 0x0078 (0x0078 - 0x0000)
struct D_window_C_Dirty final
{
public:
	struct FVector2D                              B;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Add_IntPointInt_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0048(0x0010)(NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_Dirty) == 0x000008, "Wrong alignment on D_window_C_Dirty");
static_assert(sizeof(D_window_C_Dirty) == 0x000078, "Wrong size on D_window_C_Dirty");
static_assert(offsetof(D_window_C_Dirty, B) == 0x000000, "Member 'D_window_C_Dirty::B' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00000C, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000010, "Member 'D_window_C_Dirty::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'D_window_C_Dirty::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'D_window_C_Dirty::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Add_IntPointInt_ReturnValue) == 0x000028, "Member 'D_window_C_Dirty::CallFunc_Add_IntPointInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'D_window_C_Dirty::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000048, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000058, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00005C, "Member 'D_window_C_Dirty::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000060, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_MakeVector2D_ReturnValue_1) == 0x000064, "Member 'D_window_C_Dirty::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00006C, "Member 'D_window_C_Dirty::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function d_window.d_window_C.prepareRT
// 0x0018 (0x0018 - 0x0000)
struct D_window_C_PrepareRT final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_PrepareRT) == 0x000008, "Wrong alignment on D_window_C_PrepareRT");
static_assert(sizeof(D_window_C_PrepareRT) == 0x000018, "Wrong size on D_window_C_PrepareRT");
static_assert(offsetof(D_window_C_PrepareRT, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'D_window_C_PrepareRT::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_PrepareRT, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'D_window_C_PrepareRT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_PrepareRT, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000010, "Member 'D_window_C_PrepareRT::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

}

