#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: D_window

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function d_window.d_window_C.ExecuteUbergraph_d_window
// 0x0320 (0x0320 - 0x0000)
struct D_window_C_ExecuteUbergraph_d_window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x002C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_26B1[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B2[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B3[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B4[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_sponge_C*                         K2Node_DynamicCast_AsProp_Sponge;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B5[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B6[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_FloatOut;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B7[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_wash_dynmat;                              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_size;                                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbs2D_ReturnValue;                     // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B8[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0250(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue_1;    // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B9[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_sponge_C*                         K2Node_CustomEvent_sponge;                         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_FloatOut_1;                          // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BA[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_wash_dynmat_1;                            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_wash_size_1;                              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x02F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26BB[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbs2D_ReturnValue_1;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue_1;     // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_ExecuteUbergraph_d_window) == 0x000010, "Wrong alignment on D_window_C_ExecuteUbergraph_d_window");
static_assert(sizeof(D_window_C_ExecuteUbergraph_d_window) == 0x000320, "Wrong size on D_window_C_ExecuteUbergraph_d_window");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, EntryPoint) == 0x000000, "Member 'D_window_C_ExecuteUbergraph_d_window::EntryPoint' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_ComponentBoundEvent_Hit) == 0x00002C, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Location) == 0x0000FC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_Normal) == 0x000114, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ImpactNormal) == 0x000120, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetCenterOfMass_ReturnValue) == 0x000174, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetComponentVelocity_ReturnValue) == 0x000180, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_InverseTransformLocation_ReturnValue) == 0x00018C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_VSize_ReturnValue) == 0x000198, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_X) == 0x00019C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Y) == 0x0001A0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Z) == 0x0001A4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001A8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue) == 0x0001AC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001B4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0001B8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_DynamicCast_AsProp_Sponge) == 0x0001C0, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_DynamicCast_AsProp_Sponge' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001C9, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0001D0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BooleanAND_ReturnValue) == 0x0001D8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001DC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_FloatOut) == 0x0001E8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_FloatOut' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_dynmat) == 0x0001F0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_dynmat' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_size) == 0x0001F8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_size' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001FC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_1) == 0x000200, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000208, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000210, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000218, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000220, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_2) == 0x000224, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00022C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetAbs2D_ReturnValue) == 0x000234, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetAbs2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x00023C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000248, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetTransform_ReturnValue_1) == 0x000250, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntPointToVector2D_ReturnValue_1) == 0x000280, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntPointToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000288, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_3) == 0x00028C, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_sponge) == 0x000298, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_sponge' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, K2Node_CustomEvent_Location) == 0x0002A0, "Member 'D_window_C_ExecuteUbergraph_d_window::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x0002AC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_FloatOut_1) == 0x0002B8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_FloatOut_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_dynmat_1) == 0x0002C0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_dynmat_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_wash_size_1) == 0x0002C8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_wash_size_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_X_1) == 0x0002CC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Y_1) == 0x0002D0, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_BreakVector_Z_1) == 0x0002D4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0002D8, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_4) == 0x0002DC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_MakeVector2D_ReturnValue_5) == 0x0002E4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0002EC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0002F4, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x0002FC, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000304, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000308, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_GetAbs2D_ReturnValue_1) == 0x000310, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_GetAbs2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_ExecuteUbergraph_d_window, CallFunc_Subtract_Vector2DFloat_ReturnValue_1) == 0x000318, "Member 'D_window_C_ExecuteUbergraph_d_window::CallFunc_Subtract_Vector2DFloat_ReturnValue_1' has a wrong offset!");

// Function d_window.d_window_C.cleanAtPoint
// 0x0018 (0x0018 - 0x0000)
struct D_window_C_CleanAtPoint final
{
public:
	class AProp_sponge_C*                         Sponge;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_CleanAtPoint) == 0x000008, "Wrong alignment on D_window_C_CleanAtPoint");
static_assert(sizeof(D_window_C_CleanAtPoint) == 0x000018, "Wrong size on D_window_C_CleanAtPoint");
static_assert(offsetof(D_window_C_CleanAtPoint, Sponge) == 0x000000, "Member 'D_window_C_CleanAtPoint::Sponge' has a wrong offset!");
static_assert(offsetof(D_window_C_CleanAtPoint, Location) == 0x000008, "Member 'D_window_C_CleanAtPoint::Location' has a wrong offset!");

// Function d_window.d_window_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'D_window_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function d_window.d_window_C.setDraw
// 0x0020 (0x0020 - 0x0000)
struct D_window_C_SetDraw final
{
public:
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0010(0x0010)(NoDestructor)
};
static_assert(alignof(D_window_C_SetDraw) == 0x000008, "Wrong alignment on D_window_C_SetDraw");
static_assert(sizeof(D_window_C_SetDraw) == 0x000020, "Wrong size on D_window_C_SetDraw");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000000, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000008, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(D_window_C_SetDraw, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000010, "Member 'D_window_C_SetDraw::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");

// Function d_window.d_window_C.getCode
// 0x0020 (0x0020 - 0x0000)
struct D_window_C_GetCode final
{
public:
	TArray<uint8>                                 ByteArray;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<uint8>                                 CallFunc_TextureRenderTarget2DToBytes_ByteArray;   // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(D_window_C_GetCode) == 0x000008, "Wrong alignment on D_window_C_GetCode");
static_assert(sizeof(D_window_C_GetCode) == 0x000020, "Wrong size on D_window_C_GetCode");
static_assert(offsetof(D_window_C_GetCode, ByteArray) == 0x000000, "Member 'D_window_C_GetCode::ByteArray' has a wrong offset!");
static_assert(offsetof(D_window_C_GetCode, CallFunc_TextureRenderTarget2DToBytes_ByteArray) == 0x000010, "Member 'D_window_C_GetCode::CallFunc_TextureRenderTarget2DToBytes_ByteArray' has a wrong offset!");

// Function d_window.d_window_C.setCode
// 0x0028 (0x0028 - 0x0000)
struct D_window_C_SetCode final
{
public:
	TArray<uint8>                                 ByteArray;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26BC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_BytesToImage_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_SetCode) == 0x000008, "Wrong alignment on D_window_C_SetCode");
static_assert(sizeof(D_window_C_SetCode) == 0x000028, "Wrong size on D_window_C_SetCode");
static_assert(offsetof(D_window_C_SetCode, ByteArray) == 0x000000, "Member 'D_window_C_SetCode::ByteArray' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'D_window_C_SetCode::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_BytesToImage_ReturnValue) == 0x000018, "Member 'D_window_C_SetCode::CallFunc_BytesToImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_SetCode, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000020, "Member 'D_window_C_SetCode::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");

// Function d_window.d_window_C.dirty
// 0x0078 (0x0078 - 0x0000)
struct D_window_C_Dirty final
{
public:
	struct FVector2D                              B;                                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Add_IntPointInt_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0048(0x0010)(NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(D_window_C_Dirty) == 0x000008, "Wrong alignment on D_window_C_Dirty");
static_assert(sizeof(D_window_C_Dirty) == 0x000078, "Wrong size on D_window_C_Dirty");
static_assert(offsetof(D_window_C_Dirty, B) == 0x000000, "Member 'D_window_C_Dirty::B' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00000C, "Member 'D_window_C_Dirty::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'D_window_C_Dirty::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'D_window_C_Dirty::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Add_IntPointInt_ReturnValue) == 0x000028, "Member 'D_window_C_Dirty::CallFunc_Add_IntPointInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'D_window_C_Dirty::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000048, "Member 'D_window_C_Dirty::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000058, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00005C, "Member 'D_window_C_Dirty::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'D_window_C_Dirty::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_MakeVector2D_ReturnValue_1) == 0x000064, "Member 'D_window_C_Dirty::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(D_window_C_Dirty, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00006C, "Member 'D_window_C_Dirty::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

}

