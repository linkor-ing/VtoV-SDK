#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NailProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function nailProjectile.nailProjectile_C.ExecuteUbergraph_nailProjectile
// 0x0220 (0x0220 - 0x0000)
struct NailProjectile_C_ExecuteUbergraph_nailProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x0078(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANail_C*                                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_nailNail_fail;                            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NailProjectile_C_ExecuteUbergraph_nailProjectile) == 0x000010, "Wrong alignment on NailProjectile_C_ExecuteUbergraph_nailProjectile");
static_assert(sizeof(NailProjectile_C_ExecuteUbergraph_nailProjectile) == 0x000220, "Wrong size on NailProjectile_C_ExecuteUbergraph_nailProjectile");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, EntryPoint) == 0x000000, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000014, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00002C, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, Temp_object_Variable) == 0x000040, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_GetMass_ReturnValue) == 0x000050, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_GetComponentVelocity_ReturnValue) == 0x000054, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000060, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00006C, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_obj_statDynPhys_obj) == 0x000078, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000088, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000110, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x000111, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000112, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_Location) == 0x00011C, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_Normal) == 0x000134, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000194, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001A0, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001A4, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001B0, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_Add_VectorVector_ReturnValue) == 0x0001BC, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000200, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x000208, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NailProjectile_C_ExecuteUbergraph_nailProjectile, CallFunc_nailNail_fail) == 0x000210, "Member 'NailProjectile_C_ExecuteUbergraph_nailProjectile::CallFunc_nailNail_fail' has a wrong offset!");

// Function nailProjectile.nailProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NailProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NailProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on NailProjectile_C_ReceiveTick");
static_assert(sizeof(NailProjectile_C_ReceiveTick) == 0x000004, "Wrong size on NailProjectile_C_ReceiveTick");
static_assert(offsetof(NailProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NailProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

