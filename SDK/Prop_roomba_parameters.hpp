#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_roomba

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mBool_structs.hpp"


namespace SDK::Params
{

// Function prop_roomba.prop_roomba_C.ExecuteUbergraph_prop_roomba
// 0x03B8 (0x03B8 - 0x0000)
struct Prop_roomba_C_ExecuteUbergraph_prop_roomba final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4280[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4281[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4282[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4283[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4284[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x010C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4285[0x1];                                     // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_play;                           // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4286[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URoombaBrush_Skeleton_AnimBlueprint_C*  K2Node_DynamicCast_AsRoomba_Brush_Skeleton_Anim_Blueprint; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4287[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4288[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4289[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428A[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428B[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428C[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428D[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0350(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428E[0x3];                                     // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428F[0x3];                                     // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_ExecuteUbergraph_prop_roomba) == 0x000008, "Wrong alignment on Prop_roomba_C_ExecuteUbergraph_prop_roomba");
static_assert(sizeof(Prop_roomba_C_ExecuteUbergraph_prop_roomba) == 0x0003B8, "Wrong size on Prop_roomba_C_ExecuteUbergraph_prop_roomba");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, EntryPoint) == 0x000000, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Event_player) == 0x000008, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Event_hit) == 0x000010, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Event_index) == 0x000098, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Event_action) == 0x00009C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Lerp_ReturnValue) == 0x0000A8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, Temp_int_Variable) == 0x0000AC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Not_PreBool_ReturnValue) == 0x0000BD, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0000C0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Event_DeltaSeconds) == 0x0000C8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000CC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_ComponentBoundEvent_HitComponent) == 0x0000E8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000100, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_ComponentBoundEvent_Hit) == 0x00010C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000194, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_bBlockingHit) == 0x000195, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_bInitialOverlap) == 0x000196, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_Time) == 0x000198, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_Distance) == 0x00019C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_Location) == 0x0001A0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_ImpactPoint) == 0x0001AC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_TraceStart) == 0x0001FC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, Temp_int_Array_Index_Variable) == 0x000214, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Array_Get_Item) == 0x000218, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetRightVector_ReturnValue) == 0x000220, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00022C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BooleanAND_ReturnValue) == 0x000238, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_CustomEvent_play) == 0x000239, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_CustomEvent_play' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetAnimInstance_ReturnValue) == 0x000240, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_DynamicCast_AsRoomba_Brush_Skeleton_Anim_Blueprint) == 0x000248, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_DynamicCast_AsRoomba_Brush_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_DynamicCast_bSuccess) == 0x000250, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000254, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000258, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00025C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000260, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue) == 0x000264, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetVelocity_ReturnValue) == 0x000268, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_VSize_ReturnValue) == 0x000274, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Less_FloatFloat_ReturnValue) == 0x000278, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x00027C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_FInterpTo_ReturnValue) == 0x000280, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BooleanOR_ReturnValue) == 0x000284, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_MakeRotator_ReturnValue) == 0x000288, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000294, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Vector_Distance_ReturnValue) == 0x0002AC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002B0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002B4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002C0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002CC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue_1) == 0x0002D8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Cross_VectorVector_ReturnValue) == 0x0002DC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_RotateAngleAxis_ReturnValue) == 0x0002E8, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0002F4, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000300, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x00030C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Roll_1) == 0x000318, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Pitch_1) == 0x00031C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Yaw_1) == 0x000320, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Roll_2) == 0x000324, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Pitch_2) == 0x000328, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BreakRotator_Yaw_2) == 0x00032C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Abs_ReturnValue) == 0x000330, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Not_PreBool_ReturnValue_1) == 0x000334, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue_2) == 0x000338, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue_3) == 0x00033C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_BooleanOR_ReturnValue_1) == 0x000340, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000344, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Add_IntInt_ReturnValue_1) == 0x000348, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_MakeArray_Array) == 0x000350, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Percent_IntInt_ReturnValue) == 0x000360, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectInt_ReturnValue) == 0x000364, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_RandomBool_ReturnValue) == 0x000368, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00036C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_RandomBool_ReturnValue_1) == 0x000370, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue_4) == 0x000374, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_SelectFloat_ReturnValue_5) == 0x000378, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00037C, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000388, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000394, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, K2Node_Select_Default) == 0x0003A0, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ExecuteUbergraph_prop_roomba, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0003AC, "Member 'Prop_roomba_C_ExecuteUbergraph_prop_roomba::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_roomba_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_roomba_C_ActionOptionIndex");
static_assert(sizeof(Prop_roomba_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_roomba_C_ActionOptionIndex");
static_assert(offsetof(Prop_roomba_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_roomba_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_roomba_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_roomba_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_roomba_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.Sound
// 0x0001 (0x0001 - 0x0000)
struct Prop_roomba_C_Sound final
{
public:
	bool                                          Play;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_roomba_C_Sound) == 0x000001, "Wrong alignment on Prop_roomba_C_Sound");
static_assert(sizeof(Prop_roomba_C_Sound) == 0x000001, "Wrong size on Prop_roomba_C_Sound");
static_assert(offsetof(Prop_roomba_C_Sound, Play) == 0x000000, "Member 'Prop_roomba_C_Sound::Play' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Param_Hit) == 0x000024, "Member 'Prop_roomba_C_BndEvt__dir_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Param_Hit' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_roomba_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_roomba_C_ReceiveTick");
static_assert(sizeof(Prop_roomba_C_ReceiveTick) == 0x000004, "Wrong size on Prop_roomba_C_ReceiveTick");
static_assert(offsetof(Prop_roomba_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_roomba_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.upd
// 0x0018 (0x0018 - 0x0000)
struct Prop_roomba_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4290[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_Upd) == 0x000008, "Wrong alignment on Prop_roomba_C_Upd");
static_assert(sizeof(Prop_roomba_C_Upd) == 0x000018, "Wrong size on Prop_roomba_C_Upd");
static_assert(offsetof(Prop_roomba_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_roomba_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_Upd, Temp_bool_Variable_1) == 0x000001, "Member 'Prop_roomba_C_Upd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_Upd, Temp_byte_Variable) == 0x000002, "Member 'Prop_roomba_C_Upd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_Upd, Temp_byte_Variable_1) == 0x000003, "Member 'Prop_roomba_C_Upd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_Upd, K2Node_Select_Default) == 0x000008, "Member 'Prop_roomba_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_Upd, K2Node_Select_Default_1) == 0x000010, "Member 'Prop_roomba_C_Upd::K2Node_Select_Default_1' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.lookAt
// 0x0110 (0x0110 - 0x0000)
struct Prop_roomba_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4291[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_LookAt) == 0x000008, "Wrong alignment on Prop_roomba_C_LookAt");
static_assert(sizeof(Prop_roomba_C_LookAt) == 0x000110, "Wrong size on Prop_roomba_C_LookAt");
static_assert(offsetof(Prop_roomba_C_LookAt, Player) == 0x000000, "Member 'Prop_roomba_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_roomba_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, Return) == 0x000090, "Member 'Prop_roomba_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, Text) == 0x000098, "Member 'Prop_roomba_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_roomba_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B0, "Member 'Prop_roomba_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000C8, "Member 'Prop_roomba_C_LookAt::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E0, "Member 'Prop_roomba_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000F0, "Member 'Prop_roomba_C_LookAt::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x000100, "Member 'Prop_roomba_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.getData
// 0x0280 (0x0280 - 0x0000)
struct Prop_roomba_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x0190(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01A0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01C0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_roomba_C_GetData) == 0x000010, "Wrong alignment on Prop_roomba_C_GetData");
static_assert(sizeof(Prop_roomba_C_GetData) == 0x000280, "Wrong size on Prop_roomba_C_GetData");
static_assert(offsetof(Prop_roomba_C_GetData, Data) == 0x000000, "Member 'Prop_roomba_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_roomba_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_roomba_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x000190, "Member 'Prop_roomba_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'Prop_roomba_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'Prop_roomba_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001C0, "Member 'Prop_roomba_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_roomba_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4292[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_roomba_C_LoadData) == 0x000010, "Wrong alignment on Prop_roomba_C_LoadData");
static_assert(sizeof(Prop_roomba_C_LoadData) == 0x0000E0, "Wrong size on Prop_roomba_C_LoadData");
static_assert(offsetof(Prop_roomba_C_LoadData, Data) == 0x000000, "Member 'Prop_roomba_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LoadData, Return) == 0x0000C0, "Member 'Prop_roomba_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_roomba_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_roomba_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_roomba_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_roomba.prop_roomba_C.getActionOptions
// 0x0058 (0x0058 - 0x0000)
struct Prop_roomba_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_roomba_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_roomba_C_GetActionOptions");
static_assert(sizeof(Prop_roomba_C_GetActionOptions) == 0x000058, "Wrong size on Prop_roomba_C_GetActionOptions");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_roomba_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_roomba_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_roomba_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_roomba_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_roomba_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_roomba_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_roomba_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000048, "Member 'Prop_roomba_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

