#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_laserSensor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.ExecuteUbergraph_prop_wireComponent_laserSensor
// 0x0120 (0x0120 - 0x0000)
struct Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWire_C*                                K2Node_Event_wire_2;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_side_1;                               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWire_C*                                K2Node_Event_wire_1;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_side;                                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWire_C*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWire_C*                                K2Node_Event_wire;                                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor) == 0x000008, "Wrong alignment on Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor) == 0x000120, "Wrong size on Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, EntryPoint) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, Temp_object_Variable) == 0x000008, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, Temp_int_Variable) == 0x000018, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_wire_2) == 0x000020, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_wire_2' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_side_1) == 0x000028, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_side_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_wire_1) == 0x000030, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_wire_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_side) == 0x000038, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_side' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000048, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_GetForwardVector_ReturnValue) == 0x00004C, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Array_Get_Item) == 0x000058, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_wire) == 0x000078, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_wire' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_LineTraceSingleForObjects_OutHit) == 0x00008C, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000114, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, CallFunc_IsVisible_ReturnValue) == 0x000115, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor, K2Node_Event_DeltaSeconds) == 0x000118, "Member 'Prop_wireComponent_laserSensor_C_ExecuteUbergraph_prop_wireComponent_laserSensor::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_wireComponent_laserSensor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_wireComponent_laserSensor_C_ReceiveTick");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_ReceiveTick) == 0x000004, "Wrong size on Prop_wireComponent_laserSensor_C_ReceiveTick");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.wirePass
// 0x0008 (0x0008 - 0x0000)
struct Prop_wireComponent_laserSensor_C_WirePass final
{
public:
	class AWire_C*                                Wire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_WirePass) == 0x000008, "Wrong alignment on Prop_wireComponent_laserSensor_C_WirePass");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_WirePass) == 0x000008, "Wrong size on Prop_wireComponent_laserSensor_C_WirePass");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_WirePass, Wire) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_WirePass::Wire' has a wrong offset!");

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.wireDisconnected
// 0x0010 (0x0010 - 0x0000)
struct Prop_wireComponent_laserSensor_C_WireDisconnected final
{
public:
	class AWire_C*                                Wire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Side;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_WireDisconnected) == 0x000008, "Wrong alignment on Prop_wireComponent_laserSensor_C_WireDisconnected");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_WireDisconnected) == 0x000010, "Wrong size on Prop_wireComponent_laserSensor_C_WireDisconnected");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_WireDisconnected, Wire) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_WireDisconnected::Wire' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_WireDisconnected, Side) == 0x000008, "Member 'Prop_wireComponent_laserSensor_C_WireDisconnected::Side' has a wrong offset!");

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.wireConnected
// 0x0010 (0x0010 - 0x0000)
struct Prop_wireComponent_laserSensor_C_WireConnected final
{
public:
	class AWire_C*                                Wire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Side;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_WireConnected) == 0x000008, "Wrong alignment on Prop_wireComponent_laserSensor_C_WireConnected");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_WireConnected) == 0x000010, "Wrong size on Prop_wireComponent_laserSensor_C_WireConnected");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_WireConnected, Wire) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_WireConnected::Wire' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_WireConnected, Side) == 0x000008, "Member 'Prop_wireComponent_laserSensor_C_WireConnected::Side' has a wrong offset!");

// Function prop_wireComponent_laserSensor.prop_wireComponent_laserSensor_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct Prop_wireComponent_laserSensor_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_laserSensor_C_UserConstructionScript) == 0x000004, "Wrong alignment on Prop_wireComponent_laserSensor_C_UserConstructionScript");
static_assert(sizeof(Prop_wireComponent_laserSensor_C_UserConstructionScript) == 0x00000C, "Wrong size on Prop_wireComponent_laserSensor_C_UserConstructionScript");
static_assert(offsetof(Prop_wireComponent_laserSensor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'Prop_wireComponent_laserSensor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}

