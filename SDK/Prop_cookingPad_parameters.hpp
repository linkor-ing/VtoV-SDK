#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_cookingPad

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_cookingPad.prop_cookingPad_C.ExecuteUbergraph_prop_cookingPad
// 0x02A8 (0x02A8 - 0x0000)
struct Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_owner;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index_1;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_200B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_200C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_200D[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_200E[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_cookingFood_C*                    K2Node_DynamicCast_AsProp_Cooking_Food;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_200F[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_cookingFood_C*                    K2Node_DynamicCast_AsProp_Cooking_Food_1;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2010[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2011[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2012[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2013[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0138(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2014[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2015[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_cookingFood_C*                    K2Node_DynamicCast_AsProp_Cooking_Food_2;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2016[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2017[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2018[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_C*                           K2Node_DynamicCast_AsProp_Food;                    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2019[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Condition;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201A[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201B[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_DynamicCast_AsCord;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201C[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord;                                 // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201D[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_powr_ReturnValue;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201E[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201F[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2020[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2021[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_powr_ReturnValue_1;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2022[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad) == 0x000008, "Wrong alignment on Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad");
static_assert(sizeof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad) == 0x0002A8, "Wrong size on Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, EntryPoint) == 0x000000, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, Temp_int_Variable) == 0x000010, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Percent_IntInt_ReturnValue) == 0x000014, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_owner) == 0x000018, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_index_1) == 0x000020, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_index_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_NewParam) == 0x000024, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_sentFrom) == 0x000028, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_active) == 0x000030, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000038, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000040, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000048, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000050, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000E0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherActor) == 0x0000E8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000F8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_AsProp_Cooking_Food) == 0x000100, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_AsProp_Cooking_Food' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_AsProp_Cooking_Food_1) == 0x000110, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_AsProp_Cooking_Food_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Array_Add_ReturnValue) == 0x00011C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Array_RemoveItem_ReturnValue) == 0x000120, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000124, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_SwitchEnum_CmpSuccess) == 0x00012C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000130, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000138, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000148, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Array_Get_Item) == 0x000150, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_AsProp_Cooking_Food_2) == 0x000160, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_AsProp_Cooking_Food_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Less_IntInt_ReturnValue) == 0x000169, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_FMax_ReturnValue) == 0x00016C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000170, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Less_FloatFloat_ReturnValue) == 0x000174, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000178, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_AsProp_Food) == 0x000180, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_AsProp_Food' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000189, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x00018C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_CustomEvent_Condition) == 0x000190, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_CustomEvent_Condition' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000191, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000194, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Lerp_ReturnValue) == 0x000198, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_cord_1) == 0x0001A0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_socket_1) == 0x0001A8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_AsCord) == 0x0001B0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_AsCord' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_DynamicCast_bSuccess_4) == 0x0001B8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_cord) == 0x0001C0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_socket) == 0x0001C8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0001D0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_BooleanAND_ReturnValue) == 0x0001D4, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_powr_ReturnValue) == 0x0001D8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_powr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_player) == 0x0001E0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_hit) == 0x0001E8, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_index) == 0x000270, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_Event_action) == 0x000274, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000278, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, K2Node_SwitchEnum_CmpSuccess_1) == 0x00027C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000280, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000284, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Add_IntInt_ReturnValue_1) == 0x000288, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_powr_ReturnValue_1) == 0x00028C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_powr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Not_PreBool_ReturnValue) == 0x000290, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Add_FloatFloat_ReturnValue) == 0x000294, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000298, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00029C, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0002A0, "Member 'Prop_cookingPad_C_ExecuteUbergraph_prop_cookingPad::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_cookingPad_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_cookingPad_C_ActionOptionIndex");
static_assert(sizeof(Prop_cookingPad_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_cookingPad_C_ActionOptionIndex");
static_assert(offsetof(Prop_cookingPad_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_cookingPad_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_cookingPad_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'Prop_cookingPad_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_ActionOptionIndex, Action) == 0x000094, "Member 'Prop_cookingPad_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_cookingPad_C_CordUnplugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_cookingPad_C_CordUnplugged");
static_assert(sizeof(Prop_cookingPad_C_CordUnplugged) == 0x000010, "Wrong size on Prop_cookingPad_C_CordUnplugged");
static_assert(offsetof(Prop_cookingPad_C_CordUnplugged, Param_Cord) == 0x000000, "Member 'Prop_cookingPad_C_CordUnplugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_cookingPad_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_cookingPad_C_CordPlugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_cookingPad_C_CordPlugged");
static_assert(sizeof(Prop_cookingPad_C_CordPlugged) == 0x000010, "Wrong size on Prop_cookingPad_C_CordPlugged");
static_assert(offsetof(Prop_cookingPad_C_CordPlugged, Param_Cord) == 0x000000, "Member 'Prop_cookingPad_C_CordPlugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_cookingPad_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.PlaySound
// 0x0001 (0x0001 - 0x0000)
struct Prop_cookingPad_C_PlaySound final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_cookingPad_C_PlaySound) == 0x000001, "Wrong alignment on Prop_cookingPad_C_PlaySound");
static_assert(sizeof(Prop_cookingPad_C_PlaySound) == 0x000001, "Wrong size on Prop_cookingPad_C_PlaySound");
static_assert(offsetof(Prop_cookingPad_C_PlaySound, Condition) == 0x000000, "Member 'Prop_cookingPad_C_PlaySound::Condition' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2023[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_cookingPad_C_BndEvt__prop_cookingPad_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_cookingPad_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_cookingPad_C_ReceiveTick");
static_assert(sizeof(Prop_cookingPad_C_ReceiveTick) == 0x000004, "Wrong size on Prop_cookingPad_C_ReceiveTick");
static_assert(offsetof(Prop_cookingPad_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_cookingPad_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_cookingPad_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Active;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_cookingPad_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_cookingPad_C_SetActiveTrigger");
static_assert(sizeof(Prop_cookingPad_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_cookingPad_C_SetActiveTrigger");
static_assert(offsetof(Prop_cookingPad_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_cookingPad_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetActiveTrigger, Param_Active) == 0x000008, "Member 'Prop_cookingPad_C_SetActiveTrigger::Param_Active' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_cookingPad_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_cookingPad_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_cookingPad_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_cookingPad_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_cookingPad_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_cookingPad_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_cookingPad_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_cookingPad_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_cookingPad_C_RunTrigger");
static_assert(sizeof(Prop_cookingPad_C_RunTrigger) == 0x000010, "Wrong size on Prop_cookingPad_C_RunTrigger");
static_assert(offsetof(Prop_cookingPad_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_cookingPad_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_cookingPad_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.upd
// 0x0028 (0x0028 - 0x0000)
struct Prop_cookingPad_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2024[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2025[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_Upd) == 0x000008, "Wrong alignment on Prop_cookingPad_C_Upd");
static_assert(sizeof(Prop_cookingPad_C_Upd) == 0x000028, "Wrong size on Prop_cookingPad_C_Upd");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_cookingPad_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_byte_Variable) == 0x000001, "Member 'Prop_cookingPad_C_Upd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_byte_Variable_1) == 0x000002, "Member 'Prop_cookingPad_C_Upd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_bool_Variable_1) == 0x000003, "Member 'Prop_cookingPad_C_Upd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_object_Variable) == 0x000008, "Member 'Prop_cookingPad_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_cookingPad_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'Prop_cookingPad_C_Upd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, K2Node_Select_Default) == 0x000019, "Member 'Prop_cookingPad_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Upd, K2Node_Select_Default_1) == 0x000020, "Member 'Prop_cookingPad_C_Upd::K2Node_Select_Default_1' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.powr
// 0x0020 (0x0020 - 0x0000)
struct Prop_cookingPad_C_Powr final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_Powr) == 0x000004, "Wrong alignment on Prop_cookingPad_C_Powr");
static_assert(sizeof(Prop_cookingPad_C_Powr) == 0x000020, "Wrong size on Prop_cookingPad_C_Powr");
static_assert(offsetof(Prop_cookingPad_C_Powr, ReturnValue) == 0x000000, "Member 'Prop_cookingPad_C_Powr::ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_int_Variable) == 0x000004, "Member 'Prop_cookingPad_C_Powr::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_float_Variable) == 0x000008, "Member 'Prop_cookingPad_C_Powr::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_float_Variable_1) == 0x00000C, "Member 'Prop_cookingPad_C_Powr::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_float_Variable_2) == 0x000010, "Member 'Prop_cookingPad_C_Powr::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_float_Variable_3) == 0x000014, "Member 'Prop_cookingPad_C_Powr::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, Temp_float_Variable_4) == 0x000018, "Member 'Prop_cookingPad_C_Powr::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_Powr, K2Node_Select_Default) == 0x00001C, "Member 'Prop_cookingPad_C_Powr::K2Node_Select_Default' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.setVol
// 0x003C (0x003C - 0x0000)
struct Prop_cookingPad_C_SetVol final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_SetVol) == 0x000004, "Wrong alignment on Prop_cookingPad_C_SetVol");
static_assert(sizeof(Prop_cookingPad_C_SetVol) == 0x00003C, "Wrong size on Prop_cookingPad_C_SetVol");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_int_Variable) == 0x000000, "Member 'Prop_cookingPad_C_SetVol::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable) == 0x000004, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_1) == 0x000008, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_2) == 0x00000C, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_3) == 0x000010, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_4) == 0x000014, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_int_Variable_1) == 0x000018, "Member 'Prop_cookingPad_C_SetVol::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_5) == 0x00001C, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_6) == 0x000020, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_7) == 0x000024, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_8) == 0x000028, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, Temp_float_Variable_9) == 0x00002C, "Member 'Prop_cookingPad_C_SetVol::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, K2Node_Select_Default) == 0x000030, "Member 'Prop_cookingPad_C_SetVol::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, K2Node_Select_Default_1) == 0x000034, "Member 'Prop_cookingPad_C_SetVol::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_SetVol, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Prop_cookingPad_C_SetVol::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_cookingPad_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_cookingPad_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_cookingPad_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_cookingPad_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_cookingPad_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_cookingPad_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_cookingPad_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_cookingPad_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_cookingPad_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_cookingPad_C_LoadTriggerData");
static_assert(sizeof(Prop_cookingPad_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_cookingPad_C_LoadTriggerData");
static_assert(offsetof(Prop_cookingPad_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_cookingPad_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_cookingPad_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_cookingPad_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_cookingPad_C_GetTriggerData");
static_assert(sizeof(Prop_cookingPad_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_cookingPad_C_GetTriggerData");
static_assert(offsetof(Prop_cookingPad_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_cookingPad_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.lookAt
// 0x0200 (0x0200 - 0x0000)
struct Prop_cookingPad_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2026[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Temp_object_Variable;                              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2027[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2028[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2029[0x2];                                     // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_powr_ReturnValue;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0158(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202A[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202B[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_cookingPad_C_LookAt) == 0x000008, "Wrong alignment on Prop_cookingPad_C_LookAt");
static_assert(sizeof(Prop_cookingPad_C_LookAt) == 0x000200, "Wrong size on Prop_cookingPad_C_LookAt");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Player) == 0x000000, "Member 'Prop_cookingPad_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_cookingPad_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Return) == 0x000090, "Member 'Prop_cookingPad_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Text) == 0x000098, "Member 'Prop_cookingPad_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_cookingPad_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Temp_object_Variable) == 0x0000B0, "Member 'Prop_cookingPad_C_LookAt::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B9, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x00011C, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'Prop_cookingPad_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Temp_bool_Variable) == 0x00013C, "Member 'Prop_cookingPad_C_LookAt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, Temp_bool_Variable_1) == 0x00013D, "Member 'Prop_cookingPad_C_LookAt::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_powr_ReturnValue) == 0x000144, "Member 'Prop_cookingPad_C_LookAt::CallFunc_powr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Conv_IntToString_ReturnValue) == 0x000148, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue) == 0x000158, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Concat_StrStr_ReturnValue) == 0x000170, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000190, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001A0, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001B0, "Member 'Prop_cookingPad_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001B8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x0001C8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, K2Node_Select_Default) == 0x0001D8, "Member 'Prop_cookingPad_C_LookAt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001E0, "Member 'Prop_cookingPad_C_LookAt::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, CallFunc_SelectString_ReturnValue_1) == 0x0001E8, "Member 'Prop_cookingPad_C_LookAt::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_LookAt, K2Node_Select_Default_1) == 0x0001F8, "Member 'Prop_cookingPad_C_LookAt::K2Node_Select_Default_1' has a wrong offset!");

// Function prop_cookingPad.prop_cookingPad_C.getActionOptions
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_cookingPad_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202C[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202D[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_2;                          // 0x0078(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202E[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_Select_Default_1;                           // 0x00A0(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_cookingPad_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_cookingPad_C_GetActionOptions");
static_assert(sizeof(Prop_cookingPad_C_GetActionOptions) == 0x0000B0, "Wrong size on Prop_cookingPad_C_GetActionOptions");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_cookingPad_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_cookingPad_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_cookingPad_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_cookingPad_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_cookingPad_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_cookingPad_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Temp_bool_Variable) == 0x000048, "Member 'Prop_cookingPad_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, Temp_bool_Variable_1) == 0x000049, "Member 'Prop_cookingPad_C_GetActionOptions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_cookingPad_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000060, "Member 'Prop_cookingPad_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'Prop_cookingPad_C_GetActionOptions::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, K2Node_MakeArray_Array_2) == 0x000078, "Member 'Prop_cookingPad_C_GetActionOptions::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, K2Node_Select_Default) == 0x000088, "Member 'Prop_cookingPad_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000098, "Member 'Prop_cookingPad_C_GetActionOptions::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_cookingPad_C_GetActionOptions, K2Node_Select_Default_1) == 0x0000A0, "Member 'Prop_cookingPad_C_GetActionOptions::K2Node_Select_Default_1' has a wrong offset!");

}

