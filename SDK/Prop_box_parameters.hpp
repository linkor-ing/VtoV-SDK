#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_box

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Struct_signalDataDynamic_structs.hpp"
#include "Struct_signal_data1_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_box.prop_box_C.ExecuteUbergraph_prop_box
// 0x04C0 (0x04C0 - 0x0000)
struct Prop_box_C_ExecuteUbergraph_prop_box final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AProp_boxCap_C*                         K2Node_DynamicCast_AsProp_Box_Cap;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_drive_C*                          K2Node_DynamicCast_AsProp_Drive;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_boxCap_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              Temp_struct_Variable;                              // 0x0148(0x0070)(ConstParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01B8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_drive_C*                          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0288(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02B0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AProp_clipboard_paper_C*                K2Node_DynamicCast_AsProp_Clipboard_Paper;         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0390(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_LowEntry_LocalVariable_Value__1_Object;     // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0xF];                                      // 0x03A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x03E0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_clipboard_paper_C*                CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0420(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x04B1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_box_C_ExecuteUbergraph_prop_box) == 0x000010, "Wrong alignment on Prop_box_C_ExecuteUbergraph_prop_box");
static_assert(sizeof(Prop_box_C_ExecuteUbergraph_prop_box) == 0x0004C0, "Wrong size on Prop_box_C_ExecuteUbergraph_prop_box");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, EntryPoint) == 0x000000, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_int_Variable) == 0x000004, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_int_Variable_1) == 0x000008, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000010, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000018, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000020, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000028, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00002C, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000030, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_AsProp_Box_Cap) == 0x0000B8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_AsProp_Box_Cap' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_AsProp_Drive) == 0x0000C8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_AsProp_Drive' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D1, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0000D8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0000E0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0000E8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0000F0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_GetTransform_ReturnValue) == 0x000100, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_bool_Variable) == 0x000140, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_struct_Variable) == 0x000148, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_bool_Variable_1) == 0x0001B8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_GetTransform_ReturnValue_1) == 0x0001C0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_MakeTransform_ReturnValue) == 0x0001F0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_ComposeTransforms_ReturnValue) == 0x000220, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000250, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000258, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Array_Find_ReturnValue) == 0x000260, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000264, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000268, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000270, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000278, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Add_IntInt_ReturnValue) == 0x000280, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Subtract_IntInt_ReturnValue) == 0x000284, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_name_Variable) == 0x000288, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000290, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000298, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002A0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0002A8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002AC, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_SweepResult) == 0x0002B0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_AsProp_Clipboard_Paper) == 0x000338, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_AsProp_Clipboard_Paper' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_DynamicCast_bSuccess_2) == 0x000340, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000348, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherActor) == 0x000350, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherComp) == 0x000358, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000360, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Array_Get_Item) == 0x000368, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_IsEmpty_ReturnValue) == 0x000378, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_SelectString_ReturnValue) == 0x000380, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_bool_Variable_2) == 0x000390, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Array_Find_ReturnValue_1) == 0x000394, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_IsEmpty_ReturnValue_1) == 0x000398, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_LowEntry_LocalVariable_Value__1_Object) == 0x00039C, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_LowEntry_LocalVariable_Value__1_Object' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0003A0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0003B0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_MakeArray_Array) == 0x0003E0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0003F0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0003F8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000400, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Array_RemoveItem_ReturnValue) == 0x000408, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000410, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_Event_player) == 0x000418, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_Event_hit) == 0x000420, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_Event_action) == 0x0004A8, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, CallFunc_Array_Add_ReturnValue) == 0x0004AC, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, K2Node_SwitchEnum_CmpSuccess) == 0x0004B0, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ExecuteUbergraph_prop_box, Temp_bool_Variable_3) == 0x0004B1, "Member 'Prop_box_C_ExecuteUbergraph_prop_box::Temp_bool_Variable_3' has a wrong offset!");

// Function prop_box.prop_box_C.BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_box.prop_box_C.BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_box_C_BndEvt__paperS_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_box.prop_box_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function prop_box.prop_box_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Prop_box_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function prop_box.prop_box_C.upd
// 0x00A0 (0x00A0 - 0x0000)
struct Prop_box_C_Upd final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Locs;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_Upd) == 0x000010, "Wrong alignment on Prop_box_C_Upd");
static_assert(sizeof(Prop_box_C_Upd) == 0x0000A0, "Wrong size on Prop_box_C_Upd");
static_assert(offsetof(Prop_box_C_Upd, NewParam) == 0x000000, "Member 'Prop_box_C_Upd::NewParam' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Locs) == 0x000010, "Member 'Prop_box_C_Upd::Locs' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Temp_byte_Variable) == 0x000020, "Member 'Prop_box_C_Upd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Temp_byte_Variable_1) == 0x000021, "Member 'Prop_box_C_Upd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, K2Node_MakeArray_Array) == 0x000028, "Member 'Prop_box_C_Upd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Prop_box_C_Upd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Temp_bool_Variable) == 0x00003C, "Member 'Prop_box_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_IsEmpty_ReturnValue) == 0x00003D, "Member 'Prop_box_C_Upd::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'Prop_box_C_Upd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_IsEmpty_ReturnValue_1) == 0x00003F, "Member 'Prop_box_C_Upd::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'Prop_box_C_Upd::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'Prop_box_C_Upd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Array_Get_Item) == 0x000042, "Member 'Prop_box_C_Upd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, K2Node_Select_Default) == 0x000043, "Member 'Prop_box_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'Prop_box_C_Upd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Prop_box_C_Upd::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'Prop_box_C_Upd::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'Prop_box_C_Upd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_AddInstance_ReturnValue) == 0x000094, "Member 'Prop_box_C_Upd::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'Prop_box_C_Upd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_Upd, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'Prop_box_C_Upd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function prop_box.prop_box_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_box_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_box_C_ActionOptionIndex");
static_assert(sizeof(Prop_box_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_box_C_ActionOptionIndex");
static_assert(offsetof(Prop_box_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_box_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_box_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_box_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_box_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_box.prop_box_C.UserConstructionScript
// 0x0260 (0x0260 - 0x0000)
struct Prop_box_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signal_data1                   CallFunc_Array_Get_Item;                           // 0x0010(0x01D0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_signalDataDynamic              CallFunc_signalToDynamic_dynamic;                  // 0x01E8(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_box_C_UserConstructionScript) == 0x000008, "Wrong alignment on Prop_box_C_UserConstructionScript");
static_assert(sizeof(Prop_box_C_UserConstructionScript) == 0x000260, "Wrong size on Prop_box_C_UserConstructionScript");
static_assert(offsetof(Prop_box_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Prop_box_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Prop_box_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Prop_box_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'Prop_box_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'Prop_box_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, CallFunc_signalToDynamic_dynamic) == 0x0001E8, "Member 'Prop_box_C_UserConstructionScript::CallFunc_signalToDynamic_dynamic' has a wrong offset!");
static_assert(offsetof(Prop_box_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'Prop_box_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function prop_box.prop_box_C.loadData
// 0x0140 (0x0140 - 0x0000)
struct Prop_box_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item_5;                         // 0x0100(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_6;                         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_LoadData) == 0x000010, "Wrong alignment on Prop_box_C_LoadData");
static_assert(sizeof(Prop_box_C_LoadData) == 0x000140, "Wrong size on Prop_box_C_LoadData");
static_assert(offsetof(Prop_box_C_LoadData, Data) == 0x000000, "Member 'Prop_box_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, Return) == 0x0000C0, "Member 'Prop_box_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'Prop_box_C_LoadData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000F8, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_4) == 0x0000F9, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_5) == 0x000100, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_loadData_return) == 0x000110, "Member 'Prop_box_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'Prop_box_C_LoadData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Get_Item_6) == 0x000118, "Member 'Prop_box_C_LoadData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'Prop_box_C_LoadData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Conv_BoolToString_ReturnValue) == 0x000120, "Member 'Prop_box_C_LoadData::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'Prop_box_C_LoadData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LoadData, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'Prop_box_C_LoadData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function prop_box.prop_box_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct Prop_box_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_box_C_IsButtonUsed) == 0x000001, "Wrong alignment on Prop_box_C_IsButtonUsed");
static_assert(sizeof(Prop_box_C_IsButtonUsed) == 0x000001, "Wrong size on Prop_box_C_IsButtonUsed");
static_assert(offsetof(Prop_box_C_IsButtonUsed, Failed) == 0x000000, "Member 'Prop_box_C_IsButtonUsed::Failed' has a wrong offset!");

// Function prop_box.prop_box_C.lookAt
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_box_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_LookAt) == 0x000008, "Wrong alignment on Prop_box_C_LookAt");
static_assert(sizeof(Prop_box_C_LookAt) == 0x0000E0, "Wrong size on Prop_box_C_LookAt");
static_assert(offsetof(Prop_box_C_LookAt, Player) == 0x000000, "Member 'Prop_box_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_box_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, Return) == 0x000090, "Member 'Prop_box_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, Text) == 0x000098, "Member 'Prop_box_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_box_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, Number) == 0x0000B0, "Member 'Prop_box_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, CallFunc_MakeLiteralText_ReturnValue) == 0x0000B8, "Member 'Prop_box_C_LookAt::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'Prop_box_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function prop_box.prop_box_C.getData
// 0x02E0 (0x02E0 - 0x0000)
struct Prop_box_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FStruct_mString                        K2Node_MakeStruct_struct_mString;                  // 0x00D0(0x0010)(HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x00F0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool_1;                  // 0x0100(0x0010)(HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0110(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mBool                          CallFunc_Array_Get_Item;                           // 0x01D0(0x0010)(HasGetValueTypeHash)
	struct FStruct_mString                        CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x01F0(0x0010)(ReferenceParm)
	struct FStruct_mString                        CallFunc_Array_Get_Item_2;                         // 0x0200(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mString>                K2Node_MakeArray_Array_3;                          // 0x0210(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0220(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_box_C_GetData) == 0x000010, "Wrong alignment on Prop_box_C_GetData");
static_assert(sizeof(Prop_box_C_GetData) == 0x0002E0, "Wrong size on Prop_box_C_GetData");
static_assert(offsetof(Prop_box_C_GetData, Data) == 0x000000, "Member 'Prop_box_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Prop_box_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeStruct_struct_mString) == 0x0000D0, "Member 'Prop_box_C_GetData::K2Node_MakeStruct_struct_mString' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'Prop_box_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x0000F0, "Member 'Prop_box_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeStruct_struct_mBool_1) == 0x000100, "Member 'Prop_box_C_GetData::K2Node_MakeStruct_struct_mBool_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, CallFunc_getData_data) == 0x000110, "Member 'Prop_box_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'Prop_box_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'Prop_box_C_GetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeArray_Array_2) == 0x0001F0, "Member 'Prop_box_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, CallFunc_Array_Get_Item_2) == 0x000200, "Member 'Prop_box_C_GetData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_MakeArray_Array_3) == 0x000210, "Member 'Prop_box_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000220, "Member 'Prop_box_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_box.prop_box_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct Prop_box_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_box_C_CanBeUsedHold) == 0x000001, "Wrong alignment on Prop_box_C_CanBeUsedHold");
static_assert(sizeof(Prop_box_C_CanBeUsedHold) == 0x000001, "Wrong size on Prop_box_C_CanBeUsedHold");
static_assert(offsetof(Prop_box_C_CanBeUsedHold, Return) == 0x000000, "Member 'Prop_box_C_CanBeUsedHold::Return' has a wrong offset!");

// Function prop_box.prop_box_C.getActionOptions
// 0x0090 (0x0090 - 0x0000)
struct Prop_box_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0080(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_box_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_box_C_GetActionOptions");
static_assert(sizeof(Prop_box_C_GetActionOptions) == 0x000090, "Wrong size on Prop_box_C_GetActionOptions");
static_assert(offsetof(Prop_box_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_box_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_box_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_box_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_box_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_box_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_box_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_box_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, Temp_bool_Variable) == 0x000049, "Member 'Prop_box_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_box_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, CallFunc_IsEmpty_ReturnValue) == 0x000060, "Member 'Prop_box_C_GetActionOptions::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'Prop_box_C_GetActionOptions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000068, "Member 'Prop_box_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'Prop_box_C_GetActionOptions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_box_C_GetActionOptions, K2Node_Select_Default) == 0x000080, "Member 'Prop_box_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");

}

