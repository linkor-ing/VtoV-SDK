#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoltomiaCleaning

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass soltomiaCleaning.soltomiaCleaning_C
// 0x00F0 (0x0310 - 0x0220)
class ASoltomiaCleaning_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere1;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Talk1;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Talk2;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Voice;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Squeak;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Solt;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0288(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dir;                                               // 0x0294(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DoorOpen;                                          // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ADoor_C*                                Door;                                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACar1_C*                                Atv;                                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 DoorJam1;                                          // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 DoorJam2;                                          // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 DoorJam3;                                          // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ADoor_C*                                JammedDoor;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor_C*                                JammedDoor2;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor_C*                                JammedDoor3;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ITalk;                                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x030D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_soltomiaCleaning(int32 EntryPoint);
	void Talking();
	void Repeat();
	void BndEvt__soltomiaCleaning_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveDestroyed();
	void Opened();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnCompleted_CC1C802A418B8136B4D73DA13F1FA965(class FName NotifyName);
	void OnBlendOut_CC1C802A418B8136B4D73DA13F1FA965(class FName NotifyName);
	void OnInterrupted_CC1C802A418B8136B4D73DA13F1FA965(class FName NotifyName);
	void OnNotifyBegin_CC1C802A418B8136B4D73DA13F1FA965(class FName NotifyName);
	void OnNotifyEnd_CC1C802A418B8136B4D73DA13F1FA965(class FName NotifyName);
	void Talk(int32 Param_ITalk);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"soltomiaCleaning_C">();
	}
	static class ASoltomiaCleaning_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASoltomiaCleaning_C>();
	}
};
static_assert(alignof(ASoltomiaCleaning_C) == 0x000008, "Wrong alignment on ASoltomiaCleaning_C");
static_assert(sizeof(ASoltomiaCleaning_C) == 0x000310, "Wrong size on ASoltomiaCleaning_C");
static_assert(offsetof(ASoltomiaCleaning_C, UberGraphFrame) == 0x000220, "Member 'ASoltomiaCleaning_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Sphere1) == 0x000228, "Member 'ASoltomiaCleaning_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, PointLight) == 0x000230, "Member 'ASoltomiaCleaning_C::PointLight' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Talk1) == 0x000238, "Member 'ASoltomiaCleaning_C::Talk1' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Talk2) == 0x000240, "Member 'ASoltomiaCleaning_C::Talk2' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Voice) == 0x000248, "Member 'ASoltomiaCleaning_C::Voice' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Box) == 0x000250, "Member 'ASoltomiaCleaning_C::Box' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Squeak) == 0x000258, "Member 'ASoltomiaCleaning_C::Squeak' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Sphere) == 0x000260, "Member 'ASoltomiaCleaning_C::Sphere' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, ParticleSystem) == 0x000268, "Member 'ASoltomiaCleaning_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, StaticMesh) == 0x000270, "Member 'ASoltomiaCleaning_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Solt) == 0x000278, "Member 'ASoltomiaCleaning_C::Solt' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, DefaultSceneRoot) == 0x000280, "Member 'ASoltomiaCleaning_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Loc) == 0x000288, "Member 'ASoltomiaCleaning_C::Loc' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Dir) == 0x000294, "Member 'ASoltomiaCleaning_C::Dir' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, DoorOpen) == 0x0002A0, "Member 'ASoltomiaCleaning_C::DoorOpen' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Door) == 0x0002B0, "Member 'ASoltomiaCleaning_C::Door' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Atv) == 0x0002B8, "Member 'ASoltomiaCleaning_C::Atv' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, DoorJam1) == 0x0002C0, "Member 'ASoltomiaCleaning_C::DoorJam1' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, DoorJam2) == 0x0002D0, "Member 'ASoltomiaCleaning_C::DoorJam2' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, DoorJam3) == 0x0002E0, "Member 'ASoltomiaCleaning_C::DoorJam3' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, JammedDoor) == 0x0002F0, "Member 'ASoltomiaCleaning_C::JammedDoor' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, JammedDoor2) == 0x0002F8, "Member 'ASoltomiaCleaning_C::JammedDoor2' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, JammedDoor3) == 0x000300, "Member 'ASoltomiaCleaning_C::JammedDoor3' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, ITalk) == 0x000308, "Member 'ASoltomiaCleaning_C::ITalk' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Active) == 0x00030C, "Member 'ASoltomiaCleaning_C::Active' has a wrong offset!");
static_assert(offsetof(ASoltomiaCleaning_C, Debug) == 0x00030D, "Member 'ASoltomiaCleaning_C::Debug' has a wrong offset!");

}

