#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_photoSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_byteImage_structs.hpp"


namespace SDK::Params
{

// Function umg_photoSlot.umg_photoSlot_C.ExecuteUbergraph_umg_photoSlot
// 0x0038 (0x0038 - 0x0000)
struct Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture2D*                       Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_byteImage                      Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot) == 0x000008, "Wrong alignment on Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot");
static_assert(sizeof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot) == 0x000038, "Wrong size on Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, EntryPoint) == 0x000000, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, Temp_object_Variable) == 0x000008, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, Temp_struct_Variable) == 0x000020, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000030, "Member 'Umg_photoSlot_C_ExecuteUbergraph_umg_photoSlot::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");

// Function umg_photoSlot.umg_photoSlot_C.goPrint
// 0x0050 (0x0050 - 0x0000)
struct Umg_photoSlot_C_GoPrint final
{
public:
	TArray<class AProp_fax_C*>                    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_closestActor_nearest;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_fax_C*                            K2Node_DynamicCast_AsProp_Fax;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_byteImage                      CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_photoSlot_C_GoPrint) == 0x000008, "Wrong alignment on Umg_photoSlot_C_GoPrint");
static_assert(sizeof(Umg_photoSlot_C_GoPrint) == 0x000050, "Wrong size on Umg_photoSlot_C_GoPrint");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'Umg_photoSlot_C_GoPrint::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, CallFunc_getSaveSlot_saveSlot) == 0x000010, "Member 'Umg_photoSlot_C_GoPrint::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Umg_photoSlot_C_GoPrint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, CallFunc_closestActor_nearest) == 0x000028, "Member 'Umg_photoSlot_C_GoPrint::CallFunc_closestActor_nearest' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, K2Node_DynamicCast_AsProp_Fax) == 0x000030, "Member 'Umg_photoSlot_C_GoPrint::K2Node_DynamicCast_AsProp_Fax' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Umg_photoSlot_C_GoPrint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Umg_photoSlot_C_GoPrint, CallFunc_Array_Get_Item) == 0x000040, "Member 'Umg_photoSlot_C_GoPrint::CallFunc_Array_Get_Item' has a wrong offset!");

}

