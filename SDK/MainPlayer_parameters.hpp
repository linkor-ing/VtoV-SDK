#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_save_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_equipment_structs.hpp"
#include "Struct_physSound_structs.hpp"
#include "Struct_prop_structs.hpp"
#include "Struct_weapon_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_propDynamic_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "Enum_difficulty_structs.hpp"


namespace SDK::Params
{

// Function mainPlayer.mainPlayer_C.flashlightStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_FlashlightStateChanged__DelegateSignature final
{
public:
	class USpotLightComponent*                    Light;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(sizeof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000010, "Wrong size on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Light) == 0x000000, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Light' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Visible) == 0x000008, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Visible' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_E__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_E__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_E__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_E__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_E__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_E__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.mouse_xy__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Mouse_xy__DelegateSignature final
{
public:
	struct FVector2D                              MouseXY;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Mouse_xy__DelegateSignature, MouseXY) == 0x000000, "Member 'MainPlayer_C_Mouse_xy__DelegateSignature::MouseXY' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.shift__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Shift__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Shift__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Shift__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Shift__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Shift__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.alt__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Alt__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Alt__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Alt__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Alt__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Alt__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Alt__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Alt__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.montageNotify__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_MontageNotify__DelegateSignature final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(sizeof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(offsetof(MainPlayer_C_MontageNotify__DelegateSignature, Param_Name) == 0x000000, "Member 'MainPlayer_C_MontageNotify__DelegateSignature::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ExecuteUbergraph_mainPlayer
// 0x5C50 (0x5C50 - 0x0000)
struct MainPlayer_C_ExecuteUbergraph_mainPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3577[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x00C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x00E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x00F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0110(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3578[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0130(0x0010)(ConstParm, ReferenceParm)
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_8;                                // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3579[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name_1;                               // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357A[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x01F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_4;                             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x027C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_357B[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact_1;                             // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_activate;                             // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_static;                               // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_Event_key_2;                                // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x0338(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_3;                             // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357C[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x03D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_index;                                // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357D[0x3];                                     // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_2;                             // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location_1;                           // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357E[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key_1;                                // 0x04B8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed_1;                            // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357F[0x3];                                     // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_temperature_1;                        // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x04E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name;                                 // 0x0570(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_volume;                               // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3580[0x4];                                     // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_1;                             // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_clean;                                // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3581[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x05B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x0648(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3582[0x3];                                     // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x0664(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3583[0x3];                                     // 0x0675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0678(0x0018)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3584[0x6];                                     // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3585[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x06A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x06D0(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3586[0x4];                                     // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_47;                    // 0x0700(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3587[0x3];                                     // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3588[0x7];                                     // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_48;                    // 0x0728(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3589[0x4];                                     // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358A[0x6];                                     // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_1;                   // 0x0760(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant_;                      // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358B[0x5];                                     // 0x0773(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358C[0x3];                                     // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x078C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358D[0x3];                                     // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_2;                // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358E[0x6];                                     // 0x07B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor_1;               // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return;                          // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358F[0x7];                                     // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x07EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x0874(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0882(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3590[0x1];                                     // 0x0883(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0884(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x0890(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x08A8(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_2;                   // 0x08C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3591[0x7];                                     // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_3;                   // 0x08D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_checkEquip_empty;                         // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3592[0x6];                                     // 0x08EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output;                        // 0x08F0(0x00F0)(HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return_1;                        // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3593[0x7];                                     // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_1;                         // 0x09F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_damage;                         // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0xC];                                     // 0x0A04(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0A10(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0A50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3595[0x6];                                     // 0x0A62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0A68(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0A80(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0A98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3596[0x7];                                     // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0AB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3597[0x6];                                     // 0x0AC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x0AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0AD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0AD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3598[0x4];                                     // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0AD8(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3599[0x7];                                     // 0x0AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x0B00(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359A[0x6];                                     // 0x0B1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_2;                   // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0B30(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0B44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0B45(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359B[0x2];                                     // 0x0B46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UblackScreen_C*                         CallFunc_Create_ReturnValue;                       // 0x0B48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359C[0x3];                                     // 0x0B55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0B5C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0B6C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_359D[0x4];                                     // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0B80(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0B90(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0BC0(0x0010)(ConstParm, ReferenceParm)
	class FName                                   Temp_name_Variable;                                // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359E[0x3];                                     // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0BE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0BEC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0BFC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0C0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_2;                       // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_3;                       // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0C1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0C1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359F[0x2];                                     // 0x0C1E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0C28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0C34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0C40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0C4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0C68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0C84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0C90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A0[0x4];                                     // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0CA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A1[0x6];                                     // 0x0CB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_1;                // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_StartingSection_1;              // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_call;                           // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0CD0(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A2[0x3];                                     // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_name;                           // 0x0CEC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A3[0x4];                                     // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_reload;                         // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A4[0x4];                                     // 0x0D04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_attack_hit;                               // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A5[0x2];                                     // 0x0D12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_attack_OutputPin;                         // 0x0D14(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_35A6[0x4];                                     // 0x0D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_attack_ReturnValue;                       // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsNail;                    // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0DB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0DB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0DB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A7[0x1];                                     // 0x0DB3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0DB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0DBC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0DC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0DD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0DE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A8[0x4];                                     // 0x0DEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0E00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0E1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0E28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0E34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x7];                                     // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0E48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0E59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AA[0x6];                                     // 0x0E5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x0E60(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AB[0x6];                                     // 0x0E72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0E78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AC[0x3];                                     // 0x0E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0E8C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0E94(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_35AD[0x4];                                     // 0x0EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_2;                // 0x0EA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AE[0x3];                                     // 0x0EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0EBC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0EC8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0ED8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AF[0x7];                                     // 0x0F61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0F68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0F70(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0F79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0F7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0F7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0F7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B0[0x3];                                     // 0x0F7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0F84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B1[0x3];                                     // 0x0F85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0F8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0F8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B2[0x2];                                     // 0x0F8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0F98(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_tryGetNail_success;                       // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x7];                                     // 0x0FA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_tryGetNail_nailClass;                     // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0FB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B4[0x4];                                     // 0x0FC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_3;                   // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0FD0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B5[0x8];                                     // 0x1008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item;                           // 0x1010(0x00F0)(HasGetValueTypeHash)
	class ANail_C*                                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_nailNail_fail;                            // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x1109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B6[0x2];                                     // 0x110A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x110C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x111C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x1124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B7[0x3];                                     // 0x1125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x1128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x1131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B8[0x2];                                     // 0x1132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x1134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x1140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x114C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x1158(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x1168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x1174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x1180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x118C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x1198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x11A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x11B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B9[0x4];                                     // 0x11BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x11C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x11C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x11D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BA[0x2];                                     // 0x11D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x11D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x11DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x11E8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_2;                              // 0x11F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x1200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x120C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x1218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BB[0x3];                                     // 0x1219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x121C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x12A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x12A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x12A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BC[0x1];                                     // 0x12A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x12A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x12AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x12B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x12BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x12C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x12D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x12E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x12E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x12F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x12F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x1300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x1304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x1308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x130C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x1318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x1324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x1325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActorChipPile_C*                       K2Node_DynamicCast_AsActor_Chip_Pile;              // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x1331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x1332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x1333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x1334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BD[0x3];                                     // 0x1341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x1344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BE[0xF];                                     // 0x1351(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x1360(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BF[0x7];                                     // 0x1391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x1398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C0[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirthole_C*                            CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x13A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x13B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x13BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x13C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C1[0xC];                                     // 0x13D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x13E0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x1410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x1420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x1421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C2[0x2];                                     // 0x1422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x1424(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x14AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C3[0x3];                                     // 0x14AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x14B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x14B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x14B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x14BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__Object;       // 0x14C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x14D4(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x14E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__1_Object;     // 0x14F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C4[0x4];                                     // 0x14FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x1500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C5[0x8];                                     // 0x1508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x1510(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x1540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x1548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C6[0x3];                                     // 0x1555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x1558(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x15E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x15E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x15F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x1600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x160C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x1618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C7[0xC];                                     // 0x1624(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x1630(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x1660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C8[0x3];                                     // 0x1661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x1664(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x16EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_35C9[0x4];                                     // 0x16FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x1708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CA[0x7];                                     // 0x1709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x1710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x1718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x1724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x1730(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x1760(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_passOut;                        // 0x17E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CB[0x3];                                     // 0x17E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x17EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x17F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x1804(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CC[0x3];                                     // 0x1805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x1808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x180C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_5;        // 0x1810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CD[0x8];                                     // 0x1818(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x1820(0x0080)(IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x18A0(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x18B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x18B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x18C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x18C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x18D4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x195C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x195D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CE[0x2];                                     // 0x195E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x1960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x1964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x1968(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x1974(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x1980(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x198C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x1998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x19A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x19A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x19B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x19B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x19BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x19C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x19C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x19D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x19DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x19E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x19E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x19E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x19EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x19F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x19F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x19FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x1A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKel_lmao_Skeleton_AnimBlueprint_C*     K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint; // 0x1A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CF[0x7];                                     // 0x1A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1A20(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x1A50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x1A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x1A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x1A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x1A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D0[0x3];                                     // 0x1A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x1A6C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D1[0x4];                                     // 0x1A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x1A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_4;                   // 0x1A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x1A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D2[0x3];                                     // 0x1A89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x1A8C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x1A94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x1AA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x1AB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x1ABC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1AC8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x1B50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x1BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x1BE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x1BF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x1BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x1C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_death;                          // 0x1C01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D3[0x2];                                     // 0x1C02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x1C04(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1C14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1C15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D4[0x2];                                     // 0x1C16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x1C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x1C1C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x1C2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D5[0x3];                                     // 0x1C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x1C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x1C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x1C44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D6[0x3];                                     // 0x1C45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x1C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x1C50(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x1C60(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x1C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x1C79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x1C7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x1C7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x1C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x1C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x1C84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x1C85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable_3;                              // 0x1C86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D7[0x1];                                     // 0x1C87(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x1C88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x1C94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x1CA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x1CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x1CB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x1CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x1CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x1CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x1CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x1CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x1CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x1CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x1CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x1CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x1CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x1CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1CE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x1CF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D8[0x3];                                     // 0x1CF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x1CF8(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x1D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x1D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x1D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x1D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x1D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x1D24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x1D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x1D2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x1D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x1D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x1D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x1D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x1D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x1D44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1D50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x1D5C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x1DE4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x1E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x1E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x1E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x1E78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x1E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x1E88(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x1F10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult_1;     // 0x1F1C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x1FA4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_35D9[0x4];                                     // 0x1FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_6;        // 0x1FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x1FC0(0x00CC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x208C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x2094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x3];                                     // 0x2095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x2098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x209C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x209D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             Temp_byte_Variable_4;                              // 0x209E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x209F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x20A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x3];                                     // 0x20A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x20A4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x20B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_1;       // 0x20B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x20BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x20C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x20C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x6];                                     // 0x20C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_7;        // 0x20C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             Temp_byte_Variable_5;                              // 0x20D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x20D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DD[0x2];                                     // 0x20D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x20D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x20D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x20DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_2;       // 0x20E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x20E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DE[0x8];                                     // 0x20E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x20F0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x2120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x2124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x21AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_8;        // 0x21B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x21B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x21C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x21C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x21C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x21C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x4];                                     // 0x21C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable_5;                            // 0x21C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_9;        // 0x21D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_2;          // 0x21D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_3;          // 0x21DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x21E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_8;    // 0x21E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E0[0x4];                                     // 0x21F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x21F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x2208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_9;    // 0x2214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x2220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x222C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x2238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x223C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x22C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E1[0x3];                                     // 0x22C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x22C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x22CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E2[0x3];                                     // 0x22CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x22D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x22D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x22D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E3[0x2];                                     // 0x22D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_10;       // 0x22D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x22E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E4[0x3];                                     // 0x22E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x22E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x22E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x3];                                     // 0x22E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x22EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x22F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x22F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x2304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x2308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x2314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x2318(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x2330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x2334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x2338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x233C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x2340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x2344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x2348(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x2360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x2364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x2368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x236C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x2370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegSin_ReturnValue_2;                     // 0x237C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x2380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x2384(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_35E6[0x4];                                     // 0x240C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_7;                            // 0x2410(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x2428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E7[0x4];                                     // 0x242C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_49;                    // 0x2430(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_3;                     // 0x2448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x244C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x2450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x245C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x2468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x2474(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x24FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x2508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x2510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x251C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x2528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_50;                    // 0x2538(0x0018)(HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x2550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x2558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x2559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E8[0x2];                                     // 0x255A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x255C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x2560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x2564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x2570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x257C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x2588(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E9[0x4];                                     // 0x2594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x2598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x25A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x25A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x25B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x25B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x25BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x25C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x25C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x25D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x25DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x25E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EA[0x3];                                     // 0x25E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x25EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x25F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x25F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x25F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x25FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x2600(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_25;       // 0x2618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x261C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_2;        // 0x2620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x2628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EB[0x4];                                     // 0x262C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x2630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x2640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x2641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EC[0x6];                                     // 0x2642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x2648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x2650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x265C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x2660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35ED[0x4];                                     // 0x266C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x2670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x2678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x2684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x2690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x269C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x26A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x26A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x26A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x26B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x26C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x26C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_10;   // 0x26D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x26DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EE[0x3];                                     // 0x26DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x26E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x26E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x26F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_11;       // 0x26F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x2700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EF[0x3];                                     // 0x2701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x2704(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_4;     // 0x2710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x2718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x2724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x2730(0x0030)(IsPlainOldData, NoDestructor)
	struct FKey                                   Temp_struct_Variable_8;                            // 0x2760(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_12;       // 0x2778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x2780(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_canBackrooms_return;                      // 0x2798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F0[0x7];                                     // 0x2799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_13;       // 0x27A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x27A8(0x0010)(ReferenceParm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_14;       // 0x27B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x27C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x27C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F1[0x3];                                     // 0x27C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x27C8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x27E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x27E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x27E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F2[0x3];                                     // 0x27E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x27EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x27F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_26;       // 0x27F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_5;     // 0x27F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x2800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0x3];                                     // 0x2801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x2804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x2810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_27;       // 0x2814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x2818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x281C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_9;                            // 0x2820(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_28;       // 0x2838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F4[0x4];                                     // 0x283C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_6;     // 0x2840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_29;       // 0x2848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_3;      // 0x284C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x2858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_30;       // 0x2864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_31;       // 0x2868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x286C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_10;      // 0x2878(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x2884(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x2890(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x289C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x28A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F5[0x4];                                     // 0x28AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x28B0(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_15;       // 0x28C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x28D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x28DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x28E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F6[0x4];                                     // 0x28F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_16;       // 0x28F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x2900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x2904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x2908(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_8;       // 0x2920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_9;       // 0x2924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_10;                           // 0x2928(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_10;      // 0x2940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F7[0x4];                                     // 0x2944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x2948(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x2960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x2961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F8[0x2];                                     // 0x2962(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x2964(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x296C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_4;           // 0x2974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_5;           // 0x2978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_32;       // 0x297C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_33;       // 0x2980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x2984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x2988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_6;           // 0x298C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_7;           // 0x2990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x2994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_3;                  // 0x2998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x299C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x29A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x29A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x29B0(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x29C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x29CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x29D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_34;       // 0x29D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x29D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F9[0x4];                                     // 0x29DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x29E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x29F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FA[0x3];                                     // 0x29F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x29F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_4;                 // 0x29F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x2A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x2A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FB[0x6];                                     // 0x2A0A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_1;                          // 0x2A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x2A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FC[0x3];                                     // 0x2A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_11;      // 0x2A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_2;        // 0x2A20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_2;        // 0x2A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FD[0x3];                                     // 0x2A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x2A30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x2A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x2A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x2A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_35;       // 0x2A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x2A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x2A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x2A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x2A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_6;                              // 0x2A5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FE[0x3];                                     // 0x2A5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_36;       // 0x2A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x2A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x2A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FF[0x3];                                     // 0x2A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x2A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x2A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x2A74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3600[0x3];                                     // 0x2A75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x2A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_5;                      // 0x2A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x2A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x2A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x2A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x2A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x2A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_37;       // 0x2A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_38;       // 0x2A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_39;       // 0x2A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_40;       // 0x2AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_41;       // 0x2AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_42;       // 0x2AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_4;                     // 0x2AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x2AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_43;       // 0x2AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_12;      // 0x2AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_44;       // 0x2ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_45;       // 0x2AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_46;       // 0x2AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_47;       // 0x2AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x2ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x2AD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x2ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x2AE0(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_2;                  // 0x2AF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x2AFC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   Temp_name_Variable_6;                              // 0x2B84(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3601[0x4];                                     // 0x2B8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_17;       // 0x2B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_11;               // 0x2B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x2B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x2BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x2BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x2BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_48;       // 0x2BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x2BB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_13;      // 0x2BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_12;               // 0x2BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_49;       // 0x2BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_6;        // 0x2BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x2BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_6;                     // 0x2BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_14;      // 0x2BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x2BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_18;       // 0x2BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x2BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_15;      // 0x2BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_13;               // 0x2BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3602[0x4];                                     // 0x2BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_19;       // 0x2BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x2C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3603[0x4];                                     // 0x2C04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_20;       // 0x2C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_3;        // 0x2C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x2C11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x2C12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_1;                    // 0x2C13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_6;                      // 0x2C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_14;               // 0x2C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x2C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_17;         // 0x2C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_18;         // 0x2C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_7;                     // 0x2C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x2C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x2C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x2C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_50;       // 0x2C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_51;       // 0x2C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_21;       // 0x2C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_16;      // 0x2C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_19;         // 0x2C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_22;       // 0x2C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x2C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_3;       // 0x2C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x2C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x2C65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3604[0x2];                                     // 0x2C66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x2C68(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x2C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x2C84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_11;      // 0x2C90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_11;   // 0x2C9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x2CA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x2CB4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_7;                              // 0x2CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3605[0x3];                                     // 0x2CBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x2CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_23;       // 0x2CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x2CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x2CD8(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_phys_obj;                             // 0x2CE8(0x0010)(ReferenceParm)
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x2CF8(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x2D10(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_3;                // 0x2D20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x2D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x2D31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x2D32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3606[0x5];                                     // 0x2D33(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_1;                  // 0x2D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_24;       // 0x2D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_25;       // 0x2D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_6;                            // 0x2D50(0x0010)(ConstParm, ReferenceParm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_26;       // 0x2D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_27;       // 0x2D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_28;       // 0x2D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_29;       // 0x2D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x2D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x2D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3607[0x7];                                     // 0x2D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_30;       // 0x2D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x2D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3608[0x7];                                     // 0x2D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_11;                           // 0x2DA0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_1;                              // 0x2DB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_1;                                // 0x2DC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_5;            // 0x2DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_5;         // 0x2DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3609[0x2];                                     // 0x2DD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_5;                    // 0x2DD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_5;                // 0x2DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_5;                // 0x2DDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_5;             // 0x2DE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_5;                  // 0x2DF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_5;            // 0x2E00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360A[0x4];                                     // 0x2E0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_5;                 // 0x2E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_5;                // 0x2E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_5;            // 0x2E20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_5;             // 0x2E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_5;                 // 0x2E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_5;            // 0x2E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_5;               // 0x2E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_5;              // 0x2E3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_5;                // 0x2E48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360B[0x4];                                     // 0x2E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_4;                // 0x2E58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x2E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360C[0x3];                                     // 0x2E69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x2E6C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_360D[0x4];                                     // 0x2E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_5;                 // 0x2E80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x2E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360E[0x7];                                     // 0x2E91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_2;                          // 0x2E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_6;                 // 0x2EA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lookAt_return;                            // 0x2EB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360F[0x6];                                     // 0x2EB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x2EB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x2EC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x2ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x2ED1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3610[0x6];                                     // 0x2ED2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x2ED8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x2EF0(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x2F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x2F09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3611[0x2];                                     // 0x2F0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_findFootLocation_ReturnValue;             // 0x2F0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x2F18(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x2F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x2F31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3612[0x2];                                     // 0x2F32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_15;               // 0x2F34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_16;               // 0x2F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x2F3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3613[0x3];                                     // 0x2F3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x2F40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_7;                      // 0x2F4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x2F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3614[0x3];                                     // 0x2F51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_2;            // 0x2F54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_52;       // 0x2F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_7;        // 0x2F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_17;      // 0x2F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_53;       // 0x2F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x2F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x2F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3615[0x3];                                     // 0x2F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_4;       // 0x2F74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x2F78(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x2F88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x2F94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x2FA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x2FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x2FB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_8;                      // 0x2FBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x2FC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x2FCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x2FD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_20;         // 0x2FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_8;                     // 0x2FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_17;               // 0x2FE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_7;     // 0x2FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x2FF0(0x0018)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x3008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_18;      // 0x3010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x3014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3616[0x3];                                     // 0x3015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_54;       // 0x3018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x301C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x3020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x302C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x3030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x3034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x3038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3617[0x4];                                     // 0x303C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         CallFunc_Array_Get_Item_2;                         // 0x3040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x3048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x304C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x3050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x3054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_21;         // 0x3058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_9;                     // 0x305C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_12;                           // 0x3060(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_19;      // 0x3078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_18;               // 0x307C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x3080(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_55;       // 0x3098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x309C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_19;               // 0x30A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x30AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_20;      // 0x30B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x30BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_56;       // 0x30C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x30CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_57;       // 0x30D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_12;      // 0x30DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x30E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3618[0x4];                                     // 0x30F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x30F8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x3110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x311C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x3128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_2;         // 0x3134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x3140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x3148(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x3160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3619[0xF];                                     // 0x3161(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x3170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x31A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x31AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x31B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361A[0xC];                                     // 0x31C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x31D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x3200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361B[0x4];                                     // 0x320C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x3210(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_findFootLocation_ReturnValue_1;           // 0x3228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_6;            // 0x3234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_6;         // 0x3235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361C[0x2];                                     // 0x3236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_6;                    // 0x3238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_6;                // 0x323C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_6;                // 0x3240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_6;             // 0x324C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_6;                  // 0x3258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_6;            // 0x3264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_6;                 // 0x3270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_6;                // 0x3278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_6;            // 0x3280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_6;             // 0x3288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_6;                 // 0x3290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_6;            // 0x3294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_6;               // 0x3298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_6;              // 0x329C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_6;                // 0x32A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x32B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_361D[0xC];                                     // 0x32C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x32D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x3300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x330C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x3318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361E[0xC];                                     // 0x3324(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x3330(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x3360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361F[0x3];                                     // 0x3361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x3364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x3370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x3378(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x3388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x3390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x3398(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x33A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x33B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_30;                    // 0x33C0(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x33D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_31;                    // 0x33E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_32;                    // 0x3400(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_31;       // 0x3418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_32;       // 0x3420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_33;                    // 0x3428(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_34;                    // 0x3440(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_skipGrabRadial_skip;                      // 0x3458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3620[0x7];                                     // 0x3459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_35;                    // 0x3460(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_LowEntry_LocalVariable_Value__2_Object;     // 0x3478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3621[0x3];                                     // 0x3479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x347C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x3480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x3481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3622[0x2];                                     // 0x3482(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x3484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_36;                    // 0x3488(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_37;                    // 0x34A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x34B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x34B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_7;            // 0x34BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_7;         // 0x34BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_7;                    // 0x34BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_7;                // 0x34C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_7;                // 0x34C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_7;             // 0x34D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_7;                  // 0x34DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_7;            // 0x34E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3623[0x4];                                     // 0x34F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_7;                 // 0x34F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_7;                // 0x3500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_7;            // 0x3508(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_7;             // 0x3510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_7;                 // 0x3518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_7;            // 0x351C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_7;               // 0x3520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_7;              // 0x3524(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_7;                // 0x3530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x353C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ;                           // 0x353D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3624[0x2];                                     // 0x353E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_38;                    // 0x3540(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_39;                    // 0x3558(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x3570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3625[0x7];                                     // 0x3571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_51;                    // 0x3578(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x3590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3626[0x3];                                     // 0x3591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x3594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x3598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x359C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x359D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3627[0x2];                                     // 0x359E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_40;                    // 0x35A0(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_33;       // 0x35B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_41;                    // 0x35C0(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_22;         // 0x35D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_4;                       // 0x35DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_34;       // 0x35E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_2;                    // 0x35E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3628[0x7];                                     // 0x35E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_35;       // 0x35F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_42;                    // 0x35F8(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_36;       // 0x3610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x3618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3629[0x7];                                     // 0x3619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x3620(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x3630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362A[0x7];                                     // 0x3631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_43;                    // 0x3638(0x0018)(HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_2;            // 0x3650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_8;     // 0x3658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_2;                              // 0x3660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_2;                                // 0x366C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_14;       // 0x3678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x3684(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x370C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x370D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_8;            // 0x370E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_8;         // 0x370F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_8;                    // 0x3710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_8;                // 0x3714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_8;                // 0x3718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_8;             // 0x3724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_8;                  // 0x3730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_8;            // 0x373C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_8;                 // 0x3748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_8;                // 0x3750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_8;            // 0x3758(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_8;             // 0x3760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_8;                 // 0x3768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_8;            // 0x376C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_8;               // 0x3770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_8;              // 0x3774(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_8;                // 0x3780(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x378C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_dontWakeup;                     // 0x378D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_alt;                            // 0x378E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_dontCollect;                    // 0x378F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return_2;                        // 0x3790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362B[0x7];                                     // 0x3791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_2;                         // 0x3798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_5;                   // 0x37A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x37B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x37E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x37EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x37F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x3804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x3810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_checkEquip_empty_1;                       // 0x381C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362C[0x3];                                     // 0x381D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output_1;                      // 0x3820(0x00F0)(HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x3910(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362D[0x4];                                     // 0x391C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x3920(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x3950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_44;                    // 0x3958(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x3970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_2;                 // 0x3978(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x3988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return_1;                        // 0x3989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_1;             // 0x398A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362E[0x5];                                     // 0x398B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_45;                    // 0x3990(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x39A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x39B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue_9;                      // 0x3A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_10;                    // 0x3A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x3A44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x3A50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_37;       // 0x3AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_46;                    // 0x3AE0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_lookAt_return_1;                          // 0x3AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_362F[0x7];                                     // 0x3AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text_1;                            // 0x3B00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace_1;              // 0x3B10(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x3B18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x3B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3630[0x3];                                     // 0x3B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_12;   // 0x3B2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x3B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3631[0x3];                                     // 0x3B39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x3B3C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x3BC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3632[0x3];                                     // 0x3BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_15;       // 0x3BC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x3BD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x3BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3633[0x7];                                     // 0x3BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_3;                           // 0x3BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x3BF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_3;        // 0x3BFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_4;      // 0x3C08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_13;      // 0x3C14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_14;      // 0x3C20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_15;      // 0x3C2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x3C38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x3C44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x3C50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x3C5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_4;    // 0x3C68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x3C74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x3C80(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_4dir_return;                              // 0x3D08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x3D14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_5;    // 0x3D20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x3D2C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_CustomEvent_hitResult;                      // 0x3DB4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_9;            // 0x3E3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_9;         // 0x3E3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3634[0x2];                                     // 0x3E3E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_9;                    // 0x3E40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_9;                // 0x3E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_9;                // 0x3E48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_9;             // 0x3E54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_9;                  // 0x3E60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_9;            // 0x3E6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_9;                 // 0x3E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_9;                // 0x3E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_9;            // 0x3E88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_9;             // 0x3E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_9;                 // 0x3E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_9;            // 0x3E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_9;               // 0x3EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_9;              // 0x3EA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_9;                // 0x3EB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3635[0x4];                                     // 0x3EBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x3EC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x3EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3636[0x7];                                     // 0x3EC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_1;        // 0x3ED0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x3ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3637[0x3];                                     // 0x3ED9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody_1; // 0x3EDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue_1; // 0x3EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_3;     // 0x3EEC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x3F74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_4;     // 0x3F80(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Vector_Distance_ReturnValue_3;            // 0x4008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x400C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3638[0x3];                                     // 0x400D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x4010(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_28;           // 0x4040(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x4050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x4054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x4058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x405C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x4060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_14;                      // 0x4064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x4068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3639[0x7];                                     // 0x4069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array;                            // 0x4070(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_isDreaming_dreaming_3;                    // 0x4080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363A[0x3];                                     // 0x4081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_5;                          // 0x4084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x4088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x408C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USave_main_C*                           CallFunc_getMainSave_save_main_2;                  // 0x4090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x4098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_23;         // 0x409C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x40A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_24;         // 0x40A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x40A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x40AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x40B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x40B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x40B8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x4140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_10;           // 0x4144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_10;        // 0x4145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363B[0x2];                                     // 0x4146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_10;                   // 0x4148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_10;               // 0x414C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_10;               // 0x4150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_10;            // 0x415C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_10;                 // 0x4168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_10;           // 0x4174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_10;                // 0x4180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_10;               // 0x4188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_10;           // 0x4190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_10;            // 0x4198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_10;                // 0x41A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_10;           // 0x41A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_10;              // 0x41A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_10;             // 0x41AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_10;               // 0x41B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x41C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x41C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x2];                                     // 0x41C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_9;                              // 0x41C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_6;                   // 0x41D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_10;                     // 0x41D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_25;         // 0x41DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x41E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363D[0x3];                                     // 0x41E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x41E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isUnderwater_ReturnValue;                 // 0x41E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x41E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363E[0x2];                                     // 0x41EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_21;      // 0x41EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_58;       // 0x41F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x41F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363F[0x3];                                     // 0x41F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_5;       // 0x41F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x41FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x4200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3640[0x4];                                     // 0x4204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x4208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_4;        // 0x4210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_5;      // 0x421C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x4228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x4234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x4240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_fuel;                                 // 0x424C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x4250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x4258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_22;      // 0x425C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_3;         // 0x4260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             K2Node_Select_Default_4;                           // 0x426C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__1;                    // 0x426D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 K2Node_Select_Default_5;                           // 0x426E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x426F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x4270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x4274(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x4284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_4;                    // 0x4285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3641[0x2];                                     // 0x4286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_38;       // 0x4288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x4290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x4298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3642[0x3];                                     // 0x4299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x429C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3643[0x4];                                     // 0x4324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x4328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_6;    // 0x4330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__3_Object;     // 0x433C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x4348(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x43D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3644[0x3];                                     // 0x43D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x43D4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x43E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3645[0x3];                                     // 0x43E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_StartingSection;                // 0x43E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x43F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_13;   // 0x43F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x4404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3646[0x3];                                     // 0x4405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_2;                         // 0x4408(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_3;                         // 0x4418(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_16;       // 0x4428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__4_Object;     // 0x4434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x4440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x4444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x4448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x444C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x4450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x4454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x4458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3647[0x3];                                     // 0x4459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_5;                        // 0x445C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x4460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x4461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3648[0x2];                                     // 0x4462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x4464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_6;      // 0x4468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_16;      // 0x4474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_17;       // 0x4480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3649[0x4];                                     // 0x448C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_1;                        // 0x4490(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x44A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_17;          // 0x44AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_2;                  // 0x44B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x44B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364A[0x2];                                     // 0x44BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_18;          // 0x44BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x44C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364B[0x3];                                     // 0x44C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_2;     // 0x44CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_2; // 0x4554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364C[0x3];                                     // 0x4555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_6;                           // 0x4558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_11;           // 0x4560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_11;        // 0x4561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364D[0x2];                                     // 0x4562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_11;                   // 0x4564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_11;               // 0x4568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_11;               // 0x456C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_11;            // 0x4578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_11;                 // 0x4584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_11;           // 0x4590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364E[0x4];                                     // 0x459C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_11;                // 0x45A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_11;               // 0x45A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_11;           // 0x45B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_11;            // 0x45B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_11;                // 0x45C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_11;           // 0x45C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_11;              // 0x45C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_11;             // 0x45CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_11;               // 0x45D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364F[0x4];                                     // 0x45E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_getActionOptions_options;                 // 0x45E8(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               CallFunc_getActionOptions_options_enum;            // 0x45F8(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_getActionOptions_optionsNamesOverlay;     // 0x4608(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x4618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x4619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3650[0x2];                                     // 0x461A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x461C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x4620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_19;          // 0x4624(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x4630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_3;     // 0x4634(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_3; // 0x46BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3651[0x3];                                     // 0x46BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x46C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x4748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3652[0x3];                                     // 0x4749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__5_Object;     // 0x474C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x4758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x475C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x4760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_15;                      // 0x4764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_16;                      // 0x4768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_17;                      // 0x476C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x4770(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x477C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3653[0x3];                                     // 0x477D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x4780(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x47B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3654[0x3];                                     // 0x47B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x47B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x483C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x483D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x2];                                     // 0x483E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_5;  // 0x4840(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x48C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USave_main_C*                           CallFunc_getMainSave_save_main_3;                  // 0x48D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x48D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x48DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x48DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3656[0x2];                                     // 0x48DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x48E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x48E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_7;                            // 0x48E8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_6;  // 0x48F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_7;  // 0x4980(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x4A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x4A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x4A10(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_4;               // 0x4A20(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x4A50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x4A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x4A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x4A74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x4A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x4A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x4A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x4A8C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x4B14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3657[0x3];                                     // 0x4B15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x4B18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x4B24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3658[0x3];                                     // 0x4B25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x4B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_8;                            // 0x4B30(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_9;                            // 0x4B40(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x4B50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x4BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x3];                                     // 0x4BD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x4BDC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_12;           // 0x4C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_12;        // 0x4C65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x2];                                     // 0x4C66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_12;                   // 0x4C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_12;               // 0x4C6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_12;               // 0x4C70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_12;            // 0x4C7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_12;                 // 0x4C88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_12;           // 0x4C94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_12;                // 0x4CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_12;               // 0x4CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_12;           // 0x4CB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_12;            // 0x4CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_12;                // 0x4CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_12;           // 0x4CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_12;              // 0x4CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_12;             // 0x4CCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_12;               // 0x4CD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x4CE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_1;     // 0x4CE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365B[0x2];                                     // 0x4CE6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_4;     // 0x4CE8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_4; // 0x4D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x4D71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_13;           // 0x4D72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_13;        // 0x4D73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_13;                   // 0x4D74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_13;               // 0x4D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_13;               // 0x4D7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_13;            // 0x4D88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_13;                 // 0x4D94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_13;           // 0x4DA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365C[0x4];                                     // 0x4DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_13;                // 0x4DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_13;               // 0x4DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_13;           // 0x4DC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_13;            // 0x4DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_13;                // 0x4DD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_13;           // 0x4DD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_13;              // 0x4DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_13;             // 0x4DDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_13;               // 0x4DE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x4DF4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x4E7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365D[0x3];                                     // 0x4E7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x4E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x4E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x4E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x4E91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365E[0x2];                                     // 0x4E92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x4E94(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_365F[0x4];                                     // 0x4EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_5;                // 0x4EA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x4EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3660[0x3];                                     // 0x4EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x4EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_6;                // 0x4EC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x4ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_canBeUsedHold_return;                     // 0x4ED1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x4ED2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x4ED3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x4ED4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x4EDC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x4EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x4EED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3661[0x2];                                     // 0x4EEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x4EF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3662[0x4];                                     // 0x4EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_7;                // 0x4F00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x4F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3663[0x3];                                     // 0x4F11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_17;      // 0x4F14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_1;           // 0x4F20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x4F2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_18;      // 0x4F38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x4F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_14;   // 0x4F48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3664[0xC];                                     // 0x4F54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_13;             // 0x4F60(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x4F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_flareGren_C*                      CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x4F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x4FA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_19;      // 0x4FAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_20;          // 0x4FB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3665[0x4];                                     // 0x4FC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_52;                    // 0x4FC8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_2;           // 0x4FE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_3;           // 0x4FEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_20;      // 0x4FF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_21;      // 0x5004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue_1;              // 0x5010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_1;                             // 0x501C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_15;   // 0x5020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3666[0x4];                                     // 0x502C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_14;             // 0x5030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x5060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_flare_C*                          CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x5068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x5070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_22;      // 0x507C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_21;          // 0x5088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3667[0x4];                                     // 0x5094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_53;                    // 0x5098(0x0018)(HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x50B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_5;           // 0x50B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_2;                // 0x50C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_23;      // 0x50CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x50D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_6;           // 0x50E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_16;   // 0x50F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x50FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_3;                             // 0x5108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3668[0x4];                                     // 0x510C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_15;             // 0x5110(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x5140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_circularSaw_C*                    CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x5148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_7;           // 0x5150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_24;      // 0x515C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x5168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_3;                // 0x516C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x5178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_8;           // 0x5184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_17;   // 0x5190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_2;       // 0x519C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3669[0x8];                                     // 0x51A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_16;             // 0x51B0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x51E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_9;           // 0x51E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366A[0x4];                                     // 0x51F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_bombBarrel_C*                     CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x51F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_25;      // 0x5200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x520C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_4;                // 0x5210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x521C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_10;          // 0x5228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_18;   // 0x5234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_3;       // 0x5240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_4;           // 0x524C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366B[0x8];                                     // 0x5258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_17;             // 0x5260(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_26;      // 0x5290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366C[0x4];                                     // 0x529C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x52A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_difficulty                               Temp_byte_Variable_8;                              // 0x52A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366D[0x7];                                     // 0x52A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_bombBottle_C*                     CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x52B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x52B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_59;       // 0x52BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_60;       // 0x52C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_6;       // 0x52C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_11;          // 0x52C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x52D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_3;       // 0x52D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_5;           // 0x52E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x52F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_27;      // 0x52F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_12;          // 0x5300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_19;   // 0x530C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_28;      // 0x5318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_22;          // 0x5324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_23;          // 0x5330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366E[0x4];                                     // 0x533C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_18;             // 0x5340(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x5370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_sponge_p_C*                       CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x5378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue_2;              // 0x5380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_6;           // 0x538C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_29;      // 0x5398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x53A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_54;                    // 0x53A8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_13;          // 0x53C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_20;   // 0x53CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_30;      // 0x53D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366F[0xC];                                     // 0x53E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_19;             // 0x53F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_24;          // 0x5420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3670[0x4];                                     // 0x542C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x5430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_13;                           // 0x5438(0x0018)(HasGetValueTypeHash)
	class AProp_egnops_C*                         CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x5450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReleaseKey_ReturnValue;                   // 0x5458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PressKey_ReturnValue;                     // 0x5459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3671[0x6];                                     // 0x545A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x5460(0x0018)()
	float                                         Temp_float_Variable_7;                             // 0x5478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3672[0x4];                                     // 0x547C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x5480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x5490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3673[0x3];                                     // 0x5491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_7;           // 0x5494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_31;      // 0x54A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_14;          // 0x54AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_8;           // 0x54B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_32;      // 0x54C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_33;      // 0x54D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_25;          // 0x54DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x54E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3674[0x4];                                     // 0x54EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x54F0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_5;                // 0x5508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_3;             // 0x5514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_15;          // 0x5520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_21;   // 0x552C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_4;       // 0x5538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_26;          // 0x5544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue_9;           // 0x5550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3675[0x4];                                     // 0x555C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_20;             // 0x5560(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_34;      // 0x5590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3676[0x4];                                     // 0x559C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x55A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_crystal_projectile_C*             CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x55A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x55B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_16;          // 0x55B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_6;                // 0x55C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_35;      // 0x55CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_4;             // 0x55D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_27;          // 0x55E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_17;          // 0x55F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_22;   // 0x55FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_5;       // 0x5608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_difficulty                               Temp_byte_Variable_9;                              // 0x5614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3677[0xB];                                     // 0x5615(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_21;             // 0x5620(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12; // 0x5650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x5658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3678[0x4];                                     // 0x565C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_crystal_projectile_C*             CallFunc_FinishSpawningActor_ReturnValue_12;       // 0x5660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_61;       // 0x5668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_62;       // 0x566C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_7;       // 0x5670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x5674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_18;          // 0x5678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_7;                // 0x5684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_36;      // 0x5690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_5;             // 0x569C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_19;          // 0x56A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_23;   // 0x56B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_6;       // 0x56C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3679[0x4];                                     // 0x56CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x56D0(0x0018)(HasGetValueTypeHash)
	uint8                                         Pad_367A[0x8];                                     // 0x56E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_22;             // 0x56F0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13; // 0x5720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_crystal_projectile_C*             CallFunc_FinishSpawningActor_ReturnValue_13;       // 0x5728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x5730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367B[0x3];                                     // 0x5731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_20;          // 0x5734(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_24;   // 0x5740(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_37;      // 0x574C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367C[0x8];                                     // 0x5758(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_23;             // 0x5760(0x0030)(IsPlainOldData, NoDestructor)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_7;                   // 0x5790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14; // 0x5798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_14;       // 0x57A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367D[0x8];                                     // 0x57A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item_3;                         // 0x57B0(0x00F0)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_3;                    // 0x58A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367E[0x7];                                     // 0x58A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_14;                           // 0x58A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x58C0(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x58D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367F[0x4];                                     // 0x58DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x58E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__2;                    // 0x58F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3680[0x7];                                     // 0x58F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_55;                    // 0x5900(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x5918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_39;       // 0x5920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x5928(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x5930(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_8;  // 0x593C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x59C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x59C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x59C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3681[0x1];                                     // 0x59C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_9;     // 0x59C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_18;       // 0x59D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x59DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_getEvent_isEventActive;                   // 0x59DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x59DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_5;                    // 0x59DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_5;                               // 0x59E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x59E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x59E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3682[0x2];                                     // 0x59E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_40;       // 0x59E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x59F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3683[0x7];                                     // 0x59F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x59F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x5A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3684[0x7];                                     // 0x5A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_41;       // 0x5A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x5A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_6;                    // 0x5A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isExhausted_exhausted;                    // 0x5A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x5A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3685[0x4];                                     // 0x5A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_10;                           // 0x5A18(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_7;                 // 0x5A28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x5A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3686[0x3];                                     // 0x5A39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x5A3C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x5AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3687[0x3];                                     // 0x5AC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_3;                          // 0x5AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x5AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x5AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_14;           // 0x5AD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_14;        // 0x5AD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_14;                   // 0x5AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_14;               // 0x5AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_14;               // 0x5ADC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_14;            // 0x5AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_14;                 // 0x5AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_14;           // 0x5B00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3688[0x4];                                     // 0x5B0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_14;                // 0x5B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_14;               // 0x5B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_14;           // 0x5B20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_14;            // 0x5B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_14;                // 0x5B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_14;           // 0x5B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_14;              // 0x5B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_14;             // 0x5B3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_14;               // 0x5B48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x5B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x5B55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x5B56(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_7;                    // 0x5B57(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_3;                 // 0x5B58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x5B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_2;             // 0x5B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave_1;                  // 0x5B6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x5B6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__3;                    // 0x5B6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__4;                    // 0x5B6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3689[0x2];                                     // 0x5B6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_12;       // 0x5B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UblackScreen_C*                         CallFunc_Create_ReturnValue_1;                     // 0x5B78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_42;       // 0x5B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x5B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x5B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x5B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368A[0x7];                                     // 0x5B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x5BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x5BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x5BAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368B[0x3];                                     // 0x5BAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x5BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x5BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368C[0x3];                                     // 0x5BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x5BBC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x5C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x5C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x000010, "Wrong alignment on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(sizeof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x005C50, "Wrong size on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, EntryPoint) == 0x000000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable) == 0x000008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_6) == 0x000020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key) == 0x000038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_5) == 0x000050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_4) == 0x000068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_1) == 0x000080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_3) == 0x000098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_2) == 0x0000B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_2) == 0x0000C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_1) == 0x0000E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key) == 0x0000F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_3) == 0x000110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable) == 0x000128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable) == 0x000130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_14) == 0x000140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_8) == 0x000148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_kick) == 0x0001D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name_1) == 0x0001D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_13) == 0x0001E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_12) == 0x0001E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_7) == 0x0001F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_4) == 0x000278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_6) == 0x00027C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor_1) == 0x000308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact_1) == 0x000310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_activate) == 0x00031C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_static) == 0x00031D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_frozen) == 0x00031E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_active) == 0x00031F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_2) == 0x000320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_11) == 0x000330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_5) == 0x000338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_3) == 0x0003C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_10) == 0x0003C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_4) == 0x0003D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_index) == 0x000458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_action) == 0x00045C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_9) == 0x000460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_8) == 0x000468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_2) == 0x000470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location_1) == 0x000474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_7) == 0x000480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_6) == 0x000488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_5) == 0x000490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_wheelDelta) == 0x000498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_4) == 0x0004A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_mouse) == 0x0004A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_3) == 0x0004B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_1) == 0x0004B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed_1) == 0x0004D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature_1) == 0x0004D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature) == 0x0004D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_speed) == 0x0004DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_2) == 0x0004E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_3) == 0x0004E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name) == 0x000570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_volume) == 0x000580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_1) == 0x000588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location) == 0x000590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_1) == 0x00059C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_clean) == 0x0005A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player) == 0x0005A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_2) == 0x0005B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hook) == 0x000638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_gamemode) == 0x000640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key) == 0x000648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed) == 0x000660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_color) == 0x000664, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable) == 0x000674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_7) == 0x000678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_1) == 0x000690, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue) == 0x000691, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000698, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_1) == 0x0006A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_2) == 0x0006A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x0006A2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006A3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAllSocketNames_ReturnValue) == 0x0006A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue) == 0x0006B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0006BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x0006C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_8) == 0x0006D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x0006E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_1) == 0x0006F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable) == 0x0006F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_47) == 0x000700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00071C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_48) == 0x000728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000741, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_4) == 0x000742, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_5) == 0x000743, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms) == 0x000748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess) == 0x000758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_6) == 0x000759, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_1) == 0x000760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_7) == 0x000771, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant_) == 0x000772, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant_' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000788, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x00078C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue) == 0x00079C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_2) == 0x0007A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0007A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_8) == 0x0007B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_9) == 0x0007B1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor_1) == 0x0007B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot) == 0x0007C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return) == 0x0007C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug) == 0x0007D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor) == 0x0007E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage) == 0x0007E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_1) == 0x0007EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact) == 0x000874, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_skipSetting) == 0x000880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000881, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_10) == 0x000882, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000884, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_4) == 0x000890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_9) == 0x0008A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_2) == 0x0008C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_2) == 0x0008D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_3) == 0x0008D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_3) == 0x0008E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty) == 0x0008E9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output) == 0x0008F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_1) == 0x0009E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_1) == 0x0009E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_1) == 0x0009F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_damage) == 0x000A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1) == 0x000A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_4) == 0x000A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return) == 0x000A61, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_10) == 0x000A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_5) == 0x000A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_5) == 0x000AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player) == 0x000AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_6) == 0x000AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave) == 0x000AC1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return) == 0x000AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_11) == 0x000AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return) == 0x000AD1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_12) == 0x000AD2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000AD3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_11) == 0x000AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_13) == 0x000AF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_12) == 0x000B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_2) == 0x000B19, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_2) == 0x000B20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_1) == 0x000B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisKeyEvent_AxisValue) == 0x000B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000B44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_14) == 0x000B45, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue) == 0x000B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_1) == 0x000B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000B54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000B58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000B5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000B80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue) == 0x000B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_1) == 0x000B8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_2) == 0x000BC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable) == 0x000BD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_5) == 0x000BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess) == 0x000BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_6) == 0x000BE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000BEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x000BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_7) == 0x000C0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_2) == 0x000C14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_3) == 0x000C18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x000C1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x000C1D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time) == 0x000C20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance) == 0x000C24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location) == 0x000C28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x000C34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal) == 0x000C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x000C4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor) == 0x000C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent) == 0x000C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem) == 0x000C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart) == 0x000C84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects) == 0x000CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_7) == 0x000CB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue) == 0x000CB1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_1) == 0x000CB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection_1) == 0x000CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_call) == 0x000CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_call' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_15) == 0x000CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_name) == 0x000CEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay) == 0x000CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_reload) == 0x000D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_reload' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000D08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_16) == 0x000D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_hit) == 0x000D11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_OutputPin) == 0x000D14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_ReturnValue) == 0x000DA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_AsNail) == 0x000DA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_AsNail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_bSuccess) == 0x000DB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000DB1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000DB2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_1) == 0x000DB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_1) == 0x000DB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_1) == 0x000DBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000DC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_1) == 0x000DD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000DE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_1) == 0x000DF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_1) == 0x000DF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_1) == 0x000E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_1) == 0x000E08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_1) == 0x000E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_1) == 0x000E14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_1) == 0x000E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_1) == 0x000E1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_1) == 0x000E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000E34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_17) == 0x000E40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_1) == 0x000E48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_8) == 0x000E58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_18) == 0x000E59, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_2) == 0x000E60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_9) == 0x000E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_19) == 0x000E71, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_1) == 0x000E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_10) == 0x000E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_8) == 0x000E8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x000E94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_2) == 0x000EA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_11) == 0x000EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_3) == 0x000EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000ED8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000F60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000F68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component) == 0x000F70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_12) == 0x000F78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Has_Been_Initd_Variable) == 0x000F79, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_20) == 0x000F7A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000F7B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000F7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000F80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000F84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000F88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000F8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_21) == 0x000F8D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_9) == 0x000F90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_4) == 0x000F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_success) == 0x000FA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_nailClass) == 0x000FB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_nailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000FB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_3) == 0x000FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_1) == 0x000FD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x001000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item) == 0x001010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x001100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_nailNail_fail) == 0x001108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_nailNail_fail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_1) == 0x001109, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x00110C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_1) == 0x00111C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue) == 0x001124, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName) == 0x001128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_1) == 0x001130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_2) == 0x001131, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue) == 0x001134, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x001140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00114C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_8) == 0x001158, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x001168, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue) == 0x001174, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x001180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00118C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x001198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0011A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0011B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0011C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x0011C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_22) == 0x0011D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_23) == 0x0011D1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_1) == 0x0011D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x0011DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_9) == 0x0011E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_2) == 0x0011F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start) == 0x001200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end) == 0x00120C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_2) == 0x001218, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_OutHit) == 0x00121C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x0012A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0012A5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0012A6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_2) == 0x0012A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_2) == 0x0012AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_2) == 0x0012B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0012BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_2) == 0x0012C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0012D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_2) == 0x0012E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_2) == 0x0012E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_2) == 0x0012F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_2) == 0x0012F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_2) == 0x001300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_2) == 0x001304, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_2) == 0x001308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_2) == 0x00130C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_2) == 0x001318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x001324, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue) == 0x001325, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_3) == 0x001326, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001327, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsActor_Chip_Pile) == 0x001328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsActor_Chip_Pile' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_13) == 0x001330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x001331, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x001332, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x001333, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Cross_VectorVector_ReturnValue) == 0x001334, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_3) == 0x001340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x001344, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_4) == 0x001350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_2) == 0x001360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x001390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x001398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_2) == 0x0013A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0013A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue) == 0x0013B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x0013BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_2) == 0x0013C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_3) == 0x0013E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_10) == 0x001410, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x001418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_5) == 0x001420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_6) == 0x001421, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x001424, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_IsClosed_Variable) == 0x0014AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll) == 0x0014B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch) == 0x0014B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw) == 0x0014B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue) == 0x0014BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0014C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_10) == 0x0014D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0014E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__1_Object) == 0x0014F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__1_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_2) == 0x001500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRelativeTransform_ReturnValue) == 0x001510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x001540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x001548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001554, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x001558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_2) == 0x0015E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location) == 0x0015E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation) == 0x0015F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale) == 0x001600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RLerp_ReturnValue) == 0x00160C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VLerp_ReturnValue) == 0x001618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_4) == 0x001630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x001660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x001664, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_11) == 0x0016EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_3) == 0x001700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x001708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x001710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x001718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_3) == 0x001724, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_5) == 0x001730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x001760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_passOut) == 0x0017E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_passOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_11) == 0x0017EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetComponentVelocity_ReturnValue) == 0x0017F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue) == 0x001800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x001804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x001808, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00180C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_5) == 0x001810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_ParticleSysParam) == 0x001820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_12) == 0x0018A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_HitComponent) == 0x0018B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherActor) == 0x0018B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherComp) == 0x0018C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NormalImpulse) == 0x0018C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_Hit) == 0x0018D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_3) == 0x00195C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x00195D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_3) == 0x001960, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_3) == 0x001964, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_3) == 0x001968, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_3) == 0x001974, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_3) == 0x001980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_3) == 0x00198C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_3) == 0x001998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_3) == 0x0019A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_3) == 0x0019A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_3) == 0x0019B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_3) == 0x0019B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_3) == 0x0019BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_3) == 0x0019C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_3) == 0x0019C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_3) == 0x0019D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_1) == 0x0019DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0019E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0019E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0019E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0019EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player) == 0x0019F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0019F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0019FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAnimInstance_ReturnValue) == 0x001A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint) == 0x001A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_14) == 0x001A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue) == 0x001A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x001A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X) == 0x001A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y) == 0x001A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z) == 0x001A64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x001A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_3) == 0x001A6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x001A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_4) == 0x001A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x001A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_12) == 0x001A8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x001A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x001AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x001AA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x001AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue) == 0x001ABC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x001B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x001BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x001BE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x001BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_2) == 0x001BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x001C00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_death) == 0x001C01, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_13) == 0x001C04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_24) == 0x001C14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_25) == 0x001C15, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue) == 0x001C18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_14) == 0x001C1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_7) == 0x001C2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_4) == 0x001C30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_1) == 0x001C38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_1) == 0x001C3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_1) == 0x001C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_26) == 0x001C44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_13) == 0x001C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_15) == 0x001C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_13) == 0x001C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_27) == 0x001C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_2) == 0x001C79, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_28) == 0x001C7A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_29) == 0x001C7B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_1) == 0x001C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_2) == 0x001C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_30) == 0x001C84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_31) == 0x001C85, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_3) == 0x001C86, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x001C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x001C94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue) == 0x001CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue) == 0x001CAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x001CB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue) == 0x001CBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x001CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue) == 0x001CC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue_1) == 0x001CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue) == 0x001CCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_1) == 0x001CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x001CD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue_1) == 0x001CD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x001CDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x001CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x001CE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_1) == 0x001CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_3) == 0x001CF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_14) == 0x001CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue_1) == 0x001D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue) == 0x001D14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x001D18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x001D1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x001D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x001D24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x001D28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x001D2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x001D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x001D34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x001D38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x001D3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue) == 0x001D40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_2) == 0x001D44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_3) == 0x001D50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x001D5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x001DE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_1) == 0x001E6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x001E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_2) == 0x001E74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_4) == 0x001E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x001E84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x001E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x001F10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult_1) == 0x001F1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_16) == 0x001FA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_6) == 0x001FB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_settings) == 0x001FC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_14) == 0x00208C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_4) == 0x002094, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x002098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_32) == 0x00209C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_33) == 0x00209D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_4) == 0x00209E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_34) == 0x00209F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_35) == 0x0020A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_17) == 0x0020A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_3) == 0x0020B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_1) == 0x0020B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0020BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_36) == 0x0020C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_37) == 0x0020C1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_7) == 0x0020C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_5) == 0x0020D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_4) == 0x0020D1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0020D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0020D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_4) == 0x0020DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_2) == 0x0020E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0020E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_6) == 0x0020F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue) == 0x002120, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x002124, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x0021AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_8) == 0x0021B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue) == 0x0021B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_38) == 0x0021C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_5) == 0x0021C1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_6) == 0x0021C2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_7) == 0x0021C3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_5) == 0x0021C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_9) == 0x0021D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_2) == 0x0021D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_3) == 0x0021DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue_1) == 0x0021E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_8) == 0x0021E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj) == 0x0021F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_1) == 0x002208, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_9) == 0x002214, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x002220, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00222C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x002238, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00223C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0022C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0022C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_3) == 0x0022CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0022D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_4) == 0x0022D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_5) == 0x0022D5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_10) == 0x0022D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default) == 0x0022E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0022E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsWalking_ReturnValue) == 0x0022E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_5) == 0x0022EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main) == 0x0022F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0022F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue) == 0x002304, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x002308, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x002314, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_6) == 0x002318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x002330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_3) == 0x002334, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue) == 0x002338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00233C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x002340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue) == 0x002344, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_15) == 0x002348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x002360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_1) == 0x002364, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x002368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x00236C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_5) == 0x002370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_2) == 0x00237C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x002380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x002384, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_7) == 0x002410, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x002428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_49) == 0x002430, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_3) == 0x002448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x00244C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_3) == 0x002450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x00245C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x002468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x002474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue) == 0x0024FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x002508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue_1) == 0x002510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x00251C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x002528, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_50) == 0x002538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x002550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_4) == 0x002558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x002559, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_4) == 0x00255C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_4) == 0x002560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_4) == 0x002564, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_4) == 0x002570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_4) == 0x00257C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_4) == 0x002588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_4) == 0x002598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_4) == 0x0025A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_4) == 0x0025A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_4) == 0x0025B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_4) == 0x0025B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_4) == 0x0025BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_4) == 0x0025C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_4) == 0x0025C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_4) == 0x0025D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x0025DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0025E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_1) == 0x0025EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_4) == 0x0025F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0025F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_DeltaSeconds) == 0x0025F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0025FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_16) == 0x002600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_25) == 0x002618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x00261C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_2) == 0x002620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_3) == 0x002628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCurrentLevelName_ReturnValue) == 0x002630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x002640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_39) == 0x002641, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_4) == 0x002648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue) == 0x002650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x00265C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue) == 0x002660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_5) == 0x002670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x002678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue_1) == 0x002684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue) == 0x002690, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_2) == 0x00269C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_2) == 0x0026A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_2) == 0x0026A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_6) == 0x0026A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0026B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x0026C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_1) == 0x0026C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_10) == 0x0026D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0026DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_6) == 0x0026E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player_1) == 0x0026E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetViewTarget_ReturnValue) == 0x0026F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_11) == 0x0026F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x002700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x002704, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_4) == 0x002710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_4) == 0x002718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x002724, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_7) == 0x002730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_8) == 0x002760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_12) == 0x002778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_17) == 0x002780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBackrooms_return) == 0x002798, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBackrooms_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_13) == 0x0027A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_1) == 0x0027A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_14) == 0x0027B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_4) == 0x0027C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_8) == 0x0027C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_18) == 0x0027C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0027E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_5) == 0x0027E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_8) == 0x0027E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x0027EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_6) == 0x0027F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_26) == 0x0027F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_5) == 0x0027F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_9) == 0x002800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_1) == 0x002804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x002810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_27) == 0x002814, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_7) == 0x002818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x00281C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_9) == 0x002820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_28) == 0x002838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_6) == 0x002840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_29) == 0x002848, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_3) == 0x00284C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x002858, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_30) == 0x002864, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_31) == 0x002868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x00286C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_10) == 0x002878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_5) == 0x002884, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_6) == 0x002890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_3) == 0x00289C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_4) == 0x0028A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_19) == 0x0028B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_15) == 0x0028C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0028D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_8) == 0x0028DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_9) == 0x0028E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_16) == 0x0028F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x002900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_8) == 0x002904, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_20) == 0x002908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_8) == 0x002920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_9) == 0x002924, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_10) == 0x002928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_10) == 0x002940, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_21) == 0x002948, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_5) == 0x002960, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_40) == 0x002961, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_1) == 0x002964, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_5) == 0x00296C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_4) == 0x002974, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_5) == 0x002978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_32) == 0x00297C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_33) == 0x002980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue) == 0x002984, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_1) == 0x002988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_6) == 0x00298C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_7) == 0x002990, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_2) == 0x002994, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_3) == 0x002998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Array_Index_Variable) == 0x00299C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_15) == 0x0029A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_1) == 0x0029A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_22) == 0x0029B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_1) == 0x0029C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_1) == 0x0029CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_1) == 0x0029D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_34) == 0x0029D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0029D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_3) == 0x0029E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_15) == 0x0029F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_1) == 0x0029F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_4) == 0x0029F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_16) == 0x002A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x002A09, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_1) == 0x002A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_41) == 0x002A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_11) == 0x002A1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_2) == 0x002A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_2) == 0x002A2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue) == 0x002A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x002A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x002A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x002A44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_35) == 0x002A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_2) == 0x002A4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_3) == 0x002A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_4) == 0x002A54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_5) == 0x002A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_6) == 0x002A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_36) == 0x002A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x002A64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsCrouching_ReturnValue) == 0x002A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue) == 0x002A6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_9) == 0x002A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue) == 0x002A74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_10) == 0x002A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_5) == 0x002A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x002A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x002A84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue_1) == 0x002A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_6) == 0x002A8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_7) == 0x002A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_37) == 0x002A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_38) == 0x002A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_39) == 0x002A9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_40) == 0x002AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_41) == 0x002AA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_42) == 0x002AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_4) == 0x002AAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x002AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_43) == 0x002AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_12) == 0x002AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_44) == 0x002ABC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_45) == 0x002AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_46) == 0x002AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_47) == 0x002AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x002ACC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_7) == 0x002AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x002ADC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_18) == 0x002AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_2) == 0x002AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x002AFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_6) == 0x002B84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_17) == 0x002B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_11) == 0x002B98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x002B9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x002BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x002BA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_8) == 0x002BA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_48) == 0x002BAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_FloatToString_ReturnValue) == 0x002BB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_13) == 0x002BC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_12) == 0x002BC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_49) == 0x002BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_6) == 0x002BCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x002BD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_6) == 0x002BD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_14) == 0x002BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x002BDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_18) == 0x002BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x002BE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_15) == 0x002BEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_13) == 0x002BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_19) == 0x002BF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x002C00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_20) == 0x002C08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_3) == 0x002C10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming) == 0x002C11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_1) == 0x002C12, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_1) == 0x002C13, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_6) == 0x002C14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_14) == 0x002C18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x002C1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_17) == 0x002C20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_18) == 0x002C24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_7) == 0x002C28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue) == 0x002C2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_9) == 0x002C30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_10) == 0x002C34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_50) == 0x002C38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_51) == 0x002C3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_21) == 0x002C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_16) == 0x002C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_19) == 0x002C4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_22) == 0x002C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_16) == 0x002C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_3) == 0x002C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x002C64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_42) == 0x002C65, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_19) == 0x002C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_1) == 0x002C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x002C84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_11) == 0x002C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_11) == 0x002C9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_10) == 0x002CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_17) == 0x002CB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_7) == 0x002CBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_7) == 0x002CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_23) == 0x002CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_2) == 0x002CD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj) == 0x002CD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_phys_obj) == 0x002CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_phys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_23) == 0x002CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_20) == 0x002D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_3) == 0x002D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_17) == 0x002D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_43) == 0x002D31, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x002D32, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_1) == 0x002D38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_24) == 0x002D40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_25) == 0x002D48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_6) == 0x002D50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_26) == 0x002D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_27) == 0x002D68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_28) == 0x002D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_29) == 0x002D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_18) == 0x002D80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_44) == 0x002D88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_30) == 0x002D90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_9) == 0x002D98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_11) == 0x002DA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_1) == 0x002DB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_1) == 0x002DC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_5) == 0x002DD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_5) == 0x002DD1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_5) == 0x002DD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_5) == 0x002DD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_5) == 0x002DDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_5) == 0x002DE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_5) == 0x002DF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_5) == 0x002E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_5) == 0x002E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_5) == 0x002E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_5) == 0x002E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_5) == 0x002E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_5) == 0x002E30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_5) == 0x002E34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_5) == 0x002E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_5) == 0x002E3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_5) == 0x002E48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_4) == 0x002E58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_18) == 0x002E68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_21) == 0x002E6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_5) == 0x002E80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_19) == 0x002E90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_2) == 0x002E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_6) == 0x002EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_20) == 0x002EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return) == 0x002EB1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text) == 0x002EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace) == 0x002EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_45) == 0x002ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_46) == 0x002ED1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x002ED8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue_1) == 0x002EF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x002F08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_6) == 0x002F09, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue) == 0x002F0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_24) == 0x002F18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x002F30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_10) == 0x002F31, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_15) == 0x002F34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_16) == 0x002F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x002F3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_1) == 0x002F40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_7) == 0x002F4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x002F50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_2) == 0x002F54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_52) == 0x002F58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_7) == 0x002F5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_17) == 0x002F60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_53) == 0x002F64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_19) == 0x002F68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x002F70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_4) == 0x002F74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_22) == 0x002F78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x002F88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x002F94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x002FA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x002FAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x002FB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_8) == 0x002FBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x002FC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x002FCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Normal_ReturnValue) == 0x002FD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_20) == 0x002FDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_8) == 0x002FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_17) == 0x002FE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_7) == 0x002FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_25) == 0x002FF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_8) == 0x003008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_18) == 0x003010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x003014, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_54) == 0x003018, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x00301C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x003020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_2) == 0x00302C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_2) == 0x003030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_2) == 0x003034, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_LastIndex_ReturnValue) == 0x003038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_2) == 0x003040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_3) == 0x003048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_3) == 0x00304C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_3) == 0x003050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x003054, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_21) == 0x003058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_9) == 0x00305C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_12) == 0x003060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_19) == 0x003078, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_18) == 0x00307C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_26) == 0x003080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_55) == 0x003098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_11) == 0x00309C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_19) == 0x0030A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_12) == 0x0030AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_20) == 0x0030B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_13) == 0x0030BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_56) == 0x0030C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x0030CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_57) == 0x0030D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_12) == 0x0030DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_4) == 0x0030E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_27) == 0x0030F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue) == 0x003110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_14) == 0x00311C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_15) == 0x003128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_2) == 0x003134, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_20) == 0x003140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_28) == 0x003148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_47) == 0x003160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_1) == 0x003170, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_1) == 0x0031A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_1) == 0x0031AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_1) == 0x0031B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_8) == 0x0031D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue) == 0x003200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_29) == 0x003210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue_1) == 0x003228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_6) == 0x003234, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_6) == 0x003235, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_6) == 0x003238, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_6) == 0x00323C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_6) == 0x003240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_6) == 0x00324C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_6) == 0x003258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_6) == 0x003264, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_6) == 0x003270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_6) == 0x003278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_6) == 0x003280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_6) == 0x003288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_6) == 0x003290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_6) == 0x003294, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_6) == 0x003298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_6) == 0x00329C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_6) == 0x0032A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_23) == 0x0032B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_2) == 0x0032D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_2) == 0x003300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_2) == 0x00330C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_2) == 0x003318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_9) == 0x003330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x003360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_InverseTransformLocation_ReturnValue) == 0x003364, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_21) == 0x003370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_24) == 0x003378, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_22) == 0x003388, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_23) == 0x003390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_25) == 0x003398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_24) == 0x0033A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_26) == 0x0033B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_30) == 0x0033C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_27) == 0x0033D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_31) == 0x0033E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_32) == 0x003400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_31) == 0x003418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_32) == 0x003420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_33) == 0x003428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_34) == 0x003440, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_skipGrabRadial_skip) == 0x003458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_skipGrabRadial_skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_35) == 0x003460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__2_Object) == 0x003478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__2_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Loop_Counter_Variable) == 0x00347C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_48) == 0x003480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x003481, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_3) == 0x003484, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_36) == 0x003488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_37) == 0x0034A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanXOR_ReturnValue) == 0x0034B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_7) == 0x0034B9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_7) == 0x0034BA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_7) == 0x0034BB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_7) == 0x0034BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_7) == 0x0034C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_7) == 0x0034C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_7) == 0x0034D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_7) == 0x0034DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_7) == 0x0034E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_7) == 0x0034F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_7) == 0x003500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_7) == 0x003508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_7) == 0x003510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_7) == 0x003518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_7) == 0x00351C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_7) == 0x003520, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_7) == 0x003524, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_7) == 0x003530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_49) == 0x00353C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_useAction_succ) == 0x00353D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_38) == 0x003540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_39) == 0x003558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_50) == 0x003570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_51) == 0x003578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_51) == 0x003590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_11) == 0x003594, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_12) == 0x003598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_52) == 0x00359C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_53) == 0x00359D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_40) == 0x0035A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_33) == 0x0035B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_41) == 0x0035C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_22) == 0x0035D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_4) == 0x0035DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_34) == 0x0035E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_2) == 0x0035E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_35) == 0x0035F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_42) == 0x0035F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_36) == 0x003610, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_11) == 0x003618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDynPhys_obj) == 0x003620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_12) == 0x003630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_43) == 0x003638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player_2) == 0x003650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_8) == 0x003658, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_2) == 0x003660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_2) == 0x00366C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_14) == 0x003678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x003684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x00370C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_13) == 0x00370D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_8) == 0x00370E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_8) == 0x00370F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_8) == 0x003710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_8) == 0x003714, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_8) == 0x003718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_8) == 0x003724, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_8) == 0x003730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_8) == 0x00373C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_8) == 0x003748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_8) == 0x003750, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_8) == 0x003758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_8) == 0x003760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_8) == 0x003768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_8) == 0x00376C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_8) == 0x003770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_8) == 0x003774, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_8) == 0x003780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_14) == 0x00378C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontWakeup) == 0x00378D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_alt) == 0x00378E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontCollect) == 0x00378F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontCollect' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_2) == 0x003790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_2) == 0x003798, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_5) == 0x0037A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_3) == 0x0037B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_3) == 0x0037E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_3) == 0x0037EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_3) == 0x0037F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ComposeRotators_ReturnValue) == 0x003804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_1) == 0x003810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty_1) == 0x00381C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output_1) == 0x003820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_2) == 0x003910, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_10) == 0x003920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x003950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_44) == 0x003958, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x003970, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_2) == 0x003978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_21) == 0x003988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return_1) == 0x003989, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_1) == 0x00398A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_45) == 0x003990, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0039A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0039B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_9) == 0x003A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_10) == 0x003A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetVectorLength_ReturnValue) == 0x003A44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x003A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_37) == 0x003AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_46) == 0x003AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return_1) == 0x003AF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text_1) == 0x003B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace_1) == 0x003B10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToString_ReturnValue) == 0x003B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_54) == 0x003B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_12) == 0x003B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_10) == 0x003B38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x003B3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_8) == 0x003BC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_15) == 0x003BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x003BD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_6) == 0x003BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_3) == 0x003BE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCenterOfMass_ReturnValue) == 0x003BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_3) == 0x003BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_4) == 0x003C08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_13) == 0x003C14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_14) == 0x003C20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_15) == 0x003C2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_3) == 0x003C38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_4) == 0x003C44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_5) == 0x003C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_6) == 0x003C5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_4) == 0x003C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_2) == 0x003C74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x003C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_4dir_return) == 0x003D08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_4dir_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x003D14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_5) == 0x003D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x003D2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_hitResult) == 0x003DB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_hitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_9) == 0x003E3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_9) == 0x003E3D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_9) == 0x003E40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_9) == 0x003E44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_9) == 0x003E48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_9) == 0x003E54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_9) == 0x003E60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_9) == 0x003E6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_9) == 0x003E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_9) == 0x003E80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_9) == 0x003E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_9) == 0x003E90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_9) == 0x003E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_9) == 0x003E9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_9) == 0x003EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_9) == 0x003EA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_9) == 0x003EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x003EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x003EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component_1) == 0x003ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_22) == 0x003ED8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody_1) == 0x003EDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue_1) == 0x003EE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_3) == 0x003EEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x003F74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_4) == 0x003F80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_3) == 0x004008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x00400C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_11) == 0x004010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_28) == 0x004040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_13) == 0x004050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_4) == 0x004054, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_4) == 0x004058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_4) == 0x00405C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_2) == 0x004060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_14) == 0x004064, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x004068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array) == 0x004070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_3) == 0x004080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_5) == 0x004084, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_5) == 0x004088, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_5) == 0x00408C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_2) == 0x004090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_3) == 0x004098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_23) == 0x00409C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_4) == 0x0040A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_24) == 0x0040A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x0040A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_6) == 0x0040AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_6) == 0x0040B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_6) == 0x0040B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit) == 0x0040B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_4) == 0x004140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_10) == 0x004144, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_10) == 0x004145, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_10) == 0x004148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_10) == 0x00414C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_10) == 0x004150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_10) == 0x00415C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_10) == 0x004168, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_10) == 0x004174, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_10) == 0x004180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_10) == 0x004188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_10) == 0x004190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_10) == 0x004198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_10) == 0x0041A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_10) == 0x0041A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_10) == 0x0041A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_10) == 0x0041AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_10) == 0x0041B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x0041C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue) == 0x0041C5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_9) == 0x0041C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_6) == 0x0041D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_10) == 0x0041D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_25) == 0x0041DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x0041E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x0041E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isUnderwater_ReturnValue) == 0x0041E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0041E9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_21) == 0x0041EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_58) == 0x0041F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x0041F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_5) == 0x0041F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x0041FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x004200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_7) == 0x004208, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_4) == 0x004210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_5) == 0x00421C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue) == 0x004228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x004234, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x004240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_fuel) == 0x00424C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_25) == 0x004250, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_1) == 0x004258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_22) == 0x00425C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_3) == 0x004260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_4) == 0x00426C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__1) == 0x00426D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_5) == 0x00426E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_11) == 0x00426F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_2) == 0x004270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_29) == 0x004274, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_55) == 0x004284, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_4) == 0x004285, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_38) == 0x004288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_26) == 0x004290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_56) == 0x004298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x00429C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_8) == 0x004328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_6) == 0x004330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__3_Object) == 0x00433C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__3_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x004348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x0043D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_30) == 0x0043D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x0043E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection) == 0x0043E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x0043F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_13) == 0x0043F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_57) == 0x004404, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_2) == 0x004408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_3) == 0x004418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_16) == 0x004428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__4_Object) == 0x004434, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__4_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_7) == 0x004440, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_7) == 0x004444, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_7) == 0x004448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_8) == 0x00444C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_8) == 0x004450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_8) == 0x004454, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x004458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_5) == 0x00445C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_15) == 0x004460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x004461, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue) == 0x004464, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_6) == 0x004468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_16) == 0x004474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_17) == 0x004480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj_1) == 0x004490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_16) == 0x0044A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_17) == 0x0044AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_2) == 0x0044B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0044B9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_18) == 0x0044BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_7) == 0x0044C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_2) == 0x0044CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_2) == 0x004554, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_6) == 0x004558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_11) == 0x004560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_11) == 0x004561, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_11) == 0x004564, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_11) == 0x004568, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_11) == 0x00456C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_11) == 0x004578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_11) == 0x004584, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_11) == 0x004590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_11) == 0x0045A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_11) == 0x0045A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_11) == 0x0045B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_11) == 0x0045B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_11) == 0x0045C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_11) == 0x0045C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_11) == 0x0045C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_11) == 0x0045CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_11) == 0x0045D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options) == 0x0045E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options_enum) == 0x0045F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_optionsNamesOverlay) == 0x004608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_optionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x004618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_16) == 0x004619, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x00461C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_2) == 0x004620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_19) == 0x004624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Max_ReturnValue) == 0x004630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_3) == 0x004634, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_3) == 0x0046BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x0046C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x004748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__5_Object) == 0x00474C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__5_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_9) == 0x004758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_9) == 0x00475C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_9) == 0x004760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_15) == 0x004764, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_16) == 0x004768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_17) == 0x00476C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_5) == 0x004770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x00477C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_12) == 0x004780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_9) == 0x0047B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x0047B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_3) == 0x00483C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_4) == 0x00483D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_5) == 0x004840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_27) == 0x0048C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_3) == 0x0048D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_5) == 0x0048D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_58) == 0x0048DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_59) == 0x0048DD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust_1) == 0x0048E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x0048E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_7) == 0x0048E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_6) == 0x0048F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_7) == 0x004980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust) == 0x004A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust) == 0x004A0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_31) == 0x004A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_4) == 0x004A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_4) == 0x004A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_4) == 0x004A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_4) == 0x004A68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue_1) == 0x004A74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_3) == 0x004A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_3) == 0x004A84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_3) == 0x004A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x004A8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x004B14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_8) == 0x004B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x004B24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_9) == 0x004B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_8) == 0x004B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_9) == 0x004B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_OutHit) == 0x004B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_ReturnValue) == 0x004BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x004BDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_12) == 0x004C64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_12) == 0x004C65, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_12) == 0x004C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_12) == 0x004C6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_12) == 0x004C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_12) == 0x004C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_12) == 0x004C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_12) == 0x004C94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_12) == 0x004CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_12) == 0x004CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_12) == 0x004CB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_12) == 0x004CB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_12) == 0x004CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_12) == 0x004CC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_12) == 0x004CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_12) == 0x004CCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_12) == 0x004CD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_60) == 0x004CE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue_1) == 0x004CE5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_4) == 0x004CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_4) == 0x004D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x004D71, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_13) == 0x004D72, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_13) == 0x004D73, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_13) == 0x004D74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_13) == 0x004D78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_13) == 0x004D7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_13) == 0x004D88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_13) == 0x004D94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_13) == 0x004DA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_13) == 0x004DB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_13) == 0x004DB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_13) == 0x004DC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_13) == 0x004DC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_13) == 0x004DD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_13) == 0x004DD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_13) == 0x004DD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_13) == 0x004DDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_13) == 0x004DE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit) == 0x004DF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x004E7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor) == 0x004E80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_28) == 0x004E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_61) == 0x004E90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_62) == 0x004E91, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_32) == 0x004E94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_5) == 0x004EA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_23) == 0x004EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_3) == 0x004EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_6) == 0x004EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_24) == 0x004ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBeUsedHold_return) == 0x004ED1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBeUsedHold_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_63) == 0x004ED2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_64) == 0x004ED3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_29) == 0x004ED4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_33) == 0x004EDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_65) == 0x004EEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_66) == 0x004EED, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue) == 0x004EF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_7) == 0x004F00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_25) == 0x004F10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_17) == 0x004F14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_1) == 0x004F20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomRotator_ReturnValue) == 0x004F2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_18) == 0x004F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable) == 0x004F44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_14) == 0x004F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_13) == 0x004F60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x004F90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x004F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_3) == 0x004FA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_19) == 0x004FAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_20) == 0x004FB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_52) == 0x004FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_2) == 0x004FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_3) == 0x004FEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_20) == 0x004FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_21) == 0x005004, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomRotator_ReturnValue_1) == 0x005010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_1) == 0x00501C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_15) == 0x005020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_14) == 0x005030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x005060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x005068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_4) == 0x005070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_22) == 0x00507C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_21) == 0x005088, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_53) == 0x005098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_2) == 0x0050B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_5) == 0x0050B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_2) == 0x0050C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_23) == 0x0050CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue) == 0x0050D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_6) == 0x0050E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_16) == 0x0050F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x0050FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_3) == 0x005108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_15) == 0x005110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x005140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x005148, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_7) == 0x005150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_24) == 0x00515C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_4) == 0x005168, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_3) == 0x00516C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue_1) == 0x005178, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_8) == 0x005184, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_17) == 0x005190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_2) == 0x00519C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_16) == 0x0051B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x0051E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_9) == 0x0051E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x0051F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_25) == 0x005200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00520C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_4) == 0x005210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue_2) == 0x00521C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_10) == 0x005228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_18) == 0x005234, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_3) == 0x005240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_4) == 0x00524C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_17) == 0x005260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_26) == 0x005290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x0052A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_8) == 0x0052A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x0052B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_7) == 0x0052B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_59) == 0x0052BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_60) == 0x0052C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_6) == 0x0052C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_11) == 0x0052C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_2) == 0x0052D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_3) == 0x0052D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_5) == 0x0052E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_5) == 0x0052F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_27) == 0x0052F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_12) == 0x005300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_19) == 0x00530C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_28) == 0x005318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_22) == 0x005324, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_23) == 0x005330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_18) == 0x005340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x005370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x005378, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomRotator_ReturnValue_2) == 0x005380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_6) == 0x00538C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_29) == 0x005398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_6) == 0x0053A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_54) == 0x0053A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_13) == 0x0053C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_20) == 0x0053CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_30) == 0x0053D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_19) == 0x0053F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_24) == 0x005420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x005430, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_13) == 0x005438, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x005450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ReleaseKey_ReturnValue) == 0x005458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ReleaseKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_PressKey_ReturnValue) == 0x005459, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_PressKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Key_GetDisplayName_ReturnValue) == 0x005460, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_7) == 0x005478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_TextToString_ReturnValue) == 0x005480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchString_CmpSuccess) == 0x005490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_7) == 0x005494, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_31) == 0x0054A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_14) == 0x0054AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_8) == 0x0054B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_32) == 0x0054C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_33) == 0x0054D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_25) == 0x0054DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_8) == 0x0054E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_1) == 0x0054F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_5) == 0x005508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue_3) == 0x005514, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_15) == 0x005520, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_21) == 0x00552C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_4) == 0x005538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_26) == 0x005544, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomUnitVector_ReturnValue_9) == 0x005550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomUnitVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_20) == 0x005560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_34) == 0x005590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x0055A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x0055A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_9) == 0x0055B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_16) == 0x0055B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_6) == 0x0055C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_35) == 0x0055CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue_4) == 0x0055D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_27) == 0x0055E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_17) == 0x0055F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_22) == 0x0055FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_5) == 0x005608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_9) == 0x005614, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_21) == 0x005620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12) == 0x005650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_8) == 0x005658, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_12) == 0x005660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_61) == 0x005668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_62) == 0x00566C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_7) == 0x005670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_3) == 0x005674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_18) == 0x005678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_7) == 0x005684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_36) == 0x005690, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRightVector_ReturnValue_5) == 0x00569C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRightVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_19) == 0x0056A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_23) == 0x0056B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue_6) == 0x0056C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_2) == 0x0056D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_22) == 0x0056F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13) == 0x005720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_13) == 0x005728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_67) == 0x005730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_20) == 0x005734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_24) == 0x005740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_37) == 0x00574C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_23) == 0x005760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_7) == 0x005790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14) == 0x005798, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_14) == 0x0057A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_3) == 0x0057B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_3) == 0x0058A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_14) == 0x0058A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_3) == 0x0058C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_4) == 0x0058D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_4) == 0x0058E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__2) == 0x0058F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_55) == 0x005900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_10) == 0x005918, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_39) == 0x005920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_10) == 0x005928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_6) == 0x005930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_8) == 0x00593C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_68) == 0x0059C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_69) == 0x0059C5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_70) == 0x0059C6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_9) == 0x0059C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_18) == 0x0059D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsPointInBox_ReturnValue) == 0x0059DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getEvent_isEventActive) == 0x0059DD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getEvent_isEventActive' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_12) == 0x0059DE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_5) == 0x0059DF, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_5) == 0x0059E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_17) == 0x0059E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_18) == 0x0059E5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_40) == 0x0059E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetGamePaused_ReturnValue) == 0x0059F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_11) == 0x0059F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_71) == 0x005A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_41) == 0x005A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_72) == 0x005A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_6) == 0x005A11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isExhausted_exhausted) == 0x005A12, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isExhausted_exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_19) == 0x005A13, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_10) == 0x005A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_7) == 0x005A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_26) == 0x005A38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x005A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x005AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_3) == 0x005AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_10) == 0x005AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_73) == 0x005AD1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_14) == 0x005AD2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_14) == 0x005AD3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_14) == 0x005AD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_14) == 0x005AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_14) == 0x005ADC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_14) == 0x005AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_14) == 0x005AF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_14) == 0x005B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_14) == 0x005B10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_14) == 0x005B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_14) == 0x005B20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_14) == 0x005B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_14) == 0x005B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_14) == 0x005B34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_14) == 0x005B38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_14) == 0x005B3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_14) == 0x005B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x005B54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_11) == 0x005B55, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_12) == 0x005B56, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_7) == 0x005B57, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_3) == 0x005B58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_27) == 0x005B68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_2) == 0x005B69, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave_1) == 0x005B6A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_74) == 0x005B6B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__3) == 0x005B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__4) == 0x005B6D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_12) == 0x005B70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue_1) == 0x005B78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_42) == 0x005B80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_3) == 0x005B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_2) == 0x005B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x005B98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_1) == 0x005BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue) == 0x005BA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_1) == 0x005BAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water) == 0x005BB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x005BB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x005BBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue_1) == 0x005C44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_2) == 0x005C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWaterOrigin");
static_assert(sizeof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_EnterWaterOrigin");
static_assert(offsetof(MainPlayer_C_EnterWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWaterOrigin");
static_assert(sizeof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_LeaveWaterOrigin");
static_assert(offsetof(MainPlayer_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWater) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWater");
static_assert(sizeof(MainPlayer_C_EnterWater) == 0x000008, "Wrong size on MainPlayer_C_EnterWater");
static_assert(offsetof(MainPlayer_C_EnterWater, Water) == 0x000000, "Member 'MainPlayer_C_EnterWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWater");
static_assert(sizeof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong size on MainPlayer_C_LeaveWater");
static_assert(offsetof(MainPlayer_C_LeaveWater, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sitDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SitDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_SitDestroyed");
static_assert(sizeof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong size on MainPlayer_C_SitDestroyed");
static_assert(offsetof(MainPlayer_C_SitDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_SitDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnEndCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnEndCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnEndCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnStartCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnStartCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnStartCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.firstPersonBodyAnimation
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FirstPersonBodyAnimation final
{
public:
	class FName                                   StartingSection;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000004, "Wrong alignment on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(sizeof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000008, "Wrong size on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(offsetof(MainPlayer_C_FirstPersonBodyAnimation, StartingSection) == 0x000000, "Member 'MainPlayer_C_FirstPersonBodyAnimation::StartingSection' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Ignite) == 0x000004, "Wrong alignment on MainPlayer_C_Ignite");
static_assert(sizeof(MainPlayer_C_Ignite) == 0x000004, "Wrong size on MainPlayer_C_Ignite");
static_assert(offsetof(MainPlayer_C_Ignite, Fuel) == 0x000000, "Member 'MainPlayer_C_Ignite::Fuel' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_OnLanded) == 0x000004, "Wrong alignment on MainPlayer_C_OnLanded");
static_assert(sizeof(MainPlayer_C_OnLanded) == 0x000088, "Wrong size on MainPlayer_C_OnLanded");
static_assert(offsetof(MainPlayer_C_OnLanded, Hit) == 0x000000, "Member 'MainPlayer_C_OnLanded::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.pickupObject
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_PickupObject final
{
public:
	struct FHitResult                             Param_HitResult;                                   // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PickupObject) == 0x000004, "Wrong alignment on MainPlayer_C_PickupObject");
static_assert(sizeof(MainPlayer_C_PickupObject) == 0x000088, "Wrong size on MainPlayer_C_PickupObject");
static_assert(offsetof(MainPlayer_C_PickupObject, Param_HitResult) == 0x000000, "Member 'MainPlayer_C_PickupObject::Param_HitResult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.simulateDrop
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SimulateDrop final
{
public:
	bool                                          DontWakeup;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Alt;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Dontcollect;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SimulateDrop) == 0x000001, "Wrong alignment on MainPlayer_C_SimulateDrop");
static_assert(sizeof(MainPlayer_C_SimulateDrop) == 0x000003, "Wrong size on MainPlayer_C_SimulateDrop");
static_assert(offsetof(MainPlayer_C_SimulateDrop, DontWakeup) == 0x000000, "Member 'MainPlayer_C_SimulateDrop::DontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, Param_Alt) == 0x000001, "Member 'MainPlayer_C_SimulateDrop::Param_Alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, Param_Dontcollect) == 0x000002, "Member 'MainPlayer_C_SimulateDrop::Param_Dontcollect' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on MainPlayer_C_ReceiveTick");
static_assert(sizeof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong size on MainPlayer_C_ReceiveTick");
static_assert(offsetof(MainPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MainPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.settingsApplied
// 0x00CC (0x00CC - 0x0000)
struct MainPlayer_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00CC)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SettingsApplied) == 0x000004, "Wrong alignment on MainPlayer_C_SettingsApplied");
static_assert(sizeof(MainPlayer_C_SettingsApplied) == 0x0000CC, "Wrong size on MainPlayer_C_SettingsApplied");
static_assert(offsetof(MainPlayer_C_SettingsApplied, Settings) == 0x000000, "Member 'MainPlayer_C_SettingsApplied::Settings' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseX_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseY_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fallen
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Fallen final
{
public:
	bool                                          Death;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Fallen) == 0x000001, "Wrong alignment on MainPlayer_C_Fallen");
static_assert(sizeof(MainPlayer_C_Fallen) == 0x000001, "Wrong size on MainPlayer_C_Fallen");
static_assert(offsetof(MainPlayer_C_Fallen, Death) == 0x000000, "Member 'MainPlayer_C_Fallen::Death' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hitt
// 0x00B0 (0x00B0 - 0x0000)
struct MainPlayer_C_Hitt final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Hitt) == 0x000008, "Wrong alignment on MainPlayer_C_Hitt");
static_assert(sizeof(MainPlayer_C_Hitt) == 0x0000B0, "Wrong size on MainPlayer_C_Hitt");
static_assert(offsetof(MainPlayer_C_Hitt, HitComponent) == 0x000000, "Member 'MainPlayer_C_Hitt::HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherActor) == 0x000008, "Member 'MainPlayer_C_Hitt::OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherComp) == 0x000010, "Member 'MainPlayer_C_Hitt::OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, NormalImpulse) == 0x000018, "Member 'MainPlayer_C_Hitt::NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, Hit) == 0x000024, "Member 'MainPlayer_C_Hitt::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.wakeup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Wakeup final
{
public:
	bool                                          PassOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Wakeup) == 0x000001, "Wrong alignment on MainPlayer_C_Wakeup");
static_assert(sizeof(MainPlayer_C_Wakeup) == 0x000001, "Wrong size on MainPlayer_C_Wakeup");
static_assert(offsetof(MainPlayer_C_Wakeup, PassOut) == 0x000000, "Member 'MainPlayer_C_Wakeup::PassOut' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnim
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnim final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Reload;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnim) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnim");
static_assert(sizeof(MainPlayer_C_PlayFPAnim) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnim");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Param_Name) == 0x000000, "Member 'MainPlayer_C_PlayFPAnim::Param_Name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, MontageToPlay) == 0x000008, "Member 'MainPlayer_C_PlayFPAnim::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Param_Reload) == 0x000010, "Member 'MainPlayer_C_PlayFPAnim::Param_Reload' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnimScripted
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnimScripted final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Call;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnimScripted) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnimScripted");
static_assert(sizeof(MainPlayer_C_PlayFPAnimScripted) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnimScripted");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_PlayFPAnimScripted::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, StartingSection) == 0x000008, "Member 'MainPlayer_C_PlayFPAnimScripted::StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, Call) == 0x000010, "Member 'MainPlayer_C_PlayFPAnimScripted::Call' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ateShit
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AteShit final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AteShit) == 0x000004, "Wrong alignment on MainPlayer_C_AteShit");
static_assert(sizeof(MainPlayer_C_AteShit) == 0x000004, "Wrong size on MainPlayer_C_AteShit");
static_assert(offsetof(MainPlayer_C_AteShit, Damage) == 0x000000, "Member 'MainPlayer_C_AteShit::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AddDamage) == 0x000008, "Wrong alignment on MainPlayer_C_AddDamage");
static_assert(sizeof(MainPlayer_C_AddDamage) == 0x0000A8, "Wrong size on MainPlayer_C_AddDamage");
static_assert(offsetof(MainPlayer_C_AddDamage, Actor) == 0x000000, "Member 'MainPlayer_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Damage) == 0x000008, "Member 'MainPlayer_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Hit) == 0x00000C, "Member 'MainPlayer_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Impact) == 0x000094, "Member 'MainPlayer_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'MainPlayer_C_AddDamage::SkipSetting' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.equipDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EquipDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_EquipDestroyed");
static_assert(sizeof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong size on MainPlayer_C_EquipDestroyed");
static_assert(offsetof(MainPlayer_C_EquipDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_EquipDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.beginArmAnim
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_beginArmAnim final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong alignment on MainPlayer_C_beginArmAnim");
static_assert(sizeof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong size on MainPlayer_C_beginArmAnim");
static_assert(offsetof(MainPlayer_C_beginArmAnim, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_beginArmAnim::MontageToPlay' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ApplyColor) == 0x000004, "Wrong alignment on MainPlayer_C_ApplyColor");
static_assert(sizeof(MainPlayer_C_ApplyColor) == 0x000010, "Wrong size on MainPlayer_C_ApplyColor");
static_assert(offsetof(MainPlayer_C_ApplyColor, Color) == 0x000000, "Member 'MainPlayer_C_ApplyColor::Color' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct MainPlayer_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_AnyKey");
static_assert(sizeof(MainPlayer_C_AnyKey) == 0x000020, "Wrong size on MainPlayer_C_AnyKey");
static_assert(offsetof(MainPlayer_C_AnyKey, Key) == 0x000000, "Member 'MainPlayer_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AnyKey, Pressed) == 0x000018, "Member 'MainPlayer_C_AnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong alignment on MainPlayer_C_StuffUpgraded");
static_assert(sizeof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong size on MainPlayer_C_StuffUpgraded");
static_assert(offsetof(MainPlayer_C_StuffUpgraded, GameMode) == 0x000000, "Member 'MainPlayer_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Hooked) == 0x000008, "Wrong alignment on MainPlayer_C_Hooked");
static_assert(sizeof(MainPlayer_C_Hooked) == 0x000008, "Wrong size on MainPlayer_C_Hooked");
static_assert(offsetof(MainPlayer_C_Hooked, Hook) == 0x000000, "Member 'MainPlayer_C_Hooked::Hook' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PlayerUsedOn) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerUsedOn");
static_assert(sizeof(MainPlayer_C_PlayerUsedOn) == 0x000090, "Wrong size on MainPlayer_C_PlayerUsedOn");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Player) == 0x000000, "Member 'MainPlayer_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Hit) == 0x000008, "Member 'MainPlayer_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.slice
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Slice) == 0x000001, "Wrong alignment on MainPlayer_C_Slice");
static_assert(sizeof(MainPlayer_C_Slice) == 0x000001, "Wrong size on MainPlayer_C_Slice");
static_assert(offsetof(MainPlayer_C_Slice, Clean) == 0x000000, "Member 'MainPlayer_C_Slice::Clean' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReachedByExplosion) == 0x000004, "Wrong alignment on MainPlayer_C_ReachedByExplosion");
static_assert(sizeof(MainPlayer_C_ReachedByExplosion) == 0x000010, "Wrong size on MainPlayer_C_ReachedByExplosion");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Location) == 0x000000, "Member 'MainPlayer_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'MainPlayer_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerLookAway");
static_assert(sizeof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong size on MainPlayer_C_PlayerLookAway");
static_assert(offsetof(MainPlayer_C_PlayerLookAway, Player) == 0x000000, "Member 'MainPlayer_C_PlayerLookAway::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Stepped) == 0x000004, "Wrong alignment on MainPlayer_C_Stepped");
static_assert(sizeof(MainPlayer_C_Stepped) == 0x000004, "Wrong size on MainPlayer_C_Stepped");
static_assert(offsetof(MainPlayer_C_Stepped, Volume) == 0x000000, "Member 'MainPlayer_C_Stepped::Volume' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Param_Name;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionName) == 0x000008, "Wrong alignment on MainPlayer_C_ActionName");
static_assert(sizeof(MainPlayer_C_ActionName) == 0x0000A0, "Wrong size on MainPlayer_C_ActionName");
static_assert(offsetof(MainPlayer_C_ActionName, Player) == 0x000000, "Member 'MainPlayer_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Hit) == 0x000008, "Member 'MainPlayer_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Param_Name) == 0x000090, "Member 'MainPlayer_C_ActionName::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AccumulateTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AccumulateTemperature");
static_assert(sizeof(MainPlayer_C_AccumulateTemperature) == 0x000008, "Wrong size on MainPlayer_C_AccumulateTemperature");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Speed) == 0x000004, "Member 'MainPlayer_C_AccumulateTemperature::Speed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AddTemperature");
static_assert(sizeof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong size on MainPlayer_C_AddTemperature");
static_assert(offsetof(MainPlayer_C_AddTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AddTemperature::Temperature' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct MainPlayer_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandAnyKey");
static_assert(sizeof(MainPlayer_C_PlayerHandAnyKey) == 0x000028, "Wrong size on MainPlayer_C_PlayerHandAnyKey");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Key) == 0x000008, "Member 'MainPlayer_C_PlayerHandAnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'MainPlayer_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouse) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouse");
static_assert(sizeof(MainPlayer_C_PlayerHandMouse) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouse");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouseWheel");
static_assert(sizeof(MainPlayer_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouseWheel");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Exploded) == 0x000004, "Wrong alignment on MainPlayer_C_Exploded");
static_assert(sizeof(MainPlayer_C_Exploded) == 0x000010, "Wrong size on MainPlayer_C_Exploded");
static_assert(offsetof(MainPlayer_C_Exploded, Damage) == 0x000000, "Member 'MainPlayer_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Exploded, Location) == 0x000004, "Member 'MainPlayer_C_Exploded::Location' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Param_Index;                                       // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Action;                                            // 0x0094(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionOptionIndex) == 0x000008, "Wrong alignment on MainPlayer_C_ActionOptionIndex");
static_assert(sizeof(MainPlayer_C_ActionOptionIndex) == 0x000098, "Wrong size on MainPlayer_C_ActionOptionIndex");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Player) == 0x000000, "Member 'MainPlayer_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Hit) == 0x000008, "Member 'MainPlayer_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Param_Index) == 0x000090, "Member 'MainPlayer_C_ActionOptionIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Action) == 0x000094, "Member 'MainPlayer_C_ActionOptionIndex::Action' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FireDamage) == 0x000004, "Wrong alignment on MainPlayer_C_FireDamage");
static_assert(sizeof(MainPlayer_C_FireDamage) == 0x000004, "Wrong size on MainPlayer_C_FireDamage");
static_assert(offsetof(MainPlayer_C_FireDamage, Damage) == 0x000000, "Member 'MainPlayer_C_FireDamage::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_SteppedOn) == 0x000008, "Wrong alignment on MainPlayer_C_SteppedOn");
static_assert(sizeof(MainPlayer_C_SteppedOn) == 0x000090, "Wrong size on MainPlayer_C_SteppedOn");
static_assert(offsetof(MainPlayer_C_SteppedOn, Player) == 0x000000, "Member 'MainPlayer_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SteppedOn, Hit) == 0x000008, "Member 'MainPlayer_C_SteppedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetKey) == 0x000008, "Wrong alignment on MainPlayer_C_SetKey");
static_assert(sizeof(MainPlayer_C_SetKey) == 0x000010, "Wrong size on MainPlayer_C_SetKey");
static_assert(offsetof(MainPlayer_C_SetKey, Key) == 0x000000, "Member 'MainPlayer_C_SetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPropProps) == 0x000001, "Wrong alignment on MainPlayer_C_SetPropProps");
static_assert(sizeof(MainPlayer_C_SetPropProps) == 0x000003, "Wrong size on MainPlayer_C_SetPropProps");
static_assert(offsetof(MainPlayer_C_SetPropProps, Static) == 0x000000, "Member 'MainPlayer_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Frozen) == 0x000001, "Member 'MainPlayer_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Active) == 0x000002, "Member 'MainPlayer_C_SetPropProps::Active' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.virus
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Virus) == 0x000001, "Wrong alignment on MainPlayer_C_Virus");
static_assert(sizeof(MainPlayer_C_Virus) == 0x000001, "Wrong size on MainPlayer_C_Virus");
static_assert(offsetof(MainPlayer_C_Virus, Activate) == 0x000000, "Member 'MainPlayer_C_Virus::Activate' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_368D[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ImpactDamage) == 0x000008, "Wrong alignment on MainPlayer_C_ImpactDamage");
static_assert(sizeof(MainPlayer_C_ImpactDamage) == 0x0000A8, "Wrong size on MainPlayer_C_ImpactDamage");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Damage) == 0x000000, "Member 'MainPlayer_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Hit) == 0x000004, "Member 'MainPlayer_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Actor) == 0x000090, "Member 'MainPlayer_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Impact) == 0x000098, "Member 'MainPlayer_C_ImpactDamage::Impact' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.damageByPlayer
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_DamageByPlayer) == 0x000008, "Wrong alignment on MainPlayer_C_DamageByPlayer");
static_assert(sizeof(MainPlayer_C_DamageByPlayer) == 0x000090, "Wrong size on MainPlayer_C_DamageByPlayer");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Player) == 0x000000, "Member 'MainPlayer_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Hit) == 0x000008, "Member 'MainPlayer_C_DamageByPlayer::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Thrown) == 0x000008, "Wrong alignment on MainPlayer_C_Thrown");
static_assert(sizeof(MainPlayer_C_Thrown) == 0x000008, "Wrong size on MainPlayer_C_Thrown");
static_assert(offsetof(MainPlayer_C_Thrown, Player) == 0x000000, "Member 'MainPlayer_C_Thrown::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SendName) == 0x000004, "Wrong alignment on MainPlayer_C_SendName");
static_assert(sizeof(MainPlayer_C_SendName) == 0x000008, "Wrong size on MainPlayer_C_SendName");
static_assert(offsetof(MainPlayer_C_SendName, Param_Name) == 0x000000, "Member 'MainPlayer_C_SendName::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Kicked final
{
public:
	bool                                          Param_Kick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kicked) == 0x000001, "Wrong alignment on MainPlayer_C_Kicked");
static_assert(sizeof(MainPlayer_C_Kicked) == 0x000001, "Wrong size on MainPlayer_C_Kicked");
static_assert(offsetof(MainPlayer_C_Kicked, Param_Kick) == 0x000000, "Member 'MainPlayer_C_Kicked::Param_Kick' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Player_use) == 0x000008, "Wrong alignment on MainPlayer_C_Player_use");
static_assert(sizeof(MainPlayer_C_Player_use) == 0x000090, "Wrong size on MainPlayer_C_Player_use");
static_assert(offsetof(MainPlayer_C_Player_use, Player) == 0x000000, "Member 'MainPlayer_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Player_use, Hit) == 0x000008, "Member 'MainPlayer_C_Player_use::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_cheatmenu_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6");
static_assert(sizeof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6");
static_assert(offsetof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_inventory_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13");
static_assert(sizeof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13");
static_assert(offsetof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_noclip_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14");
static_assert(sizeof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14");
static_assert(offsetof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23");
static_assert(sizeof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23");
static_assert(offsetof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_30
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_30::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_31
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_31::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_32
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_32::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_33
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_33::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_34
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_34::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_35
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_35::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_36
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_36::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_37
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_37::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_38
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_38::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_39
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_39::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_40
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_40::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_41
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_41::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_42
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_42::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_43
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_43::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_44
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_44::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_45
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_45::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_10_K2Node_InputActionEvent_46
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_46::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollUp_K2Node_InputActionEvent_47
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_47::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollDown_K2Node_InputActionEvent_48
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_48::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_49
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_49::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_50
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_50::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_debugtp_K2Node_InputActionEvent_51
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51");
static_assert(sizeof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51");
static_assert(offsetof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_51::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_ragdoll_K2Node_InputActionEvent_52
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52");
static_assert(sizeof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52");
static_assert(offsetof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_52::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_undo_K2Node_InputActionEvent_53
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53");
static_assert(sizeof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53");
static_assert(offsetof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_53::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_quicksave_K2Node_InputActionEvent_54
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54");
static_assert(sizeof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54");
static_assert(offsetof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_54::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_flashlight_K2Node_InputActionEvent_55
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55");
static_assert(sizeof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55");
static_assert(offsetof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_55::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepOn
// 0x01F0 (0x01F0 - 0x0000)
struct MainPlayer_C_StepOn final
{
public:
	float                                         A1;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_368E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368F[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3690[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3691[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3692[0x1];                                     // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3693[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3694[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_return;                         // 0x01B0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StepOn) == 0x000008, "Wrong alignment on MainPlayer_C_StepOn");
static_assert(sizeof(MainPlayer_C_StepOn) == 0x0001F0, "Wrong size on MainPlayer_C_StepOn");
static_assert(offsetof(MainPlayer_C_StepOn, A1) == 0x000000, "Member 'MainPlayer_C_StepOn::A1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, A) == 0x000008, "Member 'MainPlayer_C_StepOn::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_StepOn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'MainPlayer_C_StepOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_getMainSave_save_main) == 0x000020, "Member 'MainPlayer_C_StepOn::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MainPlayer_C_StepOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_MakeArray_Array) == 0x000030, "Member 'MainPlayer_C_StepOn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_object_Variable) == 0x000048, "Member 'MainPlayer_C_StepOn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'MainPlayer_C_StepOn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_int_Variable) == 0x000064, "Member 'MainPlayer_C_StepOn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'MainPlayer_C_StepOn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_StepOn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'MainPlayer_C_StepOn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_StepOn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00008C, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000114, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bBlockingHit) == 0x000115, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bInitialOverlap) == 0x000116, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_AsInt_Objects) == 0x000198, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001A9, "Member 'MainPlayer_C_StepOn::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_physSound_return) == 0x0001B0, "Member 'MainPlayer_C_StepOn::CallFunc_physSound_return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.arm
// 0x0060 (0x0060 - 0x0000)
struct MainPlayer_C_Arm final
{
public:
	float                                         CustomLength;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3695[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Arm) == 0x000008, "Wrong alignment on MainPlayer_C_Arm");
static_assert(sizeof(MainPlayer_C_Arm) == 0x000060, "Wrong size on MainPlayer_C_Arm");
static_assert(offsetof(MainPlayer_C_Arm, CustomLength) == 0x000000, "Member 'MainPlayer_C_Arm::CustomLength' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, Start) == 0x000004, "Member 'MainPlayer_C_Arm::Start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, End) == 0x000010, "Member 'MainPlayer_C_Arm::End' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_Arm::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'MainPlayer_C_Arm::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'MainPlayer_C_Arm::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_Arm::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'MainPlayer_C_Arm::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'MainPlayer_C_Arm::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'MainPlayer_C_Arm::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.Enter Interface
// 0x0110 (0x0110 - 0x0000)
struct MainPlayer_C_Enter_Interface final
{
public:
	class UWidget*                                Param_ActiveInterface;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_LookAtLocation;                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_CamLocation;                                 // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFrom;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3696[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3697[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Enter_Interface) == 0x000010, "Wrong alignment on MainPlayer_C_Enter_Interface");
static_assert(sizeof(MainPlayer_C_Enter_Interface) == 0x000110, "Wrong size on MainPlayer_C_Enter_Interface");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_ActiveInterface) == 0x000000, "Member 'MainPlayer_C_Enter_Interface::Param_ActiveInterface' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_LookAtLocation) == 0x000008, "Member 'MainPlayer_C_Enter_Interface::Param_LookAtLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_CamLocation) == 0x000014, "Member 'MainPlayer_C_Enter_Interface::Param_CamLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFrom) == 0x000020, "Member 'MainPlayer_C_Enter_Interface::CallFrom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_AsInt_Coms) == 0x000030, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_setActiveInterface_return) == 0x000041, "Member 'MainPlayer_C_Enter_Interface::CallFunc_setActiveInterface_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'MainPlayer_C_Enter_Interface::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'MainPlayer_C_Enter_Interface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.makeLookAt
// 0x0170 (0x0170 - 0x0000)
struct MainPlayer_C_MakeLookAt final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Att;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3698[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MakeLookAt) == 0x000008, "Wrong alignment on MainPlayer_C_MakeLookAt");
static_assert(sizeof(MainPlayer_C_MakeLookAt) == 0x000170, "Wrong size on MainPlayer_C_MakeLookAt");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Location) == 0x000000, "Member 'MainPlayer_C_MakeLookAt::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Att) == 0x00000C, "Member 'MainPlayer_C_MakeLookAt::Att' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MakeLookAt::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000030, "Member 'MainPlayer_C_MakeLookAt::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000040, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C8, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000D4, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_FindLookAtRotation_ReturnValue) == 0x00015C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetPlayerController_ReturnValue) == 0x000168, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useAction
// 0x0478 (0x0478 - 0x0000)
struct MainPlayer_C_UseAction final
{
public:
	bool                                          Sec;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3699[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DirectUse;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succ;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Component;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Issec;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369B[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369C[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_369D[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369E[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369F[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A0[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_interactionActions                       CallFunc_selectedAction_Output1;                   // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A1[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_selectedAction_asName;                    // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A2[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_useAction_succ;                           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ_1;                         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A3[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A4[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A5[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A6[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A7[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A8[0x3];                                     // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A9[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lookAt_return;                            // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AA[0x5];                                     // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AB[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AC[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AD[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36AE[0x3];                                     // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseAction) == 0x000008, "Wrong alignment on MainPlayer_C_UseAction");
static_assert(sizeof(MainPlayer_C_UseAction) == 0x000478, "Wrong size on MainPlayer_C_UseAction");
static_assert(offsetof(MainPlayer_C_UseAction, Sec) == 0x000000, "Member 'MainPlayer_C_UseAction::Sec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Radius) == 0x000004, "Member 'MainPlayer_C_UseAction::Radius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, DirectUse) == 0x000008, "Member 'MainPlayer_C_UseAction::DirectUse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Succ) == 0x000010, "Member 'MainPlayer_C_UseAction::Succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Component) == 0x000018, "Member 'MainPlayer_C_UseAction::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Actor) == 0x000020, "Member 'MainPlayer_C_UseAction::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Issec) == 0x000028, "Member 'MainPlayer_C_UseAction::Issec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit) == 0x000029, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap) == 0x00002A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time) == 0x00002C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance) == 0x000030, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location) == 0x000034, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint) == 0x000040, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal) == 0x00004C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal) == 0x000058, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat) == 0x000068, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor) == 0x000070, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent) == 0x000078, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName) == 0x000080, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem) == 0x000088, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex) == 0x00008C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex) == 0x000090, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart) == 0x000094, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd) == 0x0000A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_MakeHitResult_ReturnValue) == 0x0000AC, "Member 'MainPlayer_C_UseAction::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000138, "Member 'MainPlayer_C_UseAction::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000140, "Member 'MainPlayer_C_UseAction::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_isDreaming_dreaming) == 0x000148, "Member 'MainPlayer_C_UseAction::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Array_Get_Item) == 0x000150, "Member 'MainPlayer_C_UseAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000160, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000161, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_1) == 0x000164, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_1) == 0x000168, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_1) == 0x00016C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000178, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_1) == 0x000184, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000190, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_1) == 0x0001A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_1) == 0x0001A8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_1) == 0x0001B0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001B8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_1) == 0x0001C0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_1) == 0x0001C4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001C8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_1) == 0x0001CC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001D8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_UseAction::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_Output1) == 0x0001E5, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_asName) == 0x0001E8, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_asName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchString_CmpSuccess) == 0x0001F8, "Member 'MainPlayer_C_UseAction::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchEnum_CmpSuccess) == 0x0001F9, "Member 'MainPlayer_C_UseAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001FC, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ) == 0x000208, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ_1) == 0x000209, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00020A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00020B, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_2) == 0x00020C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_2) == 0x000210, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_2) == 0x000214, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000220, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_2) == 0x00022C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000238, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_2) == 0x000248, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_2) == 0x000250, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_2) == 0x000258, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_2) == 0x000260, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_2) == 0x000268, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_2) == 0x00026C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_2) == 0x000270, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_2) == 0x000274, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_2) == 0x000280, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player) == 0x000290, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess) == 0x0002A0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue) == 0x0002A1, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0002A2, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0002A3, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_3) == 0x0002A4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_3) == 0x0002A8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_3) == 0x0002AC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0002B8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_3) == 0x0002C4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0002D0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_3) == 0x0002E0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_3) == 0x0002E8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_3) == 0x0002F0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_3) == 0x0002F8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_3) == 0x000300, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_3) == 0x000304, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_3) == 0x000308, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_3) == 0x00030C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_3) == 0x000318, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_1) == 0x000328, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000339, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_4) == 0x00033A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x00033B, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_4) == 0x00033C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_4) == 0x000340, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_4) == 0x000344, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000350, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_4) == 0x00035C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_4) == 0x000368, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_4) == 0x000378, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_4) == 0x000380, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_4) == 0x000388, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_4) == 0x000390, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_4) == 0x000398, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_4) == 0x00039C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_4) == 0x0003A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_4) == 0x0003A4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_4) == 0x0003B0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0003BC, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects) == 0x0003C0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_2) == 0x0003D0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0003D8, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_2) == 0x0003E0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_3) == 0x0003F0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x0003F1, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_return) == 0x0003F2, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_text) == 0x0003F8, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_boundObjectReplace) == 0x000408, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue) == 0x000410, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects_1) == 0x000418, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_4) == 0x000428, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_3) == 0x000430, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_5) == 0x000440, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_asProp_return) == 0x000448, "Member 'MainPlayer_C_UseAction::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_Origin) == 0x000450, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_BoxExtent) == 0x00045C, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Vector_Distance_ReturnValue) == 0x000468, "Member 'MainPlayer_C_UseAction::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue_1) == 0x00046C, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_FClamp_ReturnValue) == 0x000470, "Member 'MainPlayer_C_UseAction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x000474, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addFood
// 0x00D0 (0x00D0 - 0x0000)
struct MainPlayer_C_AddFood final
{
public:
	float                                         Food;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36AF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_C*                           AsFood;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassNoHunger;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Full;                                              // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B0[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mult;                                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B2[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B3[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B4[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B5[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B6[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B7[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B8[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B9[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36BA[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddFood) == 0x000008, "Wrong alignment on MainPlayer_C_AddFood");
static_assert(sizeof(MainPlayer_C_AddFood) == 0x0000D0, "Wrong size on MainPlayer_C_AddFood");
static_assert(offsetof(MainPlayer_C_AddFood, Food) == 0x000000, "Member 'MainPlayer_C_AddFood::Food' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Sleep) == 0x000004, "Member 'MainPlayer_C_AddFood::Sleep' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Health) == 0x000008, "Member 'MainPlayer_C_AddFood::Health' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, AsFood) == 0x000010, "Member 'MainPlayer_C_AddFood::AsFood' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, bypassNoHunger) == 0x000018, "Member 'MainPlayer_C_AddFood::bypassNoHunger' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Full) == 0x000019, "Member 'MainPlayer_C_AddFood::Full' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Ind) == 0x00001C, "Member 'MainPlayer_C_AddFood::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Mult) == 0x000020, "Member 'MainPlayer_C_AddFood::Mult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'MainPlayer_C_AddFood::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'MainPlayer_C_AddFood::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'MainPlayer_C_AddFood::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_AddFood::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003D, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003E, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_string_Variable) == 0x000040, "Member 'MainPlayer_C_AddFood::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'MainPlayer_C_AddFood::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'MainPlayer_C_AddFood::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'MainPlayer_C_AddFood::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable) == 0x000060, "Member 'MainPlayer_C_AddFood::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000064, "Member 'MainPlayer_C_AddFood::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot) == 0x000068, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000070, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue) == 0x000074, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000078, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_BooleanOR_ReturnValue) == 0x000084, "Member 'MainPlayer_C_AddFood::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000085, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue) == 0x00008C, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'MainPlayer_C_AddFood::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x000090, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000094, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x000098, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue_1) == 0x00009C, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000A0, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Find_ReturnValue) == 0x0000A8, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot_1) == 0x0000B0, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue_1) == 0x0000B8, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_AddFood::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x0000C0, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable_1) == 0x0000C4, "Member 'MainPlayer_C_AddFood::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue_1) == 0x0000C8, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isExhausted
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_IsExhausted final
{
public:
	bool                                          Exhausted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BD[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0080(0x0018)()
};
static_assert(alignof(MainPlayer_C_IsExhausted) == 0x000008, "Wrong alignment on MainPlayer_C_IsExhausted");
static_assert(sizeof(MainPlayer_C_IsExhausted) == 0x000098, "Wrong size on MainPlayer_C_IsExhausted");
static_assert(offsetof(MainPlayer_C_IsExhausted, Exhausted) == 0x000000, "Member 'MainPlayer_C_IsExhausted::Exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable) == 0x000001, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable) == 0x000008, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_1) == 0x000020, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable_1) == 0x000038, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_2) == 0x000040, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000058, "Member 'MainPlayer_C_IsExhausted::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000061, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'MainPlayer_C_IsExhausted::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default) == 0x000068, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default_1) == 0x000080, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setActiveInterface
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_SetActiveInterface final
{
public:
	class UWidget*                                Param_ActiveInterface;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Param_Zoom;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SentBy;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreZoom;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36BF[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C2[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C3[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_2;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C4[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetActiveInterface) == 0x000008, "Wrong alignment on MainPlayer_C_SetActiveInterface");
static_assert(sizeof(MainPlayer_C_SetActiveInterface) == 0x000090, "Wrong size on MainPlayer_C_SetActiveInterface");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Param_ActiveInterface) == 0x000000, "Member 'MainPlayer_C_SetActiveInterface::Param_ActiveInterface' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, InString) == 0x000008, "Member 'MainPlayer_C_SetActiveInterface::InString' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Param_Zoom) == 0x000018, "Member 'MainPlayer_C_SetActiveInterface::Param_Zoom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, SentBy) == 0x000020, "Member 'MainPlayer_C_SetActiveInterface::SentBy' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, IgnoreZoom) == 0x000028, "Member 'MainPlayer_C_SetActiveInterface::IgnoreZoom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Return) == 0x000029, "Member 'MainPlayer_C_SetActiveInterface::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget) == 0x000030, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsInt_Coms) == 0x000040, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_1) == 0x000058, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000068, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_2) == 0x000078, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.flashlightUse
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_FlashlightUse final
{
public:
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightUse) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightUse");
static_assert(sizeof(MainPlayer_C_FlashlightUse) == 0x000010, "Wrong size on MainPlayer_C_FlashlightUse");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000000, "Member 'MainPlayer_C_FlashlightUse::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'MainPlayer_C_FlashlightUse::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'MainPlayer_C_FlashlightUse::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setMouseSmooth
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetMouseSmooth final
{
public:
	float                                         CameraLagSpeed;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_MouseSens;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetMouseSmooth) == 0x000004, "Wrong alignment on MainPlayer_C_SetMouseSmooth");
static_assert(sizeof(MainPlayer_C_SetMouseSmooth) == 0x000010, "Wrong size on MainPlayer_C_SetMouseSmooth");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CameraLagSpeed) == 0x000000, "Member 'MainPlayer_C_SetMouseSmooth::CameraLagSpeed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, Param_MouseSens) == 0x000004, "Member 'MainPlayer_C_SetMouseSmooth::Param_MouseSens' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kick
// 0x02B8 (0x02B8 - 0x0000)
struct MainPlayer_C_Kick final
{
public:
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C6[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C7[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMassScale_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C8[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C9[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_return;                         // 0x0210(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CA[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kick) == 0x000008, "Wrong alignment on MainPlayer_C_Kick");
static_assert(sizeof(MainPlayer_C_Kick) == 0x0002B8, "Wrong size on MainPlayer_C_Kick");
static_assert(offsetof(MainPlayer_C_Kick, A) == 0x000000, "Member 'MainPlayer_C_Kick::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array) == 0x000010, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array_1) == 0x000038, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000064, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'MainPlayer_C_Kick::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000084, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x00010C, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bBlockingHit) == 0x000114, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bInitialOverlap) == 0x000115, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000194, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMassScale_ReturnValue) == 0x000198, "Member 'MainPlayer_C_Kick::CallFunc_GetMassScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MakeVector_ReturnValue) == 0x00019C, "Member 'MainPlayer_C_Kick::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMass_ReturnValue) == 0x0001A8, "Member 'MainPlayer_C_Kick::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_Origin) == 0x0001AC, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_BoxExtent) == 0x0001B8, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_SphereRadius) == 0x0001C4, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001C8, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001D8, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_Kick::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_AsInt_Player) == 0x0001F8, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000209, "Member 'MainPlayer_C_Kick::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_physSound_return) == 0x000210, "Member 'MainPlayer_C_Kick::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000250, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000254, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SetVectorLength_ReturnValue) == 0x000258, "Member 'MainPlayer_C_Kick::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000264, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue) == 0x000268, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000274, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000280, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000284, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_2) == 0x000290, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000294, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Conv_FloatToString_ReturnValue) == 0x0002A0, "Member 'MainPlayer_C_Kick::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002B0, "Member 'MainPlayer_C_Kick::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BooleanAND_ReturnValue) == 0x0002B1, "Member 'MainPlayer_C_Kick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ragdollMode
// 0x0190 (0x0190 - 0x0000)
struct MainPlayer_C_RagdollMode final
{
public:
	bool                                          Ragdoll;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PassOut;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Death;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CD[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CE[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_RagdollMode) == 0x000010, "Wrong alignment on MainPlayer_C_RagdollMode");
static_assert(sizeof(MainPlayer_C_RagdollMode) == 0x000190, "Wrong size on MainPlayer_C_RagdollMode");
static_assert(offsetof(MainPlayer_C_RagdollMode, Ragdoll) == 0x000000, "Member 'MainPlayer_C_RagdollMode::Ragdoll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, PassOut) == 0x000001, "Member 'MainPlayer_C_RagdollMode::PassOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, Death) == 0x000002, "Member 'MainPlayer_C_RagdollMode::Death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'MainPlayer_C_RagdollMode::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'MainPlayer_C_RagdollMode::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000018, "Member 'MainPlayer_C_RagdollMode::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_isDreaming_dreaming) == 0x000021, "Member 'MainPlayer_C_RagdollMode::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue_1) == 0x000061, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000064, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000EC, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000F8, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_SetVectorLength_ReturnValue) == 0x000180, "Member 'MainPlayer_C_RagdollMode::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00018C, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.StopMovement
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_StopMovement final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StopMovement) == 0x000008, "Wrong alignment on MainPlayer_C_StopMovement");
static_assert(sizeof(MainPlayer_C_StopMovement) == 0x000018, "Wrong size on MainPlayer_C_StopMovement");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'MainPlayer_C_StopMovement::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'MainPlayer_C_StopMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.punch
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_Punch final
{
public:
	struct FVector                                FullBody;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                boneImp;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bn1;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36CF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bn;                                                // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                bimp;                                              // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Imp1;                                              // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Punch) == 0x000008, "Wrong alignment on MainPlayer_C_Punch");
static_assert(sizeof(MainPlayer_C_Punch) == 0x000080, "Wrong size on MainPlayer_C_Punch");
static_assert(offsetof(MainPlayer_C_Punch, FullBody) == 0x000000, "Member 'MainPlayer_C_Punch::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, boneImp) == 0x00000C, "Member 'MainPlayer_C_Punch::boneImp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn1) == 0x000018, "Member 'MainPlayer_C_Punch::bn1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Damage) == 0x000020, "Member 'MainPlayer_C_Punch::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, DamageLocation) == 0x000024, "Member 'MainPlayer_C_Punch::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bypassSettings) == 0x000030, "Member 'MainPlayer_C_Punch::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn) == 0x000034, "Member 'MainPlayer_C_Punch::bn' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bimp) == 0x00003C, "Member 'MainPlayer_C_Punch::bimp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Imp1) == 0x000048, "Member 'MainPlayer_C_Punch::Imp1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Array_Index_Variable) == 0x000054, "Member 'MainPlayer_C_Punch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'MainPlayer_C_Punch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_Punch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_GetAllSocketNames_ReturnValue) == 0x000060, "Member 'MainPlayer_C_Punch::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Punch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Get_Item) == 0x000074, "Member 'MainPlayer_C_Punch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_Punch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useLadder
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_UseLadder final
{
public:
	class ALadder_C*                              Param_Ladder;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALadder_C*                              Ladder1;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D0[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseLadder) == 0x000008, "Wrong alignment on MainPlayer_C_UseLadder");
static_assert(sizeof(MainPlayer_C_UseLadder) == 0x000038, "Wrong size on MainPlayer_C_UseLadder");
static_assert(offsetof(MainPlayer_C_UseLadder, Param_Ladder) == 0x000000, "Member 'MainPlayer_C_UseLadder::Param_Ladder' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, Ladder1) == 0x000008, "Member 'MainPlayer_C_UseLadder::Ladder1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_GetVelocity_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UseLadder::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_X) == 0x000020, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Y) == 0x000024, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Z) == 0x000028, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Abs_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_UseLadder::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_UseLadder::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updWater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_UpdWater final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UpdWater) == 0x000001, "Wrong alignment on MainPlayer_C_UpdWater");
static_assert(sizeof(MainPlayer_C_UpdWater) == 0x000002, "Wrong size on MainPlayer_C_UpdWater");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000001, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.muffleUnderwater
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_MuffleUnderwater final
{
public:
	bool                                          A;                                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D3[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D4[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_MuffleUnderwater) == 0x000010, "Wrong alignment on MainPlayer_C_MuffleUnderwater");
static_assert(sizeof(MainPlayer_C_MuffleUnderwater) == 0x000090, "Wrong size on MainPlayer_C_MuffleUnderwater");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, A) == 0x000000, "Member 'MainPlayer_C_MuffleUnderwater::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_X) == 0x000028, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Y) == 0x00002C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Z) == 0x000030, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Get_Item) == 0x000038, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x000084, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BooleanOR_ReturnValue) == 0x000085, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setUnderwater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_SetUnderwater final
{
public:
	bool                                          InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetUnderwater) == 0x000001, "Wrong alignment on MainPlayer_C_SetUnderwater");
static_assert(sizeof(MainPlayer_C_SetUnderwater) == 0x000002, "Wrong size on MainPlayer_C_SetUnderwater");
static_assert(offsetof(MainPlayer_C_SetUnderwater, InputPin) == 0x000000, "Member 'MainPlayer_C_SetUnderwater::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetUnderwater, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'MainPlayer_C_SetUnderwater::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.putObjectInventory2
// 0x0058 (0x0058 - 0x0000)
struct MainPlayer_C_PutObjectInventory2 final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_getInd_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D7[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addObject_return;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D8[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addObject_err;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PutObjectInventory2) == 0x000008, "Wrong alignment on MainPlayer_C_PutObjectInventory2");
static_assert(sizeof(MainPlayer_C_PutObjectInventory2) == 0x000058, "Wrong size on MainPlayer_C_PutObjectInventory2");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, InputPin) == 0x000000, "Member 'MainPlayer_C_PutObjectInventory2::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, Return) == 0x000008, "Member 'MainPlayer_C_PutObjectInventory2::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000020, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getInd_ReturnValue) == 0x000024, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getInd_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsChildActor_ReturnValue) == 0x000028, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000030, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000038, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_return) == 0x000040, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_err) == 0x000048, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_err' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addEquip
// 0x0220 (0x0220 - 0x0000)
struct MainPlayer_C_AddEquip final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36D9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x00C8(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_propDynamic                    CallFunc_propToDynamic_equip;                      // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return;                          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DA[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_36DB[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x0120(0x00F0)(HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddEquip) == 0x000010, "Wrong alignment on MainPlayer_C_AddEquip");
static_assert(sizeof(MainPlayer_C_AddEquip) == 0x000220, "Wrong size on MainPlayer_C_AddEquip");
static_assert(offsetof(MainPlayer_C_AddEquip, Data) == 0x000000, "Member 'MainPlayer_C_AddEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Return) == 0x0000C0, "Member 'MainPlayer_C_AddEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Rebug) == 0x0000C8, "Member 'MainPlayer_C_AddEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_propToDynamic_equip) == 0x0000D8, "Member 'MainPlayer_C_AddEquip::CallFunc_propToDynamic_equip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_return) == 0x000100, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_rebug) == 0x000108, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, K2Node_MakeStruct_struct_equipment) == 0x000120, "Member 'MainPlayer_C_AddEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_getSaveSlot_saveSlot) == 0x000210, "Member 'MainPlayer_C_AddEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updEquip
// 0x0380 (0x0380 - 0x0000)
struct MainPlayer_C_UpdEquip final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 D;                                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_36DD[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Data;                                              // 0x0030(0x00F0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36DE[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   N;                                                 // 0x0124(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DF[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E0[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E1[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsPrinted_Object;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E2[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E3[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E4[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E5[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E6[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0010)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E7[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E8[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0238(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E9[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02C0(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EA[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_weapon                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0348(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EB[0x6];                                     // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdEquip) == 0x000010, "Wrong alignment on MainPlayer_C_UpdEquip");
static_assert(sizeof(MainPlayer_C_UpdEquip) == 0x000380, "Wrong size on MainPlayer_C_UpdEquip");
static_assert(offsetof(MainPlayer_C_UpdEquip, Return) == 0x000000, "Member 'MainPlayer_C_UpdEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Rebug) == 0x000008, "Member 'MainPlayer_C_UpdEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, D) == 0x000018, "Member 'MainPlayer_C_UpdEquip::D' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Data) == 0x000030, "Member 'MainPlayer_C_UpdEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Ret) == 0x000120, "Member 'MainPlayer_C_UpdEquip::Ret' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, N) == 0x000124, "Member 'MainPlayer_C_UpdEquip::N' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000130, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000148, "Member 'MainPlayer_C_UpdEquip::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_AsPrinted_Object) == 0x000160, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_AsPrinted_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_bSuccess) == 0x000168, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'MainPlayer_C_UpdEquip::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001A0, "Member 'MainPlayer_C_UpdEquip::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Temp_int_Variable) == 0x0001A4, "Member 'MainPlayer_C_UpdEquip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'MainPlayer_C_UpdEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'MainPlayer_C_UpdEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0001C0, "Member 'MainPlayer_C_UpdEquip::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'MainPlayer_C_UpdEquip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue) == 0x0001C9, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_loadData_return) == 0x0001CA, "Member 'MainPlayer_C_UpdEquip::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001E0, "Member 'MainPlayer_C_UpdEquip::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_2) == 0x0001E8, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001F8, "Member 'MainPlayer_C_UpdEquip::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Conv_StringToName_ReturnValue) == 0x000200, "Member 'MainPlayer_C_UpdEquip::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000208, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Objects) == 0x000220, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_2) == 0x000230, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow) == 0x000238, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002B8, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002B9, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002C0, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000340, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000348, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000368, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000369, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_getSaveSlot_saveSlot) == 0x000370, "Member 'MainPlayer_C_UpdEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.attack
// 0x02A8 (0x02A8 - 0x0000)
struct MainPlayer_C_Attack final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutputPin;                                         // 0x0004(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_36ED[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Cl;                                                // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36EE[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36EF[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F0[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F1[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F2[0x2];                                     // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F3[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F4[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F5[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_physSound                      CallFunc_physSound_return;                         // 0x0230(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Attack) == 0x000008, "Wrong alignment on MainPlayer_C_Attack");
static_assert(sizeof(MainPlayer_C_Attack) == 0x0002A8, "Wrong size on MainPlayer_C_Attack");
static_assert(offsetof(MainPlayer_C_Attack, Hit) == 0x000000, "Member 'MainPlayer_C_Attack::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, OutputPin) == 0x000004, "Member 'MainPlayer_C_Attack::OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, ReturnValue) == 0x000090, "Member 'MainPlayer_C_Attack::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Cl) == 0x000098, "Member 'MainPlayer_C_Attack::Cl' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Lerp_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_Attack::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_start) == 0x0000A4, "Member 'MainPlayer_C_Attack::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_end) == 0x0000B0, "Member 'MainPlayer_C_Attack::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Temp_object_Variable) == 0x0000C0, "Member 'MainPlayer_C_Attack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_OutHit) == 0x0000D0, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_ReturnValue) == 0x000158, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue) == 0x00015C, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bBlockingHit) == 0x000168, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bInitialOverlap) == 0x000169, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Location) == 0x000174, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactPoint) == 0x000180, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Normal) == 0x00018C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactNormal) == 0x000198, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceStart) == 0x0001D4, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsValid_ReturnValue) == 0x0001EC, "Member 'MainPlayer_C_Attack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001ED, "Member 'MainPlayer_C_Attack::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetMass_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_Attack::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Player) == 0x0001F8, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_FMin_ReturnValue) == 0x00020C, "Member 'MainPlayer_C_Attack::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Objects) == 0x000210, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetObjectClass_ReturnValue) == 0x000228, "Member 'MainPlayer_C_Attack::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_physSound_return) == 0x000230, "Member 'MainPlayer_C_Attack::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Add_VectorVector_ReturnValue) == 0x000270, "Member 'MainPlayer_C_Attack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue_1) == 0x00027C, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000288, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000294, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000298, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00029C, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.checkEquip
// 0x02E0 (0x02E0 - 0x0000)
struct MainPlayer_C_CheckEquip final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Output;                                            // 0x0010(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F7[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0120(0x00C0)(HasGetValueTypeHash)
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x01E0(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CheckEquip) == 0x000010, "Wrong alignment on MainPlayer_C_CheckEquip");
static_assert(sizeof(MainPlayer_C_CheckEquip) == 0x0002E0, "Wrong size on MainPlayer_C_CheckEquip");
static_assert(offsetof(MainPlayer_C_CheckEquip, Empty) == 0x000000, "Member 'MainPlayer_C_CheckEquip::Empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, Output) == 0x000010, "Member 'MainPlayer_C_CheckEquip::Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getSaveSlot_saveSlot) == 0x000100, "Member 'MainPlayer_C_CheckEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000108, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getData_data) == 0x000120, "Member 'MainPlayer_C_CheckEquip::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_MakeStruct_struct_equipment) == 0x0001E0, "Member 'MainPlayer_C_CheckEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_IsValidClass_ReturnValue) == 0x0002D0, "Member 'MainPlayer_C_CheckEquip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_Not_PreBool_ReturnValue) == 0x0002D1, "Member 'MainPlayer_C_CheckEquip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.movOut
// 0x0278 (0x0278 - 0x0000)
struct MainPlayer_C_MovOut final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                InputPin;                                          // 0x0088(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             H;                                                 // 0x0094(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L;                                                 // 0x011C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F8[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x01F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_MovOut) == 0x000008, "Wrong alignment on MainPlayer_C_MovOut");
static_assert(sizeof(MainPlayer_C_MovOut) == 0x000278, "Wrong size on MainPlayer_C_MovOut");
static_assert(offsetof(MainPlayer_C_MovOut, Hit) == 0x000000, "Member 'MainPlayer_C_MovOut::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, InputPin) == 0x000088, "Member 'MainPlayer_C_MovOut::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, H) == 0x000094, "Member 'MainPlayer_C_MovOut::H' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, L) == 0x00011C, "Member 'MainPlayer_C_MovOut::L' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_Has_Been_Initd_Variable) == 0x000128, "Member 'MainPlayer_C_MovOut::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_int_Variable) == 0x00012C, "Member 'MainPlayer_C_MovOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'MainPlayer_C_MovOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'MainPlayer_C_MovOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_IsClosed_Variable) == 0x000135, "Member 'MainPlayer_C_MovOut::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bBlockingHit) == 0x000136, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bInitialOverlap) == 0x000137, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Time) == 0x000138, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Distance) == 0x00013C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactPoint) == 0x00014C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactNormal) == 0x000164, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001B4, "Member 'MainPlayer_C_MovOut::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001C0, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0001F0, "Member 'MainPlayer_C_MovOut::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.teleportWObackrooms
// 0x0130 (0x0130 - 0x0000)
struct MainPlayer_C_TeleportWObackrooms final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F9[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_TeleportWObackrooms) == 0x000010, "Wrong alignment on MainPlayer_C_TeleportWObackrooms");
static_assert(sizeof(MainPlayer_C_TeleportWObackrooms) == 0x000130, "Wrong size on MainPlayer_C_TeleportWObackrooms");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, NewTransform) == 0x000000, "Member 'MainPlayer_C_TeleportWObackrooms::NewTransform' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Location) == 0x00003C, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Rotation) == 0x000048, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Scale) == 0x000054, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000A0, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000128, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShit
// 0x0078 (0x0078 - 0x0000)
struct MainPlayer_C_ThrowShit final
{
public:
	class UPrimitiveComponent*                    InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ThrowShit) == 0x000008, "Wrong alignment on MainPlayer_C_ThrowShit");
static_assert(sizeof(MainPlayer_C_ThrowShit) == 0x000078, "Wrong size on MainPlayer_C_ThrowShit");
static_assert(offsetof(MainPlayer_C_ThrowShit, InputPin) == 0x000000, "Member 'MainPlayer_C_ThrowShit::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomUnitVector_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000030, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetMass_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetVelocity_ReturnValue) == 0x000040, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_FMax_ReturnValue) == 0x00004C, "Member 'MainPlayer_C_ThrowShit::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000054, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_ThrowShit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addPlayerDamage
// 0x0110 (0x0110 - 0x0000)
struct MainPlayer_C_AddPlayerDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FullBody;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FC[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FD[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FE[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FF[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3700[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddPlayerDamage) == 0x000010, "Wrong alignment on MainPlayer_C_AddPlayerDamage");
static_assert(sizeof(MainPlayer_C_AddPlayerDamage) == 0x000110, "Wrong size on MainPlayer_C_AddPlayerDamage");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Damage) == 0x000000, "Member 'MainPlayer_C_AddPlayerDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, DamageLocation) == 0x000004, "Member 'MainPlayer_C_AddPlayerDamage::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, FullBody) == 0x000010, "Member 'MainPlayer_C_AddPlayerDamage::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, bypassSettings) == 0x00001C, "Member 'MainPlayer_C_AddPlayerDamage::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x000028, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_isDreaming_dreaming) == 0x000030, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000070, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Temp_int_Variable) == 0x00007C, "Member 'MainPlayer_C_AddPlayerDamage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue_1) == 0x000080, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000084, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x0000A0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000B4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_X) == 0x0000C0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Y) == 0x0000C4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_DegAtan2_ReturnValue) == 0x0000CC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000D0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0000DC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Round_ReturnValue) == 0x0000E4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0000E8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Percent_IntInt_ReturnValue) == 0x0000EC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x0000F0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, K2Node_Select_Default) == 0x0000F4, "Member 'MainPlayer_C_AddPlayerDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0000F8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0000FC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_FClamp_ReturnValue) == 0x000104, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useArm
// 0x0150 (0x0150 - 0x0000)
struct MainPlayer_C_UseArm final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3701[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_arm_start;                                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseArm) == 0x000008, "Wrong alignment on MainPlayer_C_UseArm");
static_assert(sizeof(MainPlayer_C_UseArm) == 0x000150, "Wrong size on MainPlayer_C_UseArm");
static_assert(offsetof(MainPlayer_C_UseArm, OutHit) == 0x000000, "Member 'MainPlayer_C_UseArm::OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, ReturnValue) == 0x000088, "Member 'MainPlayer_C_UseArm::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, Temp_object_Variable) == 0x000090, "Member 'MainPlayer_C_UseArm::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_start) == 0x0000A0, "Member 'MainPlayer_C_UseArm::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_end) == 0x0000AC, "Member 'MainPlayer_C_UseArm::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'MainPlayer_C_UseArm::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_OutHit) == 0x0000C4, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_ReturnValue) == 0x00014C, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sit
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_Sit final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USittingComponent_C*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASitBox_C*                              Place;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Sit) == 0x000008, "Wrong alignment on MainPlayer_C_Sit");
static_assert(sizeof(MainPlayer_C_Sit) == 0x000048, "Wrong size on MainPlayer_C_Sit");
static_assert(offsetof(MainPlayer_C_Sit, Actor) == 0x000000, "Member 'MainPlayer_C_Sit::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Component) == 0x000008, "Member 'MainPlayer_C_Sit::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Place) == 0x000010, "Member 'MainPlayer_C_Sit::Place' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'MainPlayer_C_Sit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_Sit::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Sit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Dot_VectorVector_ReturnValue) == 0x000034, "Member 'MainPlayer_C_Sit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'MainPlayer_C_Sit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'MainPlayer_C_Sit::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00003B, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00003C, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00003D, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_2) == 0x00003F, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'MainPlayer_C_Sit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.selectedAction
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_SelectedAction final
{
public:
	Enum_interactionActions                       Output1;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3702[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AsName;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_1;                              // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_2;                              // 0x001A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_3;                              // 0x001B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3703[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3704[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SelectedAction) == 0x000008, "Wrong alignment on MainPlayer_C_SelectedAction");
static_assert(sizeof(MainPlayer_C_SelectedAction) == 0x000048, "Wrong size on MainPlayer_C_SelectedAction");
static_assert(offsetof(MainPlayer_C_SelectedAction, Output1) == 0x000000, "Member 'MainPlayer_C_SelectedAction::Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, AsName) == 0x000008, "Member 'MainPlayer_C_SelectedAction::AsName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable) == 0x000018, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_1) == 0x000019, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_2) == 0x00001A, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_3) == 0x00001B, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'MainPlayer_C_SelectedAction::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item) == 0x000028, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_1) == 0x000042, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_2) == 0x000043, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_3) == 0x000044, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.collectObject
// 0x01A0 (0x01A0 - 0x0000)
struct MainPlayer_C_CollectObject final
{
public:
	bool                                          UseHold;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3705[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Ac;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3706[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3707[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3708[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3709[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0060(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addEquip_return;                          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370A[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addEquip_rebug;                           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370B[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370C[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_canPickup_return;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370D[0x1];                                     // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370E[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CollectObject) == 0x000010, "Wrong alignment on MainPlayer_C_CollectObject");
static_assert(sizeof(MainPlayer_C_CollectObject) == 0x0001A0, "Wrong size on MainPlayer_C_CollectObject");
static_assert(offsetof(MainPlayer_C_CollectObject, UseHold) == 0x000000, "Member 'MainPlayer_C_CollectObject::UseHold' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Ac) == 0x000008, "Member 'MainPlayer_C_CollectObject::Ac' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Comp) == 0x000010, "Member 'MainPlayer_C_CollectObject::Comp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable) == 0x000018, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'MainPlayer_C_CollectObject::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable_1) == 0x000028, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1) == 0x000030, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000048, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_getData_data) == 0x000060, "Member 'MainPlayer_C_CollectObject::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_ignoreSave_ignoreSave) == 0x000120, "Member 'MainPlayer_C_CollectObject::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_return) == 0x000121, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_rebug) == 0x000128, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player) == 0x000138, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_asProp_return) == 0x000150, "Member 'MainPlayer_C_CollectObject::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player_1) == 0x000158, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default) == 0x000170, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_canPickup_return) == 0x000178, "Member 'MainPlayer_C_CollectObject::CallFunc_canPickup_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_1) == 0x000179, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00017A, "Member 'MainPlayer_C_CollectObject::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_GetMass_ReturnValue) == 0x00017C, "Member 'MainPlayer_C_CollectObject::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000180, "Member 'MainPlayer_C_CollectObject::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default_1) == 0x000188, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_2) == 0x000190, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateSpeed
// 0x0028 (0x0028 - 0x0000)
struct MainPlayer_C_UpdateSpeed final
{
public:
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370F[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateSpeed) == 0x000008, "Wrong alignment on MainPlayer_C_UpdateSpeed");
static_assert(sizeof(MainPlayer_C_UpdateSpeed) == 0x000028, "Wrong size on MainPlayer_C_UpdateSpeed");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_getSaveSlot_saveSlot) == 0x000000, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000009, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_2) == 0x000024, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fixActionIndex
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FixActionIndex final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FixActionIndex) == 0x000004, "Wrong alignment on MainPlayer_C_FixActionIndex");
static_assert(sizeof(MainPlayer_C_FixActionIndex) == 0x000008, "Wrong size on MainPlayer_C_FixActionIndex");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.findFootLocation
// 0x00C0 (0x00C0 - 0x0000)
struct MainPlayer_C_FindFootLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3710[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FindFootLocation) == 0x000010, "Wrong alignment on MainPlayer_C_FindFootLocation");
static_assert(sizeof(MainPlayer_C_FindFootLocation) == 0x0000C0, "Wrong size on MainPlayer_C_FindFootLocation");
static_assert(offsetof(MainPlayer_C_FindFootLocation, ReturnValue) == 0x000000, "Member 'MainPlayer_C_FindFootLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MainPlayer_C_FindFootLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'MainPlayer_C_FindFootLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'MainPlayer_C_FindFootLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_FindFootLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateEquipment
// 0x0120 (0x0120 - 0x0000)
struct MainPlayer_C_UpdateEquipment final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3711[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3712[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item;                           // 0x0020(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3713[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateEquipment) == 0x000010, "Wrong alignment on MainPlayer_C_UpdateEquipment");
static_assert(sizeof(MainPlayer_C_UpdateEquipment) == 0x000120, "Wrong size on MainPlayer_C_UpdateEquipment");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getSaveSlot_saveSlot) == 0x000010, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item) == 0x000020, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.tryGetNail
// 0x0280 (0x0280 - 0x0000)
struct MainPlayer_C_TryGetNail final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3714[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NailClass;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          R;                                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3715[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 A;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            Nails;                                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0088(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3716[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            K2Node_MakeVariable_MakeVariableOutput;            // 0x00B0(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3717[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0108(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3718[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0128(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0138(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3719[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371A[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Nail;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371B[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371C[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_Array_Get_Item_2;                         // 0x0190(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371D[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371E[0x6];                                     // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Container;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_TryGetNail) == 0x000010, "Wrong alignment on MainPlayer_C_TryGetNail");
static_assert(sizeof(MainPlayer_C_TryGetNail) == 0x000280, "Wrong size on MainPlayer_C_TryGetNail");
static_assert(offsetof(MainPlayer_C_TryGetNail, Success) == 0x000000, "Member 'MainPlayer_C_TryGetNail::Success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, NailClass) == 0x000008, "Member 'MainPlayer_C_TryGetNail::NailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, R) == 0x000010, "Member 'MainPlayer_C_TryGetNail::R' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Ind) == 0x000014, "Member 'MainPlayer_C_TryGetNail::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, A) == 0x000018, "Member 'MainPlayer_C_TryGetNail::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Nails) == 0x000020, "Member 'MainPlayer_C_TryGetNail::Nails' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000080, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable) == 0x000088, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000098, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x0000A8, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B0, "Member 'MainPlayer_C_TryGetNail::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_1) == 0x000108, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000120, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_2) == 0x000128, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_3) == 0x000138, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x000148, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item) == 0x000158, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000168, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_1) == 0x00016C, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Nail) == 0x000170, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Nail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess) == 0x000178, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value) == 0x000180, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue) == 0x000188, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_2) == 0x000190, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value_1) == 0x000258, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue_1) == 0x000260, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue_1) == 0x000261, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Container) == 0x000268, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Container' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess_1) == 0x000270, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateWheel
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_UpdateWheel final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371F[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3720[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateWheel) == 0x000008, "Wrong alignment on MainPlayer_C_UpdateWheel");
static_assert(sizeof(MainPlayer_C_UpdateWheel) == 0x000038, "Wrong size on MainPlayer_C_UpdateWheel");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_bool_Variable) == 0x000000, "Member 'MainPlayer_C_UpdateWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable) == 0x000001, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable_1) == 0x000002, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000010, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_GetRotated2D_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateWheel::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MainPlayer_C_UpdateWheel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000028, "Member 'MainPlayer_C_UpdateWheel::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, K2Node_Select_Default) == 0x000030, "Member 'MainPlayer_C_UpdateWheel::K2Node_Select_Default' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShovelItem
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_ThrowShovelItem final
{
public:
	struct FVector                                NewVel;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_3721[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3722[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_dirtball_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ThrowShovelItem) == 0x000010, "Wrong alignment on MainPlayer_C_ThrowShovelItem");
static_assert(sizeof(MainPlayer_C_ThrowShovelItem) == 0x000080, "Wrong size on MainPlayer_C_ThrowShovelItem");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, NewVel) == 0x000000, "Member 'MainPlayer_C_ThrowShovelItem::NewVel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, Force) == 0x00000C, "Member 'MainPlayer_C_ThrowShovelItem::Force' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_MakeArray_Array) == 0x000018, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_Array_Find_ReturnValue) == 0x000068, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipGrabRadial
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_SkipGrabRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3723[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3724[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3725[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_skipRadial_skip;                          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipGrabRadial) == 0x000008, "Wrong alignment on MainPlayer_C_SkipGrabRadial");
static_assert(sizeof(MainPlayer_C_SkipGrabRadial) == 0x0000A0, "Wrong size on MainPlayer_C_SkipGrabRadial");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipGrabRadial::Skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bBlockingHit) == 0x000001, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bInitialOverlap) == 0x000002, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Time) == 0x000004, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Distance) == 0x000008, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Location) == 0x00000C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactPoint) == 0x000018, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Normal) == 0x000024, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactNormal) == 0x000030, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_PhysMat) == 0x000040, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitActor) == 0x000048, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitComponent) == 0x000050, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitBoneName) == 0x000058, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitItem) == 0x000060, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ElementIndex) == 0x000064, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_FaceIndex) == 0x000068, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceStart) == 0x00006C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceEnd) == 0x000078, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_DoesImplementInterface_ReturnValue) == 0x000084, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_AsInt_Objects) == 0x000088, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_skipRadial_skip) == 0x000099, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_skipRadial_skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_DreamInv) == 0x000008, "Wrong alignment on MainPlayer_C_DreamInv");
static_assert(sizeof(MainPlayer_C_DreamInv) == 0x000018, "Wrong size on MainPlayer_C_DreamInv");
static_assert(offsetof(MainPlayer_C_DreamInv, Invv) == 0x000000, "Member 'MainPlayer_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DreamInv, Base) == 0x000010, "Member 'MainPlayer_C_DreamInv::Base' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.GetKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetKey");
static_assert(sizeof(MainPlayer_C_GetKey) == 0x000010, "Wrong size on MainPlayer_C_GetKey");
static_assert(offsetof(MainPlayer_C_GetKey, Key) == 0x000000, "Member 'MainPlayer_C_GetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ToolboxFix) == 0x000008, "Wrong alignment on MainPlayer_C_ToolboxFix");
static_assert(sizeof(MainPlayer_C_ToolboxFix) == 0x000010, "Wrong size on MainPlayer_C_ToolboxFix");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Toolbox) == 0x000000, "Member 'MainPlayer_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Return) == 0x000008, "Member 'MainPlayer_C_ToolboxFix::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong alignment on MainPlayer_C_CanBeUsedHold");
static_assert(sizeof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong size on MainPlayer_C_CanBeUsedHold");
static_assert(offsetof(MainPlayer_C_CanBeUsedHold, Return) == 0x000000, "Member 'MainPlayer_C_CanBeUsedHold::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong alignment on MainPlayer_C_ProcessKeys");
static_assert(sizeof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong size on MainPlayer_C_ProcessKeys");
static_assert(offsetof(MainPlayer_C_ProcessKeys, Return) == 0x000000, "Member 'MainPlayer_C_ProcessKeys::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetOnlyKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetOnlyKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetOnlyKey");
static_assert(sizeof(MainPlayer_C_GetOnlyKey) == 0x000010, "Wrong size on MainPlayer_C_GetOnlyKey");
static_assert(offsetof(MainPlayer_C_GetOnlyKey, Key) == 0x000000, "Member 'MainPlayer_C_GetOnlyKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPath) == 0x000008, "Wrong alignment on MainPlayer_C_SetPath");
static_assert(sizeof(MainPlayer_C_SetPath) == 0x000018, "Wrong size on MainPlayer_C_SetPath");
static_assert(offsetof(MainPlayer_C_SetPath, Path) == 0x000000, "Member 'MainPlayer_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPath, Return) == 0x000010, "Member 'MainPlayer_C_SetPath::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getActionOptions
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
};
static_assert(alignof(MainPlayer_C_GetActionOptions) == 0x000008, "Wrong alignment on MainPlayer_C_GetActionOptions");
static_assert(sizeof(MainPlayer_C_GetActionOptions) == 0x000048, "Wrong size on MainPlayer_C_GetActionOptions");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Player) == 0x000000, "Member 'MainPlayer_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Component) == 0x000008, "Member 'MainPlayer_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Actor) == 0x000010, "Member 'MainPlayer_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options) == 0x000018, "Member 'MainPlayer_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options_enum) == 0x000028, "Member 'MainPlayer_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'MainPlayer_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_GascanFuel) == 0x000008, "Wrong alignment on MainPlayer_C_GascanFuel");
static_assert(sizeof(MainPlayer_C_GascanFuel) == 0x000010, "Wrong size on MainPlayer_C_GascanFuel");
static_assert(offsetof(MainPlayer_C_GascanFuel, Gascan) == 0x000000, "Member 'MainPlayer_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GascanFuel, Fueled) == 0x000008, "Member 'MainPlayer_C_GascanFuel::Fueled' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong alignment on MainPlayer_C_SkipRadial");
static_assert(sizeof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong size on MainPlayer_C_SkipRadial");
static_assert(offsetof(MainPlayer_C_SkipRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipRadial::Skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong alignment on MainPlayer_C_CanBePutInContainer");
static_assert(sizeof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong size on MainPlayer_C_CanBePutInContainer");
static_assert(offsetof(MainPlayer_C_CanBePutInContainer, Return) == 0x000000, "Member 'MainPlayer_C_CanBePutInContainer::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AsProp) == 0x000008, "Wrong alignment on MainPlayer_C_AsProp");
static_assert(sizeof(MainPlayer_C_AsProp) == 0x000008, "Wrong size on MainPlayer_C_AsProp");
static_assert(offsetof(MainPlayer_C_AsProp, Return) == 0x000000, "Member 'MainPlayer_C_AsProp::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanPickup) == 0x000001, "Wrong alignment on MainPlayer_C_CanPickup");
static_assert(sizeof(MainPlayer_C_CanPickup) == 0x000001, "Wrong size on MainPlayer_C_CanPickup");
static_assert(offsetof(MainPlayer_C_CanPickup, Return) == 0x000000, "Member 'MainPlayer_C_CanPickup::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_NoRespawn) == 0x000001, "Wrong alignment on MainPlayer_C_NoRespawn");
static_assert(sizeof(MainPlayer_C_NoRespawn) == 0x000002, "Wrong size on MainPlayer_C_NoRespawn");
static_assert(offsetof(MainPlayer_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'MainPlayer_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_NoRespawn, Return) == 0x000001, "Member 'MainPlayer_C_NoRespawn::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.lookAt
// 0x00B0 (0x00B0 - 0x0000)
struct MainPlayer_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3726[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LookAt) == 0x000008, "Wrong alignment on MainPlayer_C_LookAt");
static_assert(sizeof(MainPlayer_C_LookAt) == 0x0000B0, "Wrong size on MainPlayer_C_LookAt");
static_assert(offsetof(MainPlayer_C_LookAt, Player) == 0x000000, "Member 'MainPlayer_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Hit) == 0x000008, "Member 'MainPlayer_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Return) == 0x000090, "Member 'MainPlayer_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Text) == 0x000098, "Member 'MainPlayer_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'MainPlayer_C_LookAt::boundObjectReplace' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong alignment on MainPlayer_C_IsButtonUsed");
static_assert(sizeof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong size on MainPlayer_C_IsButtonUsed");
static_assert(offsetof(MainPlayer_C_IsButtonUsed, Failed) == 0x000000, "Member 'MainPlayer_C_IsButtonUsed::Failed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.CanJumpInternal
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_CanJumpInternal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanJumpInternal) == 0x000001, "Wrong alignment on MainPlayer_C_CanJumpInternal");
static_assert(sizeof(MainPlayer_C_CanJumpInternal) == 0x000002, "Wrong size on MainPlayer_C_CanJumpInternal");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, ReturnValue) == 0x000000, "Member 'MainPlayer_C_CanJumpInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, CallFunc_IsMovingOnGround_ReturnValue) == 0x000001, "Member 'MainPlayer_C_CanJumpInternal::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

}

