#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_physSound_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_equipment_structs.hpp"
#include "Struct_prop_structs.hpp"
#include "Struct_weapon_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "Struct_propDynamic_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "Enum_difficulty_structs.hpp"


namespace SDK::Params
{

// Function mainPlayer.mainPlayer_C.flashlightStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_FlashlightStateChanged__DelegateSignature final
{
public:
	class USpotLightComponent*                    Light;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(sizeof(MainPlayer_C_FlashlightStateChanged__DelegateSignature) == 0x000010, "Wrong size on MainPlayer_C_FlashlightStateChanged__DelegateSignature");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Light) == 0x000000, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Light' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightStateChanged__DelegateSignature, Visible) == 0x000008, "Member 'MainPlayer_C_FlashlightStateChanged__DelegateSignature::Visible' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_E__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_E__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_E__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_E__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_E__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_E__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_E__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.mouse_xy__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Mouse_xy__DelegateSignature final
{
public:
	struct FVector2D                              MouseXY;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Mouse_xy__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_Mouse_xy__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Mouse_xy__DelegateSignature, MouseXY) == 0x000000, "Member 'MainPlayer_C_Mouse_xy__DelegateSignature::MouseXY' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.shift__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Shift__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Shift__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Shift__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Shift__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Shift__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Shift__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_alt__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_alt__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_alt__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_alt__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_alt__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_alt__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_alt__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_alt__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.montageNotify__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_MontageNotify__DelegateSignature final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000004, "Wrong alignment on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(sizeof(MainPlayer_C_MontageNotify__DelegateSignature) == 0x000008, "Wrong size on MainPlayer_C_MontageNotify__DelegateSignature");
static_assert(offsetof(MainPlayer_C_MontageNotify__DelegateSignature, Param_Name) == 0x000000, "Member 'MainPlayer_C_MontageNotify__DelegateSignature::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.space__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Space__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Space__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Space__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Space__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Space__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Space__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Space__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_R__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_R__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_R__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_R__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_R__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_R__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_R__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_R__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.used_RMB__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Used_RMB__DelegateSignature final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Used_RMB__DelegateSignature) == 0x000001, "Wrong alignment on MainPlayer_C_Used_RMB__DelegateSignature");
static_assert(sizeof(MainPlayer_C_Used_RMB__DelegateSignature) == 0x000001, "Wrong size on MainPlayer_C_Used_RMB__DelegateSignature");
static_assert(offsetof(MainPlayer_C_Used_RMB__DelegateSignature, Pressed) == 0x000000, "Member 'MainPlayer_C_Used_RMB__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.anyKeyEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct MainPlayer_C_AnyKeyEvent__DelegateSignature final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AnyKeyEvent__DelegateSignature) == 0x000008, "Wrong alignment on MainPlayer_C_AnyKeyEvent__DelegateSignature");
static_assert(sizeof(MainPlayer_C_AnyKeyEvent__DelegateSignature) == 0x000020, "Wrong size on MainPlayer_C_AnyKeyEvent__DelegateSignature");
static_assert(offsetof(MainPlayer_C_AnyKeyEvent__DelegateSignature, Key) == 0x000000, "Member 'MainPlayer_C_AnyKeyEvent__DelegateSignature::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AnyKeyEvent__DelegateSignature, Pressed) == 0x000018, "Member 'MainPlayer_C_AnyKeyEvent__DelegateSignature::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ExecuteUbergraph_mainPlayer
// 0x5CB0 (0x5CB0 - 0x0000)
struct MainPlayer_C_ExecuteUbergraph_mainPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0008(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0030(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0048(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0078(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0090(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x00A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x00C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x00D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x00F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0108(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0120(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0138(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0150(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0180(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0198(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x01B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x01C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0210(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x0230(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x0258(0x0018)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x02A8(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x02D8(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_CustomEvent_damage;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF[0x1];                                      // 0x02EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return;                          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_52;                    // 0x0340(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_53;                    // 0x0358(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_checkEquip_empty;                         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0xF];                                      // 0x0371(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output;                        // 0x0380(0x00F0)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0470(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_1;                   // 0x04C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x04E0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                K2Node_DynamicCast_AsProp;                         // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x050C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0532(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0533(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0x2];                                      // 0x0542(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x054C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x05C8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x05D8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA[0x2];                                      // 0x05EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x060C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0638(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0654(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_8;                            // 0x0670(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0688(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReleaseKey_ReturnValue;                   // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PressKey_ReturnValue;                     // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69B[0x5];                                      // 0x069B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x06A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x06D0(0x0018)(HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_2;                // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_StartingSection_1;              // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_call;                           // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_name;                           // 0x070C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_1;                // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_reload;                         // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_attack_hit;                               // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732[0x2];                                      // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_attack_OutputPin;                         // 0x0734(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_attack_ReturnValue;                       // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsNail;                    // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x07D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3[0x1];                                      // 0x07D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x07DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x07E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x07F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0800(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0820(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x083C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0848(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0854(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0868(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892[0x6];                                      // 0x0892(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0898(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A9[0x7];                                      // 0x08A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UblackScreen_C*                         CallFunc_Create_ReturnValue;                       // 0x08B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_2;                // 0x08B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x08CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x08D8(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x08F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0980(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0988(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0992(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0993(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x3];                                      // 0x0999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x09A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A2[0x6];                                      // 0x09A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_54;                    // 0x09A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_55;                    // 0x09C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_tryGetNail_success;                       // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_tryGetNail_nailClass;                     // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x09E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x09F8(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_A08[0x8];                                      // 0x0A08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0A10(0x0030)(IsPlainOldData, NoDestructor)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_2;                   // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANail_C*                                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A58[0x8];                                      // 0x0A58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item;                           // 0x0A60(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_nailNail_fail;                            // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0B54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0B5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0B5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5E[0x2];                                      // 0x0B5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6A[0x2];                                      // 0x0B6A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0B6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0B78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0B90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0B9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0BA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0BB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0C04(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0C0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0C14(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0C24(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0C2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x0C38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x0C44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0C50(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0C60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0C6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0xC];                                      // 0x0C84(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0C90(0x0030)(IsPlainOldData, NoDestructor)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCA[0x2];                                      // 0x0CCA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0CCC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_6;                             // 0x0D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_8;                                // 0x0D64(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact_1;                             // 0x0DEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return_1;                        // 0x0DF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFA[0x6];                                      // 0x0DFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_1;                         // 0x0E00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0E11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E12[0x2];                                      // 0x0E12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0E14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0E2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0E38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__1_Object;     // 0x0E44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__2_Object;     // 0x0E50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5C[0x4];                                      // 0x0E5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E68[0x8];                                      // 0x0E68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0E70(0x0030)(IsPlainOldData, NoDestructor)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_3;                   // 0x0EA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0EB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EBD[0x3];                                      // 0x0EBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0EC0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0F48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0F54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0F60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0F6C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0F7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F7D[0x3];                                      // 0x0F7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F89[0x3];                                      // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0F8C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F94[0x4];                                      // 0x0F94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0FA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0FAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB8[0x8];                                      // 0x0FB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0FC0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor_1;               // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_passOut;                        // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF9[0x3];                                      // 0x0FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0FFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1004[0x4];                                     // 0x1004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x1008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x1018(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x1028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x1039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103A[0x6];                                     // 0x103A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x1048(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_4;                   // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_106A[0x2];                                     // 0x106A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x106C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x1078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x107C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_1;       // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x1088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x1089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x108A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_108B[0x5];                                     // 0x108B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x1090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A1[0x3];                                     // 0x10A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x10A4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x10B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B5[0x3];                                     // 0x10B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x10B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C9[0x7];                                     // 0x10C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x10D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x10DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10DB[0x5];                                     // 0x10DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x10E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E8[0x8];                                     // 0x10E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x10F0(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1171[0x7];                                     // 0x1171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x1178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x1180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x1188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x1190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x119C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_processArmor_damage;                      // 0x1224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x1225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x1226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1227[0x1];                                     // 0x1227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x1228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x122C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x1230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x123C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x1248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x1254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x1260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x1268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x1270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x1278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x1280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x1284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x1288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x128C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x1298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x12A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x12B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x12B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x12C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x12C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x12C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x12CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x12D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x12D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D5[0x3];                                     // 0x12D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x12D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x12E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EC[0x4];                                     // 0x12EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x12F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F8[0x8];                                     // 0x12F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1300(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UKel_lmao_Skeleton_AnimBlueprint_C*     K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint; // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1339[0x3];                                     // 0x1339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x133C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x1348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x134C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x1350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x1354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x135C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135D[0x3];                                     // 0x135D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x1360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x1368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x1370(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1381[0x7];                                     // 0x1381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x1388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x1390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1399[0x3];                                     // 0x1399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x139C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A4[0x4];                                     // 0x13A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x13A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x13B0(0x0010)(ZeroConstructor, NoDestructor)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_5;                   // 0x13C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x13C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13C9[0x3];                                     // 0x13C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x13CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x13D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x13DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x13E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x13F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x1488(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x1510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x151C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x1528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x1534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x1538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x153A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_death;                          // 0x153B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x153C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1545[0x3];                                     // 0x1545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x1548(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1559[0x3];                                     // 0x1559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x155C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x1560(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x1578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x1579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant_;                      // 0x157A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x157B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x157C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_3;                              // 0x1588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x158A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_158B[0x5];                                     // 0x158B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x1590(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x15A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             Temp_byte_Variable_4;                              // 0x15A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15AA[0x2];                                     // 0x15AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x15AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x15B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x15B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B6[0x2];                                     // 0x15B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_2;                   // 0x15B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x15C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x15C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             Temp_byte_Variable_5;                              // 0x15CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x15CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x15CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x15CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15CE[0x2];                                     // 0x15CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x15D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x15DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x15E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x15F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x1600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x1604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x1608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x160C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x1610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x1614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x1618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x161C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x1620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x1624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x1628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x162C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163C[0x4];                                     // 0x163C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable_4;                            // 0x1640(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x1648(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x1660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x1664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x1668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x166C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x1670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x1674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x1678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x167C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x1680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x1684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x1688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x168C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x1690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x1694(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x16A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x16AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x1734(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x17BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x17C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x17C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x17C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x17D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x17D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x1860(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult_1;     // 0x186C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x18F4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1904[0x4];                                     // 0x1904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_5;        // 0x1908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x1910(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A01[0x3];                                     // 0x1A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x1A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_6;        // 0x1A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x1A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A11[0x3];                                     // 0x1A11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x1A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x1A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x1A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2D[0x3];                                     // 0x1A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x1A30(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   Temp_struct_Variable_9;                            // 0x1A40(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x1A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x1A59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5A[0x2];                                     // 0x1A5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x1A5C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1A6C[0x4];                                     // 0x1A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x1A70(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x1A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_2;       // 0x1A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x1A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x1A84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x1A85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A86[0x2];                                     // 0x1A86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_7;        // 0x1A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x1A90(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x1AA8(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x1AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x1AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_3;       // 0x1ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x1AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x1AD4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1AE4[0x4];                                     // 0x1AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x1AE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF1[0x7];                                     // 0x1AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x1AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x1B00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x1B0C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_8;    // 0x1B1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x1B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x1B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_8;        // 0x1B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x1B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1B42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1B43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B44[0x4];                                     // 0x1B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_10;                           // 0x1B48(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_9;        // 0x1B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_2;          // 0x1B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_3;          // 0x1B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x1B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_9;    // 0x1B78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B84[0x4];                                     // 0x1B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x1B88(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x1BA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x1BAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x1BB8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x1BC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x1BD4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x1C5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5D[0x3];                                     // 0x1C5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms_3;                   // 0x1C60(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x1C72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x1C73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x1C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x1C75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C76[0x2];                                     // 0x1C76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x1C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x1C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x1C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C84[0x4];                                     // 0x1C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_10;       // 0x1C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x1C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C91[0x3];                                     // 0x1C91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x1C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x1C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x1CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x1CA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x1CB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x1CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x1CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC4[0x4];                                     // 0x1CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x1CC8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x1CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x1CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x1CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x1CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x1CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x1CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x1CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_20;       // 0x1CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x1D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_2;                     // 0x1D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_21;       // 0x1D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_22;       // 0x1D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x1D10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x1D1C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_23;       // 0x1DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_3;                     // 0x1DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAC[0x4];                                     // 0x1DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x1DB0(0x0010)(NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_24;       // 0x1DC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC4[0x4];                                     // 0x1DC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array_2;                          // 0x1DC8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x1DD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE4[0x4];                                     // 0x1DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x1DE8(0x0010)()
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x1DF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x1E04(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x1E8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E8D[0x3];                                     // 0x1E8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x1E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x1E94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E95[0x3];                                     // 0x1E95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue_2;                       // 0x1E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_3;                       // 0x1E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x1EA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x1EAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB8[0x8];                                     // 0x1EB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x1EC0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x1EF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x1EFC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x1F84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x1F90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9C[0x4];                                     // 0x1F9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x1FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x1FA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x1FB4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC4[0x4];                                     // 0x1FC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_11;                           // 0x1FC8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x1FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x1FE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE2[0x2];                                     // 0x1FE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x1FE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x1FE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x1FEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x1FF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x2004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x2010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201C[0x4];                                     // 0x201C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x2020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x2028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x2030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x2038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x2040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x2044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x2048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x204C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x2058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2064[0x4];                                     // 0x2064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_4;     // 0x2068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x2070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2071[0x3];                                     // 0x2071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x2074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x2080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x2084(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_5;                      // 0x2094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x2098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x209C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x20A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A4[0x4];                                     // 0x20A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x20A8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_25;       // 0x20C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x20C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_2;        // 0x20C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x20D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D4[0x4];                                     // 0x20D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x20D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x20E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20E9[0x3];                                     // 0x20E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x20EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F4[0x4];                                     // 0x20F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x20F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x2110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x2111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2112[0x6];                                     // 0x2112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x2118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x2120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x2124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x2130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x2138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x2144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x2150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x215C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x2160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x2164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x2168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x2174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x2180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x218C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x2190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_10;   // 0x219C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x21A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A9[0x7];                                     // 0x21A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x21B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x21B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x21C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_11;       // 0x21C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x21D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D1[0x3];                                     // 0x21D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x21D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x21E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x2210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x221C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_22A4[0xC];                                     // 0x22A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x22B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x22E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22E1[0x7];                                     // 0x22E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_5;     // 0x22E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x22F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22FC[0x4];                                     // 0x22FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_12;                           // 0x2300(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_12;       // 0x2318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x2320(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_canBackrooms_return;                      // 0x2338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2339[0x7];                                     // 0x2339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_13;       // 0x2340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x2348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2349[0x7];                                     // 0x2349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x2350(0x0010)(ReferenceParm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_14;       // 0x2360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x2368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x236C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_236D[0x3];                                     // 0x236D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x2370(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x23F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23FC[0x4];                                     // 0x23FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x2400(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x2418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x241C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241D[0x3];                                     // 0x241D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x2420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x2424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_26;       // 0x2428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x242C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242D[0x3];                                     // 0x242D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_6;     // 0x2430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x2438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x243C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_27;       // 0x2448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x244C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x2450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_28;       // 0x2454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x2458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x2468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2469[0x3];                                     // 0x2469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_29;       // 0x246C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_30;       // 0x2470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x2474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x2480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_31;       // 0x248C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_4;                 // 0x2490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x24A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x24A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A2[0x6];                                     // 0x24A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_1;                          // 0x24A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x24B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B1[0x7];                                     // 0x24B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_7;     // 0x24B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_3;      // 0x24C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_10;      // 0x24CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x24D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x24E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x24F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x24F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x24F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24F3[0x5];                                     // 0x24F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x24F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x2500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x2508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x250C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_15;       // 0x2510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x2518(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x2524(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x2530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_253C[0x4];                                     // 0x253C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_16;       // 0x2540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x2548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x254C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_8;       // 0x2550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_9;       // 0x2554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_10;      // 0x2558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255C[0x4];                                     // 0x255C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_17;       // 0x2560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x2568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2569[0x7];                                     // 0x2569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x2570(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_4;           // 0x25A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_32;       // 0x25A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x25A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_5;           // 0x25AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_33;       // 0x25B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x25B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_6;           // 0x25B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x25BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_11;      // 0x25C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25CC[0x4];                                     // 0x25CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_5;                            // 0x25D0(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_7;           // 0x25E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x25E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x266C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_266D[0x3];                                     // 0x266D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue_3;                  // 0x2670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_5;            // 0x2674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_5;         // 0x2675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2676[0x2];                                     // 0x2676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_5;                    // 0x2678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_5;                // 0x267C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_5;                // 0x2680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_5;             // 0x268C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_5;                  // 0x2698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_5;            // 0x26A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_5;                 // 0x26B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_5;                // 0x26B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_5;            // 0x26C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_5;             // 0x26C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_5;                 // 0x26D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_5;            // 0x26D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_5;               // 0x26D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_5;              // 0x26DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_5;                // 0x26E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_2;        // 0x26F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x26F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x26F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x26F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMurderKerfuroDig_C*                    K2Node_DynamicCast_AsMurder_Kerfuro_Dig;           // 0x26F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x2700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2701[0x7];                                     // 0x2701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActorChipPile_C*                       K2Node_DynamicCast_AsActor_Chip_Pile;              // 0x2708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x2710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x2711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x2712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2713[0x1];                                     // 0x2713(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x2714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x2718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x2719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271A[0x2];                                     // 0x271A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x271C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x2720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2721[0x3];                                     // 0x2721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x2724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x2730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2731[0x3];                                     // 0x2731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x2734(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x2740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2741[0xF];                                     // 0x2741(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x2750(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x2780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2781[0x7];                                     // 0x2781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x2788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x2790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2791[0x7];                                     // 0x2791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADirthole_C*                            CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x2798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_6;                              // 0x27A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A1[0x3];                                     // 0x27A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x27A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x27A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x27AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_34;       // 0x27B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_11;      // 0x27B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x27B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_2;        // 0x27BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x27C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_35;       // 0x27CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x27D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x27DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x27E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x27E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_36;       // 0x27E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x27EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x27F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x27F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_4;                     // 0x27F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_12;      // 0x27FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x2800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x2801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2802[0x2];                                     // 0x2802(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x2804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x2808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_6;                      // 0x280C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x2810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x2814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x2818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_37;       // 0x281C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_38;       // 0x2820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_39;       // 0x2824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_40;       // 0x2828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_41;       // 0x282C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x2830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_42;       // 0x2834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_43;       // 0x2838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_44;       // 0x283C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_45;       // 0x2840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_46;       // 0x2844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_47;       // 0x2848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x284C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x2850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x2854(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x2860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2861[0x3];                                     // 0x2861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_2;                  // 0x2864(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x2870(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_3;        // 0x28F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28F9[0x7];                                     // 0x28F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_18;       // 0x2900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x2908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x290C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x2910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x2914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x2918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_48;       // 0x291C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_13;      // 0x2920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_7;                              // 0x2924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x2925(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2926[0x2];                                     // 0x2926(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x2928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_49;       // 0x292C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_6;        // 0x2930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_6;                     // 0x2934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x2938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_14;      // 0x293C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_19;       // 0x2940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x2948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x294C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_11;               // 0x2950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2954[0x4];                                     // 0x2954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UblackScreen_C*                         CallFunc_Create_ReturnValue_1;                     // 0x2958(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_15;      // 0x2960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x2964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_20;       // 0x2968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_21;       // 0x2970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x2978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x2979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297A[0x2];                                     // 0x297A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_7;                      // 0x297C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_12;               // 0x2980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_1;                    // 0x2984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2985[0x3];                                     // 0x2985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x2988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_17;         // 0x298C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_18;         // 0x2990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x2994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_7;                     // 0x2998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x299C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x29A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_50;       // 0x29A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_51;       // 0x29A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AC[0x4];                                     // 0x29AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_22;       // 0x29B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_16;      // 0x29B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_19;         // 0x29BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_23;       // 0x29C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_4;       // 0x29C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x29CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x29CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29CE[0x2];                                     // 0x29CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x29D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x29DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_12;      // 0x29E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_11;   // 0x29F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x2A00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A0C[0x4];                                     // 0x2A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_13;                           // 0x2A10(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x2A28(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x2A40(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_24;       // 0x2A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x2A60(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_phys_obj;                             // 0x2A70(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable_4;                              // 0x2A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x2A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A89[0x7];                                     // 0x2A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_3;                // 0x2A90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x2AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x2AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x2AA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA3[0x5];                                     // 0x2AA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_1;                  // 0x2AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_6;                            // 0x2AB0(0x0010)(ConstParm, ReferenceParm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_25;       // 0x2AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_26;       // 0x2AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_27;       // 0x2AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_28;       // 0x2AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_14;                           // 0x2AE0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x2AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AF9[0x7];                                     // 0x2AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_29;       // 0x2B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_30;       // 0x2B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x2B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x2B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B19[0x7];                                     // 0x2B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_31;       // 0x2B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x2B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B29[0x7];                                     // 0x2B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x2B30(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_1;                              // 0x2B48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_1;                                // 0x2B54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_6;            // 0x2B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_6;         // 0x2B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B62[0x2];                                     // 0x2B62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_6;                    // 0x2B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_6;                // 0x2B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_6;                // 0x2B6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_6;             // 0x2B78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_6;                  // 0x2B84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_6;            // 0x2B90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9C[0x4];                                     // 0x2B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_6;                 // 0x2BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_6;                // 0x2BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_6;            // 0x2BB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_6;             // 0x2BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_6;                 // 0x2BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_6;            // 0x2BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_6;               // 0x2BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_6;              // 0x2BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_6;                // 0x2BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE4[0x4];                                     // 0x2BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_4;                // 0x2BE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF9[0x3];                                     // 0x2BF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x2BFC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C0C[0x4];                                     // 0x2C0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_5;                 // 0x2C10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x2C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C21[0x7];                                     // 0x2C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_2;                          // 0x2C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_6;                 // 0x2C30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x2C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lookAt_return;                            // 0x2C41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C42[0x6];                                     // 0x2C42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x2C48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x2C58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number;                            // 0x2C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x2C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x2C62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x2C63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C64[0x4];                                     // 0x2C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x2C68(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x2C80(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x2C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x2C99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9A[0x2];                                     // 0x2C9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_findFootLocation_ReturnValue;             // 0x2C9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit;                              // 0x2CA8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x2D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x2D31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D32[0x2];                                     // 0x2D32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_13;               // 0x2D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_14;               // 0x2D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x2D3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3D[0x3];                                     // 0x2D3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_2;                // 0x2D40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_8;                      // 0x2D4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x2D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D51[0x3];                                     // 0x2D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_2;            // 0x2D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_52;       // 0x2D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_7;        // 0x2D5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_17;      // 0x2D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_53;       // 0x2D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x2D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D69[0x7];                                     // 0x2D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x2D70(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x2D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_5;       // 0x2D84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x2D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x2D90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x2D9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x2DA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x2DB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_30;                    // 0x2DB8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x2DD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_9;                      // 0x2DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x2DE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x2DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x2DF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_20;         // 0x2DFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_8;                     // 0x2E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x2E04(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_15;               // 0x2E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_8;     // 0x2E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x2E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_32;       // 0x2E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_33;       // 0x2E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x2E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E39[0x7];                                     // 0x2E39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_15;                           // 0x2E40(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_31;                    // 0x2E58(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x2E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x2E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E72[0x2];                                     // 0x2E72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_18;      // 0x2E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x2E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E79[0x3];                                     // 0x2E79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_54;       // 0x2E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x2E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E81[0x3];                                     // 0x2E81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x2E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x2E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E89[0x3];                                     // 0x2E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_14;       // 0x2E8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_32;                    // 0x2E98(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x2EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x2EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x2EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x2EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         CallFunc_Array_Get_Item_1;                         // 0x2EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x2EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x2ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x2ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x2ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_21;         // 0x2ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_9;                     // 0x2EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_19;      // 0x2EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_16;               // 0x2EE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_33;                    // 0x2EE8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_55;       // 0x2F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x2F04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_17;               // 0x2F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x2F14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_20;      // 0x2F20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x2F24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_56;       // 0x2F30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x2F34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_57;       // 0x2F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_13;      // 0x2F44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x2F50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5C[0x4];                                     // 0x2F5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_34;                    // 0x2F60(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_35;                    // 0x2F78(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x2F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F91[0x7];                                     // 0x2F91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_36;                    // 0x2F98(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x2FB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x2FBC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x2FC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_2;         // 0x2FD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x2FE0(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_37;                    // 0x2FF0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x3008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3009[0x7];                                     // 0x3009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x3010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x3040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x304C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x3058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3064[0xC];                                     // 0x3064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x3070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x30A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AC[0x4];                                     // 0x30AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_38;                    // 0x30B0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_findFootLocation_ReturnValue_1;           // 0x30C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x30D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_7;            // 0x30DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_7;         // 0x30DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30DE[0x2];                                     // 0x30DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_7;                    // 0x30E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_7;                // 0x30E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_7;                // 0x30E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_7;             // 0x30F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_7;                  // 0x3100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_7;            // 0x310C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_7;                 // 0x3118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_7;                // 0x3120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_7;            // 0x3128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_7;             // 0x3130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_7;                 // 0x3138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_7;            // 0x313C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_7;               // 0x3140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_7;              // 0x3144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_7;                // 0x3150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315C[0x4];                                     // 0x315C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x3160(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x3190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x319C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x31A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x31B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B5[0xB];                                     // 0x31B5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x31C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x31F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x31FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31FD[0x3];                                     // 0x31FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x3200(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x3210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x3218(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_5;                              // 0x3228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x3230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3231[0x3];                                     // 0x3231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x3234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x323C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x324C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3254[0x4];                                     // 0x3254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_39;                    // 0x3258(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_40;                    // 0x3270(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_41;                    // 0x3288(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_34;       // 0x32A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_35;       // 0x32A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_42;                    // 0x32B0(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x32C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_43;                    // 0x32D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_skipGrabRadial_skip;                      // 0x32F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F1[0x7];                                     // 0x32F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_44;                    // 0x32F8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_LowEntry_LocalVariable_Value__3_Object;     // 0x3310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3311[0x7];                                     // 0x3311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_45;                    // 0x3318(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x3330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x3331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3332[0x6];                                     // 0x3332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_46;                    // 0x3338(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x3350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_8;            // 0x3351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_8;         // 0x3352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3353[0x1];                                     // 0x3353(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_8;                    // 0x3354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_8;                // 0x3358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_8;                // 0x335C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_8;             // 0x3368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_8;                  // 0x3374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_8;            // 0x3380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338C[0x4];                                     // 0x338C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_8;                 // 0x3390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_8;                // 0x3398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_8;            // 0x33A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_8;             // 0x33A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_8;                 // 0x33B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_8;            // 0x33B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_8;               // 0x33B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_8;              // 0x33BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_8;                // 0x33C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x33D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ;                           // 0x33D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D6[0x2];                                     // 0x33D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_47;                    // 0x33D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_48;                    // 0x33F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x3408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x3];                                     // 0x3409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x340C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x3414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3415[0x3];                                     // 0x3415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x3418(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x3428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x3429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342A[0x6];                                     // 0x342A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_49;                    // 0x3430(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_36;       // 0x3448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_50;                    // 0x3450(0x0018)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x3468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_22;         // 0x3470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_4;                       // 0x3474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_7;                 // 0x3478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x3488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3489[0x7];                                     // 0x3489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_37;       // 0x3490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming_2;                    // 0x3498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_collectObject_collected;                  // 0x3499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349A[0x6];                                     // 0x349A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_38;       // 0x34A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_51;                    // 0x34A8(0x0018)(HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_39;       // 0x34C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x34C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C9[0x7];                                     // 0x34C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDynPhys_obj;                      // 0x34D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x34E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E1[0x7];                                     // 0x34E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_2;            // 0x34E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_9;     // 0x34F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start_2;                              // 0x34F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end_2;                                // 0x3504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_15;       // 0x3510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x351C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x35A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x35A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_9;            // 0x35A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_9;         // 0x35A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_9;                    // 0x35A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_9;                // 0x35AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_9;                // 0x35B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_9;             // 0x35BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_9;                  // 0x35C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_9;            // 0x35D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_9;                 // 0x35E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_9;                // 0x35E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_9;            // 0x35F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_9;             // 0x35F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_9;                 // 0x3600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_9;            // 0x3604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_9;               // 0x3608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_9;              // 0x360C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_9;                // 0x3618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x3624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_dontWakeup;                     // 0x3625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_alt;                            // 0x3626(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_dontCollect;                    // 0x3627(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_updEquip_return_2;                        // 0x3628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3629[0x7];                                     // 0x3629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug_2;                         // 0x3630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_6;                   // 0x3640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x3648(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3658[0x8];                                     // 0x3658(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x3660(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_checkEquip_empty_1;                       // 0x3690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3691[0xF];                                     // 0x3691(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_checkEquip_Output_1;                      // 0x36A0(0x00F0)(HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x3790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x379C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x37A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x37B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x37C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x37CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x37D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x37E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x3810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x3818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x3820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3824[0x4];                                     // 0x3824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_2;                 // 0x3828(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x3838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return_1;                        // 0x3839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_1;             // 0x383A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383B[0x1];                                     // 0x383B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x383C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x3848(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue_10;                     // 0x38D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_10;                    // 0x38D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x38D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x38E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_396C[0x4];                                     // 0x396C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_40;       // 0x3970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_lookAt_return_1;                          // 0x3978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3979[0x7];                                     // 0x3979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text_1;                            // 0x3980(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace_1;              // 0x3990(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number_1;                          // 0x3998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x3999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399A[0x2];                                     // 0x399A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x399C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x39AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AD[0x3];                                     // 0x39AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_12;   // 0x39B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x39BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3A44[0x4];                                     // 0x3A44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_2;                           // 0x3A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_3;        // 0x3A50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x3A5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5D[0x3];                                     // 0x3A5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_14;      // 0x3A60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x3A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6D[0x3];                                     // 0x3A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_15;      // 0x3A70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x3A7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x3A88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_4;      // 0x3A94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_16;       // 0x3AA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_16;      // 0x3AAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x3AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x3AC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x3AD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x3ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_4;    // 0x3AE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_23;         // 0x3AEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_11;                    // 0x3AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x3AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x3B00(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_4dir_return;                              // 0x3B88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x3B94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_5;    // 0x3BA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x3BAC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_CustomEvent_hitResult;                      // 0x3C34(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_10;           // 0x3CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_10;        // 0x3CBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBE[0x2];                                     // 0x3CBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_10;                   // 0x3CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_10;               // 0x3CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_10;               // 0x3CC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_10;            // 0x3CD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_10;                 // 0x3CE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_10;           // 0x3CEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_10;                // 0x3CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_10;               // 0x3D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_10;           // 0x3D08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_10;            // 0x3D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_10;                // 0x3D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_10;           // 0x3D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_10;              // 0x3D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_10;             // 0x3D24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_10;               // 0x3D30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x3D3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x3D48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_1;        // 0x3D50(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x3D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x3D59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5A[0x2];                                     // 0x3D5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody_1; // 0x3D5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue_1; // 0x3D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6C[0x4];                                     // 0x3D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x3D70(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_3;     // 0x3DA0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x3E28(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x3EB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_4;     // 0x3EBC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Vector_Distance_ReturnValue_3;            // 0x3F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_6;       // 0x3F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F49[0x7];                                     // 0x3F49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_16;                           // 0x3F50(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_56;                    // 0x3F68(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_57;                    // 0x3F80(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit_1;                            // 0x3F98(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x4020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x4024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x4028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x402C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x4030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x4034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x4038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x403C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x4040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_24;         // 0x4044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x4048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit_2;                            // 0x404C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_25;         // 0x40D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_26;         // 0x40D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x40DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x40E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x40E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40E2[0x6];                                     // 0x40E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array_3;                          // 0x40E8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_isDreaming_dreaming_3;                    // 0x40F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x40F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40FA[0x6];                                     // 0x40FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_2;                  // 0x4100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x4108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_410C[0x4];                                     // 0x410C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_41;       // 0x4110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x4118(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_11;           // 0x41A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_11;        // 0x41A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A2[0x2];                                     // 0x41A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_11;                   // 0x41A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_11;               // 0x41A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_11;               // 0x41AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_11;            // 0x41B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_11;                 // 0x41C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_11;           // 0x41D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DC[0x4];                                     // 0x41DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_11;                // 0x41E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_11;               // 0x41E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_11;           // 0x41F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_11;            // 0x41F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_11;                // 0x4200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_11;           // 0x4204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_11;              // 0x4208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_11;             // 0x420C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_11;               // 0x4218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4224[0x4];                                     // 0x4224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_42;       // 0x4228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_8;                 // 0x4230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x4240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_landedOn_ignoreFallDamage;                // 0x4241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x4242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4243[0x5];                                     // 0x4243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_9;                 // 0x4248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x4258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_3;     // 0x4259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_landedOn_ignoreFallDamage_1;              // 0x425A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x425B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425C[0x4];                                     // 0x425C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_43;       // 0x4260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasEquipment_return;                      // 0x4268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4269[0x3];                                     // 0x4269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_18;               // 0x426C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x4270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasEquipment_return_1;                    // 0x4274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_hasEquipment_return_2;                    // 0x4275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4276[0x2];                                     // 0x4276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_7;                   // 0x4278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_11;                     // 0x4280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_27;         // 0x4284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x4288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4289[0x3];                                     // 0x4289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_9;             // 0x428C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isUnderwater_ReturnValue;                 // 0x4290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_10;        // 0x4291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4292[0x2];                                     // 0x4292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_21;      // 0x4294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_58;       // 0x4298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_11;        // 0x429C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429D[0x3];                                     // 0x429D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_6;       // 0x42A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x42A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x42A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AC[0x4];                                     // 0x42AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x42B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_4;        // 0x42B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_5;      // 0x42C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x42D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x42DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x42E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_fuel;                                 // 0x42F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_22;      // 0x42F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x42FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_3;         // 0x4300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             K2Node_Select_Default_3;                           // 0x430C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__1;                    // 0x430D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 K2Node_Select_Default_4;                           // 0x430E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x430F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x4310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x4311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_4;                    // 0x4312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4313[0x5];                                     // 0x4313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_44;       // 0x4318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x4320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x4328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x4330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x4331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x4332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4333[0x1];                                     // 0x4333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x4334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x4338(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x43C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_6;    // 0x43C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_LowEntry_LocalVariable_Value__4_Object;     // 0x43D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x43E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x4468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x4469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_446A[0x2];                                     // 0x446A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_StartingSection;                // 0x446C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x4474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4475[0x3];                                     // 0x4475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x4478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_5;                           // 0x4480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x4488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4489[0x7];                                     // 0x4489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_1;                        // 0x4490(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_6;                              // 0x44A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A1[0x7];                                     // 0x44A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_6;                           // 0x44A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_getActionOptions_options;                 // 0x44B0(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               CallFunc_getActionOptions_options_enum;            // 0x44C0(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_getActionOptions_optionsNamesOverlay;     // 0x44D0(0x0010)(ReferenceParm)
	uint8                                         CallFunc_getActionOptions_number;                  // 0x44E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E1[0x3];                                     // 0x44E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_13;   // 0x44E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_17;          // 0x44F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_2;     // 0x44FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_2; // 0x4584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4585[0x3];                                     // 0x4585(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x4588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x458C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x4590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x4594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x4595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x4596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4597[0x1];                                     // 0x4597(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_step_OutHit_3;                            // 0x4598(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_2;                         // 0x4620(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x4630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4631[0x7];                                     // 0x4631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_7;                            // 0x4638(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_8;                            // 0x4648(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_9;                            // 0x4658(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_17;       // 0x4668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x4674(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x46FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FD[0x3];                                     // 0x46FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__5_Object;     // 0x4700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x470C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x4710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x4714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_12;           // 0x4718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_12;        // 0x4719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471A[0x2];                                     // 0x471A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_12;                   // 0x471C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_12;               // 0x4720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_12;               // 0x4724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_12;            // 0x4730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_12;                 // 0x473C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_12;           // 0x4748(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4754[0x4];                                     // 0x4754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_12;                // 0x4758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_12;               // 0x4760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_12;           // 0x4768(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_12;            // 0x4770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_12;                // 0x4778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_12;           // 0x477C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_12;              // 0x4780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_12;             // 0x4784(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_12;               // 0x4790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x479C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_1;     // 0x479D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x479E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479F[0x1];                                     // 0x479F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_3;     // 0x47A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_3; // 0x4828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_13;           // 0x4829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_13;        // 0x482A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_482B[0x1];                                     // 0x482B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_13;                   // 0x482C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_13;               // 0x4830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_13;               // 0x4834(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_13;            // 0x4840(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_13;                 // 0x484C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_13;           // 0x4858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4864[0x4];                                     // 0x4864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_13;                // 0x4868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_13;               // 0x4870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_13;           // 0x4878(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_13;            // 0x4880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_13;                // 0x4888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_13;           // 0x488C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_13;              // 0x4890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_13;             // 0x4894(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_13;               // 0x48A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x48AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x4934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4935[0x3];                                     // 0x4935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_6;      // 0x4938(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_17;      // 0x4944(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x4950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x4954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x4958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_18;       // 0x495C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_5;                        // 0x4968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_18;          // 0x496C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_12;        // 0x4978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4979[0x3];                                     // 0x4979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_19;          // 0x497C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_20;          // 0x4988(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4994[0x4];                                     // 0x4994(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj_2;                        // 0x4998(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_4;     // 0x49A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_4; // 0x4A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x4A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_14;           // 0x4A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_14;        // 0x4A33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_14;                   // 0x4A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_14;               // 0x4A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_14;               // 0x4A3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_14;            // 0x4A48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_14;                 // 0x4A54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_14;           // 0x4A60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6C[0x4];                                     // 0x4A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_14;                // 0x4A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_14;               // 0x4A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_14;           // 0x4A80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_14;            // 0x4A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_14;                // 0x4A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_14;           // 0x4A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_14;              // 0x4A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_14;             // 0x4A9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_14;               // 0x4AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x4AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AB5[0x3];                                     // 0x4AB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x4AB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x4AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AC1[0x7];                                     // 0x4AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_2;        // 0x4AC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x4AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_2;     // 0x4AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD2[0x2];                                     // 0x4AD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_21;          // 0x4AD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x4AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AE1[0x3];                                     // 0x4AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x4AE4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x4B6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B6D[0x3];                                     // 0x4B6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__6_Object;     // 0x4B70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x4B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x4B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x4B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x4B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B89[0x3];                                     // 0x4B89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x4B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x4B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B91[0x3];                                     // 0x4B91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x4B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x4B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_2;                  // 0x4B9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9D[0x3];                                     // 0x4B9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x4BA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BAC[0x4];                                     // 0x4BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x4BB0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x4BE0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_5;  // 0x4C68(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x4CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x4CF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x4CF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CF3[0x5];                                     // 0x4CF3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main_3;                  // 0x4CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x4D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x4D04(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x4D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x4D0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D0E[0x2];                                     // 0x4D0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x4D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x4D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x4D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x4D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_6;  // 0x4D20(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_7;  // 0x4DA8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x4E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E38[0x8];                                     // 0x4E38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_4;               // 0x4E40(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x4E70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x4E7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x4E88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x4E94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x4EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x4EA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x4EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x4EAC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x4F34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F35[0x3];                                     // 0x4F35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x4F38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x4F44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F45[0x3];                                     // 0x4F45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x4F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x4F50(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Temp_float_Variable;                               // 0x4FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FDC[0x4];                                     // 0x4FDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x4FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x4FE8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x4FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FF9[0x3];                                     // 0x4FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x4FFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x5004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5005[0x3];                                     // 0x5005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_5;                // 0x5008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x5018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5019[0x7];                                     // 0x5019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_6;                // 0x5020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x5030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x5031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_canBeUsedHold_return;                     // 0x5032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5033[0x1];                                     // 0x5033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x5034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x5044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5045[0x3];                                     // 0x5045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x5048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x5050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x5051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5052[0x6];                                     // 0x5052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_7;                // 0x5058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x5068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5069[0x3];                                     // 0x5069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x506C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x5070(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x5080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x5088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x5090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x5098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_color;                                // 0x509C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50AC[0x4];                                     // 0x50AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Event_key_2;                                // 0x50B0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed_1;                            // 0x50C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C9[0x7];                                     // 0x50C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x50D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook_1;                               // 0x50D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_clean_1;                              // 0x50E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E4[0x4];                                     // 0x50E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_18;                            // 0x50E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x50F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_17;                            // 0x50F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x5100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_clean;                                // 0x5188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5189[0x3];                                     // 0x5189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_location_1;                           // 0x518C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_5;                             // 0x5198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519C[0x4];                                     // 0x519C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_16;                            // 0x51A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_volume;                               // 0x51A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AC[0x4];                                     // 0x51AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_15;                            // 0x51B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x51B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name_1;                               // 0x5240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature_1;                        // 0x5250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x5254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x5258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x525C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_526C[0x4];                                     // 0x526C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x5270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key_1;                                // 0x5278(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x5290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5291[0x7];                                     // 0x5291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x5298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x52A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x52A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x52B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B4[0x4];                                     // 0x52B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x52B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x52C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_4;                             // 0x52C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location;                             // 0x52CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x52D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x52E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x52E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x52F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x5378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5379[0x3];                                     // 0x5379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_damage_3;                             // 0x537C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hot;                                  // 0x5380(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_2;                             // 0x5408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_540C[0x4];                                     // 0x540C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x5410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x5418(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_key;                                  // 0x54A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_static;                               // 0x54B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x54B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x54B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_activate;                             // 0x54B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_damage_1;                             // 0x54B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x54B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_actor;                                // 0x5540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact;                               // 0x5548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5554[0x4];                                     // 0x5554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x5558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x5560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x5568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x5570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x5578(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x5600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5604[0x4];                                     // 0x5604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x5608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_name;                                 // 0x5610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_kick;                                 // 0x5618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5619[0x3];                                     // 0x5619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x561C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5624[0x4];                                     // 0x5624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x5628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x5630(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   Temp_name_Variable_9;                              // 0x56B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x56C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x56D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D1[0x3];                                     // 0x56D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x56D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x56DC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x56EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x56F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x56F8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x5708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x5710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x5718(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x5728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5729[0x3];                                     // 0x5729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x572C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x5730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x5731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5732[0x2];                                     // 0x5732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x5734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x5738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x5740(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x5750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x5758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x575C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable_3;                             // 0x576C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_10;                           // 0x5770(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x5780(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x5808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5809[0x7];                                     // 0x5809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_58;                    // 0x5810(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_15;           // 0x5828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_15;        // 0x5829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582A[0x2];                                     // 0x582A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_15;                   // 0x582C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_15;               // 0x5830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_15;               // 0x5834(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_15;            // 0x5840(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_15;                 // 0x584C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_15;           // 0x5858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5864[0x4];                                     // 0x5864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_15;                // 0x5868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_15;               // 0x5870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_15;           // 0x5878(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_15;            // 0x5880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_15;                // 0x5888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_15;           // 0x588C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_15;              // 0x5890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_15;             // 0x5894(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_15;               // 0x58A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x58AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_DynamicCast_AsWater_Volume;                 // 0x58B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x58B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58B9[0x7];                                     // 0x58B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x58C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x58C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58CC[0x4];                                     // 0x58CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_59;                    // 0x58D0(0x0018)(HasGetValueTypeHash)
	Enum_difficulty                               Temp_byte_Variable_8;                              // 0x58E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E9[0x3];                                     // 0x58E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_7;                           // 0x58EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x58F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58F1[0x3];                                     // 0x58F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_59;       // 0x58F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_60;       // 0x58F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_7;       // 0x58FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x5900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x5904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x5908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x590C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x5910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isBuoyant__buoyant__2;                    // 0x5914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5915[0x3];                                     // 0x5915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x5918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591C[0x4];                                     // 0x591C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x5920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_45;       // 0x5928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x5930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5931[0x3];                                     // 0x5931(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_9;                             // 0x5934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_14;                      // 0x5938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x593C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_593D[0x3];                                     // 0x593D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_15;                      // 0x5940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x5944(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_8;  // 0x5950(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_difficulty                               Temp_byte_Variable_9;                              // 0x59D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x59D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59DA[0x2];                                     // 0x59DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_8;                           // 0x59DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_61;       // 0x59E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_62;       // 0x59E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x59E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut_8;       // 0x59EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x59F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x59F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59F5[0x3];                                     // 0x59F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_46;       // 0x59F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x5A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x5A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A02[0x2];                                     // 0x5A02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x5A04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_9;  // 0x5A10(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x5A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_80;                   // 0x5A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9A[0x6];                                     // 0x5A9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_10;    // 0x5AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_19;       // 0x5AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_getEvent_isEventActive;                   // 0x5AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x5AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_5;                    // 0x5AB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x5AB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x5AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB9[0x3];                                     // 0x5AB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x5ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x5AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x5AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_23;                 // 0x5AC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AC3[0x5];                                     // 0x5AC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_47;       // 0x5AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x5AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_81;                   // 0x5AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD2[0x6];                                     // 0x5AD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x5AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_48;       // 0x5AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_82;                   // 0x5AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_6;                    // 0x5AE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isExhausted_exhausted;                    // 0x5AEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_24;                 // 0x5AEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AEC[0x4];                                     // 0x5AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_10;                // 0x5AF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x5B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B01[0x7];                                     // 0x5B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_3;                          // 0x5B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_83;                   // 0x5B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming_7;                    // 0x5B11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B12[0x6];                                     // 0x5B12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_3;                 // 0x5B18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x5B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return_2;             // 0x5B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave_1;                  // 0x5B2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_84;                   // 0x5B2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__3;                    // 0x5B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isBuoyant__buoyant__4;                    // 0x5B2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2E[0x2];                                     // 0x5B2E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_12;       // 0x5B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_49;       // 0x5B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x5B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x5B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x5B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B51[0x7];                                     // 0x5B51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_11;                           // 0x5B58(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x5B68(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x5BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BF1[0x3];                                     // 0x5BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x5BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x5BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_16;           // 0x5BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_16;        // 0x5BFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BFB[0x1];                                     // 0x5BFB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_16;                   // 0x5BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_16;               // 0x5C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_16;               // 0x5C04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_16;            // 0x5C10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_16;                 // 0x5C1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_16;           // 0x5C28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C34[0x4];                                     // 0x5C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_16;                // 0x5C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_16;               // 0x5C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_16;           // 0x5C48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_16;            // 0x5C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_16;                // 0x5C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_16;           // 0x5C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_16;              // 0x5C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_16;             // 0x5C64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_16;               // 0x5C70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x5C7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x5C7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x5C7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7F[0x1];                                     // 0x5C7F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x5C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x5C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C89[0x7];                                     // 0x5C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x5C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x5C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C99[0x3];                                     // 0x5C99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x5C9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x5CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x000010, "Wrong alignment on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(sizeof(MainPlayer_C_ExecuteUbergraph_mainPlayer) == 0x005CB0, "Wrong size on MainPlayer_C_ExecuteUbergraph_mainPlayer");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, EntryPoint) == 0x000000, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_11) == 0x000008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_10) == 0x000030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable) == 0x000048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_2) == 0x000060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_1) == 0x000078, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_1) == 0x000090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_9) == 0x0000A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_8) == 0x0000C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_7) == 0x0000D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_6) == 0x0000F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_2) == 0x000108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key) == 0x000120, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_5) == 0x000138, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_4) == 0x000150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_3) == 0x000168, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_3) == 0x000180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_2) == 0x000198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_4) == 0x0001B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_1) == 0x0001C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key) == 0x0001E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_5) == 0x0001F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_6) == 0x000210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_12) == 0x000230, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_13) == 0x000258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable) == 0x000270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000279, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot) == 0x000280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00028C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_7) == 0x000290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_14) == 0x0002A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisKeyEvent_AxisValue) == 0x0002C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0002C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_1) == 0x0002C5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_1) == 0x0002C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable) == 0x0002D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable) == 0x0002D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_damage) == 0x0002E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable) == 0x0002EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_1) == 0x0002ED, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_1) == 0x0002EE, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0002F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return) == 0x000320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug) == 0x000328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_1) == 0x000338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_52) == 0x000340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_53) == 0x000358, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty) == 0x000370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output) == 0x000380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_15) == 0x000470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1) == 0x000498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess) == 0x0004A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms) == 0x0004B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0004C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return) == 0x0004C1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_1) == 0x0004C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_2) == 0x0004D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_1) == 0x0004E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_2) == 0x0004F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue) == 0x0004F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_1) == 0x0004F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsProp) == 0x000500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsProp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_3) == 0x000508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue) == 0x00050C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue) == 0x000518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000520, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000528, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue) == 0x00052C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000531, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x000532, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000533, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x000540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x000541, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time) == 0x000544, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance) == 0x000548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location) == 0x00054C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x000558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal) == 0x000564, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x000570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor) == 0x000588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent) == 0x000590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem) == 0x0005A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex) == 0x0005A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x0005A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart) == 0x0005AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x0005B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array) == 0x0005C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_2) == 0x0005D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0005E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0005E9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_1) == 0x0005EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_1) == 0x0005F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_1) == 0x0005F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_1) == 0x00060C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_1) == 0x000628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_1) == 0x000630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_1) == 0x000638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_1) == 0x000640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_1) == 0x000648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_1) == 0x00064C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_1) == 0x000650, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_1) == 0x000654, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_1) == 0x000660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_8) == 0x000670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects) == 0x000688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_4) == 0x000698, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ReleaseKey_ReturnValue) == 0x000699, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ReleaseKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_PressKey_ReturnValue) == 0x00069A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_PressKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0006A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_TextToString_ReturnValue) == 0x0006B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchString_CmpSuccess) == 0x0006C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue) == 0x0006C9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_3) == 0x0006D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_2) == 0x0006E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection_1) == 0x0006F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_call) == 0x0006F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_call' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_4) == 0x000708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_name) == 0x00070C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay_1) == 0x000718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_reload) == 0x000720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_reload' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_5) == 0x000730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_hit) == 0x000731, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_OutputPin) == 0x000734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_attack_ReturnValue) == 0x0007C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_attack_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_AsNail) == 0x0007C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_AsNail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_ClassDynamicCast_bSuccess) == 0x0007D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0007D1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0007D2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_2) == 0x0007D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_2) == 0x0007D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_2) == 0x0007DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0007E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_2) == 0x0007F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_2) == 0x000810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_2) == 0x000818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_2) == 0x000820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_2) == 0x000828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_2) == 0x000830, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_2) == 0x000834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_2) == 0x000838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_2) == 0x00083C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_2) == 0x000848, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000854, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_6) == 0x000860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player) == 0x000868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_5) == 0x000878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_7) == 0x000879, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_1) == 0x000880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_6) == 0x000890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_8) == 0x000891, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_1) == 0x000898, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_7) == 0x0008A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue) == 0x0008B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_2) == 0x0008B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_8) == 0x0008C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0008CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputKeyEvent_Key_4) == 0x0008D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0008F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component) == 0x000988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_9) == 0x000990, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_9) == 0x000991, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000992, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_2) == 0x000993, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000994, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x00099C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0009A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_10) == 0x0009A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_54) == 0x0009A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_55) == 0x0009C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_success) == 0x0009D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_tryGetNail_nailClass) == 0x0009E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_tryGetNail_nailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0009E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_3) == 0x0009F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_2) == 0x000A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item) == 0x000A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_nailNail_fail) == 0x000B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_nailNail_fail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_2) == 0x000B54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess) == 0x000B5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue) == 0x000B5D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_3) == 0x000B60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000B68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000B69, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue) == 0x000B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000B78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue) == 0x000B9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000BA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000BB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000BC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000BCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x000BE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_11) == 0x000BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x000BF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_12) == 0x000C00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_5) == 0x000C04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName) == 0x000C0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000C14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_1) == 0x000C24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000C2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start) == 0x000C38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end) == 0x000C44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue) == 0x000C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x000C6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_2) == 0x000C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_1) == 0x000C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_2) == 0x000CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_3) == 0x000CC9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000CCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor_1) == 0x000D58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_6) == 0x000D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_8) == 0x000D64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact_1) == 0x000DEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_skipSetting) == 0x000DF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_1) == 0x000DF9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_1) == 0x000E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000E10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_13) == 0x000E11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000E14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll) == 0x000E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch) == 0x000E24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw) == 0x000E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000E2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__1_Object) == 0x000E44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__1_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__2_Object) == 0x000E50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__2_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000E60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetRelativeTransform_ReturnValue) == 0x000E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_3) == 0x000EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000EA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location) == 0x000F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation) == 0x000F54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale) == 0x000F60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000F6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000F7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_1) == 0x000F80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000F88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_2) == 0x000F8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000FA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000FAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_2) == 0x000FC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor_1) == 0x000FF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_passOut) == 0x000FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_passOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_6) == 0x000FFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_1) == 0x001008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x001018, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCurrentLevelName_ReturnValue) == 0x001028, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue) == 0x001038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_14) == 0x001039, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x001040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x001048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_3) == 0x001058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_4) == 0x001060, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x001068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x001069, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetComponentVelocity_ReturnValue) == 0x00106C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_1) == 0x001078, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00107C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x001080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_1) == 0x001084, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x001088, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x001089, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x00108A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_1) == 0x001090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_10) == 0x0010A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_6) == 0x0010A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave) == 0x0010B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_2) == 0x0010B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_11) == 0x0010C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return) == 0x0010D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_15) == 0x0010D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return) == 0x0010D9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_16) == 0x0010DA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x0010E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_ParticleSysParam) == 0x0010F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_17) == 0x001170, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_HitComponent) == 0x001178, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherActor) == 0x001180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_OtherComp) == 0x001188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NormalImpulse) == 0x001190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_Hit) == 0x00119C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_processArmor_damage) == 0x001224, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_processArmor_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_3) == 0x001225, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x001226, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_3) == 0x001228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_3) == 0x00122C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_3) == 0x001230, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_3) == 0x00123C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_3) == 0x001248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_3) == 0x001254, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_3) == 0x001260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_3) == 0x001268, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_3) == 0x001270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_3) == 0x001278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_3) == 0x001280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_3) == 0x001284, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_3) == 0x001288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_3) == 0x00128C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_3) == 0x001298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0012A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_2) == 0x0012B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0012B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0012C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0012C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0012C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0012CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0012D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0012D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player) == 0x0012D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0012E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAnimInstance_ReturnValue) == 0x0012F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue) == 0x001300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint) == 0x001330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsKel_Lmao_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_12) == 0x001338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00133C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X) == 0x001348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y) == 0x00134C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z) == 0x001350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_7) == 0x001354, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00135C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_MontageToPlay) == 0x001360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x001368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_7) == 0x001370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_18) == 0x001380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst) == 0x001388, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x001390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_4) == 0x00139C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x0013A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_8) == 0x0013B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_5) == 0x0013C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0013C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0013CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0013D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x0013DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0013E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue) == 0x0013F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x001488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x001510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x00151C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x001528, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_3) == 0x001534, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x001538, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_3) == 0x001539, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_4) == 0x00153A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_death) == 0x00153B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_8) == 0x00153C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_19) == 0x001544, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_9) == 0x001548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_20) == 0x001558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue) == 0x00155C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_16) == 0x001560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_4) == 0x001578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_2) == 0x001579, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant_) == 0x00157A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant_' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_5) == 0x00157B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_1) == 0x00157C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_1) == 0x001580, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_1) == 0x001584, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_3) == 0x001588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_21) == 0x001589, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_2) == 0x00158A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_17) == 0x001590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_22) == 0x0015A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_4) == 0x0015A9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_9) == 0x0015AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_23) == 0x0015B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_24) == 0x0015B5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_2) == 0x0015B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_13) == 0x0015C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_25) == 0x0015C9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_5) == 0x0015CA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_26) == 0x0015CB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_27) == 0x0015CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_3) == 0x0015CD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0015D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue) == 0x0015DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0015E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0015F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x001600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x001604, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue) == 0x001608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SignOfFloat_ReturnValue_1) == 0x00160C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue) == 0x001610, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_1) == 0x001614, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue) == 0x001618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegAcos_ReturnValue_1) == 0x00161C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x001620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x001624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x001628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00162C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_1) == 0x001630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_4) == 0x001640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_18) == 0x001648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue_1) == 0x001660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputAxisEvent_AxisValue) == 0x001664, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x001668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x00166C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x001670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x001674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x001678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x00167C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x001680, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x001684, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x001688, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x00168C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue) == 0x001690, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_2) == 0x001694, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_3) == 0x0016A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x0016AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x001734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_1) == 0x0017BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0017C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_2) == 0x0017C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_4) == 0x0017C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0017D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x0017D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x001860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddWorldRotation_SweepHitResult_1) == 0x00186C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_10) == 0x0018F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_5) == 0x001908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_settings) == 0x001910, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x001A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x001A04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_6) == 0x001A08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_28) == 0x001A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x001A14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x001A18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x001A1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_3) == 0x001A20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Percent_IntInt_ReturnValue) == 0x001A24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Percent_IntInt_ReturnValue_1) == 0x001A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_29) == 0x001A2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_11) == 0x001A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_9) == 0x001A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_30) == 0x001A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_31) == 0x001A59, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_12) == 0x001A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x001A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_3) == 0x001A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_2) == 0x001A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x001A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_32) == 0x001A84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_33) == 0x001A85, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_7) == 0x001A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_19) == 0x001A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_20) == 0x001AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x001AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_4) == 0x001AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_4) == 0x001AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_3) == 0x001ACC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x001AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_13) == 0x001AD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x001AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_34) == 0x001AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x001AF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x001B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x001B0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_8) == 0x001B1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue) == 0x001B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x001B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_8) == 0x001B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue) == 0x001B38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_35) == 0x001B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x001B41, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_3) == 0x001B42, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_4) == 0x001B43, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_10) == 0x001B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_9) == 0x001B60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_2) == 0x001B68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetInputAxisValue_ReturnValue_3) == 0x001B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetInputAxisValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector2D_ReturnValue_1) == 0x001B70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_9) == 0x001B78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_21) == 0x001B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetUpVector_ReturnValue_1) == 0x001BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x001BAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj) == 0x001BB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x001BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x001BD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x001C5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Coms_3) == 0x001C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Coms_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_14) == 0x001C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_5) == 0x001C71, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_6) == 0x001C72, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_36) == 0x001C73, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_7) == 0x001C74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default) == 0x001C75, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x001C78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x001C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x001C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_10) == 0x001C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsWalking_ReturnValue) == 0x001C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x001C94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main) == 0x001C98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_5) == 0x001CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x001CA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x001CB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue) == 0x001CBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x001CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_22) == 0x001CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_4) == 0x001CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x001CE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x001CE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue) == 0x001CEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue) == 0x001CF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x001CF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x001CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_20) == 0x001CFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_1) == 0x001D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_2) == 0x001D04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_21) == 0x001D08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_22) == 0x001D0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_5) == 0x001D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x001D1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_23) == 0x001DA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_3) == 0x001DA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_WeightedBlendable) == 0x001DB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_24) == 0x001DC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_2) == 0x001DC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_3) == 0x001DD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeStruct_WeightedBlendables) == 0x001DE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x001DF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x001E04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_37) == 0x001E8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x001E90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x001E94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_2) == 0x001E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_3) == 0x001E9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RLerp_ReturnValue) == 0x001EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VLerp_ReturnValue) == 0x001EAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_3) == 0x001EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x001EF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x001EFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_1) == 0x001F84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VInterpTo_ReturnValue_1) == 0x001F90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x001FA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x001FA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x001FB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_11) == 0x001FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_4) == 0x001FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x001FE1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_4) == 0x001FE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_4) == 0x001FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_4) == 0x001FEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_4) == 0x001FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_4) == 0x002004, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_4) == 0x002010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_4) == 0x002020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_4) == 0x002028, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_4) == 0x002030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_4) == 0x002038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_4) == 0x002040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_4) == 0x002044, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_4) == 0x002048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_4) == 0x00204C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_4) == 0x002058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_4) == 0x002068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x002070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x002074, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_1) == 0x002080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_14) == 0x002084, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_5) == 0x002094, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x002098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00209C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_DeltaSeconds) == 0x0020A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_23) == 0x0020A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_25) == 0x0020C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0020C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGameInstance_AsGame_Inst_2) == 0x0020C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGameInstance_AsGame_Inst_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_1) == 0x0020D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x0020D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0020E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_1) == 0x0020EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_24) == 0x0020F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_38) == 0x002110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_39) == 0x002111, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_2) == 0x002118, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x002120, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue) == 0x002124, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_3) == 0x002130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue) == 0x002138, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetControlRotation_ReturnValue_1) == 0x002144, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x002150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_2) == 0x00215C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_2) == 0x002160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_2) == 0x002164, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue) == 0x002168, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_6) == 0x002174, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x002180, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x00218C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_1) == 0x002190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_10) == 0x00219C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0021A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_4) == 0x0021B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player_1) == 0x0021B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetViewTarget_ReturnValue) == 0x0021C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_11) == 0x0021C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0021D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x0021D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_4) == 0x0021E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_5) == 0x002210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x00221C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_5) == 0x0022B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_40) == 0x0022E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_5) == 0x0022E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x0022F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_12) == 0x002300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_12) == 0x002318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_25) == 0x002320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBackrooms_return) == 0x002338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBackrooms_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_13) == 0x002340, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_41) == 0x002348, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_1) == 0x002350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_14) == 0x002360, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_2) == 0x002368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_5) == 0x00236C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x002370, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0023F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_26) == 0x002400, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_3) == 0x002418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_6) == 0x00241C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_4) == 0x002420, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x002424, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_26) == 0x002428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_7) == 0x00242C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_6) == 0x002430, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x002438, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_1) == 0x00243C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_27) == 0x002448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x00244C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_5) == 0x002450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_28) == 0x002454, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_3) == 0x002458, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_15) == 0x002468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_29) == 0x00246C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_30) == 0x002470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x002474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x002480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_31) == 0x00248C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_4) == 0x002490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_16) == 0x0024A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x0024A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_1) == 0x0024A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_42) == 0x0024B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_7) == 0x0024B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_3) == 0x0024C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_10) == 0x0024CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0024D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0024E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_43) == 0x0024F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_44) == 0x0024F1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x0024F2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_5) == 0x0024F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_6) == 0x002500, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x002508, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x00250C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_15) == 0x002510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_8) == 0x002518, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_9) == 0x002524, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_10) == 0x002530, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_16) == 0x002540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x002548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_6) == 0x00254C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_8) == 0x002550, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_9) == 0x002554, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_10) == 0x002558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_17) == 0x002560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_45) == 0x002568, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_6) == 0x002570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_4) == 0x0025A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_32) == 0x0025A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue) == 0x0025A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_5) == 0x0025AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_33) == 0x0025B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_1) == 0x0025B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_6) == 0x0025B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_2) == 0x0025BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_11) == 0x0025C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_5) == 0x0025D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_BoolToFloat_ReturnValue_7) == 0x0025E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_BoolToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_OutHit) == 0x0025E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x00266C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FInterpTo_ReturnValue_3) == 0x002670, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_5) == 0x002674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_5) == 0x002675, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_5) == 0x002678, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_5) == 0x00267C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_5) == 0x002680, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_5) == 0x00268C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_5) == 0x002698, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_5) == 0x0026A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_5) == 0x0026B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_5) == 0x0026B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_5) == 0x0026C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_5) == 0x0026C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_5) == 0x0026D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_5) == 0x0026D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_5) == 0x0026D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_5) == 0x0026DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_5) == 0x0026E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_2) == 0x0026F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0026F5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_6) == 0x0026F6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0026F7, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsMurder_Kerfuro_Dig) == 0x0026F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsMurder_Kerfuro_Dig' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_17) == 0x002700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsActor_Chip_Pile) == 0x002708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsActor_Chip_Pile' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_18) == 0x002710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x002711, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x002712, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue) == 0x002714, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x002718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x002719, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue_1) == 0x00271C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_8) == 0x002720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Cross_VectorVector_ReturnValue) == 0x002724, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_9) == 0x002730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x002734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_10) == 0x002740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_7) == 0x002750, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_8) == 0x002780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x002788, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_9) == 0x002790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x002798, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_6) == 0x0027A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_1) == 0x0027A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_1) == 0x0027A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_1) == 0x0027AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_34) == 0x0027B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_11) == 0x0027B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0027B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_2) == 0x0027BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_1) == 0x0027C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_35) == 0x0027CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0027D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x0027DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x0027E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue) == 0x0027E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_36) == 0x0027E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x0027EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_2) == 0x0027F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegCos_ReturnValue_1) == 0x0027F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DegSin_ReturnValue_4) == 0x0027F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DegSin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_12) == 0x0027FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsCrouching_ReturnValue) == 0x002800, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue) == 0x002801, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_7) == 0x002804, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_8) == 0x002808, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_6) == 0x00280C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x002810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_3) == 0x002814, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_4) == 0x002818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_37) == 0x00281C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_38) == 0x002820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_39) == 0x002824, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_40) == 0x002828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_41) == 0x00282C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x002830, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_42) == 0x002834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_43) == 0x002838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_44) == 0x00283C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_45) == 0x002840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_46) == 0x002844, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_47) == 0x002848, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00284C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x002850, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_7) == 0x002854, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_7) == 0x002860, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RInterpTo_ReturnValue_2) == 0x002864, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x002870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsSimulatingPhysics_ReturnValue_3) == 0x0028F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsSimulatingPhysics_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_18) == 0x002900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_9) == 0x002908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x00290C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x002910, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x002914, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_5) == 0x002918, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_48) == 0x00291C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_13) == 0x002920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_7) == 0x002924, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_10) == 0x002925, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_10) == 0x002928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_49) == 0x00292C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_6) == 0x002930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_6) == 0x002934, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x002938, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_14) == 0x00293C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_19) == 0x002940, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x002948, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x00294C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_11) == 0x002950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Create_ReturnValue_1) == 0x002958, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_15) == 0x002960, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x002964, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_20) == 0x002968, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_21) == 0x002970, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_1) == 0x002978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming) == 0x002979, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_7) == 0x00297C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_12) == 0x002980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_1) == 0x002984, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x002988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_17) == 0x00298C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_18) == 0x002990, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue) == 0x002994, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_7) == 0x002998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_6) == 0x00299C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_7) == 0x0029A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_50) == 0x0029A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_51) == 0x0029A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_22) == 0x0029B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_16) == 0x0029B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_19) == 0x0029BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_23) == 0x0029C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_4) == 0x0029C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x0029CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_46) == 0x0029CD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_1) == 0x0029D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x0029DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_12) == 0x0029E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_11) == 0x0029F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_11) == 0x002A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_13) == 0x002A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_27) == 0x002A28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_28) == 0x002A40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_24) == 0x002A58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj) == 0x002A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_phys_obj) == 0x002A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_phys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_4) == 0x002A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_1) == 0x002A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_3) == 0x002A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_19) == 0x002AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_47) == 0x002AA1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x002AA2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_1) == 0x002AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_6) == 0x002AB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_25) == 0x002AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_26) == 0x002AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_27) == 0x002AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_28) == 0x002AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_14) == 0x002AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_8) == 0x002AF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_29) == 0x002B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_30) == 0x002B08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_10) == 0x002B10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_48) == 0x002B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_31) == 0x002B20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_9) == 0x002B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_29) == 0x002B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_1) == 0x002B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_1) == 0x002B54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_6) == 0x002B60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_6) == 0x002B61, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_6) == 0x002B64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_6) == 0x002B68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_6) == 0x002B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_6) == 0x002B78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_6) == 0x002B84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_6) == 0x002B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_6) == 0x002BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_6) == 0x002BA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_6) == 0x002BB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_6) == 0x002BB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_6) == 0x002BC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_6) == 0x002BC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_6) == 0x002BC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_6) == 0x002BCC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_6) == 0x002BD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_4) == 0x002BE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_20) == 0x002BF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_15) == 0x002BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_5) == 0x002C10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_21) == 0x002C20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_2) == 0x002C28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_6) == 0x002C30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_22) == 0x002C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return) == 0x002C41, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text) == 0x002C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace) == 0x002C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_number) == 0x002C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_49) == 0x002C61, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x002C62, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_50) == 0x002C63, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x002C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_StringToText_ReturnValue_1) == 0x002C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x002C98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_11) == 0x002C99, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue) == 0x002C9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit) == 0x002CA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x002D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_11) == 0x002D31, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_13) == 0x002D34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_14) == 0x002D38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x002D3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetVelocity_ReturnValue_2) == 0x002D40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetVelocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_8) == 0x002D4C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x002D50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_2) == 0x002D54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_52) == 0x002D58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatPlusEquals_FloatOut_7) == 0x002D5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatPlusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_17) == 0x002D60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_53) == 0x002D64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x002D68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetAllSocketNames_ReturnValue) == 0x002D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue) == 0x002D80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_5) == 0x002D84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_11) == 0x002D88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x002D90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x002D9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x002DA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x002DB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_30) == 0x002DB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x002DD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_9) == 0x002DDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x002DE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x002DEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Normal_ReturnValue) == 0x002DF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_20) == 0x002DFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_8) == 0x002E00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_16) == 0x002E04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_15) == 0x002E14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_8) == 0x002E18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_12) == 0x002E20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_32) == 0x002E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_33) == 0x002E30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_10) == 0x002E38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_15) == 0x002E40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_31) == 0x002E58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_11) == 0x002E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x002E71, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_18) == 0x002E74, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x002E78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_54) == 0x002E7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_12) == 0x002E80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x002E84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_13) == 0x002E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_14) == 0x002E8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_32) == 0x002E98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_2) == 0x002EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_2) == 0x002EB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_2) == 0x002EB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_LastIndex_ReturnValue) == 0x002EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_1) == 0x002EC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_3) == 0x002EC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_3) == 0x002ECC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_3) == 0x002ED0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x002ED4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_21) == 0x002ED8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_9) == 0x002EDC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_19) == 0x002EE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_16) == 0x002EE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_33) == 0x002EE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_55) == 0x002F00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_12) == 0x002F04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_17) == 0x002F10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_13) == 0x002F14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_20) == 0x002F20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_14) == 0x002F24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_56) == 0x002F30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x002F34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_57) == 0x002F40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_13) == 0x002F44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_4) == 0x002F50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_34) == 0x002F60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_35) == 0x002F78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_12) == 0x002F90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_36) == 0x002F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue) == 0x002FB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_15) == 0x002FBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_16) == 0x002FC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_2) == 0x002FD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_17) == 0x002FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_37) == 0x002FF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_51) == 0x003008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_1) == 0x003010, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_1) == 0x003040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_1) == 0x00304C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_1) == 0x003058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_8) == 0x003070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue) == 0x0030A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_38) == 0x0030B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_findFootLocation_ReturnValue_1) == 0x0030C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_findFootLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_13) == 0x0030D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_7) == 0x0030DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_7) == 0x0030DD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_7) == 0x0030E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_7) == 0x0030E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_7) == 0x0030E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_7) == 0x0030F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_7) == 0x003100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_7) == 0x00310C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_7) == 0x003118, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_7) == 0x003120, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_7) == 0x003128, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_7) == 0x003130, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_7) == 0x003138, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_7) == 0x00313C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_7) == 0x003140, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_7) == 0x003144, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_7) == 0x003150, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_2) == 0x003160, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_2) == 0x003190, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_2) == 0x00319C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_2) == 0x0031A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x0031B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_9) == 0x0031C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_InverseTransformLocation_ReturnValue) == 0x0031F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_12) == 0x0031FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_18) == 0x003200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_14) == 0x003210, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_19) == 0x003218, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_5) == 0x003228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_SwitchName_CmpSuccess_2) == 0x003230, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_15) == 0x003234, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_20) == 0x00323C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_16) == 0x00324C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_39) == 0x003258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_40) == 0x003270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_41) == 0x003288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_34) == 0x0032A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_35) == 0x0032A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_35' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_42) == 0x0032B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_21) == 0x0032C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_43) == 0x0032D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_skipGrabRadial_skip) == 0x0032F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_skipGrabRadial_skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_44) == 0x0032F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__3_Object) == 0x003310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__3_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_45) == 0x003318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_52) == 0x003330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanXOR_ReturnValue) == 0x003331, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_46) == 0x003338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_14) == 0x003350, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_8) == 0x003351, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_8) == 0x003352, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_8) == 0x003354, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_8) == 0x003358, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_8) == 0x00335C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_8) == 0x003368, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_8) == 0x003374, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_8) == 0x003380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_8) == 0x003390, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_8) == 0x003398, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_8) == 0x0033A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_8) == 0x0033A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_8) == 0x0033B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_8) == 0x0033B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_8) == 0x0033B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_8) == 0x0033BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_8) == 0x0033C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_53) == 0x0033D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_useAction_succ) == 0x0033D5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_47) == 0x0033D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_48) == 0x0033F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_54) == 0x003408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_17) == 0x00340C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_55) == 0x003414, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_22) == 0x003418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_56) == 0x003428, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_57) == 0x003429, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_49) == 0x003430, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_36) == 0x003448, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_36' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_50) == 0x003450, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_50' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_18) == 0x003468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_22) == 0x003470, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Ease_ReturnValue_4) == 0x003474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Ease_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_7) == 0x003478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_23) == 0x003488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_37) == 0x003490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_37' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_2) == 0x003498, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_collectObject_collected) == 0x003499, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_collectObject_collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_38) == 0x0034A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_38' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_51) == 0x0034A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_51' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_39) == 0x0034C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_39' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_13) == 0x0034C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDynPhys_obj) == 0x0034D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDynPhys_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_14) == 0x0034E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainPlayer_AsMain_Player_2) == 0x0034E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainPlayer_AsMain_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_9) == 0x0034F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_start_2) == 0x0034F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_start_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_arm_end_2) == 0x003504, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_arm_end_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_15) == 0x003510, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x00351C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x0035A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_15) == 0x0035A5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_9) == 0x0035A6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_9) == 0x0035A7, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_9) == 0x0035A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_9) == 0x0035AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_9) == 0x0035B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_9) == 0x0035BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_9) == 0x0035C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_9) == 0x0035D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_9) == 0x0035E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_9) == 0x0035E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_9) == 0x0035F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_9) == 0x0035F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_9) == 0x003600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_9) == 0x003604, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_9) == 0x003608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_9) == 0x00360C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_9) == 0x003618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_16) == 0x003624, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontWakeup) == 0x003625, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_alt) == 0x003626, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_dontCollect) == 0x003627, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_dontCollect' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_return_2) == 0x003628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_updEquip_rebug_2) == 0x003630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_updEquip_rebug_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_6) == 0x003640, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_23) == 0x003648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_3) == 0x003660, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_empty_1) == 0x003690, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_empty_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_checkEquip_Output_1) == 0x0036A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_checkEquip_Output_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_3) == 0x003790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_3) == 0x00379C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_3) == 0x0037A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ComposeRotators_ReturnValue) == 0x0037B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_1) == 0x0037C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_2) == 0x0037CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_19) == 0x0037D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_10) == 0x0037E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x003810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x003818, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_8) == 0x003820, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_2) == 0x003828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_24) == 0x003838, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_loadData_return_1) == 0x003839, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_loadData_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_1) == 0x00383A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00383C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x003848, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_10) == 0x0038D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_10) == 0x0038D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetVectorLength_ReturnValue) == 0x0038D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x0038E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_40) == 0x003970, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_40' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_return_1) == 0x003978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_text_1) == 0x003980, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_text_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_boundObjectReplace_1) == 0x003990, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_boundObjectReplace_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_lookAt_number_1) == 0x003998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_lookAt_number_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_58) == 0x003999, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_24) == 0x00399C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_4) == 0x0039AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_12) == 0x0039B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x0039BC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_2) == 0x003A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_3) == 0x003A50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_13) == 0x003A5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_14) == 0x003A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_15) == 0x003A6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_15) == 0x003A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_3) == 0x003A7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_4) == 0x003A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_4) == 0x003A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_16) == 0x003AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_16) == 0x003AAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x003AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_5) == 0x003AC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectVector_ReturnValue_6) == 0x003AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetMass_ReturnValue) == 0x003ADC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_4) == 0x003AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_23) == 0x003AEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FClamp_ReturnValue_11) == 0x003AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FClamp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetForwardVector_ReturnValue_2) == 0x003AF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x003B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_4dir_return) == 0x003B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_4dir_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x003B94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_5) == 0x003BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x003BAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_hitResult) == 0x003C34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_hitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_10) == 0x003CBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_10) == 0x003CBD, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_10) == 0x003CC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_10) == 0x003CC4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_10) == 0x003CC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_10) == 0x003CD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_10) == 0x003CE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_10) == 0x003CEC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_10) == 0x003CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_10) == 0x003D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_10) == 0x003D08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_10) == 0x003D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_10) == 0x003D18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_10) == 0x003D1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_10) == 0x003D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_10) == 0x003D24, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_10) == 0x003D30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCenterOfMass_ReturnValue) == 0x003D3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x003D48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component_1) == 0x003D50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_25) == 0x003D58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x003D59, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_OutPointOnBody_1) == 0x003D5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_OutPointOnBody_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetClosestPointOnCollision_ReturnValue_1) == 0x003D68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetClosestPointOnCollision_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_11) == 0x003D70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_3) == 0x003DA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x003E28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x003EB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetWorldLocation_SweepHitResult_4) == 0x003EBC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetWorldLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Vector_Distance_ReturnValue_3) == 0x003F44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue_6) == 0x003F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_struct_Variable_16) == 0x003F50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_56) == 0x003F68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_56' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_57) == 0x003F80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_57' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_1) == 0x003F98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_9) == 0x004020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_4) == 0x004024, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_4) == 0x004028, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_4) == 0x00402C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_2) == 0x004030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_10) == 0x004034, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_3) == 0x004038, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_4) == 0x00403C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x004040, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_24) == 0x004044, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x004048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_2) == 0x00404C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_25) == 0x0040D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_26) == 0x0040D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x0040DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0040E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x0040E1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_MakeArray_Array_3) == 0x0040E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_3) == 0x0040F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Has_Been_Initd_Variable) == 0x0040F9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_2) == 0x004100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_5) == 0x004108, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_41) == 0x004110, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_41' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_7) == 0x004118, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_11) == 0x0041A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_11) == 0x0041A1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_11) == 0x0041A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_11) == 0x0041A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_11) == 0x0041AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_11) == 0x0041B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_11) == 0x0041C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_11) == 0x0041D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_11) == 0x0041E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_11) == 0x0041E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_11) == 0x0041F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_11) == 0x0041F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_11) == 0x004200, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_11) == 0x004204, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_11) == 0x004208, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_11) == 0x00420C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_11) == 0x004218, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_42) == 0x004228, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_42' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_8) == 0x004230, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_26) == 0x004240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_landedOn_ignoreFallDamage) == 0x004241, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_landedOn_ignoreFallDamage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x004242, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_9) == 0x004248, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_27) == 0x004258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_DoesImplementInterface_ReturnValue_3) == 0x004259, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_DoesImplementInterface_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_landedOn_ignoreFallDamage_1) == 0x00425A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_landedOn_ignoreFallDamage_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_1) == 0x00425B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_43) == 0x004260, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_43' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return) == 0x004268, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectFloat_ReturnValue_18) == 0x00426C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x004270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return_1) == 0x004274, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_hasEquipment_return_2) == 0x004275, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_hasEquipment_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getSaveSlot_saveSlot_7) == 0x004278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getSaveSlot_saveSlot_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VSize_ReturnValue_11) == 0x004280, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VSize_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_FloatFloat_ReturnValue_27) == 0x004284, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x004288, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_FloatFloat_ReturnValue_9) == 0x00428C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isUnderwater_ReturnValue) == 0x004290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_10) == 0x004291, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_21) == 0x004294, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_58) == 0x004298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_11) == 0x00429C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_6) == 0x0042A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x0042A4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0042A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_7) == 0x0042B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorRightVector_ReturnValue_4) == 0x0042B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorRightVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_5) == 0x0042C4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue) == 0x0042D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0042DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x0042E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_fuel) == 0x0042F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetWorldDeltaSeconds_ReturnValue_22) == 0x0042F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetWorldDeltaSeconds_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_1) == 0x0042FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Divide_VectorFloat_ReturnValue_3) == 0x004300, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Divide_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_3) == 0x00430C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__1) == 0x00430D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_4) == 0x00430E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_14) == 0x00430F, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsGamePaused_ReturnValue) == 0x004310, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_59) == 0x004311, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_4) == 0x004312, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_44) == 0x004318, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_44' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_6) == 0x004320, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_7) == 0x004328, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x004330, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_17) == 0x004331, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_60) == 0x004332, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SelectInt_ReturnValue_2) == 0x004334, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x004338, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_8) == 0x0043C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentRotation_ReturnValue_6) == 0x0043C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentRotation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__4_Object) == 0x0043D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__4_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x0043E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x004468, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x004469, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_StartingSection) == 0x00446C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_5) == 0x004474, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x004478, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_5) == 0x004480, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_61) == 0x004488, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj_1) == 0x004490, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_6) == 0x0044A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_6) == 0x0044A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options) == 0x0044B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_options_enum) == 0x0044C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_optionsNamesOverlay) == 0x0044D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_optionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getActionOptions_number) == 0x0044E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getActionOptions_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetComponentLocation_ReturnValue_13) == 0x0044E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetComponentLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_17) == 0x0044F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_2) == 0x0044FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_2) == 0x004584, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x004588, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Length_ReturnValue_2) == 0x00458C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Max_ReturnValue) == 0x004590, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x004594, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_16) == 0x004595, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_17) == 0x004596, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_step_OutHit_3) == 0x004598, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_step_OutHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_static_obj_2) == 0x004620, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_static_obj_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_62) == 0x004630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_7) == 0x004638, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_8) == 0x004648, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_9) == 0x004658, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_17) == 0x004668, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_OutHit) == 0x004674, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingle_ReturnValue) == 0x0046FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__5_Object) == 0x004700, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__5_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_5) == 0x00470C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_5) == 0x004710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_5) == 0x004714, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_12) == 0x004718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_12) == 0x004719, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_12) == 0x00471C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_12) == 0x004720, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_12) == 0x004724, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_12) == 0x004730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_12) == 0x00473C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_12) == 0x004748, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_12) == 0x004758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_12) == 0x004760, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_12) == 0x004768, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_12) == 0x004770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_12) == 0x004778, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_12) == 0x00477C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_12) == 0x004780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_12) == 0x004784, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_12) == 0x004790, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_63) == 0x00479C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue_1) == 0x00479D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00479E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_3) == 0x0047A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_3) == 0x004828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_13) == 0x004829, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_13) == 0x00482A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_13) == 0x00482C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_13) == 0x004830, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_13) == 0x004834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_13) == 0x004840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_13) == 0x00484C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_13) == 0x004858, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_13) == 0x004868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_13) == 0x004870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_13) == 0x004878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_13) == 0x004880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_13) == 0x004888, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_13) == 0x00488C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_13) == 0x004890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_13) == 0x004894, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_13) == 0x0048A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0048AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x004934, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetActorForwardVector_ReturnValue_6) == 0x004938, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetActorForwardVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_VectorFloat_ReturnValue_17) == 0x004944, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_VectorFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_6) == 0x004950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_6) == 0x004954, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_6) == 0x004958, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_18) == 0x00495C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Abs_ReturnValue_5) == 0x004968, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_18) == 0x00496C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Greater_FloatFloat_ReturnValue_12) == 0x004978, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Greater_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_19) == 0x00497C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_20) == 0x004988, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_obj_statDyn_obj_2) == 0x004998, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_obj_statDyn_obj_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_OutHit_4) == 0x0049A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_OutHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SphereTraceSingleForObjects_ReturnValue_4) == 0x004A30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SphereTraceSingleForObjects_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x004A31, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_14) == 0x004A32, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_14) == 0x004A33, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_14) == 0x004A34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_14) == 0x004A38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_14) == 0x004A3C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_14) == 0x004A48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_14) == 0x004A54, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_14) == 0x004A60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_14) == 0x004A70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_14) == 0x004A78, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_14) == 0x004A80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_14) == 0x004A88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_14) == 0x004A90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_14) == 0x004A94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_14) == 0x004A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_14) == 0x004A9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_14) == 0x004AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x004AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x004AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_18) == 0x004AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsPrimitive_Component_2) == 0x004AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsPrimitive_Component_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_28) == 0x004AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetCollisionObjectType_ReturnValue_2) == 0x004AD1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetCollisionObjectType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_VectorVector_ReturnValue_21) == 0x004AD4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_VectorVector_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x004AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x004AE4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x004B6C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_LowEntry_LocalVariable_Value__6_Object) == 0x004B70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_LowEntry_LocalVariable_Value__6_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_X_7) == 0x004B7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Y_7) == 0x004B80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakVector_Z_7) == 0x004B84, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x004B88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_11) == 0x004B8C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_19) == 0x004B90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_12) == 0x004B94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_13) == 0x004B98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsFalling_ReturnValue_2) == 0x004B9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsFalling_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_5) == 0x004BA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeTransform_ReturnValue_12) == 0x004BB0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x004BE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_5) == 0x004C68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_IsClosed_Variable) == 0x004CF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_3) == 0x004CF1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetStaticMesh_ReturnValue_4) == 0x004CF2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainSave_save_main_3) == 0x004CF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainSave_save_main_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_6) == 0x004D00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_8) == 0x004D04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_64) == 0x004D0C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_65) == 0x004D0D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust_1) == 0x004D10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x004D14, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_HalfHeightAdjust) == 0x004D18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_ScaledHalfHeightAdjust) == 0x004D1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_6) == 0x004D20, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_7) == 0x004DA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_20) == 0x004E30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetTransform_ReturnValue_4) == 0x004E40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Location_4) == 0x004E70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Rotation_4) == 0x004E7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakTransform_Scale_4) == 0x004E88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_TransformLocation_ReturnValue_1) == 0x004E94, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Roll_3) == 0x004EA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Pitch_3) == 0x004EA4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakRotator_Yaw_3) == 0x004EA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x004EAC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x004F34, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeRotator_ReturnValue_8) == 0x004F38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x004F44, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_9) == 0x004F48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x004F50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable) == 0x004FD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_DestroyedActor) == 0x004FE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_25) == 0x004FE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_66) == 0x004FF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_21) == 0x004FFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_67) == 0x005004, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_5) == 0x005008, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_29) == 0x005018, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_6) == 0x005020, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_30) == 0x005030, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_68) == 0x005031, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_canBeUsedHold_return) == 0x005032, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_canBeUsedHold_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_26) == 0x005034, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_69) == 0x005044, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_22) == 0x005048, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_70) == 0x005050, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_71) == 0x005051, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Objects_7) == 0x005058, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Objects_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_31) == 0x005068, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_1) == 0x00506C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_27) == 0x005070, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_23) == 0x005080, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_picker) == 0x005088, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_texture) == 0x005090, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_index) == 0x005098, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_color) == 0x00509C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_2) == 0x0050B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed_1) == 0x0050C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_gamemode) == 0x0050D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hook_1) == 0x0050D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hook_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_clean_1) == 0x0050E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_clean_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_18) == 0x0050E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hook) == 0x0050F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_17) == 0x0050F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_17' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_6) == 0x005100, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_clean) == 0x005188, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location_1) == 0x00518C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_5) == 0x005198, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_16) == 0x0051A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_volume) == 0x0051A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_15) == 0x0051B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_5) == 0x0051B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name_1) == 0x005240, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature_1) == 0x005250, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_speed) == 0x005254, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_temperature) == 0x005258, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_28) == 0x00525C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_14) == 0x005270, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key_1) == 0x005278, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_pressed) == 0x005290, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_13) == 0x005298, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_mouse) == 0x0052A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_12) == 0x0052A8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_wheelDelta) == 0x0052B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_11) == 0x0052B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_10) == 0x0052C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_4) == 0x0052C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_location) == 0x0052CC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_9) == 0x0052D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_8) == 0x0052E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_7) == 0x0052E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_4) == 0x0052F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_action) == 0x005378, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_3) == 0x00537C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hot) == 0x005380, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_2) == 0x005408, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_6) == 0x005410, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_3) == 0x005418, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_key) == 0x0054A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_static) == 0x0054B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_frozen) == 0x0054B1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_active) == 0x0054B2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_activate) == 0x0054B3, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage_1) == 0x0054B4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_2) == 0x0054B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_actor) == 0x005540, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_impact) == 0x005548, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_5) == 0x005558, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_4) == 0x005560, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_3) == 0x005568, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_2) == 0x005570, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit_1) == 0x005578, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_damage) == 0x005600, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player_1) == 0x005608, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_name) == 0x005610, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_kick) == 0x005618, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_24) == 0x00561C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_player) == 0x005628, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_hit) == 0x005630, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_name_Variable_9) == 0x0056B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_29) == 0x0056C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0056D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_25) == 0x0056D4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_30) == 0x0056DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_26) == 0x0056EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Array_Index_Variable) == 0x0056F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_31) == 0x0056F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Get_Item_2) == 0x005708, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_27) == 0x005710, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_32) == 0x005718, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_bool_Variable_7) == 0x005728, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Loop_Counter_Variable) == 0x00572C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_15) == 0x005730, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x005731, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Add_IntInt_ReturnValue_7) == 0x005734, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_28) == 0x005738, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_33) == 0x005740, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CustomEvent_NotifyName_29) == 0x005750, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_2) == 0x005758, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_CreateDelegate_OutputDelegate_34) == 0x00575C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_3) == 0x00576C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_10) == 0x005770, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x005780, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x005808, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_58) == 0x005810, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_58' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_15) == 0x005828, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_15) == 0x005829, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_15) == 0x00582C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_15) == 0x005830, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_15) == 0x005834, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_15) == 0x005840, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_15) == 0x00584C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_15) == 0x005858, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_15) == 0x005868, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_15) == 0x005870, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_15) == 0x005878, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_15) == 0x005880, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_15) == 0x005888, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_15) == 0x00588C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_15) == 0x005890, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_15) == 0x005894, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_15) == 0x0058A0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_4) == 0x0058AC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsWater_Volume) == 0x0058B0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsWater_Volume' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_32) == 0x0058B8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0058C0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable) == 0x0058C8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_InputActionEvent_Key_59) == 0x0058D0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_InputActionEvent_Key_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_8) == 0x0058E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_7) == 0x0058EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_72) == 0x0058F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_59) == 0x0058F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_60) == 0x0058F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_7) == 0x0058FC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_2) == 0x005900, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_5) == 0x005904, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_1) == 0x005908, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_6) == 0x00590C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_7) == 0x005910, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__2) == 0x005914, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_8) == 0x005918, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_10) == 0x005920, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_45) == 0x005928, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_45' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_73) == 0x005930, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_float_Variable_9) == 0x005934, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_14) == 0x005938, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_74) == 0x00593C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Lerp_ReturnValue_15) == 0x005940, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Lerp_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_6) == 0x005944, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_8) == 0x005950, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_byte_Variable_9) == 0x0059D8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_75) == 0x0059D9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Select_Default_8) == 0x0059DC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_61) == 0x0059E0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_62) == 0x0059E4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_2) == 0x0059E8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_VictoryFloatMinusEquals_FloatOut_8) == 0x0059EC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_VictoryFloatMinusEquals_FloatOut_8' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_FMax_ReturnValue_3) == 0x0059F0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_76) == 0x0059F4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_46) == 0x0059F8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_46' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_77) == 0x005A00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_78) == 0x005A01, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_MakeVector_ReturnValue_7) == 0x005A04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_SetRelativeLocation_SweepHitResult_9) == 0x005A10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_SetRelativeLocation_SweepHitResult_9' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_79) == 0x005A98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_80) == 0x005A99, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_80' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerCameraManager_ReturnValue_10) == 0x005AA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerCameraManager_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_K2_GetActorLocation_ReturnValue_19) == 0x005AA8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_K2_GetActorLocation_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getEvent_isEventActive) == 0x005AB4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getEvent_isEventActive' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsPointInBox_ReturnValue) == 0x005AB5, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_5) == 0x005AB6, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Not_PreBool_ReturnValue_16) == 0x005AB7, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_20) == 0x005AB8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_int_Variable_3) == 0x005ABC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_21) == 0x005AC0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_22) == 0x005AC1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_23) == 0x005AC2, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_47) == 0x005AC8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_47' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_SetGamePaused_ReturnValue) == 0x005AD0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_81) == 0x005AD1, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_81' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_11) == 0x005AD8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_48) == 0x005AE0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_48' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_82) == 0x005AE8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_82' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_6) == 0x005AE9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_6' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isExhausted_exhausted) == 0x005AEA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isExhausted_exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanOR_ReturnValue_24) == 0x005AEB, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanOR_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Player_10) == 0x005AF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Player_10' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_33) == 0x005B00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_asProp_return_3) == 0x005B08, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_asProp_return_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_83) == 0x005B10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_83' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isDreaming_dreaming_7) == 0x005B11, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isDreaming_dreaming_7' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_AsInt_Save_1_3) == 0x005B18, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_AsInt_Save_1_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_DynamicCast_bSuccess_34) == 0x005B28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_putObjectInventory2_return_2) == 0x005B29, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_putObjectInventory2_return_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_ignoreSave_ignoreSave_1) == 0x005B2A, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_ignoreSave_ignoreSave_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_IsValid_ReturnValue_84) == 0x005B2B, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_IsValid_ReturnValue_84' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__3) == 0x005B2C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_isBuoyant__buoyant__4) == 0x005B2D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_isBuoyant__buoyant__4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_GetPlayerController_ReturnValue_12) == 0x005B30, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_GetPlayerController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_getMainGamemode_AsMain_Gamemode_49) == 0x005B38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_getMainGamemode_AsMain_Gamemode_49' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_3) == 0x005B40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_2) == 0x005B48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x005B50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, Temp_object_Variable_11) == 0x005B58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x005B68, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x005BF0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue) == 0x005BF4, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_18) == 0x005BF8, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bBlockingHit_16) == 0x005BF9, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bBlockingHit_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_bInitialOverlap_16) == 0x005BFA, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_bInitialOverlap_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Time_16) == 0x005BFC, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Time_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Distance_16) == 0x005C00, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Distance_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Location_16) == 0x005C04, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Location_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactPoint_16) == 0x005C10, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactPoint_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_Normal_16) == 0x005C1C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_Normal_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ImpactNormal_16) == 0x005C28, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ImpactNormal_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_PhysMat_16) == 0x005C38, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_PhysMat_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitActor_16) == 0x005C40, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitActor_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitComponent_16) == 0x005C48, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitComponent_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitBoneName_16) == 0x005C50, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitBoneName_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_HitItem_16) == 0x005C58, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_HitItem_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_ElementIndex_16) == 0x005C5C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_ElementIndex_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_FaceIndex_16) == 0x005C60, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_FaceIndex_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceStart_16) == 0x005C64, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceStart_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BreakHitResult_TraceEnd_16) == 0x005C70, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BreakHitResult_TraceEnd_16' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_2) == 0x005C7C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x005C7D, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_19) == 0x005C7E, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water_1) == 0x005C80, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_BooleanAND_ReturnValue_20) == 0x005C88, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, K2Node_Event_water) == 0x005C90, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x005C98, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Add_ReturnValue_1) == 0x005C9C, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ExecuteUbergraph_mainPlayer, CallFunc_Array_Contains_ReturnValue_3) == 0x005CA0, "Member 'MainPlayer_C_ExecuteUbergraph_mainPlayer::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWaterOrigin");
static_assert(sizeof(MainPlayer_C_EnterWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_EnterWaterOrigin");
static_assert(offsetof(MainPlayer_C_EnterWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWaterOrigin");
static_assert(sizeof(MainPlayer_C_LeaveWaterOrigin) == 0x000008, "Wrong size on MainPlayer_C_LeaveWaterOrigin");
static_assert(offsetof(MainPlayer_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EnterWater) == 0x000008, "Wrong alignment on MainPlayer_C_EnterWater");
static_assert(sizeof(MainPlayer_C_EnterWater) == 0x000008, "Wrong size on MainPlayer_C_EnterWater");
static_assert(offsetof(MainPlayer_C_EnterWater, Water) == 0x000000, "Member 'MainPlayer_C_EnterWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong alignment on MainPlayer_C_LeaveWater");
static_assert(sizeof(MainPlayer_C_LeaveWater) == 0x000008, "Wrong size on MainPlayer_C_LeaveWater");
static_assert(offsetof(MainPlayer_C_LeaveWater, Water) == 0x000000, "Member 'MainPlayer_C_LeaveWater::Water' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Player_use) == 0x000008, "Wrong alignment on MainPlayer_C_Player_use");
static_assert(sizeof(MainPlayer_C_Player_use) == 0x000090, "Wrong size on MainPlayer_C_Player_use");
static_assert(offsetof(MainPlayer_C_Player_use, Player) == 0x000000, "Member 'MainPlayer_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Player_use, Hit) == 0x000008, "Member 'MainPlayer_C_Player_use::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Kicked final
{
public:
	bool                                          Param_Kick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kicked) == 0x000001, "Wrong alignment on MainPlayer_C_Kicked");
static_assert(sizeof(MainPlayer_C_Kicked) == 0x000001, "Wrong size on MainPlayer_C_Kicked");
static_assert(offsetof(MainPlayer_C_Kicked, Param_Kick) == 0x000000, "Member 'MainPlayer_C_Kicked::Param_Kick' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SendName) == 0x000004, "Wrong alignment on MainPlayer_C_SendName");
static_assert(sizeof(MainPlayer_C_SendName) == 0x000008, "Wrong size on MainPlayer_C_SendName");
static_assert(offsetof(MainPlayer_C_SendName, Param_Name) == 0x000000, "Member 'MainPlayer_C_SendName::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Thrown) == 0x000008, "Wrong alignment on MainPlayer_C_Thrown");
static_assert(sizeof(MainPlayer_C_Thrown) == 0x000008, "Wrong size on MainPlayer_C_Thrown");
static_assert(offsetof(MainPlayer_C_Thrown, Player) == 0x000000, "Member 'MainPlayer_C_Thrown::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_DamageByPlayer) == 0x000008, "Wrong alignment on MainPlayer_C_DamageByPlayer");
static_assert(sizeof(MainPlayer_C_DamageByPlayer) == 0x000098, "Wrong size on MainPlayer_C_DamageByPlayer");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Player) == 0x000000, "Member 'MainPlayer_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Hit) == 0x000008, "Member 'MainPlayer_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DamageByPlayer, Damage) == 0x000090, "Member 'MainPlayer_C_DamageByPlayer::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerUnequip) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerUnequip");
static_assert(sizeof(MainPlayer_C_PlayerUnequip) == 0x000008, "Wrong size on MainPlayer_C_PlayerUnequip");
static_assert(offsetof(MainPlayer_C_PlayerUnequip, Player) == 0x000000, "Member 'MainPlayer_C_PlayerUnequip::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHold) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHold");
static_assert(sizeof(MainPlayer_C_PlayerHold) == 0x000008, "Wrong size on MainPlayer_C_PlayerHold");
static_assert(offsetof(MainPlayer_C_PlayerHold, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHold::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerR) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerR");
static_assert(sizeof(MainPlayer_C_PlayerR) == 0x000008, "Wrong size on MainPlayer_C_PlayerR");
static_assert(offsetof(MainPlayer_C_PlayerR, Player) == 0x000000, "Member 'MainPlayer_C_PlayerR::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ImpactDamage) == 0x000008, "Wrong alignment on MainPlayer_C_ImpactDamage");
static_assert(sizeof(MainPlayer_C_ImpactDamage) == 0x0000A8, "Wrong size on MainPlayer_C_ImpactDamage");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Damage) == 0x000000, "Member 'MainPlayer_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Hit) == 0x000004, "Member 'MainPlayer_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Actor) == 0x000090, "Member 'MainPlayer_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ImpactDamage, Impact) == 0x000098, "Member 'MainPlayer_C_ImpactDamage::Impact' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.virus
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Virus) == 0x000001, "Wrong alignment on MainPlayer_C_Virus");
static_assert(sizeof(MainPlayer_C_Virus) == 0x000001, "Wrong size on MainPlayer_C_Virus");
static_assert(offsetof(MainPlayer_C_Virus, Activate) == 0x000000, "Member 'MainPlayer_C_Virus::Activate' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPropProps) == 0x000001, "Wrong alignment on MainPlayer_C_SetPropProps");
static_assert(sizeof(MainPlayer_C_SetPropProps) == 0x000003, "Wrong size on MainPlayer_C_SetPropProps");
static_assert(offsetof(MainPlayer_C_SetPropProps, Static) == 0x000000, "Member 'MainPlayer_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Frozen) == 0x000001, "Member 'MainPlayer_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPropProps, Active) == 0x000002, "Member 'MainPlayer_C_SetPropProps::Active' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetKey) == 0x000008, "Wrong alignment on MainPlayer_C_SetKey");
static_assert(sizeof(MainPlayer_C_SetKey) == 0x000010, "Wrong size on MainPlayer_C_SetKey");
static_assert(offsetof(MainPlayer_C_SetKey, Key) == 0x000000, "Member 'MainPlayer_C_SetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_SteppedOn) == 0x000008, "Wrong alignment on MainPlayer_C_SteppedOn");
static_assert(sizeof(MainPlayer_C_SteppedOn) == 0x000090, "Wrong size on MainPlayer_C_SteppedOn");
static_assert(offsetof(MainPlayer_C_SteppedOn, Player) == 0x000000, "Member 'MainPlayer_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SteppedOn, Hit) == 0x000008, "Member 'MainPlayer_C_SteppedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FireDamage) == 0x000004, "Wrong alignment on MainPlayer_C_FireDamage");
static_assert(sizeof(MainPlayer_C_FireDamage) == 0x000004, "Wrong size on MainPlayer_C_FireDamage");
static_assert(offsetof(MainPlayer_C_FireDamage, Damage) == 0x000000, "Member 'MainPlayer_C_FireDamage::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.receivedPhyiscsDamage
// 0x008C (0x008C - 0x0000)
struct MainPlayer_C_ReceivedPhyiscsDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hot;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_ReceivedPhyiscsDamage) == 0x000004, "Wrong alignment on MainPlayer_C_ReceivedPhyiscsDamage");
static_assert(sizeof(MainPlayer_C_ReceivedPhyiscsDamage) == 0x00008C, "Wrong size on MainPlayer_C_ReceivedPhyiscsDamage");
static_assert(offsetof(MainPlayer_C_ReceivedPhyiscsDamage, Damage) == 0x000000, "Member 'MainPlayer_C_ReceivedPhyiscsDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ReceivedPhyiscsDamage, Hot) == 0x000004, "Member 'MainPlayer_C_ReceivedPhyiscsDamage::Hot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionOptionIndex) == 0x000008, "Wrong alignment on MainPlayer_C_ActionOptionIndex");
static_assert(sizeof(MainPlayer_C_ActionOptionIndex) == 0x000098, "Wrong size on MainPlayer_C_ActionOptionIndex");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Player) == 0x000000, "Member 'MainPlayer_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Hit) == 0x000008, "Member 'MainPlayer_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionOptionIndex, Action) == 0x000090, "Member 'MainPlayer_C_ActionOptionIndex::Action' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandUse_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandUse_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Exploded) == 0x000004, "Wrong alignment on MainPlayer_C_Exploded");
static_assert(sizeof(MainPlayer_C_Exploded) == 0x000010, "Wrong size on MainPlayer_C_Exploded");
static_assert(offsetof(MainPlayer_C_Exploded, Damage) == 0x000000, "Member 'MainPlayer_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Exploded, Location) == 0x000004, "Member 'MainPlayer_C_Exploded::Location' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_RMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(sizeof(MainPlayer_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on MainPlayer_C_PlayerHandRelease_LMB");
static_assert(offsetof(MainPlayer_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouseWheel");
static_assert(sizeof(MainPlayer_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouseWheel");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerHandMouse) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandMouse");
static_assert(sizeof(MainPlayer_C_PlayerHandMouse) == 0x000010, "Wrong size on MainPlayer_C_PlayerHandMouse");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'MainPlayer_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct MainPlayer_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerHandAnyKey");
static_assert(sizeof(MainPlayer_C_PlayerHandAnyKey) == 0x000028, "Wrong size on MainPlayer_C_PlayerHandAnyKey");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'MainPlayer_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Key) == 0x000008, "Member 'MainPlayer_C_PlayerHandAnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'MainPlayer_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AddTemperature");
static_assert(sizeof(MainPlayer_C_AddTemperature) == 0x000004, "Wrong size on MainPlayer_C_AddTemperature");
static_assert(offsetof(MainPlayer_C_AddTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AddTemperature::Temperature' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AccumulateTemperature) == 0x000004, "Wrong alignment on MainPlayer_C_AccumulateTemperature");
static_assert(sizeof(MainPlayer_C_AccumulateTemperature) == 0x000008, "Wrong size on MainPlayer_C_AccumulateTemperature");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'MainPlayer_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AccumulateTemperature, Speed) == 0x000004, "Member 'MainPlayer_C_AccumulateTemperature::Speed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Param_Name;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ActionName) == 0x000008, "Wrong alignment on MainPlayer_C_ActionName");
static_assert(sizeof(MainPlayer_C_ActionName) == 0x0000A0, "Wrong size on MainPlayer_C_ActionName");
static_assert(offsetof(MainPlayer_C_ActionName, Player) == 0x000000, "Member 'MainPlayer_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Hit) == 0x000008, "Member 'MainPlayer_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ActionName, Param_Name) == 0x000090, "Member 'MainPlayer_C_ActionName::Param_Name' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Stepped) == 0x000004, "Wrong alignment on MainPlayer_C_Stepped");
static_assert(sizeof(MainPlayer_C_Stepped) == 0x000004, "Wrong size on MainPlayer_C_Stepped");
static_assert(offsetof(MainPlayer_C_Stepped, Volume) == 0x000000, "Member 'MainPlayer_C_Stepped::Volume' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerLookAway");
static_assert(sizeof(MainPlayer_C_PlayerLookAway) == 0x000008, "Wrong size on MainPlayer_C_PlayerLookAway");
static_assert(offsetof(MainPlayer_C_PlayerLookAway, Player) == 0x000000, "Member 'MainPlayer_C_PlayerLookAway::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReachedByExplosion) == 0x000004, "Wrong alignment on MainPlayer_C_ReachedByExplosion");
static_assert(sizeof(MainPlayer_C_ReachedByExplosion) == 0x000010, "Wrong size on MainPlayer_C_ReachedByExplosion");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Location) == 0x000000, "Member 'MainPlayer_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'MainPlayer_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.slice
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Slice) == 0x000001, "Wrong alignment on MainPlayer_C_Slice");
static_assert(sizeof(MainPlayer_C_Slice) == 0x000001, "Wrong size on MainPlayer_C_Slice");
static_assert(offsetof(MainPlayer_C_Slice, Clean) == 0x000000, "Member 'MainPlayer_C_Slice::Clean' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PlayerUsedOn) == 0x000008, "Wrong alignment on MainPlayer_C_PlayerUsedOn");
static_assert(sizeof(MainPlayer_C_PlayerUsedOn) == 0x000090, "Wrong size on MainPlayer_C_PlayerUsedOn");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Player) == 0x000000, "Member 'MainPlayer_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayerUsedOn, Hit) == 0x000008, "Member 'MainPlayer_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Hooked) == 0x000008, "Wrong alignment on MainPlayer_C_Hooked");
static_assert(sizeof(MainPlayer_C_Hooked) == 0x000008, "Wrong size on MainPlayer_C_Hooked");
static_assert(offsetof(MainPlayer_C_Hooked, Hook) == 0x000000, "Member 'MainPlayer_C_Hooked::Hook' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.cleanSponge
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_CleanSponge final
{
public:
	float                                         Clean;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_CleanSponge) == 0x000008, "Wrong alignment on MainPlayer_C_CleanSponge");
static_assert(sizeof(MainPlayer_C_CleanSponge) == 0x000010, "Wrong size on MainPlayer_C_CleanSponge");
static_assert(offsetof(MainPlayer_C_CleanSponge, Clean) == 0x000000, "Member 'MainPlayer_C_CleanSponge::Clean' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CleanSponge, Player) == 0x000008, "Member 'MainPlayer_C_CleanSponge::Player' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hookTension
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_HookTension final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_HookTension) == 0x000008, "Wrong alignment on MainPlayer_C_HookTension");
static_assert(sizeof(MainPlayer_C_HookTension) == 0x000008, "Wrong size on MainPlayer_C_HookTension");
static_assert(offsetof(MainPlayer_C_HookTension, Hook) == 0x000000, "Member 'MainPlayer_C_HookTension::Hook' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong alignment on MainPlayer_C_StuffUpgraded");
static_assert(sizeof(MainPlayer_C_StuffUpgraded) == 0x000008, "Wrong size on MainPlayer_C_StuffUpgraded");
static_assert(offsetof(MainPlayer_C_StuffUpgraded, GameMode) == 0x000000, "Member 'MainPlayer_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct MainPlayer_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AnyKey) == 0x000008, "Wrong alignment on MainPlayer_C_AnyKey");
static_assert(sizeof(MainPlayer_C_AnyKey) == 0x000020, "Wrong size on MainPlayer_C_AnyKey");
static_assert(offsetof(MainPlayer_C_AnyKey, Key) == 0x000000, "Member 'MainPlayer_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AnyKey, Pressed) == 0x000018, "Member 'MainPlayer_C_AnyKey::Pressed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ApplyColor) == 0x000004, "Wrong alignment on MainPlayer_C_ApplyColor");
static_assert(sizeof(MainPlayer_C_ApplyColor) == 0x000010, "Wrong size on MainPlayer_C_ApplyColor");
static_assert(offsetof(MainPlayer_C_ApplyColor, Color) == 0x000000, "Member 'MainPlayer_C_ApplyColor::Color' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_TexturePickerApply) == 0x000008, "Wrong alignment on MainPlayer_C_TexturePickerApply");
static_assert(sizeof(MainPlayer_C_TexturePickerApply) == 0x000018, "Wrong size on MainPlayer_C_TexturePickerApply");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Picker) == 0x000000, "Member 'MainPlayer_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Texture) == 0x000008, "Member 'MainPlayer_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TexturePickerApply, Param_Index) == 0x000010, "Member 'MainPlayer_C_TexturePickerApply::Param_Index' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sitDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_SitDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_SitDestroyed");
static_assert(sizeof(MainPlayer_C_SitDestroyed) == 0x000008, "Wrong size on MainPlayer_C_SitDestroyed");
static_assert(offsetof(MainPlayer_C_SitDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_SitDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnEndCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnEndCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnEndCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on MainPlayer_C_K2_OnStartCrouch");
static_assert(sizeof(MainPlayer_C_K2_OnStartCrouch) == 0x000008, "Wrong size on MainPlayer_C_K2_OnStartCrouch");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'MainPlayer_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'MainPlayer_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.firstPersonBodyAnimation
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FirstPersonBodyAnimation final
{
public:
	class FName                                   StartingSection;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000004, "Wrong alignment on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(sizeof(MainPlayer_C_FirstPersonBodyAnimation) == 0x000008, "Wrong size on MainPlayer_C_FirstPersonBodyAnimation");
static_assert(offsetof(MainPlayer_C_FirstPersonBodyAnimation, StartingSection) == 0x000000, "Member 'MainPlayer_C_FirstPersonBodyAnimation::StartingSection' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Ignite) == 0x000004, "Wrong alignment on MainPlayer_C_Ignite");
static_assert(sizeof(MainPlayer_C_Ignite) == 0x000004, "Wrong size on MainPlayer_C_Ignite");
static_assert(offsetof(MainPlayer_C_Ignite, Fuel) == 0x000000, "Member 'MainPlayer_C_Ignite::Fuel' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_OnLanded) == 0x000004, "Wrong alignment on MainPlayer_C_OnLanded");
static_assert(sizeof(MainPlayer_C_OnLanded) == 0x000088, "Wrong size on MainPlayer_C_OnLanded");
static_assert(offsetof(MainPlayer_C_OnLanded, Hit) == 0x000000, "Member 'MainPlayer_C_OnLanded::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.pickupObject
// 0x0088 (0x0088 - 0x0000)
struct MainPlayer_C_PickupObject final
{
public:
	struct FHitResult                             Param_HitResult;                                   // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_PickupObject) == 0x000004, "Wrong alignment on MainPlayer_C_PickupObject");
static_assert(sizeof(MainPlayer_C_PickupObject) == 0x000088, "Wrong size on MainPlayer_C_PickupObject");
static_assert(offsetof(MainPlayer_C_PickupObject, Param_HitResult) == 0x000000, "Member 'MainPlayer_C_PickupObject::Param_HitResult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.simulateDrop
// 0x0003 (0x0003 - 0x0000)
struct MainPlayer_C_SimulateDrop final
{
public:
	bool                                          DontWakeup;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alt;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Dontcollect;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SimulateDrop) == 0x000001, "Wrong alignment on MainPlayer_C_SimulateDrop");
static_assert(sizeof(MainPlayer_C_SimulateDrop) == 0x000003, "Wrong size on MainPlayer_C_SimulateDrop");
static_assert(offsetof(MainPlayer_C_SimulateDrop, DontWakeup) == 0x000000, "Member 'MainPlayer_C_SimulateDrop::DontWakeup' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, Alt) == 0x000001, "Member 'MainPlayer_C_SimulateDrop::Alt' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SimulateDrop, Param_Dontcollect) == 0x000002, "Member 'MainPlayer_C_SimulateDrop::Param_Dontcollect' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on MainPlayer_C_ReceiveTick");
static_assert(sizeof(MainPlayer_C_ReceiveTick) == 0x000004, "Wrong size on MainPlayer_C_ReceiveTick");
static_assert(offsetof(MainPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MainPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.settingsApplied
// 0x00F0 (0x00F0 - 0x0000)
struct MainPlayer_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SettingsApplied) == 0x000008, "Wrong alignment on MainPlayer_C_SettingsApplied");
static_assert(sizeof(MainPlayer_C_SettingsApplied) == 0x0000F0, "Wrong size on MainPlayer_C_SettingsApplied");
static_assert(offsetof(MainPlayer_C_SettingsApplied, Settings) == 0x000000, "Member 'MainPlayer_C_SettingsApplied::Settings' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseX_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseX_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisEvt_mouseY_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(sizeof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1");
static_assert(offsetof(MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisEvt_mouseY_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fallen
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Fallen final
{
public:
	bool                                          Death;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Fallen) == 0x000001, "Wrong alignment on MainPlayer_C_Fallen");
static_assert(sizeof(MainPlayer_C_Fallen) == 0x000001, "Wrong size on MainPlayer_C_Fallen");
static_assert(offsetof(MainPlayer_C_Fallen, Death) == 0x000000, "Member 'MainPlayer_C_Fallen::Death' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.beginArmAnim
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_beginArmAnim final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong alignment on MainPlayer_C_beginArmAnim");
static_assert(sizeof(MainPlayer_C_beginArmAnim) == 0x000008, "Wrong size on MainPlayer_C_beginArmAnim");
static_assert(offsetof(MainPlayer_C_beginArmAnim, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_beginArmAnim::MontageToPlay' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.hitt
// 0x00B0 (0x00B0 - 0x0000)
struct MainPlayer_C_Hitt final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_Hitt) == 0x000008, "Wrong alignment on MainPlayer_C_Hitt");
static_assert(sizeof(MainPlayer_C_Hitt) == 0x0000B0, "Wrong size on MainPlayer_C_Hitt");
static_assert(offsetof(MainPlayer_C_Hitt, HitComponent) == 0x000000, "Member 'MainPlayer_C_Hitt::HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherActor) == 0x000008, "Member 'MainPlayer_C_Hitt::OtherActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, OtherComp) == 0x000010, "Member 'MainPlayer_C_Hitt::OtherComp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, NormalImpulse) == 0x000018, "Member 'MainPlayer_C_Hitt::NormalImpulse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Hitt, Hit) == 0x000024, "Member 'MainPlayer_C_Hitt::Hit' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.wakeup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_Wakeup final
{
public:
	bool                                          PassOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Wakeup) == 0x000001, "Wrong alignment on MainPlayer_C_Wakeup");
static_assert(sizeof(MainPlayer_C_Wakeup) == 0x000001, "Wrong size on MainPlayer_C_Wakeup");
static_assert(offsetof(MainPlayer_C_Wakeup, PassOut) == 0x000000, "Member 'MainPlayer_C_Wakeup::PassOut' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.equipDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_EquipDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong alignment on MainPlayer_C_EquipDestroyed");
static_assert(sizeof(MainPlayer_C_EquipDestroyed) == 0x000008, "Wrong size on MainPlayer_C_EquipDestroyed");
static_assert(offsetof(MainPlayer_C_EquipDestroyed, DestroyedActor) == 0x000000, "Member 'MainPlayer_C_EquipDestroyed::DestroyedActor' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct MainPlayer_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_AddDamage) == 0x000008, "Wrong alignment on MainPlayer_C_AddDamage");
static_assert(sizeof(MainPlayer_C_AddDamage) == 0x0000A8, "Wrong size on MainPlayer_C_AddDamage");
static_assert(offsetof(MainPlayer_C_AddDamage, Actor) == 0x000000, "Member 'MainPlayer_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Damage) == 0x000008, "Member 'MainPlayer_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Hit) == 0x00000C, "Member 'MainPlayer_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, Impact) == 0x000094, "Member 'MainPlayer_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'MainPlayer_C_AddDamage::SkipSetting' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnim
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnim final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Reload;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnim) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnim");
static_assert(sizeof(MainPlayer_C_PlayFPAnim) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnim");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Param_Name) == 0x000000, "Member 'MainPlayer_C_PlayFPAnim::Param_Name' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, MontageToPlay) == 0x000008, "Member 'MainPlayer_C_PlayFPAnim::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnim, Param_Reload) == 0x000010, "Member 'MainPlayer_C_PlayFPAnim::Param_Reload' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.playFPAnimScripted
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_PlayFPAnimScripted final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Call;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PlayFPAnimScripted) == 0x000008, "Wrong alignment on MainPlayer_C_PlayFPAnimScripted");
static_assert(sizeof(MainPlayer_C_PlayFPAnimScripted) == 0x000018, "Wrong size on MainPlayer_C_PlayFPAnimScripted");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, MontageToPlay) == 0x000000, "Member 'MainPlayer_C_PlayFPAnimScripted::MontageToPlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, StartingSection) == 0x000008, "Member 'MainPlayer_C_PlayFPAnimScripted::StartingSection' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PlayFPAnimScripted, Call) == 0x000010, "Member 'MainPlayer_C_PlayFPAnimScripted::Call' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ateShit
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_AteShit final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AteShit) == 0x000004, "Wrong alignment on MainPlayer_C_AteShit");
static_assert(sizeof(MainPlayer_C_AteShit) == 0x000004, "Wrong size on MainPlayer_C_AteShit");
static_assert(offsetof(MainPlayer_C_AteShit, Damage) == 0x000000, "Member 'MainPlayer_C_AteShit::Damage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'MainPlayer_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_spawnmenu_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_spawnmenu_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_alt_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_alt_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_run_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(sizeof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5");
static_assert(offsetof(MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_run_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(sizeof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(offsetof(MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_Escape_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6");
static_assert(sizeof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6");
static_assert(offsetof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_dismount_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7");
static_assert(sizeof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7");
static_assert(offsetof(MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_dismount_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_cheatmenu_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8");
static_assert(sizeof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8");
static_assert(offsetof(MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_cheatmenu_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_flashlight_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9");
static_assert(sizeof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9");
static_assert(offsetof(MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_flashlight_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_rotate_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11");
static_assert(sizeof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11");
static_assert(offsetof(MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_rotate_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_crouch_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13");
static_assert(sizeof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13");
static_assert(offsetof(MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_crouch_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_jump_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15");
static_assert(sizeof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15");
static_assert(offsetof(MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_jump_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4");
static_assert(sizeof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4");
static_assert(offsetof(MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_C9A4A46A4C8E87AD113F5FBDA6247247::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_inventory_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16");
static_assert(sizeof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16");
static_assert(offsetof(MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_inventory_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_noclip_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17");
static_assert(sizeof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17");
static_assert(offsetof(MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_noclip_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_quicksave_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18");
static_assert(sizeof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18");
static_assert(offsetof(MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_quicksave_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_forward_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20");
static_assert(sizeof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20");
static_assert(offsetof(MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_forward_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_back_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22");
static_assert(sizeof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22");
static_assert(offsetof(MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_back_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_right_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24");
static_assert(sizeof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24");
static_assert(offsetof(MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_right_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_left_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26");
static_assert(sizeof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26");
static_assert(offsetof(MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_left_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27");
static_assert(sizeof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27");
static_assert(offsetof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_drop_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28");
static_assert(sizeof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28");
static_assert(offsetof(MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_drop_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_zoom_K2Node_InputActionEvent_30
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30");
static_assert(sizeof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30");
static_assert(offsetof(MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_zoom_K2Node_InputActionEvent_30::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_31
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_31::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_use_K2Node_InputActionEvent_32
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32");
static_assert(sizeof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32");
static_assert(offsetof(MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_use_K2Node_InputActionEvent_32::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_33
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_33::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_34
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_34::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_35
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_35::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_36
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_36::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_37
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_37::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_38
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_38::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_39
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_39::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_40
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_40::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_41
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_41::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_1_K2Node_InputActionEvent_42
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_1_K2Node_InputActionEvent_42::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_2_K2Node_InputActionEvent_43
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_2_K2Node_InputActionEvent_43::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_3_K2Node_InputActionEvent_44
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_3_K2Node_InputActionEvent_44::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_4_K2Node_InputActionEvent_45
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_4_K2Node_InputActionEvent_45::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_5_K2Node_InputActionEvent_46
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_5_K2Node_InputActionEvent_46::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_6_K2Node_InputActionEvent_47
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_6_K2Node_InputActionEvent_47::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_7_K2Node_InputActionEvent_48
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_7_K2Node_InputActionEvent_48::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_8_K2Node_InputActionEvent_49
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_8_K2Node_InputActionEvent_49::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_9_K2Node_InputActionEvent_50
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_9_K2Node_InputActionEvent_50::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_hotbar_10_K2Node_InputActionEvent_51
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51");
static_assert(sizeof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51");
static_assert(offsetof(MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_hotbar_10_K2Node_InputActionEvent_51::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollUp_K2Node_InputActionEvent_52
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollUp_K2Node_InputActionEvent_52::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_scrollDown_K2Node_InputActionEvent_53
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53");
static_assert(sizeof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53");
static_assert(offsetof(MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_scrollDown_K2Node_InputActionEvent_53::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_undo_K2Node_InputActionEvent_54
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54");
static_assert(sizeof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54");
static_assert(offsetof(MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_undo_K2Node_InputActionEvent_54::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_ragdoll_K2Node_InputActionEvent_55
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55");
static_assert(sizeof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55");
static_assert(offsetof(MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_ragdoll_K2Node_InputActionEvent_55::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_7B6F74A042FAB16562D2EAA1EFBF689C::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_810D1C624C726801D77BDDB22791052F
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_810D1C624C726801D77BDDB22791052F::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_4DBBC1B940FF6B1540C30484950F25EA::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_56
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_56::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_fire_K2Node_InputActionEvent_57
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57");
static_assert(sizeof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57");
static_assert(offsetof(MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_fire_K2Node_InputActionEvent_57::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_6FC60C6C4AA754F0D22D9FB355E91395::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnCompleted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnBlendOut_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnInterrupted_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyBegin_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000004, "Wrong alignment on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(sizeof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25) == 0x000008, "Wrong size on MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25");
static_assert(offsetof(MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25, NotifyName) == 0x000000, "Member 'MainPlayer_C_OnNotifyEnd_5D8C5DEB45CD068AED6A49A9D34D2E25::NotifyName' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_lockObject_K2Node_InputActionEvent_58
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58");
static_assert(sizeof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58");
static_assert(offsetof(MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_lockObject_K2Node_InputActionEvent_58::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.InpActEvt_debugtp_K2Node_InputActionEvent_59
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59) == 0x000008, "Wrong alignment on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59");
static_assert(sizeof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59) == 0x000018, "Wrong size on MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59");
static_assert(offsetof(MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59, Key) == 0x000000, "Member 'MainPlayer_C_InpActEvt_debugtp_K2Node_InputActionEvent_59::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.stepOn
// 0x01F0 (0x01F0 - 0x0000)
struct MainPlayer_C_StepOn final
{
public:
	float                                         A1;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_main_C*                           CallFunc_getMainSave_save_main;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_physSound_return;                         // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x01B0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StepOn) == 0x000008, "Wrong alignment on MainPlayer_C_StepOn");
static_assert(sizeof(MainPlayer_C_StepOn) == 0x0001F0, "Wrong size on MainPlayer_C_StepOn");
static_assert(offsetof(MainPlayer_C_StepOn, A1) == 0x000000, "Member 'MainPlayer_C_StepOn::A1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, A) == 0x000008, "Member 'MainPlayer_C_StepOn::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_StepOn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'MainPlayer_C_StepOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_getMainSave_save_main) == 0x000020, "Member 'MainPlayer_C_StepOn::CallFunc_getMainSave_save_main' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MainPlayer_C_StepOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_MakeArray_Array) == 0x000030, "Member 'MainPlayer_C_StepOn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_object_Variable) == 0x000048, "Member 'MainPlayer_C_StepOn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'MainPlayer_C_StepOn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, Temp_int_Variable) == 0x000064, "Member 'MainPlayer_C_StepOn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'MainPlayer_C_StepOn::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_StepOn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'MainPlayer_C_StepOn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_StepOn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'MainPlayer_C_StepOn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x00008C, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000114, "Member 'MainPlayer_C_StepOn::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bBlockingHit) == 0x000115, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_bInitialOverlap) == 0x000116, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_StepOn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_AsInt_Objects) == 0x000198, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'MainPlayer_C_StepOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001A9, "Member 'MainPlayer_C_StepOn::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_physSound_return) == 0x0001AA, "Member 'MainPlayer_C_StepOn::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StepOn, CallFunc_physSound_data) == 0x0001B0, "Member 'MainPlayer_C_StepOn::CallFunc_physSound_data' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.arm
// 0x0060 (0x0060 - 0x0000)
struct MainPlayer_C_Arm final
{
public:
	float                                         CustomLength;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Arm) == 0x000008, "Wrong alignment on MainPlayer_C_Arm");
static_assert(sizeof(MainPlayer_C_Arm) == 0x000060, "Wrong size on MainPlayer_C_Arm");
static_assert(offsetof(MainPlayer_C_Arm, CustomLength) == 0x000000, "Member 'MainPlayer_C_Arm::CustomLength' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, Start) == 0x000004, "Member 'MainPlayer_C_Arm::Start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, End) == 0x000010, "Member 'MainPlayer_C_Arm::End' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_Arm::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'MainPlayer_C_Arm::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'MainPlayer_C_Arm::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_Arm::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'MainPlayer_C_Arm::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'MainPlayer_C_Arm::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Arm, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'MainPlayer_C_Arm::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.Enter Interface
// 0x0110 (0x0110 - 0x0000)
struct MainPlayer_C_Enter_Interface final
{
public:
	class UWidget*                                Param_ActiveInterface;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_LookAtLocation;                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_CamLocation;                                 // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFrom;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_setActiveInterface_return;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Enter_Interface) == 0x000010, "Wrong alignment on MainPlayer_C_Enter_Interface");
static_assert(sizeof(MainPlayer_C_Enter_Interface) == 0x000110, "Wrong size on MainPlayer_C_Enter_Interface");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_ActiveInterface) == 0x000000, "Member 'MainPlayer_C_Enter_Interface::Param_ActiveInterface' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_LookAtLocation) == 0x000008, "Member 'MainPlayer_C_Enter_Interface::Param_LookAtLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, Param_CamLocation) == 0x000014, "Member 'MainPlayer_C_Enter_Interface::Param_CamLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFrom) == 0x000020, "Member 'MainPlayer_C_Enter_Interface::CallFrom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_AsInt_Coms) == 0x000030, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MainPlayer_C_Enter_Interface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_setActiveInterface_return) == 0x000041, "Member 'MainPlayer_C_Enter_Interface::CallFunc_setActiveInterface_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'MainPlayer_C_Enter_Interface::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'MainPlayer_C_Enter_Interface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Enter_Interface, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'MainPlayer_C_Enter_Interface::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.makeLookAt
// 0x0170 (0x0170 - 0x0000)
struct MainPlayer_C_MakeLookAt final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Att;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_MakeLookAt) == 0x000008, "Wrong alignment on MainPlayer_C_MakeLookAt");
static_assert(sizeof(MainPlayer_C_MakeLookAt) == 0x000170, "Wrong size on MainPlayer_C_MakeLookAt");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Location) == 0x000000, "Member 'MainPlayer_C_MakeLookAt::Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, Att) == 0x00000C, "Member 'MainPlayer_C_MakeLookAt::Att' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MakeLookAt::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000030, "Member 'MainPlayer_C_MakeLookAt::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000040, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C8, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000D4, "Member 'MainPlayer_C_MakeLookAt::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_FindLookAtRotation_ReturnValue) == 0x00015C, "Member 'MainPlayer_C_MakeLookAt::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MakeLookAt, CallFunc_GetPlayerController_ReturnValue) == 0x000168, "Member 'MainPlayer_C_MakeLookAt::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useAction
// 0x0478 (0x0478 - 0x0000)
struct MainPlayer_C_UseAction final
{
public:
	bool                                          Sec;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DirectUse;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succ;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Component;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Issec;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_collectObject_collected;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_interactionActions                       CallFunc_selectedAction_Output1;                   // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_selectedAction_asName;                    // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_useAction_succ;                           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_useAction_succ_1;                         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_lookAt_return;                            // 0x03F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x5];                                      // 0x03F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number;                            // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_3;                 // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseAction) == 0x000008, "Wrong alignment on MainPlayer_C_UseAction");
static_assert(sizeof(MainPlayer_C_UseAction) == 0x000478, "Wrong size on MainPlayer_C_UseAction");
static_assert(offsetof(MainPlayer_C_UseAction, Sec) == 0x000000, "Member 'MainPlayer_C_UseAction::Sec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Radius) == 0x000004, "Member 'MainPlayer_C_UseAction::Radius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, DirectUse) == 0x000008, "Member 'MainPlayer_C_UseAction::DirectUse' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Succ) == 0x000010, "Member 'MainPlayer_C_UseAction::Succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Component) == 0x000018, "Member 'MainPlayer_C_UseAction::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Actor) == 0x000020, "Member 'MainPlayer_C_UseAction::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, Issec) == 0x000028, "Member 'MainPlayer_C_UseAction::Issec' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit) == 0x000029, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap) == 0x00002A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time) == 0x00002C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance) == 0x000030, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location) == 0x000034, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint) == 0x000040, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal) == 0x00004C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal) == 0x000058, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat) == 0x000068, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor) == 0x000070, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent) == 0x000078, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName) == 0x000080, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem) == 0x000088, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex) == 0x00008C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex) == 0x000090, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart) == 0x000094, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd) == 0x0000A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_MakeHitResult_ReturnValue) == 0x0000AC, "Member 'MainPlayer_C_UseAction::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000138, "Member 'MainPlayer_C_UseAction::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000140, "Member 'MainPlayer_C_UseAction::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_isDreaming_dreaming) == 0x000148, "Member 'MainPlayer_C_UseAction::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Array_Get_Item) == 0x000150, "Member 'MainPlayer_C_UseAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_collectObject_collected) == 0x000160, "Member 'MainPlayer_C_UseAction::CallFunc_collectObject_collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000161, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000162, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_1) == 0x000164, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_1) == 0x000168, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_1) == 0x00016C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000178, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_1) == 0x000184, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000190, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_1) == 0x0001A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_1) == 0x0001A8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_1) == 0x0001B0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001B8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_1) == 0x0001C0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_1) == 0x0001C4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001C8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_1) == 0x0001CC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001D8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_UseAction::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_Output1) == 0x0001E5, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_selectedAction_asName) == 0x0001E8, "Member 'MainPlayer_C_UseAction::CallFunc_selectedAction_asName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchString_CmpSuccess) == 0x0001F8, "Member 'MainPlayer_C_UseAction::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_SwitchEnum_CmpSuccess) == 0x0001F9, "Member 'MainPlayer_C_UseAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001FC, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ) == 0x000208, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_useAction_succ_1) == 0x000209, "Member 'MainPlayer_C_UseAction::CallFunc_useAction_succ_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00020A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00020B, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_2) == 0x00020C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_2) == 0x000210, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_2) == 0x000214, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000220, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_2) == 0x00022C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000238, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_2) == 0x000248, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_2) == 0x000250, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_2) == 0x000258, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_2) == 0x000260, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_2) == 0x000268, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_2) == 0x00026C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_2) == 0x000270, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_2) == 0x000274, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_2) == 0x000280, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player) == 0x000290, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess) == 0x0002A0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue) == 0x0002A1, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0002A2, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0002A3, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_3) == 0x0002A4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_3) == 0x0002A8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_3) == 0x0002AC, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0002B8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_3) == 0x0002C4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0002D0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_3) == 0x0002E0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_3) == 0x0002E8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_3) == 0x0002F0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_3) == 0x0002F8, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_3) == 0x000300, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_3) == 0x000304, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_3) == 0x000308, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_3) == 0x00030C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_3) == 0x000318, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_1) == 0x000328, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_1) == 0x000338, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000339, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bBlockingHit_4) == 0x00033A, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x00033B, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Time_4) == 0x00033C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Distance_4) == 0x000340, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Location_4) == 0x000344, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000350, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_Normal_4) == 0x00035C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ImpactNormal_4) == 0x000368, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_PhysMat_4) == 0x000378, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitActor_4) == 0x000380, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitComponent_4) == 0x000388, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitBoneName_4) == 0x000390, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_HitItem_4) == 0x000398, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_ElementIndex_4) == 0x00039C, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_FaceIndex_4) == 0x0003A0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceStart_4) == 0x0003A4, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_BreakHitResult_TraceEnd_4) == 0x0003B0, "Member 'MainPlayer_C_UseAction::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0003BC, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects) == 0x0003C0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_2) == 0x0003D0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0003D8, "Member 'MainPlayer_C_UseAction::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_2) == 0x0003E0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_3) == 0x0003F0, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x0003F1, "Member 'MainPlayer_C_UseAction::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_return) == 0x0003F2, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_text) == 0x0003F8, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_boundObjectReplace) == 0x000408, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_lookAt_number) == 0x000410, "Member 'MainPlayer_C_UseAction::CallFunc_lookAt_number' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue) == 0x000411, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Objects_1) == 0x000418, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_4) == 0x000428, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_AsInt_Player_3) == 0x000430, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_AsInt_Player_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, K2Node_DynamicCast_bSuccess_5) == 0x000440, "Member 'MainPlayer_C_UseAction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_asProp_return) == 0x000448, "Member 'MainPlayer_C_UseAction::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_Origin) == 0x000450, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_GetActorBounds_BoxExtent) == 0x00045C, "Member 'MainPlayer_C_UseAction::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_Vector_Distance_ReturnValue) == 0x000468, "Member 'MainPlayer_C_UseAction::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_IsValid_ReturnValue_1) == 0x00046C, "Member 'MainPlayer_C_UseAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_FClamp_ReturnValue) == 0x000470, "Member 'MainPlayer_C_UseAction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseAction, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x000474, "Member 'MainPlayer_C_UseAction::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addFood
// 0x00F8 (0x00F8 - 0x0000)
struct MainPlayer_C_AddFood final
{
public:
	float                                         Food;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sleep;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_food_C*                           AsFood;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassNoHunger;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Full;                                              // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mult;                                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot_1;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddFood) == 0x000008, "Wrong alignment on MainPlayer_C_AddFood");
static_assert(sizeof(MainPlayer_C_AddFood) == 0x0000F8, "Wrong size on MainPlayer_C_AddFood");
static_assert(offsetof(MainPlayer_C_AddFood, Food) == 0x000000, "Member 'MainPlayer_C_AddFood::Food' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Sleep) == 0x000004, "Member 'MainPlayer_C_AddFood::Sleep' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Health) == 0x000008, "Member 'MainPlayer_C_AddFood::Health' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, AsFood) == 0x000010, "Member 'MainPlayer_C_AddFood::AsFood' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, bypassNoHunger) == 0x000018, "Member 'MainPlayer_C_AddFood::bypassNoHunger' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Full) == 0x000019, "Member 'MainPlayer_C_AddFood::Full' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Ind) == 0x00001C, "Member 'MainPlayer_C_AddFood::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Mult) == 0x000020, "Member 'MainPlayer_C_AddFood::Mult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getMainPlayer_AsMain_Player) == 0x000028, "Member 'MainPlayer_C_AddFood::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MainPlayer_C_AddFood::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'MainPlayer_C_AddFood::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Conv_FloatToString_ReturnValue) == 0x000050, "Member 'MainPlayer_C_AddFood::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'MainPlayer_C_AddFood::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Abs_ReturnValue) == 0x000064, "Member 'MainPlayer_C_AddFood::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'MainPlayer_C_AddFood::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000069, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00006A, "Member 'MainPlayer_C_AddFood::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_string_Variable) == 0x000070, "Member 'MainPlayer_C_AddFood::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'MainPlayer_C_AddFood::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000084, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'MainPlayer_C_AddFood::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'MainPlayer_C_AddFood::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable) == 0x000090, "Member 'MainPlayer_C_AddFood::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000094, "Member 'MainPlayer_C_AddFood::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot) == 0x000098, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000A4, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue) == 0x0000AC, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000B1, "Member 'MainPlayer_C_AddFood::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_BooleanOR_ReturnValue) == 0x0000B2, "Member 'MainPlayer_C_AddFood::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'MainPlayer_C_AddFood::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B8, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'MainPlayer_C_AddFood::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Find_ReturnValue) == 0x0000C0, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000C4, "Member 'MainPlayer_C_AddFood::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0000C8, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0000CC, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_FClamp_ReturnValue_1) == 0x0000D0, "Member 'MainPlayer_C_AddFood::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'MainPlayer_C_AddFood::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_getSaveSlot_saveSlot_1) == 0x0000D8, "Member 'MainPlayer_C_AddFood::CallFunc_getSaveSlot_saveSlot_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Lerp_ReturnValue_1) == 0x0000E0, "Member 'MainPlayer_C_AddFood::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'MainPlayer_C_AddFood::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0000E8, "Member 'MainPlayer_C_AddFood::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, Temp_float_Variable_1) == 0x0000EC, "Member 'MainPlayer_C_AddFood::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddFood, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'MainPlayer_C_AddFood::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isExhausted
// 0x0098 (0x0098 - 0x0000)
struct MainPlayer_C_IsExhausted final
{
public:
	bool                                          Exhausted;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0080(0x0018)()
};
static_assert(alignof(MainPlayer_C_IsExhausted) == 0x000008, "Wrong alignment on MainPlayer_C_IsExhausted");
static_assert(sizeof(MainPlayer_C_IsExhausted) == 0x000098, "Wrong size on MainPlayer_C_IsExhausted");
static_assert(offsetof(MainPlayer_C_IsExhausted, Exhausted) == 0x000000, "Member 'MainPlayer_C_IsExhausted::Exhausted' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable) == 0x000001, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable) == 0x000008, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_1) == 0x000020, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_bool_Variable_1) == 0x000038, "Member 'MainPlayer_C_IsExhausted::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, Temp_text_Variable_2) == 0x000040, "Member 'MainPlayer_C_IsExhausted::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000058, "Member 'MainPlayer_C_IsExhausted::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000061, "Member 'MainPlayer_C_IsExhausted::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'MainPlayer_C_IsExhausted::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default) == 0x000068, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_IsExhausted, K2Node_Select_Default_1) == 0x000080, "Member 'MainPlayer_C_IsExhausted::K2Node_Select_Default_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setActiveInterface
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_SetActiveInterface final
{
public:
	class UWidget*                                Param_ActiveInterface;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Param_Zoom;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SentBy;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreZoom;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_coms_C>           K2Node_DynamicCast_AsInt_Coms;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget_2;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetActiveInterface) == 0x000008, "Wrong alignment on MainPlayer_C_SetActiveInterface");
static_assert(sizeof(MainPlayer_C_SetActiveInterface) == 0x000090, "Wrong size on MainPlayer_C_SetActiveInterface");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Param_ActiveInterface) == 0x000000, "Member 'MainPlayer_C_SetActiveInterface::Param_ActiveInterface' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, InString) == 0x000008, "Member 'MainPlayer_C_SetActiveInterface::InString' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Param_Zoom) == 0x000018, "Member 'MainPlayer_C_SetActiveInterface::Param_Zoom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, SentBy) == 0x000020, "Member 'MainPlayer_C_SetActiveInterface::SentBy' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, IgnoreZoom) == 0x000028, "Member 'MainPlayer_C_SetActiveInterface::IgnoreZoom' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, Return) == 0x000029, "Member 'MainPlayer_C_SetActiveInterface::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget) == 0x000030, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsInt_Coms) == 0x000040, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsInt_Coms' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_1) == 0x000058, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000068, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_AsUser_Widget_2) == 0x000078, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_AsUser_Widget_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'MainPlayer_C_SetActiveInterface::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetActiveInterface, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'MainPlayer_C_SetActiveInterface::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.flashlightUse
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_FlashlightUse final
{
public:
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_FlashlightUse) == 0x000008, "Wrong alignment on MainPlayer_C_FlashlightUse");
static_assert(sizeof(MainPlayer_C_FlashlightUse) == 0x000010, "Wrong size on MainPlayer_C_FlashlightUse");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000000, "Member 'MainPlayer_C_FlashlightUse::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'MainPlayer_C_FlashlightUse::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FlashlightUse, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'MainPlayer_C_FlashlightUse::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setMouseSmooth
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_SetMouseSmooth final
{
public:
	float                                         CameraLagSpeed;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_MouseSens;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_SetMouseSmooth) == 0x000004, "Wrong alignment on MainPlayer_C_SetMouseSmooth");
static_assert(sizeof(MainPlayer_C_SetMouseSmooth) == 0x000010, "Wrong size on MainPlayer_C_SetMouseSmooth");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CameraLagSpeed) == 0x000000, "Member 'MainPlayer_C_SetMouseSmooth::CameraLagSpeed' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, Param_MouseSens) == 0x000004, "Member 'MainPlayer_C_SetMouseSmooth::Param_MouseSens' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetMouseSmooth, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_SetMouseSmooth::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.kick
// 0x02A8 (0x02A8 - 0x0000)
struct MainPlayer_C_Kick final
{
public:
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMassScale_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_physSound_return;                         // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x0210(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Kick) == 0x000008, "Wrong alignment on MainPlayer_C_Kick");
static_assert(sizeof(MainPlayer_C_Kick) == 0x0002A8, "Wrong size on MainPlayer_C_Kick");
static_assert(offsetof(MainPlayer_C_Kick, A) == 0x000000, "Member 'MainPlayer_C_Kick::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array) == 0x000010, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_MakeArray_Array_1) == 0x000038, "Member 'MainPlayer_C_Kick::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000064, "Member 'MainPlayer_C_Kick::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'MainPlayer_C_Kick::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000084, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x00010C, "Member 'MainPlayer_C_Kick::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bBlockingHit) == 0x000114, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_bInitialOverlap) == 0x000115, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Time) == 0x000118, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Distance) == 0x00011C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Location) == 0x000120, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactPoint) == 0x00012C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ImpactNormal) == 0x000144, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'MainPlayer_C_Kick::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000194, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMassScale_ReturnValue) == 0x000198, "Member 'MainPlayer_C_Kick::CallFunc_GetMassScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_MakeVector_ReturnValue) == 0x00019C, "Member 'MainPlayer_C_Kick::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetMass_ReturnValue) == 0x0001A8, "Member 'MainPlayer_C_Kick::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_Origin) == 0x0001AC, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_BoxExtent) == 0x0001B8, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_GetComponentBounds_SphereRadius) == 0x0001C4, "Member 'MainPlayer_C_Kick::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001C8, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_Kick::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001D8, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E4, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_Kick::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_AsInt_Player) == 0x0001F8, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MainPlayer_C_Kick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000209, "Member 'MainPlayer_C_Kick::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_physSound_return) == 0x00020A, "Member 'MainPlayer_C_Kick::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_physSound_data) == 0x000210, "Member 'MainPlayer_C_Kick::CallFunc_physSound_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000250, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000254, "Member 'MainPlayer_C_Kick::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_SetVectorLength_ReturnValue) == 0x000258, "Member 'MainPlayer_C_Kick::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000264, "Member 'MainPlayer_C_Kick::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue) == 0x000268, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000274, "Member 'MainPlayer_C_Kick::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000280, "Member 'MainPlayer_C_Kick::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000284, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_VSize_ReturnValue_2) == 0x000290, "Member 'MainPlayer_C_Kick::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000294, "Member 'MainPlayer_C_Kick::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002A0, "Member 'MainPlayer_C_Kick::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Kick, CallFunc_BooleanAND_ReturnValue) == 0x0002A1, "Member 'MainPlayer_C_Kick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.ragdollMode
// 0x01E0 (0x01E0 - 0x0000)
struct MainPlayer_C_RagdollMode final
{
public:
	bool                                          Ragdoll;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PassOut;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Death;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0xD];                                        // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerRagdoll_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0xE];                                       // 0x0072(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_RagdollMode) == 0x000010, "Wrong alignment on MainPlayer_C_RagdollMode");
static_assert(sizeof(MainPlayer_C_RagdollMode) == 0x0001E0, "Wrong size on MainPlayer_C_RagdollMode");
static_assert(offsetof(MainPlayer_C_RagdollMode, Ragdoll) == 0x000000, "Member 'MainPlayer_C_RagdollMode::Ragdoll' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, PassOut) == 0x000001, "Member 'MainPlayer_C_RagdollMode::PassOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, Death) == 0x000002, "Member 'MainPlayer_C_RagdollMode::Death' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'MainPlayer_C_RagdollMode::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'MainPlayer_C_RagdollMode::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000050, "Member 'MainPlayer_C_RagdollMode::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000058, "Member 'MainPlayer_C_RagdollMode::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000068, "Member 'MainPlayer_C_RagdollMode::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'MainPlayer_C_RagdollMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_isDreaming_dreaming) == 0x000071, "Member 'MainPlayer_C_RagdollMode::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B1, "Member 'MainPlayer_C_RagdollMode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000B4, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_GetActorForwardVector_ReturnValue) == 0x00013C, "Member 'MainPlayer_C_RagdollMode::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000148, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_SetVectorLength_ReturnValue) == 0x0001D0, "Member 'MainPlayer_C_RagdollMode::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_RagdollMode, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001DC, "Member 'MainPlayer_C_RagdollMode::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.StopMovement
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_StopMovement final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_StopMovement) == 0x000008, "Wrong alignment on MainPlayer_C_StopMovement");
static_assert(sizeof(MainPlayer_C_StopMovement) == 0x000018, "Wrong size on MainPlayer_C_StopMovement");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'MainPlayer_C_StopMovement::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_StopMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'MainPlayer_C_StopMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.punch
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_Punch final
{
public:
	struct FVector                                FullBody;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                boneImp;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bn1;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bn;                                                // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                bimp;                                              // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Imp1;                                              // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Punch) == 0x000008, "Wrong alignment on MainPlayer_C_Punch");
static_assert(sizeof(MainPlayer_C_Punch) == 0x000080, "Wrong size on MainPlayer_C_Punch");
static_assert(offsetof(MainPlayer_C_Punch, FullBody) == 0x000000, "Member 'MainPlayer_C_Punch::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, boneImp) == 0x00000C, "Member 'MainPlayer_C_Punch::boneImp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn1) == 0x000018, "Member 'MainPlayer_C_Punch::bn1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Damage) == 0x000020, "Member 'MainPlayer_C_Punch::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, DamageLocation) == 0x000024, "Member 'MainPlayer_C_Punch::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bypassSettings) == 0x000030, "Member 'MainPlayer_C_Punch::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bn) == 0x000034, "Member 'MainPlayer_C_Punch::bn' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, bimp) == 0x00003C, "Member 'MainPlayer_C_Punch::bimp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Imp1) == 0x000048, "Member 'MainPlayer_C_Punch::Imp1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Array_Index_Variable) == 0x000054, "Member 'MainPlayer_C_Punch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'MainPlayer_C_Punch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_Punch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_GetAllSocketNames_ReturnValue) == 0x000060, "Member 'MainPlayer_C_Punch::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'MainPlayer_C_Punch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Array_Get_Item) == 0x000074, "Member 'MainPlayer_C_Punch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Punch, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_Punch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useLadder
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_UseLadder final
{
public:
	class ALadder_C*                              Param_Ladder;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALadder_C*                              Ladder1;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseLadder) == 0x000008, "Wrong alignment on MainPlayer_C_UseLadder");
static_assert(sizeof(MainPlayer_C_UseLadder) == 0x000038, "Wrong size on MainPlayer_C_UseLadder");
static_assert(offsetof(MainPlayer_C_UseLadder, Param_Ladder) == 0x000000, "Member 'MainPlayer_C_UseLadder::Param_Ladder' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, Ladder1) == 0x000008, "Member 'MainPlayer_C_UseLadder::Ladder1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_GetVelocity_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UseLadder::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_X) == 0x000020, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Y) == 0x000024, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_BreakVector_Z) == 0x000028, "Member 'MainPlayer_C_UseLadder::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Abs_ReturnValue) == 0x00002C, "Member 'MainPlayer_C_UseLadder::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'MainPlayer_C_UseLadder::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseLadder, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'MainPlayer_C_UseLadder::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updWater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_UpdWater final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UpdWater) == 0x000001, "Wrong alignment on MainPlayer_C_UpdWater");
static_assert(sizeof(MainPlayer_C_UpdWater) == 0x000002, "Wrong size on MainPlayer_C_UpdWater");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdWater, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000001, "Member 'MainPlayer_C_UpdWater::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.muffleUnderwater
// 0x0090 (0x0090 - 0x0000)
struct MainPlayer_C_MuffleUnderwater final
{
public:
	bool                                          A;                                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_MuffleUnderwater) == 0x000010, "Wrong alignment on MainPlayer_C_MuffleUnderwater");
static_assert(sizeof(MainPlayer_C_MuffleUnderwater) == 0x000090, "Wrong size on MainPlayer_C_MuffleUnderwater");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, A) == 0x000000, "Member 'MainPlayer_C_MuffleUnderwater::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MainPlayer_C_MuffleUnderwater::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_X) == 0x000028, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Y) == 0x00002C, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BreakVector_Z) == 0x000030, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Array_Get_Item) == 0x000038, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x000084, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MuffleUnderwater, CallFunc_BooleanOR_ReturnValue) == 0x000085, "Member 'MainPlayer_C_MuffleUnderwater::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setUnderwater
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_SetUnderwater final
{
public:
	bool                                          InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetUnderwater) == 0x000001, "Wrong alignment on MainPlayer_C_SetUnderwater");
static_assert(sizeof(MainPlayer_C_SetUnderwater) == 0x000002, "Wrong size on MainPlayer_C_SetUnderwater");
static_assert(offsetof(MainPlayer_C_SetUnderwater, InputPin) == 0x000000, "Member 'MainPlayer_C_SetUnderwater::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetUnderwater, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'MainPlayer_C_SetUnderwater::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.putObjectInventory2
// 0x0058 (0x0058 - 0x0000)
struct MainPlayer_C_PutObjectInventory2 final
{
public:
	class AActor*                                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_getInd_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addObject_return;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addObject_err;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_PutObjectInventory2) == 0x000008, "Wrong alignment on MainPlayer_C_PutObjectInventory2");
static_assert(sizeof(MainPlayer_C_PutObjectInventory2) == 0x000058, "Wrong size on MainPlayer_C_PutObjectInventory2");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, InputPin) == 0x000000, "Member 'MainPlayer_C_PutObjectInventory2::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, Return) == 0x000008, "Member 'MainPlayer_C_PutObjectInventory2::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000020, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getInd_ReturnValue) == 0x000024, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getInd_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_IsChildActor_ReturnValue) == 0x000028, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000030, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000038, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_return) == 0x000040, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_PutObjectInventory2, CallFunc_addObject_err) == 0x000048, "Member 'MainPlayer_C_PutObjectInventory2::CallFunc_addObject_err' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addEquip
// 0x0210 (0x0210 - 0x0000)
struct MainPlayer_C_AddEquip final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x00C8(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_propDynamic                    CallFunc_propToDynamic_equip;                      // 0x00D8(0x0028)(HasGetValueTypeHash)
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x0100(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_updEquip_return;                          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_updEquip_rebug;                           // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddEquip) == 0x000010, "Wrong alignment on MainPlayer_C_AddEquip");
static_assert(sizeof(MainPlayer_C_AddEquip) == 0x000210, "Wrong size on MainPlayer_C_AddEquip");
static_assert(offsetof(MainPlayer_C_AddEquip, Data) == 0x000000, "Member 'MainPlayer_C_AddEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Return) == 0x0000C0, "Member 'MainPlayer_C_AddEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, Rebug) == 0x0000C8, "Member 'MainPlayer_C_AddEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_propToDynamic_equip) == 0x0000D8, "Member 'MainPlayer_C_AddEquip::CallFunc_propToDynamic_equip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, K2Node_MakeStruct_struct_equipment) == 0x000100, "Member 'MainPlayer_C_AddEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_return) == 0x0001F0, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_updEquip_rebug) == 0x0001F8, "Member 'MainPlayer_C_AddEquip::CallFunc_updEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddEquip, CallFunc_getSaveSlot_saveSlot) == 0x000208, "Member 'MainPlayer_C_AddEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updEquip
// 0x03A0 (0x03A0 - 0x0000)
struct MainPlayer_C_UpdEquip final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Rebug;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 D;                                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Data;                                              // 0x0030(0x00F0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   N;                                                 // 0x0124(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0xB];                                      // 0x0185(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsPrinted_Object;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item_1;                         // 0x01F8(0x0010)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0260(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02E8(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_weapon                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0370(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdEquip) == 0x000010, "Wrong alignment on MainPlayer_C_UpdEquip");
static_assert(sizeof(MainPlayer_C_UpdEquip) == 0x0003A0, "Wrong size on MainPlayer_C_UpdEquip");
static_assert(offsetof(MainPlayer_C_UpdEquip, Return) == 0x000000, "Member 'MainPlayer_C_UpdEquip::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Rebug) == 0x000008, "Member 'MainPlayer_C_UpdEquip::Rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, D) == 0x000018, "Member 'MainPlayer_C_UpdEquip::D' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Data) == 0x000030, "Member 'MainPlayer_C_UpdEquip::Data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Ret) == 0x000120, "Member 'MainPlayer_C_UpdEquip::Ret' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, N) == 0x000124, "Member 'MainPlayer_C_UpdEquip::N' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, Temp_int_Variable) == 0x00012C, "Member 'MainPlayer_C_UpdEquip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'MainPlayer_C_UpdEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Player) == 0x000138, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000150, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000168, "Member 'MainPlayer_C_UpdEquip::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item) == 0x000178, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'MainPlayer_C_UpdEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'MainPlayer_C_UpdEquip::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_AsPrinted_Object) == 0x0001C0, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_AsPrinted_Object' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_ClassDynamicCast_bSuccess) == 0x0001C8, "Member 'MainPlayer_C_UpdEquip::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001C9, "Member 'MainPlayer_C_UpdEquip::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Player_1) == 0x0001D0, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_2) == 0x0001E0, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x0001E8, "Member 'MainPlayer_C_UpdEquip::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_IsValid_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_UpdEquip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue) == 0x0001F1, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_loadData_return) == 0x0001F2, "Member 'MainPlayer_C_UpdEquip::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000208, "Member 'MainPlayer_C_UpdEquip::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Array_Get_Item_2) == 0x000210, "Member 'MainPlayer_C_UpdEquip::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_FinishSpawningActor_ReturnValue) == 0x000220, "Member 'MainPlayer_C_UpdEquip::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_Conv_StringToName_ReturnValue) == 0x000228, "Member 'MainPlayer_C_UpdEquip::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000230, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_3) == 0x000240, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_AsInt_Objects) == 0x000248, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, K2Node_DynamicCast_bSuccess_4) == 0x000258, "Member 'MainPlayer_C_UpdEquip::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow) == 0x000260, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E0, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0002E1, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002E8, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000368, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000370, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000390, "Member 'MainPlayer_C_UpdEquip::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000391, "Member 'MainPlayer_C_UpdEquip::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdEquip, CallFunc_getSaveSlot_saveSlot) == 0x000398, "Member 'MainPlayer_C_UpdEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.attack
// 0x02B0 (0x02B0 - 0x0000)
struct MainPlayer_C_Attack final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutputPin;                                         // 0x0004(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Cl;                                                // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_start;                                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_physSound_return;                         // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_physSound                      CallFunc_physSound_data;                           // 0x0238(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Attack) == 0x000008, "Wrong alignment on MainPlayer_C_Attack");
static_assert(sizeof(MainPlayer_C_Attack) == 0x0002B0, "Wrong size on MainPlayer_C_Attack");
static_assert(offsetof(MainPlayer_C_Attack, Hit) == 0x000000, "Member 'MainPlayer_C_Attack::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, OutputPin) == 0x000004, "Member 'MainPlayer_C_Attack::OutputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, ReturnValue) == 0x000090, "Member 'MainPlayer_C_Attack::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Cl) == 0x000098, "Member 'MainPlayer_C_Attack::Cl' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Lerp_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_Attack::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_start) == 0x0000A4, "Member 'MainPlayer_C_Attack::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_arm_end) == 0x0000B0, "Member 'MainPlayer_C_Attack::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, Temp_object_Variable) == 0x0000C0, "Member 'MainPlayer_C_Attack::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_OutHit) == 0x0000D0, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_LineTraceSingle_ReturnValue) == 0x000158, "Member 'MainPlayer_C_Attack::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue) == 0x00015C, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bBlockingHit) == 0x000168, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_bInitialOverlap) == 0x000169, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Time) == 0x00016C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Distance) == 0x000170, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Location) == 0x000174, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactPoint) == 0x000180, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_Normal) == 0x00018C, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ImpactNormal) == 0x000198, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceStart) == 0x0001D4, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'MainPlayer_C_Attack::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsValid_ReturnValue) == 0x0001EC, "Member 'MainPlayer_C_Attack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001ED, "Member 'MainPlayer_C_Attack::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetMass_ReturnValue) == 0x0001F0, "Member 'MainPlayer_C_Attack::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Player) == 0x0001F8, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_FMin_ReturnValue) == 0x00020C, "Member 'MainPlayer_C_Attack::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_AsInt_Objects) == 0x000210, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'MainPlayer_C_Attack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetObjectClass_ReturnValue) == 0x000228, "Member 'MainPlayer_C_Attack::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_physSound_return) == 0x000230, "Member 'MainPlayer_C_Attack::CallFunc_physSound_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_physSound_data) == 0x000238, "Member 'MainPlayer_C_Attack::CallFunc_physSound_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Add_VectorVector_ReturnValue) == 0x000278, "Member 'MainPlayer_C_Attack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_GetForwardVector_ReturnValue_1) == 0x000284, "Member 'MainPlayer_C_Attack::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000290, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000294, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002A0, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Attack, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002A4, "Member 'MainPlayer_C_Attack::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.checkEquip
// 0x02E0 (0x02E0 - 0x0000)
struct MainPlayer_C_CheckEquip final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      Output;                                            // 0x0010(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0120(0x00C0)(HasGetValueTypeHash)
	struct FStruct_equipment                      K2Node_MakeStruct_struct_equipment;                // 0x01E0(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CheckEquip) == 0x000010, "Wrong alignment on MainPlayer_C_CheckEquip");
static_assert(sizeof(MainPlayer_C_CheckEquip) == 0x0002E0, "Wrong size on MainPlayer_C_CheckEquip");
static_assert(offsetof(MainPlayer_C_CheckEquip, Empty) == 0x000000, "Member 'MainPlayer_C_CheckEquip::Empty' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, Output) == 0x000010, "Member 'MainPlayer_C_CheckEquip::Output' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getSaveSlot_saveSlot) == 0x000100, "Member 'MainPlayer_C_CheckEquip::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_AsInt_Save_1) == 0x000108, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'MainPlayer_C_CheckEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_getData_data) == 0x000120, "Member 'MainPlayer_C_CheckEquip::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, K2Node_MakeStruct_struct_equipment) == 0x0001E0, "Member 'MainPlayer_C_CheckEquip::K2Node_MakeStruct_struct_equipment' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_IsValidClass_ReturnValue) == 0x0002D0, "Member 'MainPlayer_C_CheckEquip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CheckEquip, CallFunc_Not_PreBool_ReturnValue) == 0x0002D1, "Member 'MainPlayer_C_CheckEquip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.movOut
// 0x0278 (0x0278 - 0x0000)
struct MainPlayer_C_MovOut final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                InputPin;                                          // 0x0088(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             H;                                                 // 0x0094(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                L;                                                 // 0x011C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x01F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MainPlayer_C_MovOut) == 0x000008, "Wrong alignment on MainPlayer_C_MovOut");
static_assert(sizeof(MainPlayer_C_MovOut) == 0x000278, "Wrong size on MainPlayer_C_MovOut");
static_assert(offsetof(MainPlayer_C_MovOut, Hit) == 0x000000, "Member 'MainPlayer_C_MovOut::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, InputPin) == 0x000088, "Member 'MainPlayer_C_MovOut::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, H) == 0x000094, "Member 'MainPlayer_C_MovOut::H' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, L) == 0x00011C, "Member 'MainPlayer_C_MovOut::L' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_Has_Been_Initd_Variable) == 0x000128, "Member 'MainPlayer_C_MovOut::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_int_Variable) == 0x00012C, "Member 'MainPlayer_C_MovOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'MainPlayer_C_MovOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'MainPlayer_C_MovOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, Temp_bool_IsClosed_Variable) == 0x000135, "Member 'MainPlayer_C_MovOut::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bBlockingHit) == 0x000136, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_bInitialOverlap) == 0x000137, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Time) == 0x000138, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Distance) == 0x00013C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactPoint) == 0x00014C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ImpactNormal) == 0x000164, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'MainPlayer_C_MovOut::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001B4, "Member 'MainPlayer_C_MovOut::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001C0, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_MovOut::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'MainPlayer_C_MovOut::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_MovOut, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0001F0, "Member 'MainPlayer_C_MovOut::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.teleportWObackrooms
// 0x0130 (0x0130 - 0x0000)
struct MainPlayer_C_TeleportWObackrooms final
{
public:
	struct FTransform                             NewTransform;                                      // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_TeleportWObackrooms) == 0x000010, "Wrong alignment on MainPlayer_C_TeleportWObackrooms");
static_assert(sizeof(MainPlayer_C_TeleportWObackrooms) == 0x000130, "Wrong size on MainPlayer_C_TeleportWObackrooms");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, NewTransform) == 0x000000, "Member 'MainPlayer_C_TeleportWObackrooms::NewTransform' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Location) == 0x00003C, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Rotation) == 0x000048, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_BreakTransform_Scale) == 0x000054, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000A0, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TeleportWObackrooms, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000128, "Member 'MainPlayer_C_TeleportWObackrooms::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShit
// 0x0078 (0x0078 - 0x0000)
struct MainPlayer_C_ThrowShit final
{
public:
	class UPrimitiveComponent*                    InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_ThrowShit) == 0x000008, "Wrong alignment on MainPlayer_C_ThrowShit");
static_assert(sizeof(MainPlayer_C_ThrowShit) == 0x000078, "Wrong size on MainPlayer_C_ThrowShit");
static_assert(offsetof(MainPlayer_C_ThrowShit, InputPin) == 0x000000, "Member 'MainPlayer_C_ThrowShit::InputPin' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_RandomUnitVector_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_ThrowShit::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000030, "Member 'MainPlayer_C_ThrowShit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetMass_ReturnValue) == 0x00003C, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_GetVelocity_ReturnValue) == 0x000040, "Member 'MainPlayer_C_ThrowShit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_FMax_ReturnValue) == 0x00004C, "Member 'MainPlayer_C_ThrowShit::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000054, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000060, "Member 'MainPlayer_C_ThrowShit::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShit, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'MainPlayer_C_ThrowShit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.addPlayerDamage
// 0x0100 (0x0100 - 0x0000)
struct MainPlayer_C_AddPlayerDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FullBody;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bypassSettings;                                    // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isDreaming_dreaming;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatMinusEquals_FloatOut;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AddPlayerDamage) == 0x000010, "Wrong alignment on MainPlayer_C_AddPlayerDamage");
static_assert(sizeof(MainPlayer_C_AddPlayerDamage) == 0x000100, "Wrong size on MainPlayer_C_AddPlayerDamage");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Damage) == 0x000000, "Member 'MainPlayer_C_AddPlayerDamage::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, DamageLocation) == 0x000004, "Member 'MainPlayer_C_AddPlayerDamage::DamageLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, FullBody) == 0x000010, "Member 'MainPlayer_C_AddPlayerDamage::FullBody' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, bypassSettings) == 0x00001C, "Member 'MainPlayer_C_AddPlayerDamage::bypassSettings' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_isDreaming_dreaming) == 0x00001D, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_isDreaming_dreaming' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x00001E, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000028, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000060, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BooleanOR_ReturnValue_1) == 0x000069, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, Temp_int_Variable) == 0x00006C, "Member 'MainPlayer_C_AddPlayerDamage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000080, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Normal_ReturnValue) == 0x000094, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_X) == 0x0000AC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000B8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_DegAtan2_ReturnValue) == 0x0000BC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x0000C4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000CC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x0000D0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Round_ReturnValue) == 0x0000D4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_Percent_IntInt_ReturnValue) == 0x0000D8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x0000DC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, K2Node_Select_Default) == 0x0000E0, "Member 'MainPlayer_C_AddPlayerDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0000E4, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_VictoryFloatMinusEquals_FloatOut) == 0x0000E8, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_VictoryFloatMinusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_AddPlayerDamage, CallFunc_FClamp_ReturnValue) == 0x0000F0, "Member 'MainPlayer_C_AddPlayerDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.useArm
// 0x0150 (0x0150 - 0x0000)
struct MainPlayer_C_UseArm final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_arm_start;                                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_arm_end;                                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UseArm) == 0x000008, "Wrong alignment on MainPlayer_C_UseArm");
static_assert(sizeof(MainPlayer_C_UseArm) == 0x000150, "Wrong size on MainPlayer_C_UseArm");
static_assert(offsetof(MainPlayer_C_UseArm, OutHit) == 0x000000, "Member 'MainPlayer_C_UseArm::OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, ReturnValue) == 0x000088, "Member 'MainPlayer_C_UseArm::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, Temp_object_Variable) == 0x000090, "Member 'MainPlayer_C_UseArm::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_start) == 0x0000A0, "Member 'MainPlayer_C_UseArm::CallFunc_arm_start' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_arm_end) == 0x0000AC, "Member 'MainPlayer_C_UseArm::CallFunc_arm_end' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'MainPlayer_C_UseArm::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_OutHit) == 0x0000C4, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UseArm, CallFunc_SphereTraceSingle_ReturnValue) == 0x00014C, "Member 'MainPlayer_C_UseArm::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.sit
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_Sit final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UComp_sitting_C*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASitBox_C*                              Place;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_Sit) == 0x000008, "Wrong alignment on MainPlayer_C_Sit");
static_assert(sizeof(MainPlayer_C_Sit) == 0x000048, "Wrong size on MainPlayer_C_Sit");
static_assert(offsetof(MainPlayer_C_Sit, Actor) == 0x000000, "Member 'MainPlayer_C_Sit::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Component) == 0x000008, "Member 'MainPlayer_C_Sit::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, Place) == 0x000010, "Member 'MainPlayer_C_Sit::Place' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'MainPlayer_C_Sit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'MainPlayer_C_Sit::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'MainPlayer_C_Sit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Dot_VectorVector_ReturnValue) == 0x000034, "Member 'MainPlayer_C_Sit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'MainPlayer_C_Sit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'MainPlayer_C_Sit::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00003B, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00003C, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00003D, "Member 'MainPlayer_C_Sit::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_BooleanAND_ReturnValue_2) == 0x00003F, "Member 'MainPlayer_C_Sit::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Sit, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'MainPlayer_C_Sit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.selectedAction
// 0x0048 (0x0048 - 0x0000)
struct MainPlayer_C_SelectedAction final
{
public:
	Enum_interactionActions                       Output1;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AsName;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_1;                              // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_2;                              // 0x001A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       Temp_byte_Variable_3;                              // 0x001B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_interactionActions                       CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SelectedAction) == 0x000008, "Wrong alignment on MainPlayer_C_SelectedAction");
static_assert(sizeof(MainPlayer_C_SelectedAction) == 0x000048, "Wrong size on MainPlayer_C_SelectedAction");
static_assert(offsetof(MainPlayer_C_SelectedAction, Output1) == 0x000000, "Member 'MainPlayer_C_SelectedAction::Output1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, AsName) == 0x000008, "Member 'MainPlayer_C_SelectedAction::AsName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable) == 0x000018, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_1) == 0x000019, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_2) == 0x00001A, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, Temp_byte_Variable_3) == 0x00001B, "Member 'MainPlayer_C_SelectedAction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'MainPlayer_C_SelectedAction::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item) == 0x000028, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_1) == 0x000042, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_2) == 0x000043, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SelectedAction, CallFunc_Array_Contains_ReturnValue_3) == 0x000044, "Member 'MainPlayer_C_SelectedAction::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.collectObject
// 0x01C0 (0x01C0 - 0x0000)
struct MainPlayer_C_CollectObject final
{
public:
	bool                                          UseHold;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Manual;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collected;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Ac;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0070(0x00C0)(HasGetValueTypeHash)
	class AProp_C*                                CallFunc_asProp_return;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_canPickup_return;                         // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_addEquip_return;                          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addEquip_rebug;                           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ignoreSave_ignoreSave;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CollectObject) == 0x000010, "Wrong alignment on MainPlayer_C_CollectObject");
static_assert(sizeof(MainPlayer_C_CollectObject) == 0x0001C0, "Wrong size on MainPlayer_C_CollectObject");
static_assert(offsetof(MainPlayer_C_CollectObject, UseHold) == 0x000000, "Member 'MainPlayer_C_CollectObject::UseHold' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Manual) == 0x000008, "Member 'MainPlayer_C_CollectObject::Manual' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Collected) == 0x000010, "Member 'MainPlayer_C_CollectObject::Collected' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Ac) == 0x000018, "Member 'MainPlayer_C_CollectObject::Ac' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Comp) == 0x000020, "Member 'MainPlayer_C_CollectObject::Comp' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable) == 0x000028, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, Temp_bool_Variable_1) == 0x00002A, "Member 'MainPlayer_C_CollectObject::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000030, "Member 'MainPlayer_C_CollectObject::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1) == 0x000040, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player) == 0x000058, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_getData_data) == 0x000070, "Member 'MainPlayer_C_CollectObject::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_asProp_return) == 0x000130, "Member 'MainPlayer_C_CollectObject::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Player_1) == 0x000138, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_canPickup_return) == 0x000149, "Member 'MainPlayer_C_CollectObject::CallFunc_canPickup_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_2) == 0x00014A, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_return) == 0x00014B, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_addEquip_rebug) == 0x000150, "Member 'MainPlayer_C_CollectObject::CallFunc_addEquip_rebug' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000160, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_ignoreSave_ignoreSave) == 0x000171, "Member 'MainPlayer_C_CollectObject::CallFunc_ignoreSave_ignoreSave' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default) == 0x000178, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000180, "Member 'MainPlayer_C_CollectObject::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_GetMass_ReturnValue) == 0x000184, "Member 'MainPlayer_C_CollectObject::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'MainPlayer_C_CollectObject::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_Select_Default_1) == 0x000190, "Member 'MainPlayer_C_CollectObject::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_IsValid_ReturnValue_3) == 0x000198, "Member 'MainPlayer_C_CollectObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0001A0, "Member 'MainPlayer_C_CollectObject::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_AsPrimitive_Component) == 0x0001A8, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CollectObject, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'MainPlayer_C_CollectObject::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateSpeed
// 0x0028 (0x0028 - 0x0000)
struct MainPlayer_C_UpdateSpeed final
{
public:
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateSpeed) == 0x000008, "Wrong alignment on MainPlayer_C_UpdateSpeed");
static_assert(sizeof(MainPlayer_C_UpdateSpeed) == 0x000028, "Wrong size on MainPlayer_C_UpdateSpeed");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_getSaveSlot_saveSlot) == 0x000000, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000009, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateSpeed, CallFunc_SelectFloat_ReturnValue_2) == 0x000024, "Member 'MainPlayer_C_UpdateSpeed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.fixActionIndex
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_FixActionIndex final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FixActionIndex) == 0x000004, "Wrong alignment on MainPlayer_C_FixActionIndex");
static_assert(sizeof(MainPlayer_C_FixActionIndex) == 0x000008, "Wrong size on MainPlayer_C_FixActionIndex");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FixActionIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'MainPlayer_C_FixActionIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.findFootLocation
// 0x00C0 (0x00C0 - 0x0000)
struct MainPlayer_C_FindFootLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_FindFootLocation) == 0x000010, "Wrong alignment on MainPlayer_C_FindFootLocation");
static_assert(sizeof(MainPlayer_C_FindFootLocation) == 0x0000C0, "Wrong size on MainPlayer_C_FindFootLocation");
static_assert(offsetof(MainPlayer_C_FindFootLocation, ReturnValue) == 0x000000, "Member 'MainPlayer_C_FindFootLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MainPlayer_C_FindFootLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'MainPlayer_C_FindFootLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'MainPlayer_C_FindFootLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'MainPlayer_C_FindFootLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'MainPlayer_C_FindFootLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_FindFootLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000B0, "Member 'MainPlayer_C_FindFootLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateEquipment
// 0x0130 (0x0130 - 0x0000)
struct MainPlayer_C_UpdateEquipment final
{
public:
	bool                                          HasJetpack;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_equipment                      CallFunc_Array_Get_Item;                           // 0x0030(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_UpdateEquipment) == 0x000010, "Wrong alignment on MainPlayer_C_UpdateEquipment");
static_assert(sizeof(MainPlayer_C_UpdateEquipment) == 0x000130, "Wrong size on MainPlayer_C_UpdateEquipment");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, HasJetpack) == 0x000000, "Member 'MainPlayer_C_UpdateEquipment::HasJetpack' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MainPlayer_C_UpdateEquipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, Temp_name_Variable) == 0x000010, "Member 'MainPlayer_C_UpdateEquipment::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_getSaveSlot_saveSlot) == 0x000020, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Get_Item) == 0x000030, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, CallFunc_Array_Add_ReturnValue) == 0x000124, "Member 'MainPlayer_C_UpdateEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateEquipment, K2Node_SwitchName_CmpSuccess) == 0x000128, "Member 'MainPlayer_C_UpdateEquipment::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.tryGetNail
// 0x0280 (0x0280 - 0x0000)
struct MainPlayer_C_TryGetNail final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NailClass;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          R;                                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ind;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 A;                                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            Nails;                                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0088(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UClass*>            K2Node_MakeVariable_MakeVariableOutput;            // 0x00B0(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0108(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0128(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0138(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Nail;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_Array_Get_Item_2;                         // 0x0190(0x00C0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value_1;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Container;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_TryGetNail) == 0x000010, "Wrong alignment on MainPlayer_C_TryGetNail");
static_assert(sizeof(MainPlayer_C_TryGetNail) == 0x000280, "Wrong size on MainPlayer_C_TryGetNail");
static_assert(offsetof(MainPlayer_C_TryGetNail, Success) == 0x000000, "Member 'MainPlayer_C_TryGetNail::Success' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, NailClass) == 0x000008, "Member 'MainPlayer_C_TryGetNail::NailClass' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, R) == 0x000010, "Member 'MainPlayer_C_TryGetNail::R' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Ind) == 0x000014, "Member 'MainPlayer_C_TryGetNail::Ind' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, A) == 0x000018, "Member 'MainPlayer_C_TryGetNail::A' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Nails) == 0x000020, "Member 'MainPlayer_C_TryGetNail::Nails' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'MainPlayer_C_TryGetNail::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000080, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable) == 0x000088, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000098, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A0, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x0000A8, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B0, "Member 'MainPlayer_C_TryGetNail::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'MainPlayer_C_TryGetNail::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_1) == 0x000108, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'MainPlayer_C_TryGetNail::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x000120, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_2) == 0x000128, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, Temp_string_Variable_3) == 0x000138, "Member 'MainPlayer_C_TryGetNail::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x000148, "Member 'MainPlayer_C_TryGetNail::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item) == 0x000158, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000168, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_1) == 0x00016C, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Nail) == 0x000170, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Nail' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess) == 0x000178, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value) == 0x000180, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue) == 0x000188, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Get_Item_2) == 0x000190, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'MainPlayer_C_TryGetNail::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_Value_1) == 0x000258, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Map_Find_ReturnValue_1) == 0x000260, "Member 'MainPlayer_C_TryGetNail::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, CallFunc_Less_IntInt_ReturnValue_1) == 0x000261, "Member 'MainPlayer_C_TryGetNail::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_AsProp_Container) == 0x000268, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_AsProp_Container' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_TryGetNail, K2Node_ClassDynamicCast_bSuccess_1) == 0x000270, "Member 'MainPlayer_C_TryGetNail::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.updateWheel
// 0x0038 (0x0038 - 0x0000)
struct MainPlayer_C_UpdateWheel final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_UpdateWheel) == 0x000008, "Wrong alignment on MainPlayer_C_UpdateWheel");
static_assert(sizeof(MainPlayer_C_UpdateWheel) == 0x000038, "Wrong size on MainPlayer_C_UpdateWheel");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_bool_Variable) == 0x000000, "Member 'MainPlayer_C_UpdateWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable) == 0x000001, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, Temp_byte_Variable_1) == 0x000002, "Member 'MainPlayer_C_UpdateWheel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000010, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'MainPlayer_C_UpdateWheel::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_GetRotated2D_ReturnValue) == 0x000018, "Member 'MainPlayer_C_UpdateWheel::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MainPlayer_C_UpdateWheel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000028, "Member 'MainPlayer_C_UpdateWheel::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_UpdateWheel, K2Node_Select_Default) == 0x000030, "Member 'MainPlayer_C_UpdateWheel::K2Node_Select_Default' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.throwShovelItem
// 0x0080 (0x0080 - 0x0000)
struct MainPlayer_C_ThrowShovelItem final
{
public:
	struct FVector                                NewVel;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_dirtball_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ThrowShovelItem) == 0x000010, "Wrong alignment on MainPlayer_C_ThrowShovelItem");
static_assert(sizeof(MainPlayer_C_ThrowShovelItem) == 0x000080, "Wrong size on MainPlayer_C_ThrowShovelItem");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, NewVel) == 0x000000, "Member 'MainPlayer_C_ThrowShovelItem::NewVel' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, Force) == 0x00000C, "Member 'MainPlayer_C_ThrowShovelItem::Force' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_MakeArray_Array) == 0x000018, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_Array_Find_ReturnValue) == 0x000068, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'MainPlayer_C_ThrowShovelItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ThrowShovelItem, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'MainPlayer_C_ThrowShovelItem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.heal
// 0x0030 (0x0030 - 0x0000)
struct MainPlayer_C_Heal final
{
public:
	float                                         Add;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_Heal) == 0x000008, "Wrong alignment on MainPlayer_C_Heal");
static_assert(sizeof(MainPlayer_C_Heal) == 0x000030, "Wrong size on MainPlayer_C_Heal");
static_assert(offsetof(MainPlayer_C_Heal, Add) == 0x000000, "Member 'MainPlayer_C_Heal::Add' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'MainPlayer_C_Heal::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'MainPlayer_C_Heal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000014, "Member 'MainPlayer_C_Heal::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'MainPlayer_C_Heal::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000020, "Member 'MainPlayer_C_Heal::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_Heal, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000028, "Member 'MainPlayer_C_Heal::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipGrabRadial
// 0x00A0 (0x00A0 - 0x0000)
struct MainPlayer_C_SkipGrabRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_skipRadial_skip;                          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipGrabRadial) == 0x000008, "Wrong alignment on MainPlayer_C_SkipGrabRadial");
static_assert(sizeof(MainPlayer_C_SkipGrabRadial) == 0x0000A0, "Wrong size on MainPlayer_C_SkipGrabRadial");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipGrabRadial::Skip' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bBlockingHit) == 0x000001, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_bInitialOverlap) == 0x000002, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Time) == 0x000004, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Distance) == 0x000008, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Location) == 0x00000C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactPoint) == 0x000018, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_Normal) == 0x000024, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ImpactNormal) == 0x000030, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_PhysMat) == 0x000040, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitActor) == 0x000048, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitComponent) == 0x000050, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitBoneName) == 0x000058, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_HitItem) == 0x000060, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_ElementIndex) == 0x000064, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_FaceIndex) == 0x000068, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceStart) == 0x00006C, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_BreakHitResult_TraceEnd) == 0x000078, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_DoesImplementInterface_ReturnValue) == 0x000084, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_AsInt_Objects) == 0x000088, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'MainPlayer_C_SkipGrabRadial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SkipGrabRadial, CallFunc_skipRadial_skip) == 0x000099, "Member 'MainPlayer_C_SkipGrabRadial::CallFunc_skipRadial_skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processArmor
// 0x0150 (0x0150 - 0x0000)
struct MainPlayer_C_ProcessArmor final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Damage;                                            // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   boneHit;                                           // 0x008C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0094(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x011C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindClosestBone_K2_BoneLocation;          // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_FindClosestBone_K2_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessArmor) == 0x000008, "Wrong alignment on MainPlayer_C_ProcessArmor");
static_assert(sizeof(MainPlayer_C_ProcessArmor) == 0x000150, "Wrong size on MainPlayer_C_ProcessArmor");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Hit) == 0x000000, "Member 'MainPlayer_C_ProcessArmor::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Damage) == 0x000088, "Member 'MainPlayer_C_ProcessArmor::Damage' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, boneHit) == 0x00008C, "Member 'MainPlayer_C_ProcessArmor::boneHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable) == 0x000094, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_bBlockingHit) == 0x00009C, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009D, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_ElementIndex) == 0x0000FC, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_FaceIndex) == 0x000100, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_TraceStart) == 0x000104, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_BreakHitResult_TraceEnd) == 0x000110, "Member 'MainPlayer_C_ProcessArmor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable_1) == 0x00011C, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, K2Node_SwitchName_CmpSuccess) == 0x000124, "Member 'MainPlayer_C_ProcessArmor::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, Temp_name_Variable_2) == 0x000128, "Member 'MainPlayer_C_ProcessArmor::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue) == 0x000130, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_FindClosestBone_K2_BoneLocation) == 0x000134, "Member 'MainPlayer_C_ProcessArmor::CallFunc_FindClosestBone_K2_BoneLocation' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_FindClosestBone_K2_ReturnValue) == 0x000140, "Member 'MainPlayer_C_ProcessArmor::CallFunc_FindClosestBone_K2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue_1) == 0x000148, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ProcessArmor, CallFunc_Array_Contains_ReturnValue_2) == 0x000149, "Member 'MainPlayer_C_ProcessArmor::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.equipJetpack
// 0x0040 (0x0040 - 0x0000)
struct MainPlayer_C_EquipJetpack final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UComp_jetpack_C*                        CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_EquipJetpack) == 0x000010, "Wrong alignment on MainPlayer_C_EquipJetpack");
static_assert(sizeof(MainPlayer_C_EquipJetpack) == 0x000040, "Wrong size on MainPlayer_C_EquipJetpack");
static_assert(offsetof(MainPlayer_C_EquipJetpack, Temp_struct_Variable) == 0x000000, "Member 'MainPlayer_C_EquipJetpack::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_EquipJetpack, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'MainPlayer_C_EquipJetpack::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_EquipJetpack, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'MainPlayer_C_EquipJetpack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.windSounds
// 0x01E8 (0x01E8 - 0x0000)
struct MainPlayer_C_WindSounds final
{
public:
	struct FVector                                V;                                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x00A0(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_WindSounds) == 0x000008, "Wrong alignment on MainPlayer_C_WindSounds");
static_assert(sizeof(MainPlayer_C_WindSounds) == 0x0001E8, "Wrong size on MainPlayer_C_WindSounds");
static_assert(offsetof(MainPlayer_C_WindSounds, V) == 0x000000, "Member 'MainPlayer_C_WindSounds::V' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'MainPlayer_C_WindSounds::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MainPlayer_C_WindSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MainPlayer_C_WindSounds::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, Temp_object_Variable) == 0x000038, "Member 'MainPlayer_C_WindSounds::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetComponentVelocity_ReturnValue) == 0x000048, "Member 'MainPlayer_C_WindSounds::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000054, "Member 'MainPlayer_C_WindSounds::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'MainPlayer_C_WindSounds::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FMax_ReturnValue) == 0x000064, "Member 'MainPlayer_C_WindSounds::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'MainPlayer_C_WindSounds::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetPlayerPawn_ReturnValue) == 0x000070, "Member 'MainPlayer_C_WindSounds::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000078, "Member 'MainPlayer_C_WindSounds::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetVelocity_ReturnValue) == 0x00007C, "Member 'MainPlayer_C_WindSounds::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'MainPlayer_C_WindSounds::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000090, "Member 'MainPlayer_C_WindSounds::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FClamp_ReturnValue_1) == 0x000094, "Member 'MainPlayer_C_WindSounds::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FInterpTo_ReturnValue) == 0x000098, "Member 'MainPlayer_C_WindSounds::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_obj_static_obj) == 0x0000A0, "Member 'MainPlayer_C_WindSounds::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000B0, "Member 'MainPlayer_C_WindSounds::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000138, "Member 'MainPlayer_C_WindSounds::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_bBlockingHit) == 0x000139, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013A, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Location) == 0x000144, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_Normal) == 0x00015C, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_TraceStart) == 0x0001A4, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'MainPlayer_C_WindSounds::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_SelectVector_ReturnValue) == 0x0001BC, "Member 'MainPlayer_C_WindSounds::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Vector_Distance_ReturnValue) == 0x0001C8, "Member 'MainPlayer_C_WindSounds::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001CC, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FMax_ReturnValue_1) == 0x0001D0, "Member 'MainPlayer_C_WindSounds::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001D4, "Member 'MainPlayer_C_WindSounds::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0001D8, "Member 'MainPlayer_C_WindSounds::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0001DC, "Member 'MainPlayer_C_WindSounds::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_WindSounds, CallFunc_FInterpTo_ReturnValue_1) == 0x0001E0, "Member 'MainPlayer_C_WindSounds::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_DreamInv) == 0x000008, "Wrong alignment on MainPlayer_C_DreamInv");
static_assert(sizeof(MainPlayer_C_DreamInv) == 0x000018, "Wrong size on MainPlayer_C_DreamInv");
static_assert(offsetof(MainPlayer_C_DreamInv, Invv) == 0x000000, "Member 'MainPlayer_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_DreamInv, Base) == 0x000010, "Member 'MainPlayer_C_DreamInv::Base' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.GetKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetKey");
static_assert(sizeof(MainPlayer_C_GetKey) == 0x000010, "Wrong size on MainPlayer_C_GetKey");
static_assert(offsetof(MainPlayer_C_GetKey, Key) == 0x000000, "Member 'MainPlayer_C_GetKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ToolboxFix) == 0x000008, "Wrong alignment on MainPlayer_C_ToolboxFix");
static_assert(sizeof(MainPlayer_C_ToolboxFix) == 0x000010, "Wrong size on MainPlayer_C_ToolboxFix");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Toolbox) == 0x000000, "Member 'MainPlayer_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_ToolboxFix, Return) == 0x000008, "Member 'MainPlayer_C_ToolboxFix::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong alignment on MainPlayer_C_CanBeUsedHold");
static_assert(sizeof(MainPlayer_C_CanBeUsedHold) == 0x000001, "Wrong size on MainPlayer_C_CanBeUsedHold");
static_assert(offsetof(MainPlayer_C_CanBeUsedHold, Return) == 0x000000, "Member 'MainPlayer_C_CanBeUsedHold::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong alignment on MainPlayer_C_ProcessKeys");
static_assert(sizeof(MainPlayer_C_ProcessKeys) == 0x000001, "Wrong size on MainPlayer_C_ProcessKeys");
static_assert(offsetof(MainPlayer_C_ProcessKeys, Return) == 0x000000, "Member 'MainPlayer_C_ProcessKeys::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GetOnlyKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetOnlyKey) == 0x000008, "Wrong alignment on MainPlayer_C_GetOnlyKey");
static_assert(sizeof(MainPlayer_C_GetOnlyKey) == 0x000010, "Wrong size on MainPlayer_C_GetOnlyKey");
static_assert(offsetof(MainPlayer_C_GetOnlyKey, Key) == 0x000000, "Member 'MainPlayer_C_GetOnlyKey::Key' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct MainPlayer_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SetPath) == 0x000008, "Wrong alignment on MainPlayer_C_SetPath");
static_assert(sizeof(MainPlayer_C_SetPath) == 0x000018, "Wrong size on MainPlayer_C_SetPath");
static_assert(offsetof(MainPlayer_C_SetPath, Path) == 0x000000, "Member 'MainPlayer_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_SetPath, Return) == 0x000010, "Member 'MainPlayer_C_SetPath::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getActionOptions
// 0x0050 (0x0050 - 0x0000)
struct MainPlayer_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetActionOptions) == 0x000008, "Wrong alignment on MainPlayer_C_GetActionOptions");
static_assert(sizeof(MainPlayer_C_GetActionOptions) == 0x000050, "Wrong size on MainPlayer_C_GetActionOptions");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Player) == 0x000000, "Member 'MainPlayer_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Component) == 0x000008, "Member 'MainPlayer_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Actor) == 0x000010, "Member 'MainPlayer_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options) == 0x000018, "Member 'MainPlayer_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Options_enum) == 0x000028, "Member 'MainPlayer_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'MainPlayer_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GetActionOptions, Number) == 0x000048, "Member 'MainPlayer_C_GetActionOptions::Number' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_GascanFuel) == 0x000008, "Wrong alignment on MainPlayer_C_GascanFuel");
static_assert(sizeof(MainPlayer_C_GascanFuel) == 0x000010, "Wrong size on MainPlayer_C_GascanFuel");
static_assert(offsetof(MainPlayer_C_GascanFuel, Gascan) == 0x000000, "Member 'MainPlayer_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_GascanFuel, Fueled) == 0x000008, "Member 'MainPlayer_C_GascanFuel::Fueled' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong alignment on MainPlayer_C_SkipRadial");
static_assert(sizeof(MainPlayer_C_SkipRadial) == 0x000001, "Wrong size on MainPlayer_C_SkipRadial");
static_assert(offsetof(MainPlayer_C_SkipRadial, Skip) == 0x000000, "Member 'MainPlayer_C_SkipRadial::Skip' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.getPriceMultiplier
// 0x0004 (0x0004 - 0x0000)
struct MainPlayer_C_GetPriceMultiplier final
{
public:
	float                                         PriceMult;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_GetPriceMultiplier) == 0x000004, "Wrong alignment on MainPlayer_C_GetPriceMultiplier");
static_assert(sizeof(MainPlayer_C_GetPriceMultiplier) == 0x000004, "Wrong size on MainPlayer_C_GetPriceMultiplier");
static_assert(offsetof(MainPlayer_C_GetPriceMultiplier, PriceMult) == 0x000000, "Member 'MainPlayer_C_GetPriceMultiplier::PriceMult' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong alignment on MainPlayer_C_CanBePutInContainer");
static_assert(sizeof(MainPlayer_C_CanBePutInContainer) == 0x000001, "Wrong size on MainPlayer_C_CanBePutInContainer");
static_assert(offsetof(MainPlayer_C_CanBePutInContainer, Return) == 0x000000, "Member 'MainPlayer_C_CanBePutInContainer::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct MainPlayer_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_AsProp) == 0x000008, "Wrong alignment on MainPlayer_C_AsProp");
static_assert(sizeof(MainPlayer_C_AsProp) == 0x000008, "Wrong size on MainPlayer_C_AsProp");
static_assert(offsetof(MainPlayer_C_AsProp, Return) == 0x000000, "Member 'MainPlayer_C_AsProp::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanPickup) == 0x000001, "Wrong alignment on MainPlayer_C_CanPickup");
static_assert(sizeof(MainPlayer_C_CanPickup) == 0x000001, "Wrong size on MainPlayer_C_CanPickup");
static_assert(offsetof(MainPlayer_C_CanPickup, Return) == 0x000000, "Member 'MainPlayer_C_CanPickup::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_NoRespawn) == 0x000001, "Wrong alignment on MainPlayer_C_NoRespawn");
static_assert(sizeof(MainPlayer_C_NoRespawn) == 0x000002, "Wrong size on MainPlayer_C_NoRespawn");
static_assert(offsetof(MainPlayer_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'MainPlayer_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_NoRespawn, Return) == 0x000001, "Member 'MainPlayer_C_NoRespawn::Return' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct MainPlayer_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainPlayer_C_LookAt) == 0x000008, "Wrong alignment on MainPlayer_C_LookAt");
static_assert(sizeof(MainPlayer_C_LookAt) == 0x0000B8, "Wrong size on MainPlayer_C_LookAt");
static_assert(offsetof(MainPlayer_C_LookAt, Player) == 0x000000, "Member 'MainPlayer_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Hit) == 0x000008, "Member 'MainPlayer_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Return) == 0x000090, "Member 'MainPlayer_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Text) == 0x000098, "Member 'MainPlayer_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'MainPlayer_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LookAt, Number) == 0x0000B0, "Member 'MainPlayer_C_LookAt::Number' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct MainPlayer_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong alignment on MainPlayer_C_IsButtonUsed");
static_assert(sizeof(MainPlayer_C_IsButtonUsed) == 0x000001, "Wrong size on MainPlayer_C_IsButtonUsed");
static_assert(offsetof(MainPlayer_C_IsButtonUsed, Failed) == 0x000000, "Member 'MainPlayer_C_IsButtonUsed::Failed' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct MainPlayer_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_LandedOn) == 0x000008, "Wrong alignment on MainPlayer_C_LandedOn");
static_assert(sizeof(MainPlayer_C_LandedOn) == 0x000010, "Wrong size on MainPlayer_C_LandedOn");
static_assert(offsetof(MainPlayer_C_LandedOn, Player) == 0x000000, "Member 'MainPlayer_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'MainPlayer_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function mainPlayer.mainPlayer_C.CanJumpInternal
// 0x0002 (0x0002 - 0x0000)
struct MainPlayer_C_CanJumpInternal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainPlayer_C_CanJumpInternal) == 0x000001, "Wrong alignment on MainPlayer_C_CanJumpInternal");
static_assert(sizeof(MainPlayer_C_CanJumpInternal) == 0x000002, "Wrong size on MainPlayer_C_CanJumpInternal");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, ReturnValue) == 0x000000, "Member 'MainPlayer_C_CanJumpInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(MainPlayer_C_CanJumpInternal, CallFunc_IsMovingOnGround_ReturnValue) == 0x000001, "Member 'MainPlayer_C_CanJumpInternal::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

}

