#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShroomCircle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function shroomCircle.shroomCircle_C.setLoc
// 0x01E8 (0x01E8 - 0x0000)
struct ShroomCircle_C_SetLoc final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0030(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0158(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ShroomCircle_C_SetLoc) == 0x000008, "Wrong alignment on ShroomCircle_C_SetLoc");
static_assert(sizeof(ShroomCircle_C_SetLoc) == 0x0001E8, "Wrong size on ShroomCircle_C_SetLoc");
static_assert(offsetof(ShroomCircle_C_SetLoc, Temp_object_Variable) == 0x000000, "Member 'ShroomCircle_C_SetLoc::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'ShroomCircle_C_SetLoc::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000014, "Member 'ShroomCircle_C_SetLoc::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'ShroomCircle_C_SetLoc::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'ShroomCircle_C_SetLoc::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_obj_static_obj) == 0x000030, "Member 'ShroomCircle_C_SetLoc::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000040, "Member 'ShroomCircle_C_SetLoc::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000C8, "Member 'ShroomCircle_C_SetLoc::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C9, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000CA, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_ElementIndex) == 0x00012C, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'ShroomCircle_C_SetLoc::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00014C, "Member 'ShroomCircle_C_SetLoc::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000158, "Member 'ShroomCircle_C_SetLoc::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_SetLoc, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001E0, "Member 'ShroomCircle_C_SetLoc::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function shroomCircle.shroomCircle_C.Spawn
// 0x0140 (0x0140 - 0x0000)
struct ShroomCircle_C_Spawn final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Random_OutItem;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirthole_item_C*                       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_weightedRandomV2_index;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMushroomSpawner_C*                     CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShroomCircle_C_Spawn) == 0x000010, "Wrong alignment on ShroomCircle_C_Spawn");
static_assert(sizeof(ShroomCircle_C_Spawn) == 0x000140, "Wrong size on ShroomCircle_C_Spawn");
static_assert(offsetof(ShroomCircle_C_Spawn, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ShroomCircle_C_Spawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ShroomCircle_C_Spawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ShroomCircle_C_Spawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'ShroomCircle_C_Spawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'ShroomCircle_C_Spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_IsValidClass_ReturnValue) == 0x000048, "Member 'ShroomCircle_C_Spawn::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'ShroomCircle_C_Spawn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, K2Node_MakeArray_Array) == 0x000058, "Member 'ShroomCircle_C_Spawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_GetTransform_ReturnValue_1) == 0x000070, "Member 'ShroomCircle_C_Spawn::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Array_Random_OutItem) == 0x0000A0, "Member 'ShroomCircle_C_Spawn::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Array_Random_OutIndex) == 0x0000A8, "Member 'ShroomCircle_C_Spawn::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000B0, "Member 'ShroomCircle_C_Spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'ShroomCircle_C_Spawn::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000BC, "Member 'ShroomCircle_C_Spawn::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000C8, "Member 'ShroomCircle_C_Spawn::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000D0, "Member 'ShroomCircle_C_Spawn::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000D4, "Member 'ShroomCircle_C_Spawn::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0000D8, "Member 'ShroomCircle_C_Spawn::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_MakeRotator_ReturnValue) == 0x0000DC, "Member 'ShroomCircle_C_Spawn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_weightedRandomV2_index) == 0x0000E8, "Member 'ShroomCircle_C_Spawn::CallFunc_weightedRandomV2_index' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'ShroomCircle_C_Spawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'ShroomCircle_C_Spawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'ShroomCircle_C_Spawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'ShroomCircle_C_Spawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000130, "Member 'ShroomCircle_C_Spawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_Spawn, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000138, "Member 'ShroomCircle_C_Spawn::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");

// Function shroomCircle.shroomCircle_C.prepareDots
// 0x0220 (0x0220 - 0x0000)
struct ShroomCircle_C_PrepareDots final
{
public:
	TArray<class UPhysicalMaterial*>              G;                                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPhysicalMaterial*>              K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0038(0x0010)(ReferenceParm)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ShroomCircle_C_PrepareDots) == 0x000010, "Wrong alignment on ShroomCircle_C_PrepareDots");
static_assert(sizeof(ShroomCircle_C_PrepareDots) == 0x000220, "Wrong size on ShroomCircle_C_PrepareDots");
static_assert(offsetof(ShroomCircle_C_PrepareDots, G) == 0x000000, "Member 'ShroomCircle_C_PrepareDots::G' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, Temp_int_Variable) == 0x000010, "Member 'ShroomCircle_C_PrepareDots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, K2Node_MakeArray_Array) == 0x000018, "Member 'ShroomCircle_C_PrepareDots::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, Temp_object_Variable) == 0x000028, "Member 'ShroomCircle_C_PrepareDots::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_obj_static_obj) == 0x000038, "Member 'ShroomCircle_C_PrepareDots::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'ShroomCircle_C_PrepareDots::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_GetTransform_ReturnValue_1) == 0x000080, "Member 'ShroomCircle_C_PrepareDots::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'ShroomCircle_C_PrepareDots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000BC, "Member 'ShroomCircle_C_PrepareDots::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E4, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_TransformLocation_ReturnValue) == 0x0000F0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_TransformLocation_ReturnValue_1) == 0x0000FC, "Member 'ShroomCircle_C_PrepareDots::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000108, "Member 'ShroomCircle_C_PrepareDots::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000190, "Member 'ShroomCircle_C_PrepareDots::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_bBlockingHit) == 0x000191, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_bInitialOverlap) == 0x000192, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_Location) == 0x00019C, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_Normal) == 0x0001B4, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_TraceStart) == 0x0001FC, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Array_Add_ReturnValue) == 0x000214, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000218, "Member 'ShroomCircle_C_PrepareDots::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_Array_Contains_ReturnValue) == 0x000219, "Member 'ShroomCircle_C_PrepareDots::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BooleanAND_ReturnValue) == 0x00021A, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_PrepareDots, CallFunc_BooleanAND_ReturnValue_1) == 0x00021B, "Member 'ShroomCircle_C_PrepareDots::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function shroomCircle.shroomCircle_C.ExecuteUbergraph_shroomCircle
// 0x0028 (0x0028 - 0x0000)
struct ShroomCircle_C_ExecuteUbergraph_shroomCircle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ShroomCircle_C_ExecuteUbergraph_shroomCircle) == 0x000008, "Wrong alignment on ShroomCircle_C_ExecuteUbergraph_shroomCircle");
static_assert(sizeof(ShroomCircle_C_ExecuteUbergraph_shroomCircle) == 0x000028, "Wrong size on ShroomCircle_C_ExecuteUbergraph_shroomCircle");
static_assert(offsetof(ShroomCircle_C_ExecuteUbergraph_shroomCircle, EntryPoint) == 0x000000, "Member 'ShroomCircle_C_ExecuteUbergraph_shroomCircle::EntryPoint' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_ExecuteUbergraph_shroomCircle, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ShroomCircle_C_ExecuteUbergraph_shroomCircle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_ExecuteUbergraph_shroomCircle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ShroomCircle_C_ExecuteUbergraph_shroomCircle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShroomCircle_C_ExecuteUbergraph_shroomCircle, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000020, "Member 'ShroomCircle_C_ExecuteUbergraph_shroomCircle::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");

}

