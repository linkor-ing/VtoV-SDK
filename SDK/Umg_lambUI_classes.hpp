#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_lambUI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass umg_lambUI.umg_lambUI_C
// 0x0028 (0x0288 - 0x0260)
class UUmg_lambUI_C final : public UUserWidget
{
public:
	class UImage*                                 Image;                                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_37;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_head;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Pivot;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AProp_lambert_C*                        Lamb;                                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetLoc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"umg_lambUI_C">();
	}
	static class UUmg_lambUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUmg_lambUI_C>();
	}
};
static_assert(alignof(UUmg_lambUI_C) == 0x000008, "Wrong alignment on UUmg_lambUI_C");
static_assert(sizeof(UUmg_lambUI_C) == 0x000288, "Wrong size on UUmg_lambUI_C");
static_assert(offsetof(UUmg_lambUI_C, Image) == 0x000260, "Member 'UUmg_lambUI_C::Image' has a wrong offset!");
static_assert(offsetof(UUmg_lambUI_C, Image_37) == 0x000268, "Member 'UUmg_lambUI_C::Image_37' has a wrong offset!");
static_assert(offsetof(UUmg_lambUI_C, Image_head) == 0x000270, "Member 'UUmg_lambUI_C::Image_head' has a wrong offset!");
static_assert(offsetof(UUmg_lambUI_C, Pivot) == 0x000278, "Member 'UUmg_lambUI_C::Pivot' has a wrong offset!");
static_assert(offsetof(UUmg_lambUI_C, Lamb) == 0x000280, "Member 'UUmg_lambUI_C::Lamb' has a wrong offset!");

}

