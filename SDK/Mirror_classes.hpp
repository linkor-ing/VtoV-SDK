#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mirror

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass mirror.mirror_C
// 0x0048 (0x0268 - 0x0220)
class AMirror_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Normal_nega;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Normal;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Rt;                                                // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hidden;                                            // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_mirror(int32 EntryPoint);
	void SignalDeleted();
	void SignalSaved();
	void SettingsApplied(const struct FStruct_settings& Settings);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void TexturePickerApply(class UUmg_texturePicker_C* Picker, class UTexture2D* Texture, int32 Param_Index);
	void ApplyColor(const struct FLinearColor& Color);
	void PropRenderer_finishProps();
	void GamemodeMakeKeys();
	void AnyKey(const struct FKey& Key, bool Pressed);
	void GamemodePreLoad();
	void Unfocused();
	void Unfoc();
	void StuffUpgraded(class AMainGamemode_C* GameMode);
	void GamemodeBeginPlay();
	void Res();
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mirror_C">();
	}
	static class AMirror_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMirror_C>();
	}
};
static_assert(alignof(AMirror_C) == 0x000008, "Wrong alignment on AMirror_C");
static_assert(sizeof(AMirror_C) == 0x000268, "Wrong size on AMirror_C");
static_assert(offsetof(AMirror_C, UberGraphFrame) == 0x000220, "Member 'AMirror_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMirror_C, SceneCaptureComponent2D) == 0x000228, "Member 'AMirror_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(AMirror_C, Normal_nega) == 0x000230, "Member 'AMirror_C::Normal_nega' has a wrong offset!");
static_assert(offsetof(AMirror_C, Normal) == 0x000238, "Member 'AMirror_C::Normal' has a wrong offset!");
static_assert(offsetof(AMirror_C, Plane) == 0x000240, "Member 'AMirror_C::Plane' has a wrong offset!");
static_assert(offsetof(AMirror_C, DefaultSceneRoot) == 0x000248, "Member 'AMirror_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMirror_C, Dynmat) == 0x000250, "Member 'AMirror_C::Dynmat' has a wrong offset!");
static_assert(offsetof(AMirror_C, Rt) == 0x000258, "Member 'AMirror_C::Rt' has a wrong offset!");
static_assert(offsetof(AMirror_C, Hidden) == 0x000260, "Member 'AMirror_C::Hidden' has a wrong offset!");

}

