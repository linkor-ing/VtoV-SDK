#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_umbrella

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_umbrella.prop_umbrella_C.ExecuteUbergraph_prop_umbrella
// 0x0148 (0x0148 - 0x0000)
struct Prop_umbrella_C_ExecuteUbergraph_prop_umbrella final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2486[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2487[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2488[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2489[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0118(0x0018)()
	class FName                                   K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella) == 0x000008, "Wrong alignment on Prop_umbrella_C_ExecuteUbergraph_prop_umbrella");
static_assert(sizeof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella) == 0x000148, "Wrong size on Prop_umbrella_C_ExecuteUbergraph_prop_umbrella");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, EntryPoint) == 0x000000, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, Temp_name_Variable) == 0x00007C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, Temp_bool_Variable) == 0x000084, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, Temp_name_Variable_1) == 0x000088, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, Temp_name_Variable_2) == 0x000090, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_getMainPlayer_AsMain_Player) == 0x0000A0, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_getMainPlayer_AsMain_Player_1) == 0x0000A8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_BreakVector_X) == 0x0000B0, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_BreakVector_Y) == 0x0000B4, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000BC, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BD, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000C0, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_Event_player) == 0x0000D0, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_MakeVector_ReturnValue) == 0x0000DC, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_GetActorUpVector_ReturnValue) == 0x0000EC, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F8, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_FMax_ReturnValue) == 0x0000FC, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_VLerp_ReturnValue) == 0x000100, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Divide_VectorVector_ReturnValue) == 0x00010C, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_Conv_BoolToText_ReturnValue) == 0x000118, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, K2Node_Select_Default) == 0x000130, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000138, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_umbrella_C_ExecuteUbergraph_prop_umbrella, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'Prop_umbrella_C_ExecuteUbergraph_prop_umbrella::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_umbrella_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_umbrella_C_ReceiveTick");
static_assert(sizeof(Prop_umbrella_C_ReceiveTick) == 0x000004, "Wrong size on Prop_umbrella_C_ReceiveTick");
static_assert(offsetof(Prop_umbrella_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_umbrella_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.OnCompleted_8FD53D694FAA874324AF05B1C3990EB3
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3) == 0x000004, "Wrong alignment on Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(sizeof(Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3) == 0x000008, "Wrong size on Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(offsetof(Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3, NotifyName) == 0x000000, "Member 'Prop_umbrella_C_OnCompleted_8FD53D694FAA874324AF05B1C3990EB3::NotifyName' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3) == 0x000004, "Wrong alignment on Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(sizeof(Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3) == 0x000008, "Wrong size on Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(offsetof(Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3, NotifyName) == 0x000000, "Member 'Prop_umbrella_C_OnBlendOut_8FD53D694FAA874324AF05B1C3990EB3::NotifyName' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3) == 0x000004, "Wrong alignment on Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(sizeof(Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3) == 0x000008, "Wrong size on Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(offsetof(Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3, NotifyName) == 0x000000, "Member 'Prop_umbrella_C_OnInterrupted_8FD53D694FAA874324AF05B1C3990EB3::NotifyName' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3) == 0x000004, "Wrong alignment on Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(sizeof(Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3) == 0x000008, "Wrong size on Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(offsetof(Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3, NotifyName) == 0x000000, "Member 'Prop_umbrella_C_OnNotifyBegin_8FD53D694FAA874324AF05B1C3990EB3::NotifyName' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3) == 0x000004, "Wrong alignment on Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(sizeof(Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3) == 0x000008, "Wrong size on Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3");
static_assert(offsetof(Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3, NotifyName) == 0x000000, "Member 'Prop_umbrella_C_OnNotifyEnd_8FD53D694FAA874324AF05B1C3990EB3::NotifyName' has a wrong offset!");

// Function prop_umbrella.prop_umbrella_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_umbrella_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_umbrella_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_umbrella_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_umbrella_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_umbrella_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_umbrella_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_umbrella_C_PlayerHandUse_RMB::Player' has a wrong offset!");

}

