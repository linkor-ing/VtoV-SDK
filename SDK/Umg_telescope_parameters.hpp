#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_telescope

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function umg_telescope.umg_telescope_C.ExecuteUbergraph_umg_telescope
// 0x0038 (0x0038 - 0x0000)
struct Umg_telescope_C_ExecuteUbergraph_umg_telescope final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2566[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_key;                            // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_hold;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2567[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0030(0x0008)(NoDestructor)
};
static_assert(alignof(Umg_telescope_C_ExecuteUbergraph_umg_telescope) == 0x000008, "Wrong alignment on Umg_telescope_C_ExecuteUbergraph_umg_telescope");
static_assert(sizeof(Umg_telescope_C_ExecuteUbergraph_umg_telescope) == 0x000038, "Wrong size on Umg_telescope_C_ExecuteUbergraph_umg_telescope");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, EntryPoint) == 0x000000, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_SetGamePaused_ReturnValue) == 0x000004, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, K2Node_CustomEvent_key) == 0x000010, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::K2Node_CustomEvent_key' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, K2Node_CustomEvent_hold) == 0x000028, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::K2Node_CustomEvent_hold' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000029, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00002A, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00002B, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00002C, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x00002D, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x00002E, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_ExecuteUbergraph_umg_telescope, K2Node_Event_InFocusEvent) == 0x000030, "Member 'Umg_telescope_C_ExecuteUbergraph_umg_telescope::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function umg_telescope.umg_telescope_C.Button
// 0x0020 (0x0020 - 0x0000)
struct Umg_telescope_C_Button final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Hold;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_telescope_C_Button) == 0x000008, "Wrong alignment on Umg_telescope_C_Button");
static_assert(sizeof(Umg_telescope_C_Button) == 0x000020, "Wrong size on Umg_telescope_C_Button");
static_assert(offsetof(Umg_telescope_C_Button, Key) == 0x000000, "Member 'Umg_telescope_C_Button::Key' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_Button, Hold) == 0x000018, "Member 'Umg_telescope_C_Button::Hold' has a wrong offset!");

// Function umg_telescope.umg_telescope_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_telescope_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_telescope_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_telescope_C_OnFocusLost");
static_assert(sizeof(Umg_telescope_C_OnFocusLost) == 0x000008, "Wrong size on Umg_telescope_C_OnFocusLost");
static_assert(offsetof(Umg_telescope_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_telescope_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_telescope.umg_telescope_C.OnKeyDown
// 0x01F8 (0x01F8 - 0x0000)
struct Umg_telescope_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_telescope_C_OnKeyDown) == 0x000008, "Wrong alignment on Umg_telescope_C_OnKeyDown");
static_assert(sizeof(Umg_telescope_C_OnKeyDown) == 0x0001F8, "Wrong size on Umg_telescope_C_OnKeyDown");
static_assert(offsetof(Umg_telescope_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'Umg_telescope_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'Umg_telescope_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'Umg_telescope_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000128, "Member 'Umg_telescope_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'Umg_telescope_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");

// Function umg_telescope.umg_telescope_C.OnKeyUp
// 0x01F8 (0x01F8 - 0x0000)
struct Umg_telescope_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_telescope_C_OnKeyUp) == 0x000008, "Wrong alignment on Umg_telescope_C_OnKeyUp");
static_assert(sizeof(Umg_telescope_C_OnKeyUp) == 0x0001F8, "Wrong size on Umg_telescope_C_OnKeyUp");
static_assert(offsetof(Umg_telescope_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'Umg_telescope_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'Umg_telescope_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'Umg_telescope_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyUp, K2Node_MakeStruct_EventReply) == 0x000128, "Member 'Umg_telescope_C_OnKeyUp::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_telescope_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'Umg_telescope_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");

}

