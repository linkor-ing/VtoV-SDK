#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Comp_gravitygun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass comp_gravitygun.comp_gravitygun_C
// 0x0040 (0x00F0 - 0x00B0)
class UComp_gravitygun_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 Obj;                                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ad;                                                // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LD;                                                // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ang;                                               // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Recharge;                                          // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_gravgun_C*                        Gravigun;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrabDir;                                           // 0x00E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_comp_gravitygun(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Hold(class AActor* Param_Obj, bool* NewParam);
	void Trace(float B, struct FHitResult* OutHit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"comp_gravitygun_C">();
	}
	static class UComp_gravitygun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UComp_gravitygun_C>();
	}
};
static_assert(alignof(UComp_gravitygun_C) == 0x000008, "Wrong alignment on UComp_gravitygun_C");
static_assert(sizeof(UComp_gravitygun_C) == 0x0000F0, "Wrong size on UComp_gravitygun_C");
static_assert(offsetof(UComp_gravitygun_C, UberGraphFrame) == 0x0000B0, "Member 'UComp_gravitygun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Obj) == 0x0000B8, "Member 'UComp_gravitygun_C::Obj' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Comp) == 0x0000C0, "Member 'UComp_gravitygun_C::Comp' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Ad) == 0x0000C8, "Member 'UComp_gravitygun_C::Ad' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, LD) == 0x0000CC, "Member 'UComp_gravitygun_C::LD' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Ang) == 0x0000D0, "Member 'UComp_gravitygun_C::Ang' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Recharge) == 0x0000D4, "Member 'UComp_gravitygun_C::Recharge' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, Gravigun) == 0x0000D8, "Member 'UComp_gravitygun_C::Gravigun' has a wrong offset!");
static_assert(offsetof(UComp_gravitygun_C, GrabDir) == 0x0000E0, "Member 'UComp_gravitygun_C::GrabDir' has a wrong offset!");

}

