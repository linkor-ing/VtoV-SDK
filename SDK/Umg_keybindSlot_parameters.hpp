#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_keybindSlot

#include "Basic.hpp"

#include "Struct_keybind_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function umg_keybindSlot.umg_keybindSlot_C.ExecuteUbergraph_umg_keybindSlot
// 0x0048 (0x0048 - 0x0000)
struct Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0004(0x0008)(NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_keybind                        CallFunc_Array_Get_Item;                           // 0x0018(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot");
static_assert(sizeof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot) == 0x000048, "Wrong size on Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot");
static_assert(offsetof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot, EntryPoint) == 0x000000, "Member 'Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot, K2Node_Event_InFocusEvent) == 0x000004, "Member 'Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000010, "Member 'Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'Umg_keybindSlot_C_ExecuteUbergraph_umg_keybindSlot::CallFunc_Array_Get_Item' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Umg_keybindSlot_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Umg_keybindSlot_C_OnFocusLost) == 0x000004, "Wrong alignment on Umg_keybindSlot_C_OnFocusLost");
static_assert(sizeof(Umg_keybindSlot_C_OnFocusLost) == 0x000008, "Wrong size on Umg_keybindSlot_C_OnFocusLost");
static_assert(offsetof(Umg_keybindSlot_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Umg_keybindSlot_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.OnMouseButtonDown
// 0x0230 (0x0230 - 0x0000)
struct Umg_keybindSlot_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0160(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0218(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_keybindSlot_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_OnMouseButtonDown");
static_assert(sizeof(Umg_keybindSlot_C_OnMouseButtonDown) == 0x000230, "Wrong size on Umg_keybindSlot_C_OnMouseButtonDown");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'Umg_keybindSlot_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'Umg_keybindSlot_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'Umg_keybindSlot_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseButtonDown, K2Node_MakeStruct_EventReply) == 0x000160, "Member 'Umg_keybindSlot_C_OnMouseButtonDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000218, "Member 'Umg_keybindSlot_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.upd
// 0x0018 (0x0018 - 0x0000)
struct Umg_keybindSlot_C_Upd final
{
public:
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0000(0x0018)()
};
static_assert(alignof(Umg_keybindSlot_C_Upd) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_Upd");
static_assert(sizeof(Umg_keybindSlot_C_Upd) == 0x000018, "Wrong size on Umg_keybindSlot_C_Upd");
static_assert(offsetof(Umg_keybindSlot_C_Upd, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000000, "Member 'Umg_keybindSlot_C_Upd::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.SetBind
// 0x0048 (0x0048 - 0x0000)
struct Umg_keybindSlot_C_SetBind final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0020(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_keybindSlot_C_SetBind) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_SetBind");
static_assert(sizeof(Umg_keybindSlot_C_SetBind) == 0x000048, "Wrong size on Umg_keybindSlot_C_SetBind");
static_assert(offsetof(Umg_keybindSlot_C_SetBind, Key) == 0x000000, "Member 'Umg_keybindSlot_C_SetBind::Key' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_SetBind, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'Umg_keybindSlot_C_SetBind::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_SetBind, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000020, "Member 'Umg_keybindSlot_C_SetBind::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_SetBind, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'Umg_keybindSlot_C_SetBind::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.OnKeyDown
// 0x01F8 (0x01F8 - 0x0000)
struct Umg_keybindSlot_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(Umg_keybindSlot_C_OnKeyDown) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_OnKeyDown");
static_assert(sizeof(Umg_keybindSlot_C_OnKeyDown) == 0x0001F8, "Wrong size on Umg_keybindSlot_C_OnKeyDown");
static_assert(offsetof(Umg_keybindSlot_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'Umg_keybindSlot_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'Umg_keybindSlot_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'Umg_keybindSlot_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnKeyDown, K2Node_MakeStruct_EventReply) == 0x000128, "Member 'Umg_keybindSlot_C_OnKeyDown::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'Umg_keybindSlot_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");

// Function umg_keybindSlot.umg_keybindSlot_C.OnMouseWheel
// 0x0270 (0x0270 - 0x0000)
struct Umg_keybindSlot_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0188(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_Select_Default;                             // 0x01A0(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01B8(0x00B8)()
};
static_assert(alignof(Umg_keybindSlot_C_OnMouseWheel) == 0x000008, "Wrong alignment on Umg_keybindSlot_C_OnMouseWheel");
static_assert(sizeof(Umg_keybindSlot_C_OnMouseWheel) == 0x000270, "Wrong size on Umg_keybindSlot_C_OnMouseWheel");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'Umg_keybindSlot_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'Umg_keybindSlot_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, ReturnValue) == 0x0000A8, "Member 'Umg_keybindSlot_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, Temp_bool_Variable) == 0x000160, "Member 'Umg_keybindSlot_C_OnMouseWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000164, "Member 'Umg_keybindSlot_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, Temp_struct_Variable) == 0x000168, "Member 'Umg_keybindSlot_C_OnMouseWheel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000180, "Member 'Umg_keybindSlot_C_OnMouseWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, Temp_struct_Variable_1) == 0x000188, "Member 'Umg_keybindSlot_C_OnMouseWheel::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, K2Node_Select_Default) == 0x0001A0, "Member 'Umg_keybindSlot_C_OnMouseWheel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_keybindSlot_C_OnMouseWheel, K2Node_MakeStruct_EventReply) == 0x0001B8, "Member 'Umg_keybindSlot_C_OnMouseWheel::K2Node_MakeStruct_EventReply' has a wrong offset!");

}

