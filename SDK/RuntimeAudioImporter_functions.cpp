#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RuntimeAudioImporter

#include "Basic.hpp"

#include "RuntimeAudioImporter_classes.hpp"
#include "RuntimeAudioImporter_parameters.hpp"


namespace SDK
{

// Function RuntimeAudioImporter.ImportedSoundWave.GetDuration
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UImportedSoundWave::GetDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "GetDuration");

	Params::ImportedSoundWave_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.ImportedSoundWave.IsPlaybackFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UImportedSoundWave::IsPlaybackFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "IsPlaybackFinished");

	Params::ImportedSoundWave_IsPlaybackFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.ImportedSoundWave.ReleaseMemory
// (Final, Native, Public, BlueprintCallable)

void UImportedSoundWave::ReleaseMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "ReleaseMemory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.ImportedSoundWave.RewindPlaybackTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   PlaybackTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UImportedSoundWave::RewindPlaybackTime(const float PlaybackTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "RewindPlaybackTime");

	Params::ImportedSoundWave_RewindPlaybackTime Parms{};

	Parms.PlaybackTime = PlaybackTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.ImportedSoundWave.GetDurationConst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UImportedSoundWave::GetDurationConst() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "GetDurationConst");

	Params::ImportedSoundWave_GetDurationConst Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.ImportedSoundWave.GetPlaybackPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UImportedSoundWave::GetPlaybackPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "GetPlaybackPercentage");

	Params::ImportedSoundWave_GetPlaybackPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.ImportedSoundWave.GetPlaybackTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UImportedSoundWave::GetPlaybackTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ImportedSoundWave", "GetPlaybackTime");

	Params::ImportedSoundWave_GetPlaybackTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ConvertSecondsToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URuntimeAudioImporterLibrary::ConvertSecondsToString(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "ConvertSecondsToString");

	Params::RuntimeAudioImporterLibrary_ConvertSecondsToString Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.CreateRuntimeAudioImporter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URuntimeAudioImporterLibrary*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URuntimeAudioImporterLibrary* URuntimeAudioImporterLibrary::CreateRuntimeAudioImporter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "CreateRuntimeAudioImporter");

	Params::RuntimeAudioImporterLibrary_CreateRuntimeAudioImporter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ExportSoundWaveToBuffer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UImportedSoundWave*               ImporterSoundWave                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           AudioData                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EAudioFormat                            AudioFormat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeAudioImporterLibrary::ExportSoundWaveToBuffer(class UImportedSoundWave* ImporterSoundWave, TArray<uint8>* AudioData, EAudioFormat AudioFormat, uint8 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "ExportSoundWaveToBuffer");

	Params::RuntimeAudioImporterLibrary_ExportSoundWaveToBuffer Parms{};

	Parms.ImporterSoundWave = ImporterSoundWave;
	Parms.AudioFormat = AudioFormat;
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AudioData != nullptr)
		*AudioData = std::move(Parms.AudioData);

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ExportSoundWaveToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UImportedSoundWave*               ImporterSoundWave                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SavePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAudioFormat                            AudioFormat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeAudioImporterLibrary::ExportSoundWaveToFile(class UImportedSoundWave* ImporterSoundWave, const class FString& SavePath, EAudioFormat AudioFormat, uint8 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "ExportSoundWaveToFile");

	Params::RuntimeAudioImporterLibrary_ExportSoundWaveToFile Parms{};

	Parms.ImporterSoundWave = ImporterSoundWave;
	Parms.SavePath = std::move(SavePath);
	Parms.AudioFormat = AudioFormat;
	Parms.Quality = Quality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.GetAudioFormat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAudioFormat                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAudioFormat URuntimeAudioImporterLibrary::GetAudioFormat(const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "GetAudioFormat");

	Params::RuntimeAudioImporterLibrary_GetAudioFormat Parms{};

	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.GetAudioFormatAdvanced
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           AudioData                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EAudioFormat                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAudioFormat URuntimeAudioImporterLibrary::GetAudioFormatAdvanced(const TArray<uint8>& AudioData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "GetAudioFormatAdvanced");

	Params::RuntimeAudioImporterLibrary_GetAudioFormatAdvanced Parms{};

	Parms.AudioData = std::move(AudioData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.TranscodeRAWDataFromBuffer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>                           RAWData_From                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         FormatFrom                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           RAWData_To                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         FormatTo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::TranscodeRAWDataFromBuffer(const TArray<uint8>& RAWData_From, ERAWAudioFormat FormatFrom, TArray<uint8>* RAWData_To, ERAWAudioFormat FormatTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "TranscodeRAWDataFromBuffer");

	Params::RuntimeAudioImporterLibrary_TranscodeRAWDataFromBuffer Parms{};

	Parms.RAWData_From = std::move(RAWData_From);
	Parms.FormatFrom = FormatFrom;
	Parms.FormatTo = FormatTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RAWData_To != nullptr)
		*RAWData_To = std::move(Parms.RAWData_To);
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.TranscodeRAWDataFromFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           FilePathFrom                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         FormatFrom                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FilePathTo                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         FormatTo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URuntimeAudioImporterLibrary::TranscodeRAWDataFromFile(const class FString& FilePathFrom, ERAWAudioFormat FormatFrom, const class FString& FilePathTo, ERAWAudioFormat FormatTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RuntimeAudioImporterLibrary", "TranscodeRAWDataFromFile");

	Params::RuntimeAudioImporterLibrary_TranscodeRAWDataFromFile Parms{};

	Parms.FilePathFrom = std::move(FilePathFrom);
	Parms.FormatFrom = FormatFrom;
	Parms.FilePathTo = std::move(FilePathTo);
	Parms.FormatTo = FormatTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.CompressSoundWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UImportedSoundWave*               ImportedSoundWaveRef                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class USoundWave* SoundWaveRef)>OnCompressedResult                                     (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// struct FCompressedSoundWaveInfo         CompressedSoundWaveInfo                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// uint8                                   Quality                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFillCompressedBuffer                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFillPCMBuffer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFillRAWWaveBuffer                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::CompressSoundWave(class UImportedSoundWave* ImportedSoundWaveRef, TDelegate<void(bool bSuccess, class USoundWave* SoundWaveRef)> OnCompressedResult, const struct FCompressedSoundWaveInfo& CompressedSoundWaveInfo, uint8 Quality, bool bFillCompressedBuffer, bool bFillPCMBuffer, bool bFillRAWWaveBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "CompressSoundWave");

	Params::RuntimeAudioImporterLibrary_CompressSoundWave Parms{};

	Parms.ImportedSoundWaveRef = ImportedSoundWaveRef;
	Parms.OnCompressedResult = OnCompressedResult;
	Parms.CompressedSoundWaveInfo = std::move(CompressedSoundWaveInfo);
	Parms.Quality = Quality;
	Parms.bFillCompressedBuffer = bFillCompressedBuffer;
	Parms.bFillPCMBuffer = bFillPCMBuffer;
	Parms.bFillRAWWaveBuffer = bFillRAWWaveBuffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromBuffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           AudioData                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EAudioFormat                            Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::ImportAudioFromBuffer(const TArray<uint8>& AudioData, EAudioFormat Format)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "ImportAudioFromBuffer");

	Params::RuntimeAudioImporterLibrary_ImportAudioFromBuffer Parms{};

	Parms.AudioData = std::move(AudioData);
	Parms.Format = Format;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAudioFormat                            Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::ImportAudioFromFile(const class FString& FilePath, EAudioFormat Format)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "ImportAudioFromFile");

	Params::RuntimeAudioImporterLibrary_ImportAudioFromFile Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.Format = Format;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromPreImportedSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPreImportedSoundAsset*           PreImportedSoundAssetRef                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::ImportAudioFromPreImportedSound(class UPreImportedSoundAsset* PreImportedSoundAssetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "ImportAudioFromPreImportedSound");

	Params::RuntimeAudioImporterLibrary_ImportAudioFromPreImportedSound Parms{};

	Parms.PreImportedSoundAssetRef = PreImportedSoundAssetRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromRAWBuffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<uint8>                           RAWBuffer                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SampleRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumOfChannels                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::ImportAudioFromRAWBuffer(const TArray<uint8>& RAWBuffer, ERAWAudioFormat Format, int32 SampleRate, int32 NumOfChannels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "ImportAudioFromRAWBuffer");

	Params::RuntimeAudioImporterLibrary_ImportAudioFromRAWBuffer Parms{};

	Parms.RAWBuffer = std::move(RAWBuffer);
	Parms.Format = Format;
	Parms.SampleRate = SampleRate;
	Parms.NumOfChannels = NumOfChannels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RuntimeAudioImporter.RuntimeAudioImporterLibrary.ImportAudioFromRAWFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERAWAudioFormat                         Format                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SampleRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumOfChannels                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URuntimeAudioImporterLibrary::ImportAudioFromRAWFile(const class FString& FilePath, ERAWAudioFormat Format, int32 SampleRate, int32 NumOfChannels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RuntimeAudioImporterLibrary", "ImportAudioFromRAWFile");

	Params::RuntimeAudioImporterLibrary_ImportAudioFromRAWFile Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.Format = Format;
	Parms.SampleRate = SampleRate;
	Parms.NumOfChannels = NumOfChannels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

