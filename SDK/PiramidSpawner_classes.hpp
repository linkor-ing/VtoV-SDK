#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiramidSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass piramidSpawner.piramidSpawner_C
// 0x0020 (0x0268 - 0x0248)
class APiramidSpawner_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PiramidSpawner_C;                   // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    WalkFinish;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    WalkLeave;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APiramid2_C*                            Piramid;                                           // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_piramidSpawner(int32 EntryPoint);
	void RunTrigger(class AActor* Param_Owner, int32 Param_Index);
	void SetActiveTrigger(class AActor* SentFrom, bool Active);
	void CordUnplugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void CordPlugged(class ACord_C* Cord, class ACordSocket_C* Socket);
	void Set_ignoreSave_trigger(bool NewParam);
	void IgnoreSave_trigger(bool* Ignore);
	void LoadTriggerData(const struct FStruct_triggerSave& Data, bool* Return);
	void GetTriggerData(struct FStruct_triggerSave* Data);
	void GatherDataFromKeyT(bool* Gather);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"piramidSpawner_C">();
	}
	static class APiramidSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APiramidSpawner_C>();
	}
};
static_assert(alignof(APiramidSpawner_C) == 0x000008, "Wrong alignment on APiramidSpawner_C");
static_assert(sizeof(APiramidSpawner_C) == 0x000268, "Wrong size on APiramidSpawner_C");
static_assert(offsetof(APiramidSpawner_C, UberGraphFrame_PiramidSpawner_C) == 0x000248, "Member 'APiramidSpawner_C::UberGraphFrame_PiramidSpawner_C' has a wrong offset!");
static_assert(offsetof(APiramidSpawner_C, WalkFinish) == 0x000250, "Member 'APiramidSpawner_C::WalkFinish' has a wrong offset!");
static_assert(offsetof(APiramidSpawner_C, WalkLeave) == 0x000258, "Member 'APiramidSpawner_C::WalkLeave' has a wrong offset!");
static_assert(offsetof(APiramidSpawner_C, Piramid) == 0x000260, "Member 'APiramidSpawner_C::Piramid' has a wrong offset!");

}

