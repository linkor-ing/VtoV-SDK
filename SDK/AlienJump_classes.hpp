#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AlienJump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass alienJump.alienJump_C
// 0x0108 (0x0328 - 0x0220)
class AAlienJump_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Nail18;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail22;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail16;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail23;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail15;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail17;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail19;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base10;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail20;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base9;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base12;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base11;                                            // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail21;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail14;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail13;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail12;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail9;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail8;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail6;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Nail4;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base4;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base8;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base7;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base6;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base5;                                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   base2;                                             // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Alien;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Forward;                                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanJump;                                           // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_alienJump(int32 EntryPoint);
	void Throw();
	void ReceiveBeginPlay();
	void BndEvt__hillRollerSpawner_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Spawn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"alienJump_C">();
	}
	static class AAlienJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAlienJump_C>();
	}
};
static_assert(alignof(AAlienJump_C) == 0x000008, "Wrong alignment on AAlienJump_C");
static_assert(sizeof(AAlienJump_C) == 0x000328, "Wrong size on AAlienJump_C");
static_assert(offsetof(AAlienJump_C, UberGraphFrame) == 0x000220, "Member 'AAlienJump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail18) == 0x000228, "Member 'AAlienJump_C::Nail18' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail22) == 0x000230, "Member 'AAlienJump_C::Nail22' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail16) == 0x000238, "Member 'AAlienJump_C::Nail16' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail23) == 0x000240, "Member 'AAlienJump_C::Nail23' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail15) == 0x000248, "Member 'AAlienJump_C::Nail15' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail17) == 0x000250, "Member 'AAlienJump_C::Nail17' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail19) == 0x000258, "Member 'AAlienJump_C::Nail19' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base10) == 0x000260, "Member 'AAlienJump_C::base10' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail20) == 0x000268, "Member 'AAlienJump_C::Nail20' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base9) == 0x000270, "Member 'AAlienJump_C::base9' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base12) == 0x000278, "Member 'AAlienJump_C::base12' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base11) == 0x000280, "Member 'AAlienJump_C::base11' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail21) == 0x000288, "Member 'AAlienJump_C::Nail21' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail14) == 0x000290, "Member 'AAlienJump_C::Nail14' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail13) == 0x000298, "Member 'AAlienJump_C::Nail13' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail12) == 0x0002A0, "Member 'AAlienJump_C::Nail12' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail9) == 0x0002A8, "Member 'AAlienJump_C::Nail9' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail8) == 0x0002B0, "Member 'AAlienJump_C::Nail8' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail6) == 0x0002B8, "Member 'AAlienJump_C::Nail6' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Nail4) == 0x0002C0, "Member 'AAlienJump_C::Nail4' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base4) == 0x0002C8, "Member 'AAlienJump_C::base4' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base8) == 0x0002D0, "Member 'AAlienJump_C::base8' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base7) == 0x0002D8, "Member 'AAlienJump_C::base7' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base6) == 0x0002E0, "Member 'AAlienJump_C::base6' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base5) == 0x0002E8, "Member 'AAlienJump_C::base5' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, base2) == 0x0002F0, "Member 'AAlienJump_C::base2' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Alien) == 0x0002F8, "Member 'AAlienJump_C::Alien' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Box) == 0x000300, "Member 'AAlienJump_C::Box' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Audio) == 0x000308, "Member 'AAlienJump_C::Audio' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Forward) == 0x000310, "Member 'AAlienJump_C::Forward' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, DefaultSceneRoot) == 0x000318, "Member 'AAlienJump_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, CanJump) == 0x000320, "Member 'AAlienJump_C::CanJump' has a wrong offset!");
static_assert(offsetof(AAlienJump_C, Debug) == 0x000321, "Member 'AAlienJump_C::Debug' has a wrong offset!");

}

