#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewBlueprint16

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass NewBlueprint16.NewBlueprint16_C
// 0x00A0 (0x0560 - 0x04C0)
class ANewBlueprint16_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProceduralMeshComponent*               ProceduralMesh;                                    // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPnormal_C*                             Pnormal;                                           // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveType;                                          // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Size;                                              // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         C;                                                 // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveDir;                                           // 0x04E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Heihg;                                             // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Vs;                                                // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Ts;                                                // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      Us;                                                // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Ns;                                                // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Dynmat;                                            // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Rt;                                                // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 bs;                                                // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NewVar_0;                                          // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_NewBlueprint16(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnSuccess_9201A7154775CCD2493A8AA9AF4A5C72(EPathFollowingResult MovementResult);
	void OnFail_9201A7154775CCD2493A8AA9AF4A5C72(EPathFollowingResult MovementResult);
	void OnSuccess_D46D188C4EA32985928C2E9FD98232C4(EPathFollowingResult MovementResult);
	void OnFail_D46D188C4EA32985928C2E9FD98232C4(EPathFollowingResult MovementResult);
	void UserConstructionScript();
	bool ChoosePoint(struct FVector* RandomLocation);
	void Gen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewBlueprint16_C">();
	}
	static class ANewBlueprint16_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANewBlueprint16_C>();
	}
};
static_assert(alignof(ANewBlueprint16_C) == 0x000010, "Wrong alignment on ANewBlueprint16_C");
static_assert(sizeof(ANewBlueprint16_C) == 0x000560, "Wrong size on ANewBlueprint16_C");
static_assert(offsetof(ANewBlueprint16_C, UberGraphFrame) == 0x0004C0, "Member 'ANewBlueprint16_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, ProceduralMesh) == 0x0004C8, "Member 'ANewBlueprint16_C::ProceduralMesh' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Pnormal) == 0x0004D0, "Member 'ANewBlueprint16_C::Pnormal' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, MoveType) == 0x0004D8, "Member 'ANewBlueprint16_C::MoveType' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Size) == 0x0004DC, "Member 'ANewBlueprint16_C::Size' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, C) == 0x0004E0, "Member 'ANewBlueprint16_C::C' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, MoveDir) == 0x0004E4, "Member 'ANewBlueprint16_C::MoveDir' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Heihg) == 0x0004E8, "Member 'ANewBlueprint16_C::Heihg' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Vs) == 0x0004F0, "Member 'ANewBlueprint16_C::Vs' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Ts) == 0x000500, "Member 'ANewBlueprint16_C::Ts' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Us) == 0x000510, "Member 'ANewBlueprint16_C::Us' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Ns) == 0x000520, "Member 'ANewBlueprint16_C::Ns' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Dynmat) == 0x000530, "Member 'ANewBlueprint16_C::Dynmat' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, Rt) == 0x000538, "Member 'ANewBlueprint16_C::Rt' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, bs) == 0x000540, "Member 'ANewBlueprint16_C::bs' has a wrong offset!");
static_assert(offsetof(ANewBlueprint16_C, NewVar_0) == 0x000550, "Member 'ANewBlueprint16_C::NewVar_0' has a wrong offset!");

}

