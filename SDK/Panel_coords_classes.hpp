#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_coords

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PanelBase_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass panel_coords.panel_coords_C
// 0x0028 (0x0298 - 0x0270)
class APanel_coords_C : public APanelBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Panel_coords_C;                     // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    buttonsRoot;                                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Stand;                                             // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUmg_coords_C*                          Widget;                                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_panel_coords(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void SignalFound();
	void PressedPanel();
	void ReceiveBeginPlay();
	void ActionOptionIndex(class AMainPlayer_C* Player, const struct FHitResult& Hit, Enum_interactionActions Action);
	void GamemodeBeginPlay();
	void IsButtonUsed(bool* Failed);
	void LookAt(class AMainPlayer_C* Player, const struct FHitResult& Hit, bool* Return, class FString* Text, class UPrimitiveComponent** boundObjectReplace, uint8* Number);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);
	void DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"panel_coords_C">();
	}
	static class APanel_coords_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APanel_coords_C>();
	}
};
static_assert(alignof(APanel_coords_C) == 0x000008, "Wrong alignment on APanel_coords_C");
static_assert(sizeof(APanel_coords_C) == 0x000298, "Wrong size on APanel_coords_C");
static_assert(offsetof(APanel_coords_C, UberGraphFrame_Panel_coords_C) == 0x000270, "Member 'APanel_coords_C::UberGraphFrame_Panel_coords_C' has a wrong offset!");
static_assert(offsetof(APanel_coords_C, Box) == 0x000278, "Member 'APanel_coords_C::Box' has a wrong offset!");
static_assert(offsetof(APanel_coords_C, buttonsRoot) == 0x000280, "Member 'APanel_coords_C::buttonsRoot' has a wrong offset!");
static_assert(offsetof(APanel_coords_C, Stand) == 0x000288, "Member 'APanel_coords_C::Stand' has a wrong offset!");
static_assert(offsetof(APanel_coords_C, Widget) == 0x000290, "Member 'APanel_coords_C::Widget' has a wrong offset!");

}

