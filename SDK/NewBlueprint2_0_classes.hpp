#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewBlueprint2_0

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NewBlueprint2.NewBlueprint2_C
// 0x00D0 (0x0590 - 0x04C0)
class NewBlueprint2_0::ANewBlueprint2_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPnormal_C*                             Pnormal;                                           // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProceduralMeshComponent*               ProceduralMesh;                                    // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lastloc;                                           // 0x04E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vel;                                               // 0x04EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveVec;                                           // 0x04F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatSpringState                      Spring;                                            // 0x0504(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         SprAlpha;                                          // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprT;                                              // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveVec_lerp;                                      // 0x0514(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Dv;                                                // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FVector>                        Vs2;                                               // 0x0530(0x0010)(Edit, BlueprintVisible)
	class FString                                 Dt;                                                // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 Ts2;                                               // 0x0550(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 bt1;                                               // 0x0560(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 bt2;                                               // 0x0570(0x0010)(Edit, BlueprintVisible)
	bool                                          NewVar_0;                                          // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void Push();
	void UserConstructionScript();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_NewBlueprint2(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueprintGeneratedClass NewBlueprint2.NewBlueprint2_C", true, "NewBlueprint2_C">();
	}
	static class NewBlueprint2_0::ANewBlueprint2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<NewBlueprint2_0::ANewBlueprint2_C>();
	}
};
static_assert(alignof(NewBlueprint2_0::ANewBlueprint2_C) == 0x000010, "Wrong alignment on NewBlueprint2_0::ANewBlueprint2_C");
static_assert(sizeof(NewBlueprint2_0::ANewBlueprint2_C) == 0x000590, "Wrong size on NewBlueprint2_0::ANewBlueprint2_C");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, UberGraphFrame) == 0x0004C0, "Member 'NewBlueprint2_0::ANewBlueprint2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Pnormal) == 0x0004C8, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Pnormal' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, ProceduralMesh) == 0x0004D0, "Member 'NewBlueprint2_0::ANewBlueprint2_C::ProceduralMesh' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Arrow) == 0x0004D8, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Arrow' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Lastloc) == 0x0004E0, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Lastloc' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Vel) == 0x0004EC, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Vel' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, MoveVec) == 0x0004F8, "Member 'NewBlueprint2_0::ANewBlueprint2_C::MoveVec' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Spring) == 0x000504, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Spring' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, SprAlpha) == 0x00050C, "Member 'NewBlueprint2_0::ANewBlueprint2_C::SprAlpha' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, SprT) == 0x000510, "Member 'NewBlueprint2_0::ANewBlueprint2_C::SprT' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, MoveVec_lerp) == 0x000514, "Member 'NewBlueprint2_0::ANewBlueprint2_C::MoveVec_lerp' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Dv) == 0x000520, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Dv' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Vs2) == 0x000530, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Vs2' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Dt) == 0x000540, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Dt' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, Ts2) == 0x000550, "Member 'NewBlueprint2_0::ANewBlueprint2_C::Ts2' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, bt1) == 0x000560, "Member 'NewBlueprint2_0::ANewBlueprint2_C::bt1' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, bt2) == 0x000570, "Member 'NewBlueprint2_0::ANewBlueprint2_C::bt2' has a wrong offset!");
static_assert(offsetof(NewBlueprint2_0::ANewBlueprint2_C, NewVar_0) == 0x000580, "Member 'NewBlueprint2_0::ANewBlueprint2_C::NewVar_0' has a wrong offset!");

}

