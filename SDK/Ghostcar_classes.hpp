#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ghostcar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Prop_classes.hpp"
#include "Enum_interactionActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ghostcar.ghostcar_C
// 0x0080 (0x03F8 - 0x0378)
class AGhostcar_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Ghostcar_C;                         // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Ax_FL;                                             // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Ax_FR;                                             // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Ax_BL;                                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Ax_BR;                                             // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wheel_FR;                                          // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Sus_FR;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wheel_BL;                                          // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Sus_BL;                                            // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wheel_BR;                                          // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Sus_BR;                                            // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wheel_FL;                                          // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Sus_FL;                                            // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x03E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ghostcar(int32 EntryPoint);
	void BndEvt__ghostcar_StaticMesh1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void IgnoreSave(bool* Param_IgnoreSave);
	void GetActionOptions(class AMainPlayer_C* Player, class UPrimitiveComponent* Component, class AActor* Actor, TArray<class FString>* Options, TArray<Enum_interactionActions>* Options_enum, TArray<class FText>* OptionsNamesOverlay, uint8* Number);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ghostcar_C">();
	}
	static class AGhostcar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGhostcar_C>();
	}
};
static_assert(alignof(AGhostcar_C) == 0x000008, "Wrong alignment on AGhostcar_C");
static_assert(sizeof(AGhostcar_C) == 0x0003F8, "Wrong size on AGhostcar_C");
static_assert(offsetof(AGhostcar_C, UberGraphFrame_Ghostcar_C) == 0x000378, "Member 'AGhostcar_C::UberGraphFrame_Ghostcar_C' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, StaticMesh1) == 0x000380, "Member 'AGhostcar_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Ax_FL) == 0x000388, "Member 'AGhostcar_C::Ax_FL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Ax_FR) == 0x000390, "Member 'AGhostcar_C::Ax_FR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Ax_BL) == 0x000398, "Member 'AGhostcar_C::Ax_BL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Ax_BR) == 0x0003A0, "Member 'AGhostcar_C::Ax_BR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Wheel_FR) == 0x0003A8, "Member 'AGhostcar_C::Wheel_FR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Sus_FR) == 0x0003B0, "Member 'AGhostcar_C::Sus_FR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Wheel_BL) == 0x0003B8, "Member 'AGhostcar_C::Wheel_BL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Sus_BL) == 0x0003C0, "Member 'AGhostcar_C::Sus_BL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Wheel_BR) == 0x0003C8, "Member 'AGhostcar_C::Wheel_BR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Sus_BR) == 0x0003D0, "Member 'AGhostcar_C::Sus_BR' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Wheel_FL) == 0x0003D8, "Member 'AGhostcar_C::Wheel_FL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Sus_FL) == 0x0003E0, "Member 'AGhostcar_C::Sus_FL' has a wrong offset!");
static_assert(offsetof(AGhostcar_C, Velocity) == 0x0003E8, "Member 'AGhostcar_C::Velocity' has a wrong offset!");

}

