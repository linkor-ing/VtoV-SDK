#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Antibreather

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass antibreather.antibreather_C
// 0x0120 (0x05E0 - 0x04C0)
class AAntibreather_C final : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNavigationInvokerComponent*            NavigationInvoker;                                 // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    ShroomLoc;                                         // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mouthsroom;                                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pup;                                               // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UComp_radarPoint_C*                     RadarPoint;                                        // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Eyes;                                              // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Feet;                                              // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Hit;                                               // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RenderCheck;                                       // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Loop;                                              // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Gr;                                                // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnSensingComponent*                  PawnSensing;                                       // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Dash;                                              // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Player;                                            // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Mov;                                               // 0x0540(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Step;                                              // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastStep;                                          // 0x0550(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Aggressive;                                        // 0x055C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Punched;                                           // 0x055D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55E[0x2];                                      // 0x055E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RunSpeed;                                          // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkSpeed;                                         // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAntibreather_LOW_test_Skeleton_AnimBlueprint_C* Anim;                                              // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Wandering;                                         // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      A;                                                 // 0x0578(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Eat;                                               // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RunRandom;                                         // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Is;                                                // 0x0594(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Foods;                                             // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          LookingFood;                                       // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Obj;                                               // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          brainless;                                         // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Reload;                                            // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rendered;                                          // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Dmg;                                               // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MouthshroomType;                                   // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DespawnOnFinish;                                   // 0x05D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          D;                                                 // 0x05D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_antibreather(int32 EntryPoint);
	void CheckVisible();
	void OpenDoor();
	void AcquireMushroom();
	void ReceiveDestroyed();
	void BndEvt__PawnSensing_K2Node_ComponentBoundEvent_0_SeePawnDelegate__DelegateSignature(class APawn* Pawn);
	void Wander();
	void ReceiveBeginPlay();
	void Dashing();
	void Punch();
	void FindBlindSpot();
	void BndEvt__gr_K2Node_ComponentBoundEvent_1_OnAudioFinished__DelegateSignature();
	void PlaySound(class USoundBase* NewSound);
	void ReceiveTick(float DeltaSeconds);
	void OnSuccess_B482AA864E2BBD66D1AD528FA5FFE590(EPathFollowingResult MovementResult);
	void OnFail_B482AA864E2BBD66D1AD528FA5FFE590(EPathFollowingResult MovementResult);
	void OnSuccess_9D90C5B0435B6AE0CB9E6F92D644EB72(EPathFollowingResult MovementResult);
	void OnFail_9D90C5B0435B6AE0CB9E6F92D644EB72(EPathFollowingResult MovementResult);
	void OnSuccess_B5B9C816420BEE6F48FECD9C3EC363CB(EPathFollowingResult MovementResult);
	void OnFail_B5B9C816420BEE6F48FECD9C3EC363CB(EPathFollowingResult MovementResult);
	void UserConstructionScript();
	void StepOn();
	void DropShroom();
	void UpdShroom();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"antibreather_C">();
	}
	static class AAntibreather_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAntibreather_C>();
	}
};
static_assert(alignof(AAntibreather_C) == 0x000010, "Wrong alignment on AAntibreather_C");
static_assert(sizeof(AAntibreather_C) == 0x0005E0, "Wrong size on AAntibreather_C");
static_assert(offsetof(AAntibreather_C, UberGraphFrame) == 0x0004C0, "Member 'AAntibreather_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, NavigationInvoker) == 0x0004C8, "Member 'AAntibreather_C::NavigationInvoker' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, ShroomLoc) == 0x0004D0, "Member 'AAntibreather_C::ShroomLoc' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Mouthsroom) == 0x0004D8, "Member 'AAntibreather_C::Mouthsroom' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Pup) == 0x0004E0, "Member 'AAntibreather_C::Pup' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, RadarPoint) == 0x0004E8, "Member 'AAntibreather_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Eyes) == 0x0004F0, "Member 'AAntibreather_C::Eyes' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, SpringArm) == 0x0004F8, "Member 'AAntibreather_C::SpringArm' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Feet) == 0x000500, "Member 'AAntibreather_C::Feet' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Hit) == 0x000508, "Member 'AAntibreather_C::Hit' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, RenderCheck) == 0x000510, "Member 'AAntibreather_C::RenderCheck' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Loop) == 0x000518, "Member 'AAntibreather_C::Loop' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Gr) == 0x000520, "Member 'AAntibreather_C::Gr' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, PawnSensing) == 0x000528, "Member 'AAntibreather_C::PawnSensing' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Dash) == 0x000530, "Member 'AAntibreather_C::Dash' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Player) == 0x000538, "Member 'AAntibreather_C::Player' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Mov) == 0x000540, "Member 'AAntibreather_C::Mov' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Step) == 0x00054C, "Member 'AAntibreather_C::Step' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, LastStep) == 0x000550, "Member 'AAntibreather_C::LastStep' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Aggressive) == 0x00055C, "Member 'AAntibreather_C::Aggressive' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Punched) == 0x00055D, "Member 'AAntibreather_C::Punched' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, RunSpeed) == 0x000560, "Member 'AAntibreather_C::RunSpeed' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, WalkSpeed) == 0x000564, "Member 'AAntibreather_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Anim) == 0x000568, "Member 'AAntibreather_C::Anim' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Wandering) == 0x000570, "Member 'AAntibreather_C::Wandering' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, A) == 0x000578, "Member 'AAntibreather_C::A' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Eat) == 0x000588, "Member 'AAntibreather_C::Eat' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, RunRandom) == 0x000590, "Member 'AAntibreather_C::RunRandom' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Is) == 0x000594, "Member 'AAntibreather_C::Is' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Foods) == 0x000598, "Member 'AAntibreather_C::Foods' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, LookingFood) == 0x0005A8, "Member 'AAntibreather_C::LookingFood' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Obj) == 0x0005B0, "Member 'AAntibreather_C::Obj' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, brainless) == 0x0005C0, "Member 'AAntibreather_C::brainless' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Reload) == 0x0005C4, "Member 'AAntibreather_C::Reload' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Rendered) == 0x0005C8, "Member 'AAntibreather_C::Rendered' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, Dmg) == 0x0005CC, "Member 'AAntibreather_C::Dmg' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, MouthshroomType) == 0x0005D0, "Member 'AAntibreather_C::MouthshroomType' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, DespawnOnFinish) == 0x0005D4, "Member 'AAntibreather_C::DespawnOnFinish' has a wrong offset!");
static_assert(offsetof(AAntibreather_C, D) == 0x0005D5, "Member 'AAntibreather_C::D' has a wrong offset!");

}

