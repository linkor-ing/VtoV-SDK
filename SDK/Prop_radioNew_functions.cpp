#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_radioNew

#include "Basic.hpp"

#include "Prop_radioNew_classes.hpp"
#include "Prop_radioNew_parameters.hpp"


namespace SDK
{

// Function prop_radioNew.prop_radioNew_C.ExecuteUbergraph_prop_radioNew
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProp_radioNew_C::ExecuteUbergraph_prop_radioNew(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_radioNew_C", "ExecuteUbergraph_prop_radioNew");

	Params::Prop_radioNew_C_ExecuteUbergraph_prop_radioNew Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_radioNew.prop_radioNew_C.fail
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FailedUrl                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AProp_radioNew_C::Fail(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_radioNew_C", "fail");

	Params::Prop_radioNew_C_Fail Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_radioNew.prop_radioNew_C.openMedia
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OpenedUrl                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AProp_radioNew_C::OpenMedia(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_radioNew_C", "openMedia");

	Params::Prop_radioNew_C_OpenMedia Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function prop_radioNew.prop_radioNew_C.player_use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainPlayer_C*                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Param_Hit                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProp_radioNew_C::Player_use(class AMainPlayer_C* Player, const struct FHitResult& Param_Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("prop_radioNew_C", "player_use");

	Params::Prop_radioNew_C_Player_use Parms{};

	Parms.Player = Player;
	Parms.Param_Hit = std::move(Param_Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}

