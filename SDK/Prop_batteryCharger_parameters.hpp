#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_batteryCharger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_triggerSave_structs.hpp"
#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Struct_mVector_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Struct_mFloat_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_batteryCharger.prop_batteryCharger_C.ExecuteUbergraph_prop_batteryCharger
// 0x01E8 (0x01E8 - 0x0000)
struct Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_owner;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewParam;                             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_DynamicCast_AsCord;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord;                                 // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger");
static_assert(sizeof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger) == 0x0001E8, "Wrong size on Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, EntryPoint) == 0x000000, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_player) == 0x000008, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_hit) == 0x000010, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_owner) == 0x000098, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_index) == 0x0000A0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_NewParam) == 0x0000A4, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_sentFrom) == 0x0000A8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_active) == 0x0000B0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_DeltaSeconds) == 0x0000B4, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, Temp_int_Variable) == 0x0000B8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000BC, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, Temp_int_Variable_1) == 0x0000CC, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Select_Default) == 0x0000D0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000D4, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000D5, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_MakeArray_Array) == 0x0000D8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_player_2) == 0x0000E8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_hit_1) == 0x0000F0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_action) == 0x000178, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_MakeArray_Array_1) == 0x000180, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_SwitchEnum_CmpSuccess) == 0x000190, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_cord_1) == 0x000198, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_socket_1) == 0x0001A0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_DynamicCast_AsCord) == 0x0001A8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_DynamicCast_AsCord' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_cord) == 0x0001B8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_socket) == 0x0001C0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, K2Node_Event_player_1) == 0x0001C8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001D0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001D4, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0001D8, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_FMin_ReturnValue) == 0x0001DC, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001E0, "Member 'Prop_batteryCharger_C_ExecuteUbergraph_prop_batteryCharger::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_batteryCharger_C_CordUnplugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_CordUnplugged) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_CordUnplugged");
static_assert(sizeof(Prop_batteryCharger_C_CordUnplugged) == 0x000010, "Wrong size on Prop_batteryCharger_C_CordUnplugged");
static_assert(offsetof(Prop_batteryCharger_C_CordUnplugged, Param_Cord) == 0x000000, "Member 'Prop_batteryCharger_C_CordUnplugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_CordUnplugged, Socket) == 0x000008, "Member 'Prop_batteryCharger_C_CordUnplugged::Socket' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Prop_batteryCharger_C_CordPlugged final
{
public:
	class ACord_C*                                Param_Cord;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_CordPlugged) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_CordPlugged");
static_assert(sizeof(Prop_batteryCharger_C_CordPlugged) == 0x000010, "Wrong size on Prop_batteryCharger_C_CordPlugged");
static_assert(offsetof(Prop_batteryCharger_C_CordPlugged, Param_Cord) == 0x000000, "Member 'Prop_batteryCharger_C_CordPlugged::Param_Cord' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_CordPlugged, Socket) == 0x000008, "Member 'Prop_batteryCharger_C_CordPlugged::Socket' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Prop_batteryCharger_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_ReceiveTick) == 0x000004, "Wrong alignment on Prop_batteryCharger_C_ReceiveTick");
static_assert(sizeof(Prop_batteryCharger_C_ReceiveTick) == 0x000004, "Wrong size on Prop_batteryCharger_C_ReceiveTick");
static_assert(offsetof(Prop_batteryCharger_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Prop_batteryCharger_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_batteryCharger_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_SetActiveTrigger");
static_assert(sizeof(Prop_batteryCharger_C_SetActiveTrigger) == 0x000010, "Wrong size on Prop_batteryCharger_C_SetActiveTrigger");
static_assert(offsetof(Prop_batteryCharger_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Prop_batteryCharger_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_SetActiveTrigger, Active) == 0x000008, "Member 'Prop_batteryCharger_C_SetActiveTrigger::Active' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_batteryCharger_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Prop_batteryCharger_C_Set_ignoreSave_trigger");
static_assert(sizeof(Prop_batteryCharger_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Prop_batteryCharger_C_Set_ignoreSave_trigger");
static_assert(offsetof(Prop_batteryCharger_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Prop_batteryCharger_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Prop_batteryCharger_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_RunTrigger) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_RunTrigger");
static_assert(sizeof(Prop_batteryCharger_C_RunTrigger) == 0x000010, "Wrong size on Prop_batteryCharger_C_RunTrigger");
static_assert(offsetof(Prop_batteryCharger_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Prop_batteryCharger_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_RunTrigger, Param_Index) == 0x000008, "Member 'Prop_batteryCharger_C_RunTrigger::Param_Index' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.upd
// 0x0068 (0x0068 - 0x0000)
struct Prop_batteryCharger_C_Upd final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_2;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_Upd) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_Upd");
static_assert(sizeof(Prop_batteryCharger_C_Upd) == 0x000068, "Wrong size on Prop_batteryCharger_C_Upd");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_bool_Variable) == 0x000000, "Member 'Prop_batteryCharger_C_Upd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_object_Variable) == 0x000008, "Member 'Prop_batteryCharger_C_Upd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_object_Variable_1) == 0x000010, "Member 'Prop_batteryCharger_C_Upd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_bool_Variable_1) == 0x000018, "Member 'Prop_batteryCharger_C_Upd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_object_Variable_2) == 0x000020, "Member 'Prop_batteryCharger_C_Upd::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_int_Variable) == 0x000028, "Member 'Prop_batteryCharger_C_Upd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'Prop_batteryCharger_C_Upd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Prop_batteryCharger_C_Upd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Prop_batteryCharger_C_Upd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Prop_batteryCharger_C_Upd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_Array_Get_Item) == 0x000040, "Member 'Prop_batteryCharger_C_Upd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Prop_batteryCharger_C_Upd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Prop_batteryCharger_C_Upd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, K2Node_Select_Default) == 0x000050, "Member 'Prop_batteryCharger_C_Upd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'Prop_batteryCharger_C_Upd::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000055, "Member 'Prop_batteryCharger_C_Upd::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'Prop_batteryCharger_C_Upd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, K2Node_Select_Default_1) == 0x000058, "Member 'Prop_batteryCharger_C_Upd::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_Upd, K2Node_Select_Default_2) == 0x000060, "Member 'Prop_batteryCharger_C_Upd::K2Node_Select_Default_2' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.putIn
// 0x00A0 (0x00A0 - 0x0000)
struct Prop_batteryCharger_C_PutIn final
{
public:
	class AMainPlayer_C*                          InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AProp_batts_C*                          K2Node_DynamicCast_AsProp_Batts;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_batts_acc_C*                      K2Node_DynamicCast_AsProp_Batts_Acc;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_batts_acc_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_PutIn) == 0x000010, "Wrong alignment on Prop_batteryCharger_C_PutIn");
static_assert(sizeof(Prop_batteryCharger_C_PutIn) == 0x0000A0, "Wrong size on Prop_batteryCharger_C_PutIn");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, InputPin) == 0x000000, "Member 'Prop_batteryCharger_C_PutIn::InputPin' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, Temp_int_Variable) == 0x000008, "Member 'Prop_batteryCharger_C_PutIn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, K2Node_DynamicCast_AsProp_Batts) == 0x000050, "Member 'Prop_batteryCharger_C_PutIn::K2Node_DynamicCast_AsProp_Batts' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Prop_batteryCharger_C_PutIn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, K2Node_DynamicCast_AsProp_Batts_Acc) == 0x000068, "Member 'Prop_batteryCharger_C_PutIn::K2Node_DynamicCast_AsProp_Batts_Acc' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Prop_batteryCharger_C_PutIn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_putObjectInventory2_return) == 0x000080, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, Temp_int_Variable_1) == 0x00008C, "Member 'Prop_batteryCharger_C_PutIn::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, Temp_int_Variable_2) == 0x000090, "Member 'Prop_batteryCharger_C_PutIn::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, K2Node_Select_Default) == 0x000094, "Member 'Prop_batteryCharger_C_PutIn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PutIn, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'Prop_batteryCharger_C_PutIn::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Prop_batteryCharger_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Prop_batteryCharger_C_IgnoreSave_trigger");
static_assert(sizeof(Prop_batteryCharger_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Prop_batteryCharger_C_IgnoreSave_trigger");
static_assert(offsetof(Prop_batteryCharger_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Prop_batteryCharger_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Prop_batteryCharger_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_LoadTriggerData) == 0x000010, "Wrong alignment on Prop_batteryCharger_C_LoadTriggerData");
static_assert(sizeof(Prop_batteryCharger_C_LoadTriggerData) == 0x000100, "Wrong size on Prop_batteryCharger_C_LoadTriggerData");
static_assert(offsetof(Prop_batteryCharger_C_LoadTriggerData, Data) == 0x000000, "Member 'Prop_batteryCharger_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Prop_batteryCharger_C_LoadTriggerData::Return' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Prop_batteryCharger_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_GetTriggerData) == 0x000010, "Wrong alignment on Prop_batteryCharger_C_GetTriggerData");
static_assert(sizeof(Prop_batteryCharger_C_GetTriggerData) == 0x0000F0, "Wrong size on Prop_batteryCharger_C_GetTriggerData");
static_assert(offsetof(Prop_batteryCharger_C_GetTriggerData, Data) == 0x000000, "Member 'Prop_batteryCharger_C_GetTriggerData::Data' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.gatherDataFromKeyT
// 0x0001 (0x0001 - 0x0000)
struct Prop_batteryCharger_C_GatherDataFromKeyT final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_batteryCharger_C_GatherDataFromKeyT) == 0x000001, "Wrong alignment on Prop_batteryCharger_C_GatherDataFromKeyT");
static_assert(sizeof(Prop_batteryCharger_C_GatherDataFromKeyT) == 0x000001, "Wrong size on Prop_batteryCharger_C_GatherDataFromKeyT");
static_assert(offsetof(Prop_batteryCharger_C_GatherDataFromKeyT, Gather) == 0x000000, "Member 'Prop_batteryCharger_C_GatherDataFromKeyT::Gather' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_batteryCharger_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_ActionOptionIndex");
static_assert(sizeof(Prop_batteryCharger_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_batteryCharger_C_ActionOptionIndex");
static_assert(offsetof(Prop_batteryCharger_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_batteryCharger_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_batteryCharger_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_batteryCharger_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct Prop_batteryCharger_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_batteryCharger_C_PlayerUsedOn) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_PlayerUsedOn");
static_assert(sizeof(Prop_batteryCharger_C_PlayerUsedOn) == 0x000090, "Wrong size on Prop_batteryCharger_C_PlayerUsedOn");
static_assert(offsetof(Prop_batteryCharger_C_PlayerUsedOn, Player) == 0x000000, "Member 'Prop_batteryCharger_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_PlayerUsedOn, Param_Hit) == 0x000008, "Member 'Prop_batteryCharger_C_PlayerUsedOn::Param_Hit' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_batteryCharger_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_PlayerHandUse_LMB");
static_assert(sizeof(Prop_batteryCharger_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on Prop_batteryCharger_C_PlayerHandUse_LMB");
static_assert(offsetof(Prop_batteryCharger_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'Prop_batteryCharger_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.lookAt
// 0x0250 (0x0250 - 0x0000)
struct Prop_batteryCharger_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Obj;                                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_lookAt_return;                            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_lookAt_text;                              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_lookAt_boundObjectReplace;                // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_lookAt_number;                            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0188(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_LookAt) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_LookAt");
static_assert(sizeof(Prop_batteryCharger_C_LookAt) == 0x000250, "Wrong size on Prop_batteryCharger_C_LookAt");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Player) == 0x000000, "Member 'Prop_batteryCharger_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Param_Hit) == 0x000008, "Member 'Prop_batteryCharger_C_LookAt::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Return) == 0x000090, "Member 'Prop_batteryCharger_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Text) == 0x000098, "Member 'Prop_batteryCharger_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'Prop_batteryCharger_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Number) == 0x0000B0, "Member 'Prop_batteryCharger_C_LookAt::Number' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, Obj) == 0x0000B8, "Member 'Prop_batteryCharger_C_LookAt::Obj' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_lookAt_return) == 0x0000C0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_lookAt_return' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_lookAt_text) == 0x0000C8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_lookAt_text' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_lookAt_boundObjectReplace) == 0x0000D8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_lookAt_boundObjectReplace' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_lookAt_number) == 0x0000E0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_lookAt_number' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E1, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E2, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_Time) == 0x0000E4, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_Distance) == 0x0000E8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_Location) == 0x0000EC, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_Normal) == 0x000104, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_ImpactNormal) == 0x000110, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_ElementIndex) == 0x000144, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_FaceIndex) == 0x000148, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_TraceStart) == 0x00014C, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_BreakHitResult_TraceEnd) == 0x000158, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, K2Node_MakeArray_Array) == 0x000168, "Member 'Prop_batteryCharger_C_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Array_Find_ReturnValue) == 0x000178, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Array_Contains_ReturnValue) == 0x00017C, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Array_Get_Item) == 0x000180, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Conv_FloatToText_ReturnValue) == 0x000188, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001A0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Conv_TextToString_ReturnValue) == 0x0001A8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Add_IntInt_ReturnValue) == 0x0001B8, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Conv_IntToString_ReturnValue) == 0x0001C0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue) == 0x0001D0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001E0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001F0, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000200, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000210, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000220, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_SelectString_ReturnValue) == 0x000230, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LookAt, CallFunc_SelectString_ReturnValue_1) == 0x000240, "Member 'Prop_batteryCharger_C_LookAt::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.loadData
// 0x01D0 (0x01D0 - 0x0000)
struct Prop_batteryCharger_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mVector                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Array_Get_Item_4;                         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mFloat                         CallFunc_Array_Get_Item_5;                         // 0x01A0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_loadData_return;                          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_6;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_7;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_8;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_9;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_LoadData) == 0x000010, "Wrong alignment on Prop_batteryCharger_C_LoadData");
static_assert(sizeof(Prop_batteryCharger_C_LoadData) == 0x0001D0, "Wrong size on Prop_batteryCharger_C_LoadData");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, Data) == 0x000000, "Member 'Prop_batteryCharger_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, Return) == 0x0000C0, "Member 'Prop_batteryCharger_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_3) == 0x0000F4, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000F8, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_4) == 0x000104, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000110, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000114, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_5) == 0x0001A0, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_loadData_return) == 0x0001B0, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_6) == 0x0001B4, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_7) == 0x0001B8, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_8) == 0x0001BC, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_LoadData, CallFunc_Array_Get_Item_9) == 0x0001C0, "Member 'Prop_batteryCharger_C_LoadData::CallFunc_Array_Get_Item_9' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.getData
// 0x0340 (0x0340 - 0x0000)
struct Prop_batteryCharger_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x00D0(0x0010)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_2;                          // 0x0150(0x0010)(ReferenceParm)
	struct FStruct_mVector                        K2Node_MakeStruct_struct_mVector;                  // 0x0160(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mVector>                K2Node_MakeArray_Array_3;                          // 0x0170(0x0010)(ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array_4;                          // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0190(0x00C0)(HasGetValueTypeHash)
	struct FStruct_mFloat                         K2Node_MakeStruct_struct_mFloat;                   // 0x0250(0x0010)(HasGetValueTypeHash)
	struct FStruct_mFloat                         CallFunc_Array_Get_Item;                           // 0x0260(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mFloat>                 K2Node_MakeArray_Array_5;                          // 0x0270(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x0280(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_batteryCharger_C_GetData) == 0x000010, "Wrong alignment on Prop_batteryCharger_C_GetData");
static_assert(sizeof(Prop_batteryCharger_C_GetData) == 0x000340, "Wrong size on Prop_batteryCharger_C_GetData");
static_assert(offsetof(Prop_batteryCharger_C_GetData, Data) == 0x000000, "Member 'Prop_batteryCharger_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array) == 0x0000C0, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x0000D0, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000E0, "Member 'Prop_batteryCharger_C_GetData::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array_1) == 0x000110, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_BreakTransform_Location) == 0x000120, "Member 'Prop_batteryCharger_C_GetData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'Prop_batteryCharger_C_GetData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'Prop_batteryCharger_C_GetData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000144, "Member 'Prop_batteryCharger_C_GetData::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array_2) == 0x000150, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeStruct_struct_mVector) == 0x000160, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeStruct_struct_mVector' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array_3) == 0x000170, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array_4) == 0x000180, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_getData_data) == 0x000190, "Member 'Prop_batteryCharger_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeStruct_struct_mFloat) == 0x000250, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeStruct_struct_mFloat' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, CallFunc_Array_Get_Item) == 0x000260, "Member 'Prop_batteryCharger_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_MakeArray_Array_5) == 0x000270, "Member 'Prop_batteryCharger_C_GetData::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x000280, "Member 'Prop_batteryCharger_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function prop_batteryCharger.prop_batteryCharger_C.getActionOptions
// 0x0088 (0x0088 - 0x0000)
struct Prop_batteryCharger_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_Select_Default;                             // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_batteryCharger_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_batteryCharger_C_GetActionOptions");
static_assert(sizeof(Prop_batteryCharger_C_GetActionOptions) == 0x000088, "Wrong size on Prop_batteryCharger_C_GetActionOptions");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_batteryCharger_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_batteryCharger_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_batteryCharger_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_batteryCharger_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_batteryCharger_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_batteryCharger_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_batteryCharger_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, Temp_bool_Variable) == 0x000049, "Member 'Prop_batteryCharger_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_batteryCharger_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000060, "Member 'Prop_batteryCharger_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, CallFunc_Array_Contains_ReturnValue) == 0x000070, "Member 'Prop_batteryCharger_C_GetActionOptions::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_batteryCharger_C_GetActionOptions, K2Node_Select_Default) == 0x000078, "Member 'Prop_batteryCharger_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");

}

