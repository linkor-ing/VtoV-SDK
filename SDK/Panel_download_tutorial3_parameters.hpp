#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_download_tutorial3

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"


namespace SDK::Params
{

// Function panel_download_tutorial3.panel_download_tutorial3_C.ExecuteUbergraph_panel_download_tutorial3
// 0x0060 (0x0060 - 0x0000)
struct Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_ttrigger_C>       K2Node_DynamicCast_AsInt_Ttrigger;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_NewParam;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACord_C*                                K2Node_Event_cord_1;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket_1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACord_C*                                K2Node_Event_cord;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          K2Node_Event_socket;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_sentFrom;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_active;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_owner;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3) == 0x000008, "Wrong alignment on Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3");
static_assert(sizeof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3) == 0x000060, "Wrong size on Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, EntryPoint) == 0x000000, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::EntryPoint' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_DynamicCast_AsInt_Ttrigger) == 0x000008, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_DynamicCast_AsInt_Ttrigger' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_NewParam) == 0x000019, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_cord_1) == 0x000020, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_cord_1' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_socket_1) == 0x000028, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_socket_1' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_cord) == 0x000030, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_cord' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_socket) == 0x000038, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_socket' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_sentFrom) == 0x000040, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_sentFrom' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_active) == 0x000048, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_owner) == 0x000050, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_Event_index) == 0x000058, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3, K2Node_SwitchInteger_CmpSuccess) == 0x00005C, "Member 'Panel_download_tutorial3_C_ExecuteUbergraph_panel_download_tutorial3::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.runTrigger
// 0x0010 (0x0010 - 0x0000)
struct Panel_download_tutorial3_C_RunTrigger final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_download_tutorial3_C_RunTrigger) == 0x000008, "Wrong alignment on Panel_download_tutorial3_C_RunTrigger");
static_assert(sizeof(Panel_download_tutorial3_C_RunTrigger) == 0x000010, "Wrong size on Panel_download_tutorial3_C_RunTrigger");
static_assert(offsetof(Panel_download_tutorial3_C_RunTrigger, Param_Owner) == 0x000000, "Member 'Panel_download_tutorial3_C_RunTrigger::Param_Owner' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_RunTrigger, Param_Index) == 0x000008, "Member 'Panel_download_tutorial3_C_RunTrigger::Param_Index' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.setActiveTrigger
// 0x0010 (0x0010 - 0x0000)
struct Panel_download_tutorial3_C_SetActiveTrigger final
{
public:
	class AActor*                                 SentFrom;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_SetActiveTrigger) == 0x000008, "Wrong alignment on Panel_download_tutorial3_C_SetActiveTrigger");
static_assert(sizeof(Panel_download_tutorial3_C_SetActiveTrigger) == 0x000010, "Wrong size on Panel_download_tutorial3_C_SetActiveTrigger");
static_assert(offsetof(Panel_download_tutorial3_C_SetActiveTrigger, SentFrom) == 0x000000, "Member 'Panel_download_tutorial3_C_SetActiveTrigger::SentFrom' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_SetActiveTrigger, Active) == 0x000008, "Member 'Panel_download_tutorial3_C_SetActiveTrigger::Active' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.cordUnplugged
// 0x0010 (0x0010 - 0x0000)
struct Panel_download_tutorial3_C_CordUnplugged final
{
public:
	class ACord_C*                                Cord;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_download_tutorial3_C_CordUnplugged) == 0x000008, "Wrong alignment on Panel_download_tutorial3_C_CordUnplugged");
static_assert(sizeof(Panel_download_tutorial3_C_CordUnplugged) == 0x000010, "Wrong size on Panel_download_tutorial3_C_CordUnplugged");
static_assert(offsetof(Panel_download_tutorial3_C_CordUnplugged, Cord) == 0x000000, "Member 'Panel_download_tutorial3_C_CordUnplugged::Cord' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_CordUnplugged, Socket) == 0x000008, "Member 'Panel_download_tutorial3_C_CordUnplugged::Socket' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.cordPlugged
// 0x0010 (0x0010 - 0x0000)
struct Panel_download_tutorial3_C_CordPlugged final
{
public:
	class ACord_C*                                Cord;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACordSocket_C*                          Socket;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_download_tutorial3_C_CordPlugged) == 0x000008, "Wrong alignment on Panel_download_tutorial3_C_CordPlugged");
static_assert(sizeof(Panel_download_tutorial3_C_CordPlugged) == 0x000010, "Wrong size on Panel_download_tutorial3_C_CordPlugged");
static_assert(offsetof(Panel_download_tutorial3_C_CordPlugged, Cord) == 0x000000, "Member 'Panel_download_tutorial3_C_CordPlugged::Cord' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_CordPlugged, Socket) == 0x000008, "Member 'Panel_download_tutorial3_C_CordPlugged::Socket' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.set_ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Panel_download_tutorial3_C_Set_ignoreSave_trigger final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_Set_ignoreSave_trigger) == 0x000001, "Wrong alignment on Panel_download_tutorial3_C_Set_ignoreSave_trigger");
static_assert(sizeof(Panel_download_tutorial3_C_Set_ignoreSave_trigger) == 0x000001, "Wrong size on Panel_download_tutorial3_C_Set_ignoreSave_trigger");
static_assert(offsetof(Panel_download_tutorial3_C_Set_ignoreSave_trigger, NewParam) == 0x000000, "Member 'Panel_download_tutorial3_C_Set_ignoreSave_trigger::NewParam' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.ignoreSave_trigger
// 0x0001 (0x0001 - 0x0000)
struct Panel_download_tutorial3_C_IgnoreSave_trigger final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_IgnoreSave_trigger) == 0x000001, "Wrong alignment on Panel_download_tutorial3_C_IgnoreSave_trigger");
static_assert(sizeof(Panel_download_tutorial3_C_IgnoreSave_trigger) == 0x000001, "Wrong size on Panel_download_tutorial3_C_IgnoreSave_trigger");
static_assert(offsetof(Panel_download_tutorial3_C_IgnoreSave_trigger, Ignore) == 0x000000, "Member 'Panel_download_tutorial3_C_IgnoreSave_trigger::Ignore' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct Panel_download_tutorial3_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_LoadTriggerData) == 0x000010, "Wrong alignment on Panel_download_tutorial3_C_LoadTriggerData");
static_assert(sizeof(Panel_download_tutorial3_C_LoadTriggerData) == 0x000100, "Wrong size on Panel_download_tutorial3_C_LoadTriggerData");
static_assert(offsetof(Panel_download_tutorial3_C_LoadTriggerData, Data) == 0x000000, "Member 'Panel_download_tutorial3_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(Panel_download_tutorial3_C_LoadTriggerData, Return) == 0x0000F0, "Member 'Panel_download_tutorial3_C_LoadTriggerData::Return' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.getTriggerData
// 0x00F0 (0x00F0 - 0x0000)
struct Panel_download_tutorial3_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(Panel_download_tutorial3_C_GetTriggerData) == 0x000010, "Wrong alignment on Panel_download_tutorial3_C_GetTriggerData");
static_assert(sizeof(Panel_download_tutorial3_C_GetTriggerData) == 0x0000F0, "Wrong size on Panel_download_tutorial3_C_GetTriggerData");
static_assert(offsetof(Panel_download_tutorial3_C_GetTriggerData, Data) == 0x000000, "Member 'Panel_download_tutorial3_C_GetTriggerData::Data' has a wrong offset!");

// Function panel_download_tutorial3.panel_download_tutorial3_C.gatherDataFromKeyT
// 0x0001 (0x0001 - 0x0000)
struct Panel_download_tutorial3_C_GatherDataFromKeyT final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_download_tutorial3_C_GatherDataFromKeyT) == 0x000001, "Wrong alignment on Panel_download_tutorial3_C_GatherDataFromKeyT");
static_assert(sizeof(Panel_download_tutorial3_C_GatherDataFromKeyT) == 0x000001, "Wrong size on Panel_download_tutorial3_C_GatherDataFromKeyT");
static_assert(offsetof(Panel_download_tutorial3_C_GatherDataFromKeyT, Gather) == 0x000000, "Member 'Panel_download_tutorial3_C_GatherDataFromKeyT::Gather' has a wrong offset!");

}

