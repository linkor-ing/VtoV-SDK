#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KerfurOmega

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Struct_mString_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_mBool_structs.hpp"
#include "Struct_kerfurDrip_structs.hpp"
#include "AIModule_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_settings_structs.hpp"
#include "Struct_food1_structs.hpp"
#include "Struct_prop_structs.hpp"


namespace SDK::Params
{

// Function kerfurOmega.kerfurOmega_C.ExecuteUbergraph_kerfurOmega
// 0x2170 (0x2170 - 0x0000)
struct KerfurOmega_C_ExecuteUbergraph_kerfurOmega final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_2;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1;                   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x01A4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_3;                              // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x0204(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x0268(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x0280(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_4;                              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_3;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x02BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x02CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x02D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x02EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x0304(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_5;                              // 0x0314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0320(0x0010)(ConstParm, ReferenceParm)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_30;           // 0x0334(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_31;           // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_8;               // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_32;           // 0x0384(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_9;               // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x03A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_34;           // 0x03C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_6;                              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_4;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_2;                              // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x03EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_10;              // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_35;           // 0x03F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x0408(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x041C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_11;              // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_37;           // 0x0440(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x0450(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_6;                               // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x0464(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_39;           // 0x046C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        K2Node_Event_gamemode;                             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key_2;                                // 0x0488(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed_1;                            // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_color;                                // 0x04A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUmg_texturePicker_C*                   K2Node_Event_picker;                               // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_texture;                              // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ignore;                               // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_damage_6;                             // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_7;                                // 0x04D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor_1;                              // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_impact_1;                             // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterVolume_C*                         K2Node_Event_water_3;                              // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_2;                              // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water_1;                              // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume_C*                         K2Node_Event_water;                                // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_activate;                             // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_static;                               // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_frozen;                               // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_active;                               // 0x059B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_key_1;                                // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_18;                            // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_6;                                // 0x05B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_5;                             // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_4;                             // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hot;                                  // 0x0648(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AMainPlayer_C*                          K2Node_Event_player_17;                            // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_5;                                // 0x06D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_16;                            // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_15;                            // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_3;                             // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_location_1;                           // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_14;                            // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_13;                            // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_12;                            // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_wheelDelta;                           // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_11;                            // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_mouse;                                // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_10;                            // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_Event_key;                                  // 0x07C0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_pressed;                              // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D9[0x3];                                      // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_temperature_1;                        // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_temperature;                          // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_speed;                                // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_9;                             // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_clean_1;                              // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_8;                             // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_4;                                // 0x0800(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AHook_C*                                K2Node_Event_hook_1;                               // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_clean;                                // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_894[0x4];                                      // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_7;                             // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHook_C*                                K2Node_Event_hook;                                 // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_6;                             // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_3;                                // 0x08B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_kick;                                 // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_name_1;                               // 0x093C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_944[0x4];                                      // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_2;                                // 0x0958(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage_2;                             // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1E[0x2];                                      // 0x0A1E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0A28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_moveServ;                       // 0x0A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A35[0x3];                                      // 0x0A35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation; // 0x0A38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue; // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A45[0x3];                                      // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AServerBox_C*                           CallFunc_findBrokenServer_srv1;                    // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0A58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A64[0x4];                                      // 0x0A64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A81[0x7];                                      // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A94[0x4];                                      // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0AA0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 K2Node_Event_name;                                 // 0x0B28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B39[0x7];                                      // 0x0B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0B40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0B58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_ReturnValue;                 // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B69[0x3];                                      // 0x0B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_food1                          CallFunc_propToObject_foodData;                    // 0x0B6C(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_propToObject_object;                      // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_isFood;                      // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B91[0x7];                                      // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_propToObject_propData;                    // 0x0B98(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0C19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0C1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1B[0x1];                                      // 0x0C1B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0C1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C28[0x8];                                      // 0x0C28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0C30(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_1;                 // 0x0C60(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C72[0xE];                                      // 0x0C72(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data;                             // 0x0C80(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D41[0x7];                                      // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_kerfurDrip                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0D62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D63[0x5];                                      // 0x0D63(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player;              // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0D78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0D84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0D88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0D94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA1[0x3];                                      // 0x0DA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAC[0x4];                                      // 0x0DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADish_C*                                CallFunc_findTask_Output;                          // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_findTask_hash;                            // 0x0DB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_findTask_dish;                            // 0x0DC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0DD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0DE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0DF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E04[0x4];                                      // 0x0E04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0E08(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_40;           // 0x0E1C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0E2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E38[0x8];                                      // 0x0E38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0E40(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0E70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0E7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E89[0x3];                                      // 0x0E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0E8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x0E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0EA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0EB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0EC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0ED0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AProp_camera_good_C*                    K2Node_DynamicCast_AsProp_Camera_Good;             // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE9[0x3];                                      // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0EEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_41;           // 0x0EFC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0F0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F0D[0x3];                                      // 0x0F0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_1;            // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_2;                 // 0x0F18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F29[0x7];                                      // 0x0F29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data_1;                           // 0x0F30(0x00C0)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Clipboard_Paper;    // 0x0FF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1001[0x7];                                     // 0x1001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x1008(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x1018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x1028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1034[0x4];                                     // 0x1034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGenerator_C*                           CallFunc_findTransformer_Array_Element;            // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x1044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x1050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x1058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1064[0x4];                                     // 0x1064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x1070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x107C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x1084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_targetLocation_OutputPin;                 // 0x1094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_2;            // 0x10A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x10A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x10AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x10B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x10B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x10B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x10BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C1[0x3];                                     // 0x10C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x10C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x10C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x10CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x10DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x10E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E9[0x7];                                     // 0x10E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_2;    // 0x10F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_3;    // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x1101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1102[0x2];                                     // 0x1102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_3;            // 0x1104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_4;            // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x110D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110E[0x2];                                     // 0x110E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_4;    // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x1119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111A[0x2];                                     // 0x111A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x111C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x1128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1134[0x4];                                     // 0x1134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x1138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x1140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x114C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x1158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x115C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1169[0x3];                                     // 0x1169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x116C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_4;              // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1181[0x3];                                     // 0x1181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_14;       // 0x1184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x1190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x119C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x11A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x11A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x11A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x11B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x11C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x11CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_15;       // 0x11D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x11E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x11E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E9[0x3];                                     // 0x11E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_16;       // 0x11EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_5;            // 0x11F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11FC[0x4];                                     // 0x11FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x1200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x1208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x1209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_120A[0x6];                                     // 0x120A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x1210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x1218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_3;                              // 0x1222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x1223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x1225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x1226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1229[0x3];                                     // 0x1229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_42;           // 0x122C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x123C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123D[0x3];                                     // 0x123D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x1240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x124C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x1258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x1264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x1268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x126C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x1278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x127C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x1280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x1288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1289[0x3];                                     // 0x1289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_17;       // 0x128C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_5;              // 0x1298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_18;       // 0x12A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_6;            // 0x12AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x12B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x12B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x12B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_19;       // 0x12B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x12C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKerfurOmegaV1_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint; // 0x12C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D1[0x3];                                     // 0x12D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x12D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x12E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EC[0x4];                                     // 0x12EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects;                  // 0x12F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1301[0x3];                                     // 0x1301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_43;           // 0x1304(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1314[0x4];                                     // 0x1314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_3;                 // 0x1318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1329[0x7];                                     // 0x1329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x1330(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_2;                         // 0x1340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x134C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x134D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue_1; // 0x134E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x134F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1351[0x3];                                     // 0x1351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x1354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x1359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135A[0x2];                                     // 0x135A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x135C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1361[0x7];                                     // 0x1361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x1368(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_forward;                        // 0x137C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_137D[0x3];                                     // 0x137D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_9;                               // 0x1380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1384[0x4];                                     // 0x1384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x1388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x1390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1394[0x4];                                     // 0x1394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x1398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A1[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_3;                         // 0x13A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x13B0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x13CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13CD[0x3];                                     // 0x13CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x13D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x13D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x13D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x13DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13DD[0x3];                                     // 0x13DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x13E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x13EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x13F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x1480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x148C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x1498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A4[0xC];                                     // 0x14A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x14B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_20;       // 0x14E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14EC[0x4];                                     // 0x14EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x14F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F8[0x8];                                     // 0x14F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x1500(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x1530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1539[0x7];                                     // 0x1539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x1540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x1548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x1549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154A[0x6];                                     // 0x154A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x1550(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x1580(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x15B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_clipboard_paper_C*                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x15B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSubstring_ReturnValue;                 // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C1[0x7];                                     // 0x15C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x15C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x15D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DC[0x4];                                     // 0x15DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x15E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x15F0(0x0010)(ReferenceParm)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x160A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x160B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x160C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_4;                 // 0x1618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1629[0x7];                                     // 0x1629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data_2;                           // 0x1630(0x00C0)(HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_5;                 // 0x16F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1701[0xF];                                     // 0x1701(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_save                           CallFunc_getData_data_3;                           // 0x1710(0x00C0)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x17D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x17D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_addEquip_return;                          // 0x17E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E1[0x7];                                     // 0x17E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_addEquip_rebug;                           // 0x17E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_6;                 // 0x17F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return_1;                        // 0x1809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_180A[0x6];                                     // 0x180A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x1810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x1818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_1;                // 0x1820(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1831[0x7];                                     // 0x1831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_7;                 // 0x1838(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return_2;                        // 0x1849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_putObjectInventory2_return;               // 0x184A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_184B[0x5];                                     // 0x184B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_8;                 // 0x1850(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1861[0x3];                                     // 0x1861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_volume;                               // 0x1864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_objects_C>        K2Node_DynamicCast_AsInt_Objects_2;                // 0x1868(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1879[0x3];                                     // 0x1879(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x187C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x1880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x1884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_save1_C>          K2Node_DynamicCast_AsInt_Save_1_9;                 // 0x1888(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x1898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1899[0x7];                                     // 0x1899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x18A0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x18B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x18C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18C1[0x7];                                     // 0x18C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x18C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoor_C*                                K2Node_DynamicCast_AsDoor;                         // 0x18D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x18D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D9[0x3];                                     // 0x18D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x18DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x18E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E1[0x3];                                     // 0x18E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x18E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x18F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x18FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x1984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x1990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1999[0x3];                                     // 0x1999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_44;           // 0x199C(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable_4;                              // 0x19AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19AD[0x3];                                     // 0x19AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x19B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x19B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x19C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C1[0x7];                                     // 0x19C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_settings                       K2Node_Event_settings;                             // 0x19C8(0x00F0)(HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_4;               // 0x1AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x1AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x1ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x1ABB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1ABC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x1ABD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ABE[0x2];                                     // 0x1ABE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_45;           // 0x1AC0(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_5;               // 0x1AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD1[0x7];                                     // 0x1AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x1AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x1AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE2[0x2];                                     // 0x1AE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_46;           // 0x1AE4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_10;                              // 0x1AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF9[0x3];                                     // 0x1AF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x1AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B02[0x2];                                     // 0x1B02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x1B04(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x1B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_ReturnValue_1;               // 0x1B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B11[0x3];                                     // 0x1B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_food1                          CallFunc_propToObject_foodData_1;                  // 0x1B14(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2C[0x4];                                     // 0x1B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_propToObject_object_1;                    // 0x1B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_isFood_1;                    // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B39[0x7];                                     // 0x1B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_propToObject_propData_1;                  // 0x1B40(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x1BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BC2[0x6];                                     // 0x1BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_actor;                                // 0x1BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage_1;                             // 0x1BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x1BD4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_impact;                               // 0x1C5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_skipSetting;                          // 0x1C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C69[0x3];                                     // 0x1C69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_11;                              // 0x1C6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x1C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x1C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C72[0x2];                                     // 0x1C72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x1C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x1C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_21;       // 0x1C84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x1C90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9C[0x4];                                     // 0x1C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x1CA0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item_6;                         // 0x1CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x1CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_ReturnValue_2;               // 0x1CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE1[0x3];                                     // 0x1CE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_food1                          CallFunc_propToObject_foodData_2;                  // 0x1CE4(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFC[0x4];                                     // 0x1CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_propToObject_object_2;                    // 0x1D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_propToObject_isFood_2;                    // 0x1D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D09[0x7];                                     // 0x1D09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_prop                           CallFunc_propToObject_propData_2;                  // 0x1D10(0x0080)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x1D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x1D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D99[0x7];                                     // 0x1D99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x1DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player;                   // 0x1DA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB9[0x7];                                     // 0x1DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x1DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_asProp_return;                            // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x1DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x1DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x1DE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x1DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF4[0xC];                                     // 0x1DF4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x1E00(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x1E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E31[0x7];                                     // 0x1E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x1E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x1E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x1E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_1;                 // 0x1E50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E61[0x7];                                     // 0x1E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_asProp_return_1;                          // 0x1E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x1E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x1E78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x1E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x1E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_5;                              // 0x1E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E99[0x3];                                     // 0x1E99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_location;                             // 0x1E9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_damage;                               // 0x1EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x1EAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EAD[0x3];                                     // 0x1EAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x1EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x1EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x1EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB9[0x3];                                     // 0x1EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x1EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x1EC0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AMainPlayer_C*                          CallFunc_getMainPlayer_AsMain_Player_2;            // 0x1EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x1EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosion_C*                           CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x1F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x1F08(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_22;       // 0x1F18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x1F24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x1F30(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x1FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB9[0x3];                                     // 0x1FB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x1FBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_5;    // 0x1FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FC9[0x3];                                     // 0x1FC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_23;       // 0x1FCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_step_OutHit;                              // 0x1FD8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_fuel;                                 // 0x2060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x2064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2065[0x3];                                     // 0x2065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_3;        // 0x2068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_4;        // 0x2070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x2078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_6;               // 0x207C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x207D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207E[0x2];                                     // 0x207E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x2080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x2088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2089[0x3];                                     // 0x2089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_12;                              // 0x208C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x2090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2091[0x3];                                     // 0x2091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x2094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2098[0x8];                                     // 0x2098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x20A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x20D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12; // 0x20D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x20E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         K2Node_DynamicCast_AsInt_Player_2;                 // 0x20E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x20F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F9[0x7];                                     // 0x20F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_C*                                CallFunc_FinishSpawningActor_ReturnValue_12;       // 0x2100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_C*                                CallFunc_asProp_return_2;                          // 0x2108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13; // 0x2110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_food_C*                           CallFunc_FinishSpawningActor_ReturnValue_13;       // 0x2118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x2120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_47;           // 0x2130(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_7;               // 0x2140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x2141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x2142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2143[0x1];                                     // 0x2143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_13;                              // 0x2144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x2148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2149[0x3];                                     // 0x2149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x214C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x2150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2151[0x3];                                     // 0x2151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_48;           // 0x2154(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x2164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2165[0x3];                                     // 0x2165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x2168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega) == 0x000010, "Wrong alignment on KerfurOmega_C_ExecuteUbergraph_kerfurOmega");
static_assert(sizeof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega) == 0x002170, "Wrong size on KerfurOmega_C_ExecuteUbergraph_kerfurOmega");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, EntryPoint) == 0x000000, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::EntryPoint' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_28) == 0x000004, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_27) == 0x00001C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_26) == 0x000034, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_25) == 0x00004C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable) == 0x000064, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_24) == 0x00007C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_23) == 0x000084, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_22) == 0x00009C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_21) == 0x0000B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000BC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_20) == 0x0000CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_1) == 0x0000E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchName_CmpSuccess) == 0x0000FC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_19) == 0x000100, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_18) == 0x000108, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_10) == 0x000110, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_17) == 0x000120, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_11) == 0x000128, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_16) == 0x000138, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_12) == 0x000140, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_15) == 0x000150, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_13) == 0x000158, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_2) == 0x000168, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1) == 0x000170, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchName_CmpSuccess_1) == 0x000181, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_loadData_return) == 0x000182, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_14) == 0x000184, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_14) == 0x000194, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_13) == 0x00019C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_12) == 0x0001B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001BC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_11) == 0x0001CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_10) == 0x0001E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_18) == 0x0001EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_3) == 0x0001FC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_19) == 0x000204, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchName_CmpSuccess_2) == 0x000214, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_9) == 0x000218, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_20) == 0x000220, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_8) == 0x000230, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_21) == 0x000238, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_7) == 0x000248, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_22) == 0x000250, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_6) == 0x000260, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_23) == 0x000268, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_5) == 0x000278, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_24) == 0x000280, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_4) == 0x000290, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_25) == 0x000298, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchName_CmpSuccess_3) == 0x0002A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchName_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_4) == 0x0002AC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_3) == 0x0002B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_26) == 0x0002BC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_2) == 0x0002CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_27) == 0x0002D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_1) == 0x0002E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_28) == 0x0002EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName) == 0x0002FC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_29) == 0x000304, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_5) == 0x000314, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_object_Variable) == 0x000320, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_1) == 0x000330, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_30) == 0x000334, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult) == 0x000344, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_31) == 0x000348, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable) == 0x000358, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable) == 0x00035C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000360, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue) == 0x000364, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_bool_IsClosed_Variable) == 0x000368, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_bool_Has_Been_Initd_Variable) == 0x000369, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable_1) == 0x00036A, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Loop_Counter_Variable) == 0x00036C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_1) == 0x000370, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Array_Index_Variable) == 0x000374, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_29) == 0x000378, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_8) == 0x000380, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_32) == 0x000384, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Loop_Counter_Variable_1) == 0x000394, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_2) == 0x000398, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Array_Index_Variable_1) == 0x00039C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_9) == 0x0003A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Loop_Counter_Variable_2) == 0x0003A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_33) == 0x0003A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_3) == 0x0003B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Array_Index_Variable_2) == 0x0003BC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_34) == 0x0003C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_name_Variable_6) == 0x0003D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchName_CmpSuccess_4) == 0x0003D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchName_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable_2) == 0x0003D9, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_1) == 0x0003DC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_2) == 0x0003E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_4) == 0x0003E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_30) == 0x0003EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_10) == 0x0003F4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_35) == 0x0003F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_36) == 0x000408, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_3) == 0x000418, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_31) == 0x00041C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_4) == 0x000424, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000428, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_5) == 0x00042C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_11) == 0x000430, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_5) == 0x000434, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000438, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_6) == 0x00043C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_37) == 0x000440, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_38) == 0x000450, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_6) == 0x000460, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_32) == 0x000464, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_39) == 0x00046C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_gamemode) == 0x000480, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_gamemode' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_key_2) == 0x000488, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_key_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_pressed_1) == 0x0004A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_pressed_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_color) == 0x0004A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_color' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_picker) == 0x0004B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_picker' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_texture) == 0x0004C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_texture' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_index) == 0x0004C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_ignore) == 0x0004CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_ignore' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_6) == 0x0004D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_7) == 0x0004D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_actor_1) == 0x000560, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_actor_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_impact_1) == 0x000568, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_impact_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_water_3) == 0x000578, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_water_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_water_2) == 0x000580, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_water_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_water_1) == 0x000588, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_water_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_water) == 0x000590, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_water' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_activate) == 0x000598, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_activate' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_static) == 0x000599, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_static' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_frozen) == 0x00059A, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_frozen' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_active) == 0x00059B, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_active' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_key_1) == 0x0005A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_key_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_18) == 0x0005B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_6) == 0x0005B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_5) == 0x000640, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_4) == 0x000644, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hot) == 0x000648, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hot' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_17) == 0x0006D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_5) == 0x0006D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_action) == 0x000760, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_16) == 0x000768, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_15) == 0x000770, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_3) == 0x000778, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_location_1) == 0x00077C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_location_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_14) == 0x000788, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_13) == 0x000790, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_12) == 0x000798, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_wheelDelta) == 0x0007A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_wheelDelta' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_11) == 0x0007A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_mouse) == 0x0007B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_mouse' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_10) == 0x0007B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_key) == 0x0007C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_key' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_pressed) == 0x0007D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_pressed' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_temperature_1) == 0x0007DC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_temperature_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_temperature) == 0x0007E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_temperature' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_speed) == 0x0007E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_speed' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_9) == 0x0007E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_clean_1) == 0x0007F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_clean_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_8) == 0x0007F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_4) == 0x000800, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hook_1) == 0x000888, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hook_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_clean) == 0x000890, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_clean' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_7) == 0x000898, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hook) == 0x0008A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hook' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_6) == 0x0008A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_3) == 0x0008B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_kick) == 0x000938, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_name_1) == 0x00093C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_name_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_5) == 0x000948, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_4) == 0x000950, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_2) == 0x000958, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_2) == 0x0009E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_3) == 0x0009E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_2) == 0x0009F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player_1) == 0x0009F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue) == 0x000A00, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000A08, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000A10, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue) == 0x000A1C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchEnum_CmpSuccess) == 0x000A1D, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000A20, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000A28, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_moveServ) == 0x000A34, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_moveServ' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation) == 0x000A38, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue) == 0x000A44, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_RandomFloatInRange_ReturnValue) == 0x000A48, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_findBrokenServer_srv1) == 0x000A50, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_findBrokenServer_srv1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000A58, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x000A68, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_1) == 0x000A70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000A78, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_RemoveItem_ReturnValue) == 0x000A80, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000A88, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue) == 0x000A90, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_player) == 0x000A98, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit_1) == 0x000AA0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_name) == 0x000B28, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_2) == 0x000B38, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_RightChop_ReturnValue) == 0x000B40, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Conv_StringToName_ReturnValue) == 0x000B50, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Left_ReturnValue) == 0x000B58, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_ReturnValue) == 0x000B68, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_foodData) == 0x000B6C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_foodData' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_object) == 0x000B88, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_object' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_isFood) == 0x000B90, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_isFood' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_propData) == 0x000B98, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_propData' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000C18, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValidClass_ReturnValue) == 0x000C19, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchString_CmpSuccess) == 0x000C1A, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000C1C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeTransform_ReturnValue) == 0x000C30, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_1) == 0x000C60, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_1) == 0x000C70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_3) == 0x000C71, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getData_data) == 0x000C80, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_4) == 0x000D40, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetDataTableRowFromName_OutRow) == 0x000D48, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000D60, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000D61, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_SwitchEnum_CmpSuccess_1) == 0x000D62, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainPlayer_AsMain_Player) == 0x000D68, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainPlayer_AsMain_Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_33) == 0x000D70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetActorForwardVector_ReturnValue) == 0x000D78, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_7) == 0x000D84, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_VectorVector_ReturnValue) == 0x000D88, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000D94, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000DA0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_7) == 0x000DA4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Array_Index_Variable_3) == 0x000DA8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_findTask_Output) == 0x000DB0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_findTask_Output' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_findTask_hash) == 0x000DB8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_findTask_hash' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_findTask_dish) == 0x000DC8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_findTask_dish' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000DD8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Concat_StrStr_ReturnValue) == 0x000DE8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000DF8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_obj_statDyn_obj) == 0x000E08, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue_1) == 0x000E18, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_40) == 0x000E1C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000E2C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetTransform_ReturnValue) == 0x000E40, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000E70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000E7C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsEmpty_ReturnValue) == 0x000E88, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000E8C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_NotifyName_34) == 0x000E98, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000EA0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000EB0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue_2) == 0x000EC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000EC4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000ED0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsProp_Camera_Good) == 0x000EE0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsProp_Camera_Good' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_2) == 0x000EE8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000EEC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue) == 0x000EF8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_41) == 0x000EFC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000F0C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainPlayer_AsMain_Player_1) == 0x000F10, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainPlayer_AsMain_Player_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_2) == 0x000F18, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_3) == 0x000F28, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getData_data_1) == 0x000F30, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getData_data_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetObjectClass_ReturnValue) == 0x000FF0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_ClassDynamicCast_AsProp_Clipboard_Paper) == 0x000FF8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_ClassDynamicCast_AsProp_Clipboard_Paper' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_ClassDynamicCast_bSuccess) == 0x001000, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item) == 0x001008, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_1) == 0x001018, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x001028, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_findTransformer_Array_Element) == 0x001038, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_findTransformer_Array_Element' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Loop_Counter_Variable_3) == 0x001040, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x001044, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_8) == 0x001050, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_DeltaSeconds) == 0x001054, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x001058, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x001068, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x001070, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_1) == 0x00107C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FClamp_ReturnValue) == 0x001080, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x001084, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Divide_FloatFloat_ReturnValue) == 0x001090, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_targetLocation_OutputPin) == 0x001094, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_targetLocation_OutputPin' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0010A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_2) == 0x0010A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Lerp_ReturnValue) == 0x0010A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FClamp_ReturnValue_1) == 0x0010AC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0010B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0010B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Lerp_ReturnValue_1) == 0x0010B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0010BC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0010C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SelectFloat_ReturnValue) == 0x0010C4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SelectFloat_ReturnValue_1) == 0x0010C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0010CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_VSize_ReturnValue) == 0x0010D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0010DC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0010E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue_2) == 0x0010F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue_3) == 0x0010F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_5) == 0x001100, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_6) == 0x001101, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_3) == 0x001104, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_4) == 0x001108, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00110C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x00110D, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue_4) == 0x001110, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanAND_ReturnValue) == 0x001118, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_7) == 0x001119, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x00111C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x001128, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x001138, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x001140, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00114C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_VSize_ReturnValue_1) == 0x001158, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00115C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x001168, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Normal_ReturnValue) == 0x00116C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue_4) == 0x001178, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_8) == 0x001180, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_14) == 0x001184, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FindLookAtRotation_ReturnValue) == 0x001190, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Roll) == 0x00119C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Pitch) == 0x0011A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Yaw) == 0x0011A4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetForwardVector_ReturnValue) == 0x0011A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeRotator_ReturnValue) == 0x0011B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0011C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Normal_ReturnValue_1) == 0x0011CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_15) == 0x0011D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Dot_VectorVector_ReturnValue) == 0x0011E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_FloatFloat_ReturnValue) == 0x0011E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_16) == 0x0011EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_5) == 0x0011F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x001200, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x001208, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_9) == 0x001209, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x001210, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x001218, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_10) == 0x001220, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_11) == 0x001221, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable_3) == 0x001222, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_2) == 0x001223, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001224, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x001225, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x001226, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanOR_ReturnValue) == 0x001227, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanOR_ReturnValue_1) == 0x001228, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_42) == 0x00122C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanAND_ReturnValue_1) == 0x00123C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorRotation_ReturnValue) == 0x001240, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Roll_1) == 0x00124C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Pitch_1) == 0x001250, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakRotator_Yaw_1) == 0x001254, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetActorScale3D_ReturnValue) == 0x001258, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_FloatFloat_ReturnValue) == 0x001264, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetMaxElement_ReturnValue) == 0x001268, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeRotator_ReturnValue_1) == 0x00126C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x001278, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FInterpTo_ReturnValue) == 0x00127C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x001280, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_12) == 0x001288, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_17) == 0x00128C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetPlayerPawn_ReturnValue_5) == 0x001298, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetPlayerPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_18) == 0x0012A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Vector_Distance_ReturnValue_6) == 0x0012AC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Vector_Distance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x0012B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_3) == 0x0012B1, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Not_PreBool_ReturnValue) == 0x0012B2, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanAND_ReturnValue_2) == 0x0012B3, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_19) == 0x0012B4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetAnimInstance_ReturnValue) == 0x0012C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint) == 0x0012C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsKerfur_Omega_V1_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_4) == 0x0012D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0012D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x0012E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Objects) == 0x0012F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Objects' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_5) == 0x001300, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_43) == 0x001304, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_3) == 0x001318, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_6) == 0x001328, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x001330, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_2) == 0x001340, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Length_ReturnValue) == 0x001348, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_IntInt_ReturnValue) == 0x00134C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x00134D, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetCollisionResponseToChannel_ReturnValue_1) == 0x00134E, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetCollisionResponseToChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00134F, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x001350, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_8) == 0x001354, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanOR_ReturnValue_2) == 0x001358, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x001359, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_9) == 0x00135C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_13) == 0x001360, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x001368, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Length_ReturnValue_1) == 0x001378, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_forward) == 0x00137C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_forward' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_9) == 0x001380, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetRootComponent_ReturnValue) == 0x001388, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_10) == 0x001390, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x001398, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_7) == 0x0013A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_3) == 0x0013A8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetBounds_ReturnValue) == 0x0013B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_IntInt_ReturnValue_1) == 0x0013CC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakVector_X) == 0x0013D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakVector_Y) == 0x0013D4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BreakVector_Z) == 0x0013D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_14) == 0x0013DC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetRightVector_ReturnValue) == 0x0013E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0013EC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0013F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_VLerp_ReturnValue) == 0x001480, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00148C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x001498, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeTransform_ReturnValue_1) == 0x0014B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_20) == 0x0014E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0014F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeTransform_ReturnValue_2) == 0x001500, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue) == 0x001530, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_15) == 0x001538, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x001540, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_16) == 0x001548, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsEmpty_ReturnValue_1) == 0x001549, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeTransform_ReturnValue_3) == 0x001550, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_ComposeTransforms_ReturnValue) == 0x001580, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0015B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0015B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_HasSubstring_ReturnValue) == 0x0015C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_HasSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SelectString_ReturnValue) == 0x0015C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0015D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0015E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_MakeArray_Array) == 0x0015F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_DestroyedActor) == 0x001600, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Not_PreBool_ReturnValue_1) == 0x001608, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Not_PreBool_ReturnValue_2) == 0x001609, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanAND_ReturnValue_3) == 0x00160A, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanAND_ReturnValue_4) == 0x00160B, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_RInterpTo_ReturnValue) == 0x00160C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_4) == 0x001618, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_8) == 0x001628, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getData_data_2) == 0x001630, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getData_data_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_5) == 0x0016F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_9) == 0x001700, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getData_data_3) == 0x001710, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getData_data_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0017D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0017D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_addEquip_return) == 0x0017E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_addEquip_return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_addEquip_rebug) == 0x0017E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_addEquip_rebug' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_6) == 0x0017F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_10) == 0x001808, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_loadData_return_1) == 0x001809, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_loadData_return_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x001810, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x001818, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Objects_1) == 0x001820, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Objects_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_11) == 0x001830, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_7) == 0x001838, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_12) == 0x001848, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_loadData_return_2) == 0x001849, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_loadData_return_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_putObjectInventory2_return) == 0x00184A, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_putObjectInventory2_return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_8) == 0x001850, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_13) == 0x001860, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_volume) == 0x001864, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_volume' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Objects_2) == 0x001868, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Objects_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_14) == 0x001878, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00187C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x001880, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x001884, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Save_1_9) == 0x001888, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Save_1_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_15) == 0x001898, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_object_Variable_1) == 0x0018A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SphereOverlapActors_OutActors) == 0x0018B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SphereOverlapActors_ReturnValue) == 0x0018C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_4) == 0x0018C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsDoor) == 0x0018D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsDoor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_16) == 0x0018D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Length_ReturnValue_2) == 0x0018DC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_IntInt_ReturnValue_2) == 0x0018E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_ComposeRotators_ReturnValue) == 0x0018E4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetForwardVector_ReturnValue_1) == 0x0018F0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0018FC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x001984, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x001990, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_17) == 0x001998, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_44) == 0x00199C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable_4) == 0x0019AC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0019B0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x0019B8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_18) == 0x0019C0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_settings) == 0x0019C8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_settings' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_4) == 0x001AB8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x001AB9, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x001ABA, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x001ABB, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanOR_ReturnValue_3) == 0x001ABC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BooleanOR_ReturnValue_4) == 0x001ABD, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_45) == 0x001AC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_5) == 0x001AD0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x001AD8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_19) == 0x001AE0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x001AE1, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_46) == 0x001AE4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_10) == 0x001AF4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x001AF8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_11) == 0x001AFC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_20) == 0x001B00, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_21) == 0x001B01, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_5) == 0x001B04, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Length_ReturnValue_3) == 0x001B0C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_ReturnValue_1) == 0x001B10, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_foodData_1) == 0x001B14, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_foodData_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_object_1) == 0x001B30, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_object_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_isFood_1) == 0x001B38, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_isFood_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_propData_1) == 0x001B40, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_propData_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_IntInt_ReturnValue_3) == 0x001BC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValidClass_ReturnValue_1) == 0x001BC1, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_actor) == 0x001BC8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage_1) == 0x001BD0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_hit) == 0x001BD4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_impact) == 0x001C5C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_impact' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_skipSetting) == 0x001C68, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_skipSetting' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_11) == 0x001C6C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x001C70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x001C71, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_12) == 0x001C74, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_RandomRotator_ReturnValue) == 0x001C78, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_21) == 0x001C84, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x001C90, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MakeTransform_ReturnValue_4) == 0x001CA0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Get_Item_6) == 0x001CD0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x001CD8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_ReturnValue_2) == 0x001CE0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_foodData_2) == 0x001CE4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_foodData_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_object_2) == 0x001D00, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_object_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_isFood_2) == 0x001D08, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_isFood_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_propToObject_propData_2) == 0x001D10, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_propToObject_propData_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x001D90, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValidClass_ReturnValue_2) == 0x001D98, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x001DA0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Player) == 0x001DA8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_17) == 0x001DB8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x001DC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_asProp_return) == 0x001DC8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_asProp_return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x001DD0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x001DD8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Conv_NameToString_ReturnValue) == 0x001DE0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Length_ReturnValue_4) == 0x001DF0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetTransform_ReturnValue_1) == 0x001E00, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Less_IntInt_ReturnValue_4) == 0x001E30, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x001E38, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x001E40, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x001E48, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Player_1) == 0x001E50, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Player_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_18) == 0x001E60, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_asProp_return_1) == 0x001E68, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_asProp_return_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x001E70, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Conv_NameToString_ReturnValue_1) == 0x001E78, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x001E88, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x001E90, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_byte_Variable_5) == 0x001E98, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_location) == 0x001E9C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_location' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_damage) == 0x001EA8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x001EAC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x001EB0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x001EB4, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x001EB8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Lerp_ReturnValue_2) == 0x001EBC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetTransform_ReturnValue_2) == 0x001EC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainPlayer_AsMain_Player_2) == 0x001EF0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainPlayer_AsMain_Player_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x001EF8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x001F00, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_obj_static_obj) == 0x001F08, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_22) == 0x001F18, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x001F24, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LineTraceSingleForObjects_OutHit) == 0x001F30, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x001FB8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue_3) == 0x001FBC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_CreateMoveToProxyObject_ReturnValue_5) == 0x001FC0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_CreateMoveToProxyObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_22) == 0x001FC8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_K2_GetActorLocation_ReturnValue_23) == 0x001FCC, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_K2_GetActorLocation_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_step_OutHit) == 0x001FD8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_step_OutHit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_Event_fuel) == 0x002060, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_Event_fuel' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x002064, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainGamemode_AsMain_Gamemode_3) == 0x002068, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainGamemode_AsMain_Gamemode_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_getMainGamemode_AsMain_Gamemode_4) == 0x002070, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_getMainGamemode_AsMain_Gamemode_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue_4) == 0x002078, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_6) == 0x00207C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00207D, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_SpawnSoundAttached_ReturnValue) == 0x002080, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_IsValid_ReturnValue_23) == 0x002088, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_12) == 0x00208C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x002090, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_13) == 0x002094, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_GetTransform_ReturnValue_3) == 0x0020A0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x0020D0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12) == 0x0020D8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x0020E0, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_AsInt_Player_2) == 0x0020E8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_AsInt_Player_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_DynamicCast_bSuccess_19) == 0x0020F8, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_12) == 0x002100, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_asProp_return_2) == 0x002108, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_asProp_return_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13) == 0x002110, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_FinishSpawningActor_ReturnValue_13) == 0x002118, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_FinishSpawningActor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Conv_NameToString_ReturnValue_2) == 0x002120, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_47) == 0x002130, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CustomEvent_MovementResult_7) == 0x002140, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CustomEvent_MovementResult_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Contains_ReturnValue) == 0x002141, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x002142, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, Temp_int_Variable_13) == 0x002144, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x002148, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Add_IntInt_ReturnValue_14) == 0x00214C, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Contains_ReturnValue_1) == 0x002150, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, K2Node_CreateDelegate_OutputDelegate_48) == 0x002154, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Contains_ReturnValue_2) == 0x002164, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ExecuteUbergraph_kerfurOmega, CallFunc_Array_Add_ReturnValue_5) == 0x002168, "Member 'KerfurOmega_C_ExecuteUbergraph_kerfurOmega::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.ignite
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_Ignite final
{
public:
	float                                         Fuel;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Ignite) == 0x000004, "Wrong alignment on KerfurOmega_C_Ignite");
static_assert(sizeof(KerfurOmega_C_Ignite) == 0x000004, "Wrong size on KerfurOmega_C_Ignite");
static_assert(offsetof(KerfurOmega_C_Ignite, Fuel) == 0x000000, "Member 'KerfurOmega_C_Ignite::Fuel' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.reachedByExplosion
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_ReachedByExplosion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ReachedByExplosion) == 0x000004, "Wrong alignment on KerfurOmega_C_ReachedByExplosion");
static_assert(sizeof(KerfurOmega_C_ReachedByExplosion) == 0x000010, "Wrong size on KerfurOmega_C_ReachedByExplosion");
static_assert(offsetof(KerfurOmega_C_ReachedByExplosion, Location) == 0x000000, "Member 'KerfurOmega_C_ReachedByExplosion::Location' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ReachedByExplosion, Damage) == 0x00000C, "Member 'KerfurOmega_C_ReachedByExplosion::Damage' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.addDamage
// 0x00A8 (0x00A8 - 0x0000)
struct KerfurOmega_C_AddDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x000C(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Impact;                                            // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipSetting;                                       // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_AddDamage) == 0x000008, "Wrong alignment on KerfurOmega_C_AddDamage");
static_assert(sizeof(KerfurOmega_C_AddDamage) == 0x0000A8, "Wrong size on KerfurOmega_C_AddDamage");
static_assert(offsetof(KerfurOmega_C_AddDamage, Actor) == 0x000000, "Member 'KerfurOmega_C_AddDamage::Actor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AddDamage, Damage) == 0x000008, "Member 'KerfurOmega_C_AddDamage::Damage' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AddDamage, Hit) == 0x00000C, "Member 'KerfurOmega_C_AddDamage::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AddDamage, Impact) == 0x000094, "Member 'KerfurOmega_C_AddDamage::Impact' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AddDamage, SkipSetting) == 0x0000A0, "Member 'KerfurOmega_C_AddDamage::SkipSetting' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.settingsApplied
// 0x00F0 (0x00F0 - 0x0000)
struct KerfurOmega_C_SettingsApplied final
{
public:
	struct FStruct_settings                       Settings;                                          // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_SettingsApplied) == 0x000008, "Wrong alignment on KerfurOmega_C_SettingsApplied");
static_assert(sizeof(KerfurOmega_C_SettingsApplied) == 0x0000F0, "Wrong size on KerfurOmega_C_SettingsApplied");
static_assert(offsetof(KerfurOmega_C_SettingsApplied, Settings) == 0x000000, "Member 'KerfurOmega_C_SettingsApplied::Settings' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.stepped
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_Stepped final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Stepped) == 0x000004, "Wrong alignment on KerfurOmega_C_Stepped");
static_assert(sizeof(KerfurOmega_C_Stepped) == 0x000004, "Wrong size on KerfurOmega_C_Stepped");
static_assert(offsetof(KerfurOmega_C_Stepped, Volume) == 0x000000, "Member 'KerfurOmega_C_Stepped::Volume' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.Dest
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_Dest final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Dest) == 0x000008, "Wrong alignment on KerfurOmega_C_Dest");
static_assert(sizeof(KerfurOmega_C_Dest) == 0x000008, "Wrong size on KerfurOmega_C_Dest");
static_assert(offsetof(KerfurOmega_C_Dest, DestroyedActor) == 0x000000, "Member 'KerfurOmega_C_Dest::DestroyedActor' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.grabAnimation
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_GrabAnimation final
{
public:
	bool                                          Param_Forward;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_GrabAnimation) == 0x000001, "Wrong alignment on KerfurOmega_C_GrabAnimation");
static_assert(sizeof(KerfurOmega_C_GrabAnimation) == 0x000001, "Wrong size on KerfurOmega_C_GrabAnimation");
static_assert(offsetof(KerfurOmega_C_GrabAnimation, Param_Forward) == 0x000000, "Member 'KerfurOmega_C_GrabAnimation::Param_Forward' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ReceiveTick) == 0x000004, "Wrong alignment on KerfurOmega_C_ReceiveTick");
static_assert(sizeof(KerfurOmega_C_ReceiveTick) == 0x000004, "Wrong size on KerfurOmega_C_ReceiveTick");
static_assert(offsetof(KerfurOmega_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'KerfurOmega_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.ActionName
// 0x00A0 (0x00A0 - 0x0000)
struct KerfurOmega_C_ActionName final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 Param_Name;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ActionName) == 0x000008, "Wrong alignment on KerfurOmega_C_ActionName");
static_assert(sizeof(KerfurOmega_C_ActionName) == 0x0000A0, "Wrong size on KerfurOmega_C_ActionName");
static_assert(offsetof(KerfurOmega_C_ActionName, Player) == 0x000000, "Member 'KerfurOmega_C_ActionName::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ActionName, Hit) == 0x000008, "Member 'KerfurOmega_C_ActionName::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ActionName, Param_Name) == 0x000090, "Member 'KerfurOmega_C_ActionName::Param_Name' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.move
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_Move final
{
public:
	bool                                          MoveServ;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_Move) == 0x000001, "Wrong alignment on KerfurOmega_C_Move");
static_assert(sizeof(KerfurOmega_C_Move) == 0x000001, "Wrong size on KerfurOmega_C_Move");
static_assert(offsetof(KerfurOmega_C_Move, MoveServ) == 0x000000, "Member 'KerfurOmega_C_Move::MoveServ' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerR) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerR");
static_assert(sizeof(KerfurOmega_C_PlayerR) == 0x000008, "Wrong size on KerfurOmega_C_PlayerR");
static_assert(offsetof(KerfurOmega_C_PlayerR, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerR::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHold) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHold");
static_assert(sizeof(KerfurOmega_C_PlayerHold) == 0x000008, "Wrong size on KerfurOmega_C_PlayerHold");
static_assert(offsetof(KerfurOmega_C_PlayerHold, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHold::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerUnequip) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerUnequip");
static_assert(sizeof(KerfurOmega_C_PlayerUnequip) == 0x000008, "Wrong size on KerfurOmega_C_PlayerUnequip");
static_assert(offsetof(KerfurOmega_C_PlayerUnequip, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerUnequip::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct KerfurOmega_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_DamageByPlayer) == 0x000008, "Wrong alignment on KerfurOmega_C_DamageByPlayer");
static_assert(sizeof(KerfurOmega_C_DamageByPlayer) == 0x000098, "Wrong size on KerfurOmega_C_DamageByPlayer");
static_assert(offsetof(KerfurOmega_C_DamageByPlayer, Player) == 0x000000, "Member 'KerfurOmega_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DamageByPlayer, Hit) == 0x000008, "Member 'KerfurOmega_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DamageByPlayer, Damage) == 0x000090, "Member 'KerfurOmega_C_DamageByPlayer::Damage' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Thrown) == 0x000008, "Wrong alignment on KerfurOmega_C_Thrown");
static_assert(sizeof(KerfurOmega_C_Thrown) == 0x000008, "Wrong size on KerfurOmega_C_Thrown");
static_assert(offsetof(KerfurOmega_C_Thrown, Player) == 0x000000, "Member 'KerfurOmega_C_Thrown::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_SendName) == 0x000004, "Wrong alignment on KerfurOmega_C_SendName");
static_assert(sizeof(KerfurOmega_C_SendName) == 0x000008, "Wrong size on KerfurOmega_C_SendName");
static_assert(offsetof(KerfurOmega_C_SendName, Param_Name) == 0x000000, "Member 'KerfurOmega_C_SendName::Param_Name' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_Kicked) == 0x000001, "Wrong alignment on KerfurOmega_C_Kicked");
static_assert(sizeof(KerfurOmega_C_Kicked) == 0x000001, "Wrong size on KerfurOmega_C_Kicked");
static_assert(offsetof(KerfurOmega_C_Kicked, Kick) == 0x000000, "Member 'KerfurOmega_C_Kicked::Kick' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct KerfurOmega_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(KerfurOmega_C_Player_use) == 0x000008, "Wrong alignment on KerfurOmega_C_Player_use");
static_assert(sizeof(KerfurOmega_C_Player_use) == 0x000090, "Wrong size on KerfurOmega_C_Player_use");
static_assert(offsetof(KerfurOmega_C_Player_use, Player) == 0x000000, "Member 'KerfurOmega_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_Player_use, Hit) == 0x000008, "Member 'KerfurOmega_C_Player_use::Hit' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.hookTension
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_HookTension final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_HookTension) == 0x000008, "Wrong alignment on KerfurOmega_C_HookTension");
static_assert(sizeof(KerfurOmega_C_HookTension) == 0x000008, "Wrong size on KerfurOmega_C_HookTension");
static_assert(offsetof(KerfurOmega_C_HookTension, Hook) == 0x000000, "Member 'KerfurOmega_C_HookTension::Hook' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.cleanSponge
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_CleanSponge final
{
public:
	float                                         Clean;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_CleanSponge) == 0x000008, "Wrong alignment on KerfurOmega_C_CleanSponge");
static_assert(sizeof(KerfurOmega_C_CleanSponge) == 0x000010, "Wrong size on KerfurOmega_C_CleanSponge");
static_assert(offsetof(KerfurOmega_C_CleanSponge, Clean) == 0x000000, "Member 'KerfurOmega_C_CleanSponge::Clean' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_CleanSponge, Player) == 0x000008, "Member 'KerfurOmega_C_CleanSponge::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.hooked
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_Hooked final
{
public:
	class AHook_C*                                Hook;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Hooked) == 0x000008, "Wrong alignment on KerfurOmega_C_Hooked");
static_assert(sizeof(KerfurOmega_C_Hooked) == 0x000008, "Wrong size on KerfurOmega_C_Hooked");
static_assert(offsetof(KerfurOmega_C_Hooked, Hook) == 0x000000, "Member 'KerfurOmega_C_Hooked::Hook' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerUsedOn
// 0x0090 (0x0090 - 0x0000)
struct KerfurOmega_C_PlayerUsedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(KerfurOmega_C_PlayerUsedOn) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerUsedOn");
static_assert(sizeof(KerfurOmega_C_PlayerUsedOn) == 0x000090, "Wrong size on KerfurOmega_C_PlayerUsedOn");
static_assert(offsetof(KerfurOmega_C_PlayerUsedOn, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerUsedOn::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_PlayerUsedOn, Hit) == 0x000008, "Member 'KerfurOmega_C_PlayerUsedOn::Hit' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.slice
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_Slice final
{
public:
	bool                                          Clean;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_Slice) == 0x000001, "Wrong alignment on KerfurOmega_C_Slice");
static_assert(sizeof(KerfurOmega_C_Slice) == 0x000001, "Wrong size on KerfurOmega_C_Slice");
static_assert(offsetof(KerfurOmega_C_Slice, Clean) == 0x000000, "Member 'KerfurOmega_C_Slice::Clean' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerLookAway
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerLookAway final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerLookAway) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerLookAway");
static_assert(sizeof(KerfurOmega_C_PlayerLookAway) == 0x000008, "Wrong size on KerfurOmega_C_PlayerLookAway");
static_assert(offsetof(KerfurOmega_C_PlayerLookAway, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerLookAway::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.accumulateTemperature
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_AccumulateTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_AccumulateTemperature) == 0x000004, "Wrong alignment on KerfurOmega_C_AccumulateTemperature");
static_assert(sizeof(KerfurOmega_C_AccumulateTemperature) == 0x000008, "Wrong size on KerfurOmega_C_AccumulateTemperature");
static_assert(offsetof(KerfurOmega_C_AccumulateTemperature, Temperature) == 0x000000, "Member 'KerfurOmega_C_AccumulateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AccumulateTemperature, Speed) == 0x000004, "Member 'KerfurOmega_C_AccumulateTemperature::Speed' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.addTemperature
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_AddTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_AddTemperature) == 0x000004, "Wrong alignment on KerfurOmega_C_AddTemperature");
static_assert(sizeof(KerfurOmega_C_AddTemperature) == 0x000004, "Wrong size on KerfurOmega_C_AddTemperature");
static_assert(offsetof(KerfurOmega_C_AddTemperature, Temperature) == 0x000000, "Member 'KerfurOmega_C_AddTemperature::Temperature' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandAnyKey
// 0x0028 (0x0028 - 0x0000)
struct KerfurOmega_C_PlayerHandAnyKey final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_PlayerHandAnyKey) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandAnyKey");
static_assert(sizeof(KerfurOmega_C_PlayerHandAnyKey) == 0x000028, "Wrong size on KerfurOmega_C_PlayerHandAnyKey");
static_assert(offsetof(KerfurOmega_C_PlayerHandAnyKey, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandAnyKey::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_PlayerHandAnyKey, Key) == 0x000008, "Member 'KerfurOmega_C_PlayerHandAnyKey::Key' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_PlayerHandAnyKey, Pressed) == 0x000020, "Member 'KerfurOmega_C_PlayerHandAnyKey::Pressed' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandMouse
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_PlayerHandMouse final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Mouse;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandMouse) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandMouse");
static_assert(sizeof(KerfurOmega_C_PlayerHandMouse) == 0x000010, "Wrong size on KerfurOmega_C_PlayerHandMouse");
static_assert(offsetof(KerfurOmega_C_PlayerHandMouse, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandMouse::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_PlayerHandMouse, Mouse) == 0x000008, "Member 'KerfurOmega_C_PlayerHandMouse::Mouse' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandMouseWheel
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_PlayerHandMouseWheel final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelDelta;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandMouseWheel) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandMouseWheel");
static_assert(sizeof(KerfurOmega_C_PlayerHandMouseWheel) == 0x000010, "Wrong size on KerfurOmega_C_PlayerHandMouseWheel");
static_assert(offsetof(KerfurOmega_C_PlayerHandMouseWheel, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandMouseWheel::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_PlayerHandMouseWheel, WheelDelta) == 0x000008, "Member 'KerfurOmega_C_PlayerHandMouseWheel::WheelDelta' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandRelease_LMB
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerHandRelease_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandRelease_LMB) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandRelease_LMB");
static_assert(sizeof(KerfurOmega_C_PlayerHandRelease_LMB) == 0x000008, "Wrong size on KerfurOmega_C_PlayerHandRelease_LMB");
static_assert(offsetof(KerfurOmega_C_PlayerHandRelease_LMB, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandRelease_LMB::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandRelease_RMB");
static_assert(sizeof(KerfurOmega_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on KerfurOmega_C_PlayerHandRelease_RMB");
static_assert(offsetof(KerfurOmega_C_PlayerHandRelease_RMB, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandRelease_RMB::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.exploded
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_Exploded final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_Exploded) == 0x000004, "Wrong alignment on KerfurOmega_C_Exploded");
static_assert(sizeof(KerfurOmega_C_Exploded) == 0x000010, "Wrong size on KerfurOmega_C_Exploded");
static_assert(offsetof(KerfurOmega_C_Exploded, Damage) == 0x000000, "Member 'KerfurOmega_C_Exploded::Damage' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_Exploded, Location) == 0x000004, "Member 'KerfurOmega_C_Exploded::Location' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandUse_LMB
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerHandUse_LMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandUse_LMB) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandUse_LMB");
static_assert(sizeof(KerfurOmega_C_PlayerHandUse_LMB) == 0x000008, "Wrong size on KerfurOmega_C_PlayerHandUse_LMB");
static_assert(offsetof(KerfurOmega_C_PlayerHandUse_LMB, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandUse_LMB::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on KerfurOmega_C_PlayerHandUse_RMB");
static_assert(sizeof(KerfurOmega_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on KerfurOmega_C_PlayerHandUse_RMB");
static_assert(offsetof(KerfurOmega_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'KerfurOmega_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct KerfurOmega_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ActionOptionIndex) == 0x000008, "Wrong alignment on KerfurOmega_C_ActionOptionIndex");
static_assert(sizeof(KerfurOmega_C_ActionOptionIndex) == 0x000098, "Wrong size on KerfurOmega_C_ActionOptionIndex");
static_assert(offsetof(KerfurOmega_C_ActionOptionIndex, Player) == 0x000000, "Member 'KerfurOmega_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ActionOptionIndex, Hit) == 0x000008, "Member 'KerfurOmega_C_ActionOptionIndex::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ActionOptionIndex, Action) == 0x000090, "Member 'KerfurOmega_C_ActionOptionIndex::Action' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.receivedPhyiscsDamage
// 0x008C (0x008C - 0x0000)
struct KerfurOmega_C_ReceivedPhyiscsDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hot;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(KerfurOmega_C_ReceivedPhyiscsDamage) == 0x000004, "Wrong alignment on KerfurOmega_C_ReceivedPhyiscsDamage");
static_assert(sizeof(KerfurOmega_C_ReceivedPhyiscsDamage) == 0x00008C, "Wrong size on KerfurOmega_C_ReceivedPhyiscsDamage");
static_assert(offsetof(KerfurOmega_C_ReceivedPhyiscsDamage, Damage) == 0x000000, "Member 'KerfurOmega_C_ReceivedPhyiscsDamage::Damage' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ReceivedPhyiscsDamage, Hot) == 0x000004, "Member 'KerfurOmega_C_ReceivedPhyiscsDamage::Hot' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.fireDamage
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_FireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_FireDamage) == 0x000004, "Wrong alignment on KerfurOmega_C_FireDamage");
static_assert(sizeof(KerfurOmega_C_FireDamage) == 0x000004, "Wrong size on KerfurOmega_C_FireDamage");
static_assert(offsetof(KerfurOmega_C_FireDamage, Damage) == 0x000000, "Member 'KerfurOmega_C_FireDamage::Damage' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.steppedOn
// 0x0090 (0x0090 - 0x0000)
struct KerfurOmega_C_SteppedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(KerfurOmega_C_SteppedOn) == 0x000008, "Wrong alignment on KerfurOmega_C_SteppedOn");
static_assert(sizeof(KerfurOmega_C_SteppedOn) == 0x000090, "Wrong size on KerfurOmega_C_SteppedOn");
static_assert(offsetof(KerfurOmega_C_SteppedOn, Player) == 0x000000, "Member 'KerfurOmega_C_SteppedOn::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SteppedOn, Hit) == 0x000008, "Member 'KerfurOmega_C_SteppedOn::Hit' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.setKey
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_SetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_SetKey) == 0x000008, "Wrong alignment on KerfurOmega_C_SetKey");
static_assert(sizeof(KerfurOmega_C_SetKey) == 0x000010, "Wrong size on KerfurOmega_C_SetKey");
static_assert(offsetof(KerfurOmega_C_SetKey, Key) == 0x000000, "Member 'KerfurOmega_C_SetKey::Key' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.setPropProps
// 0x0003 (0x0003 - 0x0000)
struct KerfurOmega_C_SetPropProps final
{
public:
	bool                                          Static;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Frozen;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SetPropProps) == 0x000001, "Wrong alignment on KerfurOmega_C_SetPropProps");
static_assert(sizeof(KerfurOmega_C_SetPropProps) == 0x000003, "Wrong size on KerfurOmega_C_SetPropProps");
static_assert(offsetof(KerfurOmega_C_SetPropProps, Static) == 0x000000, "Member 'KerfurOmega_C_SetPropProps::Static' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetPropProps, Frozen) == 0x000001, "Member 'KerfurOmega_C_SetPropProps::Frozen' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetPropProps, Active) == 0x000002, "Member 'KerfurOmega_C_SetPropProps::Active' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.virus
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_Virus final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_Virus) == 0x000001, "Wrong alignment on KerfurOmega_C_Virus");
static_assert(sizeof(KerfurOmega_C_Virus) == 0x000001, "Wrong size on KerfurOmega_C_Virus");
static_assert(offsetof(KerfurOmega_C_Virus, Activate) == 0x000000, "Member 'KerfurOmega_C_Virus::Activate' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.leaveWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_LeaveWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_LeaveWaterOrigin) == 0x000008, "Wrong alignment on KerfurOmega_C_LeaveWaterOrigin");
static_assert(sizeof(KerfurOmega_C_LeaveWaterOrigin) == 0x000008, "Wrong size on KerfurOmega_C_LeaveWaterOrigin");
static_assert(offsetof(KerfurOmega_C_LeaveWaterOrigin, Water) == 0x000000, "Member 'KerfurOmega_C_LeaveWaterOrigin::Water' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.enterWaterOrigin
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_EnterWaterOrigin final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_EnterWaterOrigin) == 0x000008, "Wrong alignment on KerfurOmega_C_EnterWaterOrigin");
static_assert(sizeof(KerfurOmega_C_EnterWaterOrigin) == 0x000008, "Wrong size on KerfurOmega_C_EnterWaterOrigin");
static_assert(offsetof(KerfurOmega_C_EnterWaterOrigin, Water) == 0x000000, "Member 'KerfurOmega_C_EnterWaterOrigin::Water' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.leaveWater
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_LeaveWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_LeaveWater) == 0x000008, "Wrong alignment on KerfurOmega_C_LeaveWater");
static_assert(sizeof(KerfurOmega_C_LeaveWater) == 0x000008, "Wrong size on KerfurOmega_C_LeaveWater");
static_assert(offsetof(KerfurOmega_C_LeaveWater, Water) == 0x000000, "Member 'KerfurOmega_C_LeaveWater::Water' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.enterWater
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_EnterWater final
{
public:
	class AWaterVolume_C*                         Water;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_EnterWater) == 0x000008, "Wrong alignment on KerfurOmega_C_EnterWater");
static_assert(sizeof(KerfurOmega_C_EnterWater) == 0x000008, "Wrong size on KerfurOmega_C_EnterWater");
static_assert(offsetof(KerfurOmega_C_EnterWater, Water) == 0x000000, "Member 'KerfurOmega_C_EnterWater::Water' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.ImpactDamage
// 0x00A8 (0x00A8 - 0x0000)
struct KerfurOmega_C_ImpactDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0004(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact;                                            // 0x0098(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ImpactDamage) == 0x000008, "Wrong alignment on KerfurOmega_C_ImpactDamage");
static_assert(sizeof(KerfurOmega_C_ImpactDamage) == 0x0000A8, "Wrong size on KerfurOmega_C_ImpactDamage");
static_assert(offsetof(KerfurOmega_C_ImpactDamage, Damage) == 0x000000, "Member 'KerfurOmega_C_ImpactDamage::Damage' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ImpactDamage, Hit) == 0x000004, "Member 'KerfurOmega_C_ImpactDamage::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ImpactDamage, Actor) == 0x000090, "Member 'KerfurOmega_C_ImpactDamage::Actor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ImpactDamage, Impact) == 0x000098, "Member 'KerfurOmega_C_ImpactDamage::Impact' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.setIgnoreSave
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_SetIgnoreSave final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SetIgnoreSave) == 0x000001, "Wrong alignment on KerfurOmega_C_SetIgnoreSave");
static_assert(sizeof(KerfurOmega_C_SetIgnoreSave) == 0x000001, "Wrong size on KerfurOmega_C_SetIgnoreSave");
static_assert(offsetof(KerfurOmega_C_SetIgnoreSave, Ignore) == 0x000000, "Member 'KerfurOmega_C_SetIgnoreSave::Ignore' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.texturePickerApply
// 0x0018 (0x0018 - 0x0000)
struct KerfurOmega_C_TexturePickerApply final
{
public:
	class UUmg_texturePicker_C*                   Picker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_TexturePickerApply) == 0x000008, "Wrong alignment on KerfurOmega_C_TexturePickerApply");
static_assert(sizeof(KerfurOmega_C_TexturePickerApply) == 0x000018, "Wrong size on KerfurOmega_C_TexturePickerApply");
static_assert(offsetof(KerfurOmega_C_TexturePickerApply, Picker) == 0x000000, "Member 'KerfurOmega_C_TexturePickerApply::Picker' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TexturePickerApply, Texture) == 0x000008, "Member 'KerfurOmega_C_TexturePickerApply::Texture' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TexturePickerApply, Param_Index) == 0x000010, "Member 'KerfurOmega_C_TexturePickerApply::Param_Index' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.applyColor
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_ApplyColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_ApplyColor) == 0x000004, "Wrong alignment on KerfurOmega_C_ApplyColor");
static_assert(sizeof(KerfurOmega_C_ApplyColor) == 0x000010, "Wrong size on KerfurOmega_C_ApplyColor");
static_assert(offsetof(KerfurOmega_C_ApplyColor, Color) == 0x000000, "Member 'KerfurOmega_C_ApplyColor::Color' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.AnyKey
// 0x0020 (0x0020 - 0x0000)
struct KerfurOmega_C_AnyKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_AnyKey) == 0x000008, "Wrong alignment on KerfurOmega_C_AnyKey");
static_assert(sizeof(KerfurOmega_C_AnyKey) == 0x000020, "Wrong size on KerfurOmega_C_AnyKey");
static_assert(offsetof(KerfurOmega_C_AnyKey, Key) == 0x000000, "Member 'KerfurOmega_C_AnyKey::Key' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AnyKey, Pressed) == 0x000018, "Member 'KerfurOmega_C_AnyKey::Pressed' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.stuffUpgraded
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_StuffUpgraded final
{
public:
	class AMainGamemode_C*                        GameMode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_StuffUpgraded) == 0x000008, "Wrong alignment on KerfurOmega_C_StuffUpgraded");
static_assert(sizeof(KerfurOmega_C_StuffUpgraded) == 0x000008, "Wrong size on KerfurOmega_C_StuffUpgraded");
static_assert(offsetof(KerfurOmega_C_StuffUpgraded, GameMode) == 0x000000, "Member 'KerfurOmega_C_StuffUpgraded::GameMode' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709");
static_assert(sizeof(KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709");
static_assert(offsetof(KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_89CA73914C05883F3C2B2BBD3C9C7709::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_89CA73914C05883F3C2B2BBD3C9C7709
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709");
static_assert(sizeof(KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709");
static_assert(offsetof(KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_89CA73914C05883F3C2B2BBD3C9C7709::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(sizeof(KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(offsetof(KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_E6FBFE3B4BFD80CBCAB060AEEECBDEA7::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_E6FBFE3B4BFD80CBCAB060AEEECBDEA7::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_E6FBFE3B4BFD80CBCAB060AEEECBDEA7::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_E6FBFE3B4BFD80CBCAB060AEEECBDEA7::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_17473DEB48DAA32D70BE17B5656A7634
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634");
static_assert(sizeof(KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634");
static_assert(offsetof(KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_17473DEB48DAA32D70BE17B5656A7634::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_17473DEB48DAA32D70BE17B5656A7634
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_17473DEB48DAA32D70BE17B5656A7634::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_17473DEB48DAA32D70BE17B5656A7634
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_17473DEB48DAA32D70BE17B5656A7634::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_17473DEB48DAA32D70BE17B5656A7634::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_17473DEB48DAA32D70BE17B5656A7634::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(sizeof(KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(offsetof(KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_7AC3DD824D2A2EBB4E59308080CEAB45::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_7AC3DD824D2A2EBB4E59308080CEAB45::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_7AC3DD824D2A2EBB4E59308080CEAB45::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_7AC3DD824D2A2EBB4E59308080CEAB45::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_7AC3DD824D2A2EBB4E59308080CEAB45::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_1134998B41FB3643E256DC92AFB0D107
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107");
static_assert(sizeof(KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107");
static_assert(offsetof(KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_1134998B41FB3643E256DC92AFB0D107::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_1134998B41FB3643E256DC92AFB0D107
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_1134998B41FB3643E256DC92AFB0D107::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_1134998B41FB3643E256DC92AFB0D107
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_1134998B41FB3643E256DC92AFB0D107::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_1134998B41FB3643E256DC92AFB0D107::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_1134998B41FB3643E256DC92AFB0D107::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_E233AD08424FBDA61025C2915B5291B0
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0");
static_assert(sizeof(KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0");
static_assert(offsetof(KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_E233AD08424FBDA61025C2915B5291B0::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_E233AD08424FBDA61025C2915B5291B0
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_E233AD08424FBDA61025C2915B5291B0::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_E233AD08424FBDA61025C2915B5291B0
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_E233AD08424FBDA61025C2915B5291B0::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_E233AD08424FBDA61025C2915B5291B0::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_E233AD08424FBDA61025C2915B5291B0::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(sizeof(KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(offsetof(KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_66CE33D54AFADA773A1C96B1EFEE3284::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_66CE33D54AFADA773A1C96B1EFEE3284::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_66CE33D54AFADA773A1C96B1EFEE3284::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_66CE33D54AFADA773A1C96B1EFEE3284::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_66CE33D54AFADA773A1C96B1EFEE3284::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnCompleted_3D86A0044F104E17C55A31AAC842E015
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015) == 0x000004, "Wrong alignment on KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015");
static_assert(sizeof(KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015) == 0x000008, "Wrong size on KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015");
static_assert(offsetof(KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnCompleted_3D86A0044F104E17C55A31AAC842E015::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnBlendOut_3D86A0044F104E17C55A31AAC842E015
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015) == 0x000004, "Wrong alignment on KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015");
static_assert(sizeof(KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015) == 0x000008, "Wrong size on KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015");
static_assert(offsetof(KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnBlendOut_3D86A0044F104E17C55A31AAC842E015::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnInterrupted_3D86A0044F104E17C55A31AAC842E015
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015) == 0x000004, "Wrong alignment on KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015");
static_assert(sizeof(KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015) == 0x000008, "Wrong size on KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015");
static_assert(offsetof(KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnInterrupted_3D86A0044F104E17C55A31AAC842E015::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015");
static_assert(sizeof(KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015");
static_assert(offsetof(KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyBegin_3D86A0044F104E17C55A31AAC842E015::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015) == 0x000004, "Wrong alignment on KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015");
static_assert(sizeof(KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015) == 0x000008, "Wrong size on KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015");
static_assert(offsetof(KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015, NotifyName) == 0x000000, "Member 'KerfurOmega_C_OnNotifyEnd_3D86A0044F104E17C55A31AAC842E015::NotifyName' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_83759E564F481AAD0CE65E8926B6DC6B
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B");
static_assert(sizeof(KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B");
static_assert(offsetof(KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_83759E564F481AAD0CE65E8926B6DC6B::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_83759E564F481AAD0CE65E8926B6DC6B
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B");
static_assert(sizeof(KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B");
static_assert(offsetof(KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_83759E564F481AAD0CE65E8926B6DC6B::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538");
static_assert(sizeof(KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538");
static_assert(offsetof(KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_CDC4B4DC4BDCC9D6C5ED25B54C4FD538::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538");
static_assert(sizeof(KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538");
static_assert(offsetof(KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_CDC4B4DC4BDCC9D6C5ED25B54C4FD538::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_1BE7AE2F442743531837EBB77812D378
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378");
static_assert(sizeof(KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378");
static_assert(offsetof(KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_1BE7AE2F442743531837EBB77812D378::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_1BE7AE2F442743531837EBB77812D378
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378");
static_assert(sizeof(KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378");
static_assert(offsetof(KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_1BE7AE2F442743531837EBB77812D378::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E");
static_assert(sizeof(KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E");
static_assert(offsetof(KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_686DF02E4BB14E60B0B85BA2BB8C432E::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_686DF02E4BB14E60B0B85BA2BB8C432E
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E");
static_assert(sizeof(KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E");
static_assert(offsetof(KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_686DF02E4BB14E60B0B85BA2BB8C432E::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnSuccess_EA024D7E432D1840180F16BF6FBD1280
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280) == 0x000001, "Wrong alignment on KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280");
static_assert(sizeof(KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280) == 0x000001, "Wrong size on KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280");
static_assert(offsetof(KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnSuccess_EA024D7E432D1840180F16BF6FBD1280::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.OnFail_EA024D7E432D1840180F16BF6FBD1280
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280) == 0x000001, "Wrong alignment on KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280");
static_assert(sizeof(KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280) == 0x000001, "Wrong size on KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280");
static_assert(offsetof(KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280, MovementResult) == 0x000000, "Member 'KerfurOmega_C_OnFail_EA024D7E432D1840180F16BF6FBD1280::MovementResult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.findBrokenServer
// 0x0100 (0x0100 - 0x0000)
struct KerfurOmega_C_FindBrokenServer final
{
public:
	class AServerBox_C*                           Srv1;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AServerBox_C*                           Srv;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Dists;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AServerBox_C*>                   Servs;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AServerBox_C*                     Temp_object_Variable;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AServerBox_C*                     Temp_object_Variable_1;                            // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AServerBox_C*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AServerBox_C*                           CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AServerBox_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AServerBox_C*                           CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APanel_SATconsole_C*>            CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APanel_SATconsole_C*                    CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_FindBrokenServer) == 0x000008, "Wrong alignment on KerfurOmega_C_FindBrokenServer");
static_assert(sizeof(KerfurOmega_C_FindBrokenServer) == 0x000100, "Wrong size on KerfurOmega_C_FindBrokenServer");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Srv1) == 0x000000, "Member 'KerfurOmega_C_FindBrokenServer::Srv1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Srv) == 0x000008, "Member 'KerfurOmega_C_FindBrokenServer::Srv' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Dists) == 0x000010, "Member 'KerfurOmega_C_FindBrokenServer::Dists' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Servs) == 0x000020, "Member 'KerfurOmega_C_FindBrokenServer::Servs' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Array_Index_Variable) == 0x000030, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_object_Variable) == 0x000040, "Member 'KerfurOmega_C_FindBrokenServer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_object_Variable_1) == 0x000048, "Member 'KerfurOmega_C_FindBrokenServer::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Array_Index_Variable_2) == 0x00005C, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000060, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_MinOfFloatArray_MinValue) == 0x000064, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Get_Item) == 0x000068, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000071, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000072, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Contains_ReturnValue) == 0x000084, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000086, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000088, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000090, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Contains_ReturnValue_1) == 0x000098, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Contains_ReturnValue_2) == 0x000099, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'KerfurOmega_C_FindBrokenServer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_GetDistanceTo_ReturnValue) == 0x0000A4, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000D8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F8, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_IsValid_ReturnValue_1) == 0x0000F9, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_IsValid_ReturnValue_2) == 0x0000FA, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindBrokenServer, CallFunc_Array_Add_ReturnValue_2) == 0x0000FC, "Member 'KerfurOmega_C_FindBrokenServer::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.findTask
// 0x00B0 (0x00B0 - 0x0000)
struct KerfurOmega_C_FindTask final
{
public:
	class ADish_C*                                Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Hash;                                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Dish;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADish_C*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_FindTask) == 0x000008, "Wrong alignment on KerfurOmega_C_FindTask");
static_assert(sizeof(KerfurOmega_C_FindTask) == 0x0000B0, "Wrong size on KerfurOmega_C_FindTask");
static_assert(offsetof(KerfurOmega_C_FindTask, Output) == 0x000000, "Member 'KerfurOmega_C_FindTask::Output' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, Hash) == 0x000008, "Member 'KerfurOmega_C_FindTask::Hash' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, Dish) == 0x000018, "Member 'KerfurOmega_C_FindTask::Dish' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, Temp_int_Array_Index_Variable) == 0x000028, "Member 'KerfurOmega_C_FindTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'KerfurOmega_C_FindTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_FindTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000038, "Member 'KerfurOmega_C_FindTask::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Get_Item) == 0x000040, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'KerfurOmega_C_FindTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Find_ReturnValue) == 0x000064, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'KerfurOmega_C_FindTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_FindSubstring_ReturnValue) == 0x000080, "Member 'KerfurOmega_C_FindTask::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Contains_ReturnValue) == 0x000084, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'KerfurOmega_C_FindTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008C, "Member 'KerfurOmega_C_FindTask::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_RightChop_ReturnValue) == 0x000090, "Member 'KerfurOmega_C_FindTask::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A0, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'KerfurOmega_C_FindTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'KerfurOmega_C_FindTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTask, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'KerfurOmega_C_FindTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.findTransformer
// 0x0038 (0x0038 - 0x0000)
struct KerfurOmega_C_FindTransformer final
{
public:
	class AGenerator_C*                           Array_Element;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGenerator_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class AGenerator_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_FindTransformer) == 0x000008, "Wrong alignment on KerfurOmega_C_FindTransformer");
static_assert(sizeof(KerfurOmega_C_FindTransformer) == 0x000038, "Wrong size on KerfurOmega_C_FindTransformer");
static_assert(offsetof(KerfurOmega_C_FindTransformer, Array_Element) == 0x000000, "Member 'KerfurOmega_C_FindTransformer::Array_Element' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'KerfurOmega_C_FindTransformer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'KerfurOmega_C_FindTransformer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, CallFunc_Array_Get_Item) == 0x000020, "Member 'KerfurOmega_C_FindTransformer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'KerfurOmega_C_FindTransformer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'KerfurOmega_C_FindTransformer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_FindTransformer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_FindTransformer, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'KerfurOmega_C_FindTransformer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.TargetLocation
// 0x0068 (0x0068 - 0x0000)
struct KerfurOmega_C_TargetLocation final
{
public:
	struct FVector                                OutputPin;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_TargetLocation) == 0x000008, "Wrong alignment on KerfurOmega_C_TargetLocation");
static_assert(sizeof(KerfurOmega_C_TargetLocation) == 0x000068, "Wrong size on KerfurOmega_C_TargetLocation");
static_assert(offsetof(KerfurOmega_C_TargetLocation, OutputPin) == 0x000000, "Member 'KerfurOmega_C_TargetLocation::OutputPin' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'KerfurOmega_C_TargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'KerfurOmega_C_TargetLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_VSize_ReturnValue) == 0x000024, "Member 'KerfurOmega_C_TargetLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'KerfurOmega_C_TargetLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_Conv_FloatToString_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_TargetLocation::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'KerfurOmega_C_TargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'KerfurOmega_C_TargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'KerfurOmega_C_TargetLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TargetLocation, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'KerfurOmega_C_TargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.RC
// 0x00C0 (0x00C0 - 0x0000)
struct KerfurOmega_C_RC final
{
public:
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_RC) == 0x000010, "Wrong alignment on KerfurOmega_C_RC");
static_assert(sizeof(KerfurOmega_C_RC) == 0x0000C0, "Wrong size on KerfurOmega_C_RC");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000000, "Member 'KerfurOmega_C_RC::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_GetActorForwardVector_ReturnValue) == 0x000004, "Member 'KerfurOmega_C_RC::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_VSize_ReturnValue) == 0x000010, "Member 'KerfurOmega_C_RC::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'KerfurOmega_C_RC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000018, "Member 'KerfurOmega_C_RC::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000024, "Member 'KerfurOmega_C_RC::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_VSize_ReturnValue_1) == 0x000028, "Member 'KerfurOmega_C_RC::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'KerfurOmega_C_RC::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'KerfurOmega_C_RC::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'KerfurOmega_C_RC::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'KerfurOmega_C_RC::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'KerfurOmega_C_RC::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'KerfurOmega_C_RC::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_TransformDirection_ReturnValue) == 0x00007C, "Member 'KerfurOmega_C_RC::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Dot_VectorVector_ReturnValue) == 0x000088, "Member 'KerfurOmega_C_RC::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_DegAcos_ReturnValue) == 0x00008C, "Member 'KerfurOmega_C_RC::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'KerfurOmega_C_RC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'KerfurOmega_C_RC::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Conv_FloatToString_ReturnValue) == 0x000098, "Member 'KerfurOmega_C_RC::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'KerfurOmega_C_RC::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000AC, "Member 'KerfurOmega_C_RC::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'KerfurOmega_C_RC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_RC, CallFunc_MakeRotator_ReturnValue) == 0x0000B4, "Member 'KerfurOmega_C_RC::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.SetStyle
// 0x0030 (0x0030 - 0x0000)
struct KerfurOmega_C_SetStyle final
{
public:
	bool                                          Contrcut;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_SetStyle) == 0x000008, "Wrong alignment on KerfurOmega_C_SetStyle");
static_assert(sizeof(KerfurOmega_C_SetStyle) == 0x000030, "Wrong size on KerfurOmega_C_SetStyle");
static_assert(offsetof(KerfurOmega_C_SetStyle, Contrcut) == 0x000000, "Member 'KerfurOmega_C_SetStyle::Contrcut' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, Temp_object_Variable) == 0x000008, "Member 'KerfurOmega_C_SetStyle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, Temp_object_Variable_1) == 0x000010, "Member 'KerfurOmega_C_SetStyle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'KerfurOmega_C_SetStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, Temp_bool_Variable) == 0x000019, "Member 'KerfurOmega_C_SetStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, K2Node_Select_Default) == 0x000020, "Member 'KerfurOmega_C_SetStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetStyle, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'KerfurOmega_C_SetStyle::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.dropKerfurProp
// 0x0050 (0x0050 - 0x0000)
struct KerfurOmega_C_DropKerfurProp final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_kerfurOmega_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_kerfurOmega_C*                    K2Node_DynamicCast_AsProp_Kerfur_Omega;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_DropKerfurProp) == 0x000010, "Wrong alignment on KerfurOmega_C_DropKerfurProp");
static_assert(sizeof(KerfurOmega_C_DropKerfurProp) == 0x000050, "Wrong size on KerfurOmega_C_DropKerfurProp");
static_assert(offsetof(KerfurOmega_C_DropKerfurProp, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'KerfurOmega_C_DropKerfurProp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DropKerfurProp, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_DropKerfurProp::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DropKerfurProp, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'KerfurOmega_C_DropKerfurProp::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DropKerfurProp, K2Node_DynamicCast_AsProp_Kerfur_Omega) == 0x000040, "Member 'KerfurOmega_C_DropKerfurProp::K2Node_DynamicCast_AsProp_Kerfur_Omega' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DropKerfurProp, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'KerfurOmega_C_DropKerfurProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.makeFace
// 0x0040 (0x0040 - 0x0000)
struct KerfurOmega_C_MakeFace final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AKerfusFace_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_MakeFace) == 0x000010, "Wrong alignment on KerfurOmega_C_MakeFace");
static_assert(sizeof(KerfurOmega_C_MakeFace) == 0x000040, "Wrong size on KerfurOmega_C_MakeFace");
static_assert(offsetof(KerfurOmega_C_MakeFace, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'KerfurOmega_C_MakeFace::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_MakeFace, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_MakeFace::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_MakeFace, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'KerfurOmega_C_MakeFace::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.updateDrip
// 0x00B0 (0x00B0 - 0x0000)
struct KerfurOmega_C_UpdateDrip final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_kerfurDrip                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_UpdateDrip) == 0x000010, "Wrong alignment on KerfurOmega_C_UpdateDrip");
static_assert(sizeof(KerfurOmega_C_UpdateDrip) == 0x0000B0, "Wrong size on KerfurOmega_C_UpdateDrip");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, Temp_int_Variable) == 0x000000, "Member 'KerfurOmega_C_UpdateDrip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, Temp_struct_Variable) == 0x000010, "Member 'KerfurOmega_C_UpdateDrip::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, Temp_int_Array_Index_Variable) == 0x000050, "Member 'KerfurOmega_C_UpdateDrip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'KerfurOmega_C_UpdateDrip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Get_Item) == 0x000060, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_SetStaticMesh_ReturnValue) == 0x0000A1, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, K2Node_SwitchEnum_CmpSuccess) == 0x0000A2, "Member 'KerfurOmega_C_UpdateDrip::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_UpdateDrip, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000A8, "Member 'KerfurOmega_C_UpdateDrip::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.tryToOccupyCar
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_TryToOccupyCar final
{
public:
	class ACar1_C*                                Car;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_TryToOccupyCar) == 0x000008, "Wrong alignment on KerfurOmega_C_TryToOccupyCar");
static_assert(sizeof(KerfurOmega_C_TryToOccupyCar) == 0x000010, "Wrong size on KerfurOmega_C_TryToOccupyCar");
static_assert(offsetof(KerfurOmega_C_TryToOccupyCar, Car) == 0x000000, "Member 'KerfurOmega_C_TryToOccupyCar::Car' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_TryToOccupyCar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'KerfurOmega_C_TryToOccupyCar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.failCar
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_FailCar final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_FailCar) == 0x000001, "Wrong alignment on KerfurOmega_C_FailCar");
static_assert(sizeof(KerfurOmega_C_FailCar) == 0x000001, "Wrong size on KerfurOmega_C_FailCar");
static_assert(offsetof(KerfurOmega_C_FailCar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'KerfurOmega_C_FailCar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.sitOnCar
// 0x0190 (0x0190 - 0x0000)
struct KerfurOmega_C_SitOnCar final
{
public:
	class ACar1_C*                                Param_OccupyCar;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AKerfurOmega_C*                         CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SitOnCar) == 0x000010, "Wrong alignment on KerfurOmega_C_SitOnCar");
static_assert(sizeof(KerfurOmega_C_SitOnCar) == 0x000190, "Wrong size on KerfurOmega_C_SitOnCar");
static_assert(offsetof(KerfurOmega_C_SitOnCar, Param_OccupyCar) == 0x000000, "Member 'KerfurOmega_C_SitOnCar::Param_OccupyCar' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, Temp_int_Variable) == 0x000008, "Member 'KerfurOmega_C_SitOnCar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'KerfurOmega_C_SitOnCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'KerfurOmega_C_SitOnCar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000014, "Member 'KerfurOmega_C_SitOnCar::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'KerfurOmega_C_SitOnCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'KerfurOmega_C_SitOnCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'KerfurOmega_C_SitOnCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'KerfurOmega_C_SitOnCar::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'KerfurOmega_C_SitOnCar::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'KerfurOmega_C_SitOnCar::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'KerfurOmega_C_SitOnCar::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000104, "Member 'KerfurOmega_C_SitOnCar::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x00018C, "Member 'KerfurOmega_C_SitOnCar::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SitOnCar, CallFunc_Array_RemoveItem_ReturnValue) == 0x00018D, "Member 'KerfurOmega_C_SitOnCar::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.getOffCar
// 0x00F0 (0x00F0 - 0x0000)
struct KerfurOmega_C_GetOffCar final
{
public:
	bool                                          Param_Kill;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_GetOffCar) == 0x000010, "Wrong alignment on KerfurOmega_C_GetOffCar");
static_assert(sizeof(KerfurOmega_C_GetOffCar) == 0x0000F0, "Wrong size on KerfurOmega_C_GetOffCar");
static_assert(offsetof(KerfurOmega_C_GetOffCar, Param_Kill) == 0x000000, "Member 'KerfurOmega_C_GetOffCar::Param_Kill' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'KerfurOmega_C_GetOffCar::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_BreakTransform_Location) == 0x000040, "Member 'KerfurOmega_C_GetOffCar::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'KerfurOmega_C_GetOffCar::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'KerfurOmega_C_GetOffCar::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000064, "Member 'KerfurOmega_C_GetOffCar::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetOffCar, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000EC, "Member 'KerfurOmega_C_GetOffCar::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.attemptMurerfur
// 0x00C0 (0x00C0 - 0x0000)
struct KerfurOmega_C_AttemptMurerfur final
{
public:
	TArray<class AActorChipPile_C*>               Dels;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Is;                                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActorChipPile_C*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AKerfusPossessor_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0070(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActorChipPile_C*                       K2Node_DynamicCast_AsActor_Chip_Pile;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_AttemptMurerfur) == 0x000008, "Wrong alignment on KerfurOmega_C_AttemptMurerfur");
static_assert(sizeof(KerfurOmega_C_AttemptMurerfur) == 0x0000C0, "Wrong size on KerfurOmega_C_AttemptMurerfur");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Dels) == 0x000000, "Member 'KerfurOmega_C_AttemptMurerfur::Dels' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Is) == 0x000010, "Member 'KerfurOmega_C_AttemptMurerfur::Is' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Temp_object_Variable) == 0x000018, "Member 'KerfurOmega_C_AttemptMurerfur::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Temp_int_Variable) == 0x000028, "Member 'KerfurOmega_C_AttemptMurerfur::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Temp_int_Variable_1) == 0x00002C, "Member 'KerfurOmega_C_AttemptMurerfur::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'KerfurOmega_C_AttemptMurerfur::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, Temp_int_Array_Index_Variable) == 0x000040, "Member 'KerfurOmega_C_AttemptMurerfur::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Array_Get_Item) == 0x000048, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_GetActorOfClass_ReturnValue) == 0x000058, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_obj_statDyn_obj) == 0x000070, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_SphereOverlapActors_OutActors) == 0x000080, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_SphereOverlapActors_ReturnValue) == 0x000090, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, K2Node_DynamicCast_AsActor_Chip_Pile) == 0x0000A8, "Member 'KerfurOmega_C_AttemptMurerfur::K2Node_DynamicCast_AsActor_Chip_Pile' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'KerfurOmega_C_AttemptMurerfur::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_AttemptMurerfur, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'KerfurOmega_C_AttemptMurerfur::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_CanBePutInContainer) == 0x000001, "Wrong alignment on KerfurOmega_C_CanBePutInContainer");
static_assert(sizeof(KerfurOmega_C_CanBePutInContainer) == 0x000001, "Wrong size on KerfurOmega_C_CanBePutInContainer");
static_assert(offsetof(KerfurOmega_C_CanBePutInContainer, Return) == 0x000000, "Member 'KerfurOmega_C_CanBePutInContainer::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct KerfurOmega_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_AsProp) == 0x000008, "Wrong alignment on KerfurOmega_C_AsProp");
static_assert(sizeof(KerfurOmega_C_AsProp) == 0x000008, "Wrong size on KerfurOmega_C_AsProp");
static_assert(offsetof(KerfurOmega_C_AsProp, Return) == 0x000000, "Member 'KerfurOmega_C_AsProp::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_CanPickup) == 0x000001, "Wrong alignment on KerfurOmega_C_CanPickup");
static_assert(sizeof(KerfurOmega_C_CanPickup) == 0x000001, "Wrong size on KerfurOmega_C_CanPickup");
static_assert(offsetof(KerfurOmega_C_CanPickup, Return) == 0x000000, "Member 'KerfurOmega_C_CanPickup::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct KerfurOmega_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_NoRespawn) == 0x000001, "Wrong alignment on KerfurOmega_C_NoRespawn");
static_assert(sizeof(KerfurOmega_C_NoRespawn) == 0x000002, "Wrong size on KerfurOmega_C_NoRespawn");
static_assert(offsetof(KerfurOmega_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'KerfurOmega_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_NoRespawn, Return) == 0x000001, "Member 'KerfurOmega_C_NoRespawn::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct KerfurOmega_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_LookAt) == 0x000008, "Wrong alignment on KerfurOmega_C_LookAt");
static_assert(sizeof(KerfurOmega_C_LookAt) == 0x0000B8, "Wrong size on KerfurOmega_C_LookAt");
static_assert(offsetof(KerfurOmega_C_LookAt, Player) == 0x000000, "Member 'KerfurOmega_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LookAt, Hit) == 0x000008, "Member 'KerfurOmega_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LookAt, Return) == 0x000090, "Member 'KerfurOmega_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LookAt, Text) == 0x000098, "Member 'KerfurOmega_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'KerfurOmega_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LookAt, Number) == 0x0000B0, "Member 'KerfurOmega_C_LookAt::Number' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_IsButtonUsed) == 0x000001, "Wrong alignment on KerfurOmega_C_IsButtonUsed");
static_assert(sizeof(KerfurOmega_C_IsButtonUsed) == 0x000001, "Wrong size on KerfurOmega_C_IsButtonUsed");
static_assert(offsetof(KerfurOmega_C_IsButtonUsed, Failed) == 0x000000, "Member 'KerfurOmega_C_IsButtonUsed::Failed' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_LandedOn) == 0x000008, "Wrong alignment on KerfurOmega_C_LandedOn");
static_assert(sizeof(KerfurOmega_C_LandedOn) == 0x000010, "Wrong size on KerfurOmega_C_LandedOn");
static_assert(offsetof(KerfurOmega_C_LandedOn, Player) == 0x000000, "Member 'KerfurOmega_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'KerfurOmega_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.getActionOptions
// 0x0190 (0x0190 - 0x0000)
struct KerfurOmega_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Unequips;                                          // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           Overlays;                                          // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         OptionsResult;                                     // 0x0070(0x0010)(Edit, BlueprintVisible)
	class FString                                 Temp_string_Variable;                              // 0x0080(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_kerfurDrip                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00C8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0140(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_Select_Default;                             // 0x0150(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0168(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_Select_Default_1;                           // 0x0180(0x0010)(ReferenceParm)
};
static_assert(alignof(KerfurOmega_C_GetActionOptions) == 0x000008, "Wrong alignment on KerfurOmega_C_GetActionOptions");
static_assert(sizeof(KerfurOmega_C_GetActionOptions) == 0x000190, "Wrong size on KerfurOmega_C_GetActionOptions");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Player) == 0x000000, "Member 'KerfurOmega_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Component) == 0x000008, "Member 'KerfurOmega_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Actor) == 0x000010, "Member 'KerfurOmega_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Options) == 0x000018, "Member 'KerfurOmega_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Options_enum) == 0x000028, "Member 'KerfurOmega_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'KerfurOmega_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Number) == 0x000048, "Member 'KerfurOmega_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Unequips) == 0x000050, "Member 'KerfurOmega_C_GetActionOptions::Unequips' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Overlays) == 0x000060, "Member 'KerfurOmega_C_GetActionOptions::Overlays' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, OptionsResult) == 0x000070, "Member 'KerfurOmega_C_GetActionOptions::OptionsResult' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_string_Variable) == 0x000080, "Member 'KerfurOmega_C_GetActionOptions::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B0, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_bool_Variable) == 0x0000C0, "Member 'KerfurOmega_C_GetActionOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'KerfurOmega_C_GetActionOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_string_Variable_1) == 0x0000C8, "Member 'KerfurOmega_C_GetActionOptions::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'KerfurOmega_C_GetActionOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Get_Item) == 0x0000DC, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0000E8, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Add_ReturnValue_1) == 0x000118, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00011C, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Add_ReturnValue_2) == 0x000120, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000128, "Member 'KerfurOmega_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_int_Variable) == 0x000138, "Member 'KerfurOmega_C_GetActionOptions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, Temp_string_Variable_2) == 0x000140, "Member 'KerfurOmega_C_GetActionOptions::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, K2Node_Select_Default) == 0x000150, "Member 'KerfurOmega_C_GetActionOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_Array_Add_ReturnValue_3) == 0x000160, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, K2Node_MakeArray_Array_1) == 0x000168, "Member 'KerfurOmega_C_GetActionOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000178, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000179, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00017A, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_BooleanOR_ReturnValue) == 0x00017B, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, CallFunc_BooleanOR_ReturnValue_1) == 0x00017C, "Member 'KerfurOmega_C_GetActionOptions::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetActionOptions, K2Node_Select_Default_1) == 0x000180, "Member 'KerfurOmega_C_GetActionOptions::K2Node_Select_Default_1' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.setPath
// 0x0018 (0x0018 - 0x0000)
struct KerfurOmega_C_SetPath final
{
public:
	TArray<struct FVector>                        Path;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SetPath) == 0x000008, "Wrong alignment on KerfurOmega_C_SetPath");
static_assert(sizeof(KerfurOmega_C_SetPath) == 0x000018, "Wrong size on KerfurOmega_C_SetPath");
static_assert(offsetof(KerfurOmega_C_SetPath, Path) == 0x000000, "Member 'KerfurOmega_C_SetPath::Path' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_SetPath, Return) == 0x000010, "Member 'KerfurOmega_C_SetPath::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.getOnlyKey
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_GetOnlyKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_GetOnlyKey) == 0x000008, "Wrong alignment on KerfurOmega_C_GetOnlyKey");
static_assert(sizeof(KerfurOmega_C_GetOnlyKey) == 0x000010, "Wrong size on KerfurOmega_C_GetOnlyKey");
static_assert(offsetof(KerfurOmega_C_GetOnlyKey, Key) == 0x000000, "Member 'KerfurOmega_C_GetOnlyKey::Key' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.processKeys
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_ProcessKeys final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_ProcessKeys) == 0x000001, "Wrong alignment on KerfurOmega_C_ProcessKeys");
static_assert(sizeof(KerfurOmega_C_ProcessKeys) == 0x000001, "Wrong size on KerfurOmega_C_ProcessKeys");
static_assert(offsetof(KerfurOmega_C_ProcessKeys, Return) == 0x000000, "Member 'KerfurOmega_C_ProcessKeys::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.canBeUsedHold
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_CanBeUsedHold final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_CanBeUsedHold) == 0x000001, "Wrong alignment on KerfurOmega_C_CanBeUsedHold");
static_assert(sizeof(KerfurOmega_C_CanBeUsedHold) == 0x000001, "Wrong size on KerfurOmega_C_CanBeUsedHold");
static_assert(offsetof(KerfurOmega_C_CanBeUsedHold, Return) == 0x000000, "Member 'KerfurOmega_C_CanBeUsedHold::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.GetKey
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_GetKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_GetKey) == 0x000008, "Wrong alignment on KerfurOmega_C_GetKey");
static_assert(sizeof(KerfurOmega_C_GetKey) == 0x000010, "Wrong size on KerfurOmega_C_GetKey");
static_assert(offsetof(KerfurOmega_C_GetKey, Key) == 0x000000, "Member 'KerfurOmega_C_GetKey::Key' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.toolboxFix
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_ToolboxFix final
{
public:
	class AProp_toolbox_C*                        Toolbox;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_ToolboxFix) == 0x000008, "Wrong alignment on KerfurOmega_C_ToolboxFix");
static_assert(sizeof(KerfurOmega_C_ToolboxFix) == 0x000010, "Wrong size on KerfurOmega_C_ToolboxFix");
static_assert(offsetof(KerfurOmega_C_ToolboxFix, Toolbox) == 0x000000, "Member 'KerfurOmega_C_ToolboxFix::Toolbox' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_ToolboxFix, Return) == 0x000008, "Member 'KerfurOmega_C_ToolboxFix::Return' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.gascanFuel
// 0x0010 (0x0010 - 0x0000)
struct KerfurOmega_C_GascanFuel final
{
public:
	class AProp_gascan_C*                         Gascan;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fueled;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_GascanFuel) == 0x000008, "Wrong alignment on KerfurOmega_C_GascanFuel");
static_assert(sizeof(KerfurOmega_C_GascanFuel) == 0x000010, "Wrong size on KerfurOmega_C_GascanFuel");
static_assert(offsetof(KerfurOmega_C_GascanFuel, Gascan) == 0x000000, "Member 'KerfurOmega_C_GascanFuel::Gascan' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GascanFuel, Fueled) == 0x000008, "Member 'KerfurOmega_C_GascanFuel::Fueled' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.skipRadial
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_SkipRadial final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SkipRadial) == 0x000001, "Wrong alignment on KerfurOmega_C_SkipRadial");
static_assert(sizeof(KerfurOmega_C_SkipRadial) == 0x000001, "Wrong size on KerfurOmega_C_SkipRadial");
static_assert(offsetof(KerfurOmega_C_SkipRadial, Skip) == 0x000000, "Member 'KerfurOmega_C_SkipRadial::Skip' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.getPriceMultiplier
// 0x0004 (0x0004 - 0x0000)
struct KerfurOmega_C_GetPriceMultiplier final
{
public:
	float                                         PriceMult;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_GetPriceMultiplier) == 0x000004, "Wrong alignment on KerfurOmega_C_GetPriceMultiplier");
static_assert(sizeof(KerfurOmega_C_GetPriceMultiplier) == 0x000004, "Wrong size on KerfurOmega_C_GetPriceMultiplier");
static_assert(offsetof(KerfurOmega_C_GetPriceMultiplier, PriceMult) == 0x000000, "Member 'KerfurOmega_C_GetPriceMultiplier::PriceMult' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.skipPreDelete
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_SkipPreDelete final
{
public:
	bool                                          Skip;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_SkipPreDelete) == 0x000001, "Wrong alignment on KerfurOmega_C_SkipPreDelete");
static_assert(sizeof(KerfurOmega_C_SkipPreDelete) == 0x000001, "Wrong size on KerfurOmega_C_SkipPreDelete");
static_assert(offsetof(KerfurOmega_C_SkipPreDelete, Skip) == 0x000000, "Member 'KerfurOmega_C_SkipPreDelete::Skip' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.ignoreSave
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_IgnoreSave final
{
public:
	bool                                          Param_IgnoreSave;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_IgnoreSave) == 0x000001, "Wrong alignment on KerfurOmega_C_IgnoreSave");
static_assert(sizeof(KerfurOmega_C_IgnoreSave) == 0x000001, "Wrong size on KerfurOmega_C_IgnoreSave");
static_assert(offsetof(KerfurOmega_C_IgnoreSave, Param_IgnoreSave) == 0x000000, "Member 'KerfurOmega_C_IgnoreSave::Param_IgnoreSave' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.loadData
// 0x0140 (0x0140 - 0x0000)
struct KerfurOmega_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_mString                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct FStruct_mInt                           CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mBool                          CallFunc_Array_Get_Item_5;                         // 0x0118(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_6;                         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_7;                         // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_LoadData) == 0x000010, "Wrong alignment on KerfurOmega_C_LoadData");
static_assert(sizeof(KerfurOmega_C_LoadData) == 0x000140, "Wrong size on KerfurOmega_C_LoadData");
static_assert(offsetof(KerfurOmega_C_LoadData, Data) == 0x000000, "Member 'KerfurOmega_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, Return) == 0x0000C0, "Member 'KerfurOmega_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'KerfurOmega_C_LoadData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F8, "Member 'KerfurOmega_C_LoadData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_4) == 0x000104, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Conv_IntToByte_ReturnValue) == 0x000108, "Member 'KerfurOmega_C_LoadData::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_GetValidValue_ReturnValue) == 0x000110, "Member 'KerfurOmega_C_LoadData::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_5) == 0x000118, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_6) == 0x000128, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Get_Item_7) == 0x000129, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'KerfurOmega_C_LoadData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'KerfurOmega_C_LoadData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'KerfurOmega_C_LoadData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_LoadData, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'KerfurOmega_C_LoadData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.getData
// 0x0290 (0x0290 - 0x0000)
struct KerfurOmega_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FString>                         Drips;                                             // 0x00C0(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_mString                        K2Node_MakeStruct_struct_mString;                  // 0x00D8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_mString>                K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStruct_mBool                          K2Node_MakeStruct_struct_mBool;                    // 0x0128(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_mBool>                  K2Node_MakeArray_Array_2;                          // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x0160(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0178(0x0010)(HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_4;                          // 0x01C0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_MakeStruct_struct_save;                     // 0x01D0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_GetData) == 0x000010, "Wrong alignment on KerfurOmega_C_GetData");
static_assert(sizeof(KerfurOmega_C_GetData) == 0x000290, "Wrong size on KerfurOmega_C_GetData");
static_assert(offsetof(KerfurOmega_C_GetData, Data) == 0x000000, "Member 'KerfurOmega_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, Drips) == 0x0000C0, "Member 'KerfurOmega_C_GetData::Drips' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'KerfurOmega_C_GetData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'KerfurOmega_C_GetData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeStruct_struct_mString) == 0x0000D8, "Member 'KerfurOmega_C_GetData::K2Node_MakeStruct_struct_mString' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'KerfurOmega_C_GetData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeArray_Array) == 0x0000F0, "Member 'KerfurOmega_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Array_Get_Item) == 0x000100, "Member 'KerfurOmega_C_GetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeArray_Array_1) == 0x000108, "Member 'KerfurOmega_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Conv_NameToString_ReturnValue) == 0x000118, "Member 'KerfurOmega_C_GetData::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeStruct_struct_mBool) == 0x000128, "Member 'KerfurOmega_C_GetData::K2Node_MakeStruct_struct_mBool' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'KerfurOmega_C_GetData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeArray_Array_2) == 0x000140, "Member 'KerfurOmega_C_GetData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'KerfurOmega_C_GetData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'KerfurOmega_C_GetData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_IsValid_ReturnValue) == 0x000155, "Member 'KerfurOmega_C_GetData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000158, "Member 'KerfurOmega_C_GetData::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeArray_Array_3) == 0x000160, "Member 'KerfurOmega_C_GetData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_GetObjectClass_ReturnValue) == 0x000170, "Member 'KerfurOmega_C_GetData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000178, "Member 'KerfurOmega_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, CallFunc_GetTransform_ReturnValue) == 0x000190, "Member 'KerfurOmega_C_GetData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeArray_Array_4) == 0x0001C0, "Member 'KerfurOmega_C_GetData::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_GetData, K2Node_MakeStruct_struct_save) == 0x0001D0, "Member 'KerfurOmega_C_GetData::K2Node_MakeStruct_struct_save' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.gatherDataFromKey
// 0x0001 (0x0001 - 0x0000)
struct KerfurOmega_C_GatherDataFromKey final
{
public:
	bool                                          Gather;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KerfurOmega_C_GatherDataFromKey) == 0x000001, "Wrong alignment on KerfurOmega_C_GatherDataFromKey");
static_assert(sizeof(KerfurOmega_C_GatherDataFromKey) == 0x000001, "Wrong size on KerfurOmega_C_GatherDataFromKey");
static_assert(offsetof(KerfurOmega_C_GatherDataFromKey, Gather) == 0x000000, "Member 'KerfurOmega_C_GatherDataFromKey::Gather' has a wrong offset!");

// Function kerfurOmega.kerfurOmega_C.dreamInv
// 0x0018 (0x0018 - 0x0000)
struct KerfurOmega_C_DreamInv final
{
public:
	TArray<struct FStruct_save>                   Invv;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ADreamBase_C*                           Base;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KerfurOmega_C_DreamInv) == 0x000008, "Wrong alignment on KerfurOmega_C_DreamInv");
static_assert(sizeof(KerfurOmega_C_DreamInv) == 0x000018, "Wrong size on KerfurOmega_C_DreamInv");
static_assert(offsetof(KerfurOmega_C_DreamInv, Invv) == 0x000000, "Member 'KerfurOmega_C_DreamInv::Invv' has a wrong offset!");
static_assert(offsetof(KerfurOmega_C_DreamInv, Base) == 0x000010, "Member 'KerfurOmega_C_DreamInv::Base' has a wrong offset!");

}

