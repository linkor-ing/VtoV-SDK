#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_email

#include "Basic.hpp"

#include "Enum_emailChars_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct struct_email.struct_email
// 0x0050 (0x0050 - 0x0000)
struct FStruct_email final
{
public:
	bool                                          New_14_5FB7784E4E60A05C8BC13ABD93D6EFDF;           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Pfp_2_286B75414BAC856FBED047B8BE9F0065;            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_emailChars                               Username_18_778252D64AB06BB5D3FBC386EC59383F;      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             Date_8_932438DD4158A22517E43E8DAD3BBC45;           // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Topic_17_91E2F92C4DC4FF16CFAF539A3561F74B;         // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text_11_B74A8FDC40C1F46E42A9F382C0EFA6FF;          // 0x0038(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(FStruct_email) == 0x000008, "Wrong alignment on FStruct_email");
static_assert(sizeof(FStruct_email) == 0x000050, "Wrong size on FStruct_email");
static_assert(offsetof(FStruct_email, New_14_5FB7784E4E60A05C8BC13ABD93D6EFDF) == 0x000000, "Member 'FStruct_email::New_14_5FB7784E4E60A05C8BC13ABD93D6EFDF' has a wrong offset!");
static_assert(offsetof(FStruct_email, Pfp_2_286B75414BAC856FBED047B8BE9F0065) == 0x000008, "Member 'FStruct_email::Pfp_2_286B75414BAC856FBED047B8BE9F0065' has a wrong offset!");
static_assert(offsetof(FStruct_email, Username_18_778252D64AB06BB5D3FBC386EC59383F) == 0x000010, "Member 'FStruct_email::Username_18_778252D64AB06BB5D3FBC386EC59383F' has a wrong offset!");
static_assert(offsetof(FStruct_email, Date_8_932438DD4158A22517E43E8DAD3BBC45) == 0x000014, "Member 'FStruct_email::Date_8_932438DD4158A22517E43E8DAD3BBC45' has a wrong offset!");
static_assert(offsetof(FStruct_email, Topic_17_91E2F92C4DC4FF16CFAF539A3561F74B) == 0x000020, "Member 'FStruct_email::Topic_17_91E2F92C4DC4FF16CFAF539A3561F74B' has a wrong offset!");
static_assert(offsetof(FStruct_email, Text_11_B74A8FDC40C1F46E42A9F382C0EFA6FF) == 0x000038, "Member 'FStruct_email::Text_11_B74A8FDC40C1F46E42A9F382C0EFA6FF' has a wrong offset!");

}

