#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FastNoiseGenerator

#include "Basic.hpp"

#include "FastNoiseGenerator_structs.hpp"


namespace SDK::Params
{

// Function FastNoiseGenerator.FastNoiseWrapper.GetNoiseType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_GetNoiseType final
{
public:
	EFastNoise_NoiseType                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetNoiseType) == 0x000001, "Wrong alignment on FastNoiseWrapper_GetNoiseType");
static_assert(sizeof(FastNoiseWrapper_GetNoiseType) == 0x000001, "Wrong size on FastNoiseWrapper_GetNoiseType");
static_assert(offsetof(FastNoiseWrapper_GetNoiseType, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetNoiseType::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetCellularJitter
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetCellularJitter final
{
public:
	float                                         CellularJitter;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetCellularJitter) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetCellularJitter");
static_assert(sizeof(FastNoiseWrapper_SetCellularJitter) == 0x000004, "Wrong size on FastNoiseWrapper_SetCellularJitter");
static_assert(offsetof(FastNoiseWrapper_SetCellularJitter, CellularJitter) == 0x000000, "Member 'FastNoiseWrapper_SetCellularJitter::CellularJitter' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetDistanceFunction
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_SetDistanceFunction final
{
public:
	EFastNoise_CellularDistanceFunction           DistanceFunction;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetDistanceFunction) == 0x000001, "Wrong alignment on FastNoiseWrapper_SetDistanceFunction");
static_assert(sizeof(FastNoiseWrapper_SetDistanceFunction) == 0x000001, "Wrong size on FastNoiseWrapper_SetDistanceFunction");
static_assert(offsetof(FastNoiseWrapper_SetDistanceFunction, DistanceFunction) == 0x000000, "Member 'FastNoiseWrapper_SetDistanceFunction::DistanceFunction' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetFractalType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_SetFractalType final
{
public:
	EFastNoise_FractalType                        FractalType;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetFractalType) == 0x000001, "Wrong alignment on FastNoiseWrapper_SetFractalType");
static_assert(sizeof(FastNoiseWrapper_SetFractalType) == 0x000001, "Wrong size on FastNoiseWrapper_SetFractalType");
static_assert(offsetof(FastNoiseWrapper_SetFractalType, FractalType) == 0x000000, "Member 'FastNoiseWrapper_SetFractalType::FractalType' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetFrequency
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetFrequency final
{
public:
	float                                         Frequency;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetFrequency) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetFrequency");
static_assert(sizeof(FastNoiseWrapper_SetFrequency) == 0x000004, "Wrong size on FastNoiseWrapper_SetFrequency");
static_assert(offsetof(FastNoiseWrapper_SetFrequency, Frequency) == 0x000000, "Member 'FastNoiseWrapper_SetFrequency::Frequency' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetGain
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetGain final
{
public:
	float                                         Gain;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetGain) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetGain");
static_assert(sizeof(FastNoiseWrapper_SetGain) == 0x000004, "Wrong size on FastNoiseWrapper_SetGain");
static_assert(offsetof(FastNoiseWrapper_SetGain, Gain) == 0x000000, "Member 'FastNoiseWrapper_SetGain::Gain' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetInterpolation
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_SetInterpolation final
{
public:
	EFastNoise_Interp                             Interp;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetInterpolation) == 0x000001, "Wrong alignment on FastNoiseWrapper_SetInterpolation");
static_assert(sizeof(FastNoiseWrapper_SetInterpolation) == 0x000001, "Wrong size on FastNoiseWrapper_SetInterpolation");
static_assert(offsetof(FastNoiseWrapper_SetInterpolation, Interp) == 0x000000, "Member 'FastNoiseWrapper_SetInterpolation::Interp' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetLacunarity
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetLacunarity final
{
public:
	float                                         Lacunarity;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetLacunarity) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetLacunarity");
static_assert(sizeof(FastNoiseWrapper_SetLacunarity) == 0x000004, "Wrong size on FastNoiseWrapper_SetLacunarity");
static_assert(offsetof(FastNoiseWrapper_SetLacunarity, Lacunarity) == 0x000000, "Member 'FastNoiseWrapper_SetLacunarity::Lacunarity' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetNoiseType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_SetNoiseType final
{
public:
	EFastNoise_NoiseType                          NoiseType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetNoiseType) == 0x000001, "Wrong alignment on FastNoiseWrapper_SetNoiseType");
static_assert(sizeof(FastNoiseWrapper_SetNoiseType) == 0x000001, "Wrong size on FastNoiseWrapper_SetNoiseType");
static_assert(offsetof(FastNoiseWrapper_SetNoiseType, NoiseType) == 0x000000, "Member 'FastNoiseWrapper_SetNoiseType::NoiseType' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetOctaves
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetOctaves final
{
public:
	int32                                         Octaves;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetOctaves) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetOctaves");
static_assert(sizeof(FastNoiseWrapper_SetOctaves) == 0x000004, "Wrong size on FastNoiseWrapper_SetOctaves");
static_assert(offsetof(FastNoiseWrapper_SetOctaves, Octaves) == 0x000000, "Member 'FastNoiseWrapper_SetOctaves::Octaves' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetReturnType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_SetReturnType final
{
public:
	EFastNoise_CellularReturnType                 CellularReturnType;                                // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetReturnType) == 0x000001, "Wrong alignment on FastNoiseWrapper_SetReturnType");
static_assert(sizeof(FastNoiseWrapper_SetReturnType) == 0x000001, "Wrong size on FastNoiseWrapper_SetReturnType");
static_assert(offsetof(FastNoiseWrapper_SetReturnType, CellularReturnType) == 0x000000, "Member 'FastNoiseWrapper_SetReturnType::CellularReturnType' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetSeed
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_SetSeed final
{
public:
	int32                                         Seed;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_SetSeed) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetSeed");
static_assert(sizeof(FastNoiseWrapper_SetSeed) == 0x000004, "Wrong size on FastNoiseWrapper_SetSeed");
static_assert(offsetof(FastNoiseWrapper_SetSeed, Seed) == 0x000000, "Member 'FastNoiseWrapper_SetSeed::Seed' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.SetupFastNoise
// 0x0024 (0x0024 - 0x0000)
struct FastNoiseWrapper_SetupFastNoise final
{
public:
	EFastNoise_NoiseType                          NoiseType;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Seed;                                              // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Frequency;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFastNoise_Interp                             Interp;                                            // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFastNoise_FractalType                        FractalType;                                       // 0x000D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Octaves;                                           // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lacunarity;                                        // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Gain;                                              // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CellularJitter;                                    // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFastNoise_CellularDistanceFunction           CellularDistanceFunction;                          // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFastNoise_CellularReturnType                 CellularReturnType;                                // 0x0021(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FastNoiseWrapper_SetupFastNoise) == 0x000004, "Wrong alignment on FastNoiseWrapper_SetupFastNoise");
static_assert(sizeof(FastNoiseWrapper_SetupFastNoise) == 0x000024, "Wrong size on FastNoiseWrapper_SetupFastNoise");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, NoiseType) == 0x000000, "Member 'FastNoiseWrapper_SetupFastNoise::NoiseType' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Seed) == 0x000004, "Member 'FastNoiseWrapper_SetupFastNoise::Seed' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Frequency) == 0x000008, "Member 'FastNoiseWrapper_SetupFastNoise::Frequency' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Interp) == 0x00000C, "Member 'FastNoiseWrapper_SetupFastNoise::Interp' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, FractalType) == 0x00000D, "Member 'FastNoiseWrapper_SetupFastNoise::FractalType' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Octaves) == 0x000010, "Member 'FastNoiseWrapper_SetupFastNoise::Octaves' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Lacunarity) == 0x000014, "Member 'FastNoiseWrapper_SetupFastNoise::Lacunarity' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, Gain) == 0x000018, "Member 'FastNoiseWrapper_SetupFastNoise::Gain' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, CellularJitter) == 0x00001C, "Member 'FastNoiseWrapper_SetupFastNoise::CellularJitter' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, CellularDistanceFunction) == 0x000020, "Member 'FastNoiseWrapper_SetupFastNoise::CellularDistanceFunction' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_SetupFastNoise, CellularReturnType) == 0x000021, "Member 'FastNoiseWrapper_SetupFastNoise::CellularReturnType' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetCellularJitter
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetCellularJitter final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetCellularJitter) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetCellularJitter");
static_assert(sizeof(FastNoiseWrapper_GetCellularJitter) == 0x000004, "Wrong size on FastNoiseWrapper_GetCellularJitter");
static_assert(offsetof(FastNoiseWrapper_GetCellularJitter, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetCellularJitter::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetDistanceFunction
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_GetDistanceFunction final
{
public:
	EFastNoise_CellularDistanceFunction           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetDistanceFunction) == 0x000001, "Wrong alignment on FastNoiseWrapper_GetDistanceFunction");
static_assert(sizeof(FastNoiseWrapper_GetDistanceFunction) == 0x000001, "Wrong size on FastNoiseWrapper_GetDistanceFunction");
static_assert(offsetof(FastNoiseWrapper_GetDistanceFunction, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetDistanceFunction::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetFractalType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_GetFractalType final
{
public:
	EFastNoise_FractalType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetFractalType) == 0x000001, "Wrong alignment on FastNoiseWrapper_GetFractalType");
static_assert(sizeof(FastNoiseWrapper_GetFractalType) == 0x000001, "Wrong size on FastNoiseWrapper_GetFractalType");
static_assert(offsetof(FastNoiseWrapper_GetFractalType, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetFractalType::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetFrequency
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetFrequency final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetFrequency) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetFrequency");
static_assert(sizeof(FastNoiseWrapper_GetFrequency) == 0x000004, "Wrong size on FastNoiseWrapper_GetFrequency");
static_assert(offsetof(FastNoiseWrapper_GetFrequency, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetFrequency::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetGain
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetGain final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetGain) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetGain");
static_assert(sizeof(FastNoiseWrapper_GetGain) == 0x000004, "Wrong size on FastNoiseWrapper_GetGain");
static_assert(offsetof(FastNoiseWrapper_GetGain, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetGain::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetInterpolation
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_GetInterpolation final
{
public:
	EFastNoise_Interp                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetInterpolation) == 0x000001, "Wrong alignment on FastNoiseWrapper_GetInterpolation");
static_assert(sizeof(FastNoiseWrapper_GetInterpolation) == 0x000001, "Wrong size on FastNoiseWrapper_GetInterpolation");
static_assert(offsetof(FastNoiseWrapper_GetInterpolation, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetInterpolation::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetLacunarity
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetLacunarity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetLacunarity) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetLacunarity");
static_assert(sizeof(FastNoiseWrapper_GetLacunarity) == 0x000004, "Wrong size on FastNoiseWrapper_GetLacunarity");
static_assert(offsetof(FastNoiseWrapper_GetLacunarity, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetLacunarity::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetNoise2D
// 0x000C (0x000C - 0x0000)
struct FastNoiseWrapper_GetNoise2D final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetNoise2D) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetNoise2D");
static_assert(sizeof(FastNoiseWrapper_GetNoise2D) == 0x00000C, "Wrong size on FastNoiseWrapper_GetNoise2D");
static_assert(offsetof(FastNoiseWrapper_GetNoise2D, X) == 0x000000, "Member 'FastNoiseWrapper_GetNoise2D::X' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_GetNoise2D, Y) == 0x000004, "Member 'FastNoiseWrapper_GetNoise2D::Y' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_GetNoise2D, ReturnValue) == 0x000008, "Member 'FastNoiseWrapper_GetNoise2D::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetNoise3D
// 0x0010 (0x0010 - 0x0000)
struct FastNoiseWrapper_GetNoise3D final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetNoise3D) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetNoise3D");
static_assert(sizeof(FastNoiseWrapper_GetNoise3D) == 0x000010, "Wrong size on FastNoiseWrapper_GetNoise3D");
static_assert(offsetof(FastNoiseWrapper_GetNoise3D, X) == 0x000000, "Member 'FastNoiseWrapper_GetNoise3D::X' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_GetNoise3D, Y) == 0x000004, "Member 'FastNoiseWrapper_GetNoise3D::Y' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_GetNoise3D, Z) == 0x000008, "Member 'FastNoiseWrapper_GetNoise3D::Z' has a wrong offset!");
static_assert(offsetof(FastNoiseWrapper_GetNoise3D, ReturnValue) == 0x00000C, "Member 'FastNoiseWrapper_GetNoise3D::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetOctaves
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetOctaves final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetOctaves) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetOctaves");
static_assert(sizeof(FastNoiseWrapper_GetOctaves) == 0x000004, "Wrong size on FastNoiseWrapper_GetOctaves");
static_assert(offsetof(FastNoiseWrapper_GetOctaves, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetOctaves::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetReturnType
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_GetReturnType final
{
public:
	EFastNoise_CellularReturnType                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetReturnType) == 0x000001, "Wrong alignment on FastNoiseWrapper_GetReturnType");
static_assert(sizeof(FastNoiseWrapper_GetReturnType) == 0x000001, "Wrong size on FastNoiseWrapper_GetReturnType");
static_assert(offsetof(FastNoiseWrapper_GetReturnType, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetReturnType::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.GetSeed
// 0x0004 (0x0004 - 0x0000)
struct FastNoiseWrapper_GetSeed final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_GetSeed) == 0x000004, "Wrong alignment on FastNoiseWrapper_GetSeed");
static_assert(sizeof(FastNoiseWrapper_GetSeed) == 0x000004, "Wrong size on FastNoiseWrapper_GetSeed");
static_assert(offsetof(FastNoiseWrapper_GetSeed, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_GetSeed::ReturnValue' has a wrong offset!");

// Function FastNoiseGenerator.FastNoiseWrapper.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct FastNoiseWrapper_IsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FastNoiseWrapper_IsInitialized) == 0x000001, "Wrong alignment on FastNoiseWrapper_IsInitialized");
static_assert(sizeof(FastNoiseWrapper_IsInitialized) == 0x000001, "Wrong size on FastNoiseWrapper_IsInitialized");
static_assert(offsetof(FastNoiseWrapper_IsInitialized, ReturnValue) == 0x000000, "Member 'FastNoiseWrapper_IsInitialized::ReturnValue' has a wrong offset!");

}

