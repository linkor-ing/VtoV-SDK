#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlungerProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass plungerProjectile.plungerProjectile_C
// 0x0030 (0x0250 - 0x0220)
class APlungerProjectile_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0238(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vel;                                               // 0x0244(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_plungerProjectile(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"plungerProjectile_C">();
	}
	static class APlungerProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlungerProjectile_C>();
	}
};
static_assert(alignof(APlungerProjectile_C) == 0x000008, "Wrong alignment on APlungerProjectile_C");
static_assert(sizeof(APlungerProjectile_C) == 0x000250, "Wrong size on APlungerProjectile_C");
static_assert(offsetof(APlungerProjectile_C, UberGraphFrame) == 0x000220, "Member 'APlungerProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APlungerProjectile_C, Sphere) == 0x000228, "Member 'APlungerProjectile_C::Sphere' has a wrong offset!");
static_assert(offsetof(APlungerProjectile_C, StaticMesh) == 0x000230, "Member 'APlungerProjectile_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APlungerProjectile_C, Loc) == 0x000238, "Member 'APlungerProjectile_C::Loc' has a wrong offset!");
static_assert(offsetof(APlungerProjectile_C, Vel) == 0x000244, "Member 'APlungerProjectile_C::Vel' has a wrong offset!");

}

