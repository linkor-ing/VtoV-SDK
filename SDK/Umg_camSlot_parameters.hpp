#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_camSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function umg_camSlot.umg_camSlot_C.ExecuteUbergraph_umg_camSlot
// 0x00F0 (0x00F0 - 0x0000)
struct Umg_camSlot_C_ExecuteUbergraph_umg_camSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_camera_bad_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_rdrone_C*                         CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0050(0x0018)(ConstParm)
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode_2;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class AProp_camera_bad_C*                     CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x00D0(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot) == 0x000008, "Wrong alignment on Umg_camSlot_C_ExecuteUbergraph_umg_camSlot");
static_assert(sizeof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot) == 0x0000F0, "Wrong size on Umg_camSlot_C_ExecuteUbergraph_umg_camSlot");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, EntryPoint) == 0x000000, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, Temp_text_Variable) == 0x000008, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000020, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Array_Get_Item) == 0x000028, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_getMainGamemode_AsMain_Gamemode_1) == 0x000038, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_getMainGamemode_AsMain_Gamemode_1' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, Temp_bool_Variable) == 0x000040, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, K2Node_ComponentBoundEvent_Text_1) == 0x000050, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_getMainGamemode_AsMain_Gamemode_2) == 0x000068, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_getMainGamemode_AsMain_Gamemode_2' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Left_ReturnValue) == 0x000080, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, K2Node_Select_Default) == 0x0000B8, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, K2Node_ComponentBoundEvent_Text) == 0x0000D0, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, K2Node_ComponentBoundEvent_CommitMethod) == 0x0000E8, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_ExecuteUbergraph_umg_camSlot, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'Umg_camSlot_C_ExecuteUbergraph_umg_camSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function umg_camSlot.umg_camSlot_C.BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_2_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function umg_camSlot.umg_camSlot_C.BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'Umg_camSlot_C_BndEvt__umg_camSlot_EditableTextBox_342_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function umg_camSlot.umg_camSlot_C.upd
// 0x0040 (0x0040 - 0x0000)
struct Umg_camSlot_C_Upd final
{
public:
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(Umg_camSlot_C_Upd) == 0x000008, "Wrong alignment on Umg_camSlot_C_Upd");
static_assert(sizeof(Umg_camSlot_C_Upd) == 0x000040, "Wrong size on Umg_camSlot_C_Upd");
static_assert(offsetof(Umg_camSlot_C_Upd, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'Umg_camSlot_C_Upd::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_Upd, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'Umg_camSlot_C_Upd::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_camSlot_C_Upd, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'Umg_camSlot_C_Upd::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

