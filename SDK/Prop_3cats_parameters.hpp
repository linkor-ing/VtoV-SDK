#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_3cats

#include "Basic.hpp"

#include "Enum_interactionActions_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_3cats.prop_3cats_C.ExecuteUbergraph_prop_3cats
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_3cats_C_ExecuteUbergraph_prop_3cats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       K2Node_Event_action;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_3cats_C_ExecuteUbergraph_prop_3cats) == 0x000008, "Wrong alignment on Prop_3cats_C_ExecuteUbergraph_prop_3cats");
static_assert(sizeof(Prop_3cats_C_ExecuteUbergraph_prop_3cats) == 0x0000B0, "Wrong size on Prop_3cats_C_ExecuteUbergraph_prop_3cats");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, EntryPoint) == 0x000000, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, K2Node_Event_player) == 0x000008, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, K2Node_Event_player_1) == 0x000018, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, K2Node_Event_hit) == 0x000020, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, K2Node_Event_action) == 0x0000A8, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::K2Node_Event_action' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ExecuteUbergraph_prop_3cats, K2Node_SwitchEnum_CmpSuccess) == 0x0000A9, "Member 'Prop_3cats_C_ExecuteUbergraph_prop_3cats::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function prop_3cats.prop_3cats_C.actionOptionIndex
// 0x0098 (0x0098 - 0x0000)
struct Prop_3cats_C_ActionOptionIndex final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Enum_interactionActions                       Action;                                            // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_3cats_C_ActionOptionIndex) == 0x000008, "Wrong alignment on Prop_3cats_C_ActionOptionIndex");
static_assert(sizeof(Prop_3cats_C_ActionOptionIndex) == 0x000098, "Wrong size on Prop_3cats_C_ActionOptionIndex");
static_assert(offsetof(Prop_3cats_C_ActionOptionIndex, Player) == 0x000000, "Member 'Prop_3cats_C_ActionOptionIndex::Player' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ActionOptionIndex, Param_Hit) == 0x000008, "Member 'Prop_3cats_C_ActionOptionIndex::Param_Hit' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_ActionOptionIndex, Action) == 0x000090, "Member 'Prop_3cats_C_ActionOptionIndex::Action' has a wrong offset!");

// Function prop_3cats.prop_3cats_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_3cats_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_3cats_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_3cats_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_3cats_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_3cats_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_3cats_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_3cats_C_PlayerHandUse_RMB::Player' has a wrong offset!");

// Function prop_3cats.prop_3cats_C.getActionOptions
// 0x0060 (0x0060 - 0x0000)
struct Prop_3cats_C_GetActionOptions final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Options;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<Enum_interactionActions>               Options_enum;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<class FText>                           OptionsNamesOverlay;                               // 0x0038(0x0010)(Parm, OutParm)
	uint8                                         Number;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<Enum_interactionActions>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(Prop_3cats_C_GetActionOptions) == 0x000008, "Wrong alignment on Prop_3cats_C_GetActionOptions");
static_assert(sizeof(Prop_3cats_C_GetActionOptions) == 0x000060, "Wrong size on Prop_3cats_C_GetActionOptions");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Player) == 0x000000, "Member 'Prop_3cats_C_GetActionOptions::Player' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Component) == 0x000008, "Member 'Prop_3cats_C_GetActionOptions::Component' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Actor) == 0x000010, "Member 'Prop_3cats_C_GetActionOptions::Actor' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Options) == 0x000018, "Member 'Prop_3cats_C_GetActionOptions::Options' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Options_enum) == 0x000028, "Member 'Prop_3cats_C_GetActionOptions::Options_enum' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, OptionsNamesOverlay) == 0x000038, "Member 'Prop_3cats_C_GetActionOptions::OptionsNamesOverlay' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, Number) == 0x000048, "Member 'Prop_3cats_C_GetActionOptions::Number' has a wrong offset!");
static_assert(offsetof(Prop_3cats_C_GetActionOptions, K2Node_MakeArray_Array) == 0x000050, "Member 'Prop_3cats_C_GetActionOptions::K2Node_MakeArray_Array' has a wrong offset!");

}

