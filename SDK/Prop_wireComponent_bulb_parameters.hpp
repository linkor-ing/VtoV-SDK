#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wireComponent_bulb

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_wireComponent_bulb.prop_wireComponent_bulb_C.ExecuteUbergraph_prop_wireComponent_bulb
// 0x0010 (0x0010 - 0x0000)
struct Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D53[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWire_C*                                K2Node_Event_wire;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb) == 0x000008, "Wrong alignment on Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb");
static_assert(sizeof(Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb) == 0x000010, "Wrong size on Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb");
static_assert(offsetof(Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb, EntryPoint) == 0x000000, "Member 'Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb, K2Node_Event_wire) == 0x000008, "Member 'Prop_wireComponent_bulb_C_ExecuteUbergraph_prop_wireComponent_bulb::K2Node_Event_wire' has a wrong offset!");

// Function prop_wireComponent_bulb.prop_wireComponent_bulb_C.wirePass
// 0x0008 (0x0008 - 0x0000)
struct Prop_wireComponent_bulb_C_WirePass final
{
public:
	class AWire_C*                                Wire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_bulb_C_WirePass) == 0x000008, "Wrong alignment on Prop_wireComponent_bulb_C_WirePass");
static_assert(sizeof(Prop_wireComponent_bulb_C_WirePass) == 0x000008, "Wrong size on Prop_wireComponent_bulb_C_WirePass");
static_assert(offsetof(Prop_wireComponent_bulb_C_WirePass, Wire) == 0x000000, "Member 'Prop_wireComponent_bulb_C_WirePass::Wire' has a wrong offset!");

// Function prop_wireComponent_bulb.prop_wireComponent_bulb_C.UserConstructionScript
// 0x00D0 (0x00D0 - 0x0000)
struct Prop_wireComponent_bulb_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D54[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_2;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wireComponent_bulb_C_UserConstructionScript) == 0x000008, "Wrong alignment on Prop_wireComponent_bulb_C_UserConstructionScript");
static_assert(sizeof(Prop_wireComponent_bulb_C_UserConstructionScript) == 0x0000D0, "Wrong size on Prop_wireComponent_bulb_C_UserConstructionScript");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_int_Variable) == 0x000000, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_2) == 0x000018, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_3) == 0x000020, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_4) == 0x000028, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_int_Variable_1) == 0x000030, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_struct_Variable) == 0x000034, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_struct_Variable_1) == 0x000044, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_struct_Variable_2) == 0x000054, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_struct_Variable_3) == 0x000064, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_struct_Variable_4) == 0x000074, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_int_Variable_2) == 0x000084, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_5) == 0x000088, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_6) == 0x000090, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_7) == 0x000098, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_8) == 0x0000A0, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, Temp_object_Variable_9) == 0x0000A8, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, K2Node_Select_Default) == 0x0000B0, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, K2Node_Select_Default_1) == 0x0000B8, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Prop_wireComponent_bulb_C_UserConstructionScript, K2Node_Select_Default_2) == 0x0000C8, "Member 'Prop_wireComponent_bulb_C_UserConstructionScript::K2Node_Select_Default_2' has a wrong offset!");

}

