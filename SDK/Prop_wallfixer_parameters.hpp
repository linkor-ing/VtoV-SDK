#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_wallfixer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function prop_wallfixer.prop_wallfixer_C.ExecuteUbergraph_prop_wallfixer
// 0x0150 (0x0150 - 0x0000)
struct Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3A30[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A31[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A32[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A33[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomWall_C*                          K2Node_DynamicCast_AsCustom_Wall;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer) == 0x000008, "Wrong alignment on Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer");
static_assert(sizeof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer) == 0x000150, "Wrong size on Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, EntryPoint) == 0x000000, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CustomEvent_NotifyName_4) == 0x000014, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, Temp_name_Variable) == 0x00007C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000084, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_Event_player_1) == 0x0000A0, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_Event_player) == 0x0000A8, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000B0, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B9, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000BA, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_ElementIndex) == 0x00011C, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_DynamicCast_AsCustom_Wall) == 0x000140, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_DynamicCast_AsCustom_Wall' has a wrong offset!");
static_assert(offsetof(Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'Prop_wallfixer_C_ExecuteUbergraph_prop_wallfixer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.OnCompleted_281BECD94263F241FAF2969DB65721E2
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2) == 0x000004, "Wrong alignment on Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2");
static_assert(sizeof(Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2) == 0x000008, "Wrong size on Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2");
static_assert(offsetof(Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2, NotifyName) == 0x000000, "Member 'Prop_wallfixer_C_OnCompleted_281BECD94263F241FAF2969DB65721E2::NotifyName' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.OnBlendOut_281BECD94263F241FAF2969DB65721E2
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2) == 0x000004, "Wrong alignment on Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2");
static_assert(sizeof(Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2) == 0x000008, "Wrong size on Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2");
static_assert(offsetof(Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2, NotifyName) == 0x000000, "Member 'Prop_wallfixer_C_OnBlendOut_281BECD94263F241FAF2969DB65721E2::NotifyName' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.OnInterrupted_281BECD94263F241FAF2969DB65721E2
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2) == 0x000004, "Wrong alignment on Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2");
static_assert(sizeof(Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2) == 0x000008, "Wrong size on Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2");
static_assert(offsetof(Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2, NotifyName) == 0x000000, "Member 'Prop_wallfixer_C_OnInterrupted_281BECD94263F241FAF2969DB65721E2::NotifyName' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.OnNotifyBegin_281BECD94263F241FAF2969DB65721E2
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2) == 0x000004, "Wrong alignment on Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2");
static_assert(sizeof(Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2) == 0x000008, "Wrong size on Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2");
static_assert(offsetof(Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2, NotifyName) == 0x000000, "Member 'Prop_wallfixer_C_OnNotifyBegin_281BECD94263F241FAF2969DB65721E2::NotifyName' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.OnNotifyEnd_281BECD94263F241FAF2969DB65721E2
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2) == 0x000004, "Wrong alignment on Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2");
static_assert(sizeof(Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2) == 0x000008, "Wrong size on Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2");
static_assert(offsetof(Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2, NotifyName) == 0x000000, "Member 'Prop_wallfixer_C_OnNotifyEnd_281BECD94263F241FAF2969DB65721E2::NotifyName' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.playerHandRelease_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_PlayerHandRelease_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong alignment on Prop_wallfixer_C_PlayerHandRelease_RMB");
static_assert(sizeof(Prop_wallfixer_C_PlayerHandRelease_RMB) == 0x000008, "Wrong size on Prop_wallfixer_C_PlayerHandRelease_RMB");
static_assert(offsetof(Prop_wallfixer_C_PlayerHandRelease_RMB, Param_Player) == 0x000000, "Member 'Prop_wallfixer_C_PlayerHandRelease_RMB::Param_Player' has a wrong offset!");

// Function prop_wallfixer.prop_wallfixer_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_wallfixer_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_wallfixer_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_wallfixer_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_wallfixer_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_wallfixer_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_wallfixer_C_PlayerHandUse_RMB, Param_Player) == 0x000000, "Member 'Prop_wallfixer_C_PlayerHandUse_RMB::Param_Player' has a wrong offset!");

}

