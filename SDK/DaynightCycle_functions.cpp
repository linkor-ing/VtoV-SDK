#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DaynightCycle

#include "Basic.hpp"

#include "DaynightCycle_classes.hpp"
#include "DaynightCycle_parameters.hpp"


namespace SDK
{

// Function daynightCycle.daynightCycle_C.newMinute__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FIntVector                       Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::NewMinute__DelegateSignature(const struct FIntVector& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "newMinute__DelegateSignature");

	Params::DaynightCycle_C_NewMinute__DelegateSignature Parms{};

	Parms.Time = std::move(Time);

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.ExecuteUbergraph_daynightCycle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::ExecuteUbergraph_daynightCycle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "ExecuteUbergraph_daynightCycle");

	Params::DaynightCycle_C_ExecuteUbergraph_daynightCycle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.applyColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::ApplyColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "applyColor");

	Params::DaynightCycle_C_ApplyColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.Rewind
// (BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::Rewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "Rewind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADaynightCycle_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.Dest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::Dest(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "Dest");

	Params::DaynightCycle_C_Dest Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.fogEvent
// (BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::FogEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "fogEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "ReceiveTick");

	Params::DaynightCycle_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.settingsApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_settings                 Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::SettingsApplied(const struct FStruct_settings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "settingsApplied");

	Params::DaynightCycle_C_SettingsApplied Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.gamemodeBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::GamemodeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "gamemodeBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.signalDeleted
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::SignalDeleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "signalDeleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.signalSaved
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::SignalSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "signalSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.stuffUpgraded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainGamemode_C*                  GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::StuffUpgraded(class AMainGamemode_C* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "stuffUpgraded");

	Params::DaynightCycle_C_StuffUpgraded Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.unfoc
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::Unfoc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "unfoc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.unfocused
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::Unfocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "unfocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.gamemodePreLoad
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::GamemodePreLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "gamemodePreLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.rainS
// (BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::RainS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "rainS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.ligh
// (BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::Ligh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "ligh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.AnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADaynightCycle_C::AnyKey(const struct FKey& Key, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "AnyKey");

	Params::DaynightCycle_C_AnyKey Parms{};

	Parms.Key = std::move(Key);
	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.gamemodeMakeKeys
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::GamemodeMakeKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "gamemodeMakeKeys");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.propRenderer_finishProps
// (Public, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::PropRenderer_finishProps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "propRenderer_finishProps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADaynightCycle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function daynightCycle.daynightCycle_C.loadtime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_TotalTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_Day                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::Loadtime(float Param_TotalTime, float Param_Day)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "loadtime");

	Params::DaynightCycle_C_Loadtime Parms{};

	Parms.Param_TotalTime = Param_TotalTime;
	Parms.Param_Day = Param_Day;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.isDream
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dream                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADaynightCycle_C::IsDream(bool Dream)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "isDream");

	Params::DaynightCycle_C_IsDream Parms{};

	Parms.Dream = Dream;

	UObject::ProcessEvent(Func, &Parms);
}


// Function daynightCycle.daynightCycle_C.makeOrder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FStruct_storeOrder               Struct_storeOrder                                      (Parm, OutParm, HasGetValueTypeHash)

void ADaynightCycle_C::MakeOrder(struct FStruct_storeOrder* Struct_storeOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "makeOrder");

	Params::DaynightCycle_C_MakeOrder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Struct_storeOrder != nullptr)
		*Struct_storeOrder = std::move(Parms.Struct_storeOrder);
}


// Function daynightCycle.daynightCycle_C.dailyTaskDriveSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Zero                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   One                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Two                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Three                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DishCheckAm                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::DailyTaskDriveSize(int32* Zero, int32* One, int32* Two, int32* Three, int32* DishCheckAm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "dailyTaskDriveSize");

	Params::DaynightCycle_C_DailyTaskDriveSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Zero != nullptr)
		*Zero = Parms.Zero;

	if (One != nullptr)
		*One = Parms.One;

	if (Two != nullptr)
		*Two = Parms.Two;

	if (Three != nullptr)
		*Three = Parms.Three;

	if (DishCheckAm != nullptr)
		*DishCheckAm = Parms.DishCheckAm;
}


// Function daynightCycle.daynightCycle_C.sendDriveBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AMainGamemode_C*                  Self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADaynightCycle_C::SendDriveBox(class AMainGamemode_C* Self2, bool* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "sendDriveBox");

	Params::DaynightCycle_C_SendDriveBox Parms{};

	Parms.Self2 = Self2;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function daynightCycle.daynightCycle_C.dreamInv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FStruct_save>             Invv                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ADreamBase_C*                     Base                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADaynightCycle_C::DreamInv(TArray<struct FStruct_save>& Invv, class ADreamBase_C** Base)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("daynightCycle_C", "dreamInv");

	Params::DaynightCycle_C_DreamInv Parms{};

	Parms.Invv = std::move(Invv);

	UObject::ProcessEvent(Func, &Parms);

	Invv = std::move(Parms.Invv);

	if (Base != nullptr)
		*Base = Parms.Base;
}

}

