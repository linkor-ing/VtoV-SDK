#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TriggerTimer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_triggerSave_structs.hpp"


namespace SDK::Params
{

// Function triggerTimer.triggerTimer_C.getTriggerData
// 0x0350 (0x0350 - 0x0000)
struct TriggerTimer_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FVector>                        Vs;                                                // 0x00F0(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_triggerSave                    CallFunc_getTriggerData_data;                      // 0x0160(0x00F0)(HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array_2;                          // 0x0250(0x0010)(ReferenceParm)
	struct FStruct_triggerSave                    K2Node_SetFieldsInStruct_StructOut;                // 0x0260(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(TriggerTimer_C_GetTriggerData) == 0x000010, "Wrong alignment on TriggerTimer_C_GetTriggerData");
static_assert(sizeof(TriggerTimer_C_GetTriggerData) == 0x000350, "Wrong size on TriggerTimer_C_GetTriggerData");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, Data) == 0x000000, "Member 'TriggerTimer_C_GetTriggerData::Data' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, Vs) == 0x0000F0, "Member 'TriggerTimer_C_GetTriggerData::Vs' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, Temp_int_Array_Index_Variable) == 0x000100, "Member 'TriggerTimer_C_GetTriggerData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, K2Node_MakeArray_Array) == 0x000108, "Member 'TriggerTimer_C_GetTriggerData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Array_Get_Item) == 0x000118, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000124, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000128, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_MakeVector_ReturnValue) == 0x00012C, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, K2Node_MakeArray_Array_1) == 0x000138, "Member 'TriggerTimer_C_GetTriggerData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, Temp_int_Loop_Counter_Variable) == 0x000148, "Member 'TriggerTimer_C_GetTriggerData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, CallFunc_getTriggerData_data) == 0x000160, "Member 'TriggerTimer_C_GetTriggerData::CallFunc_getTriggerData_data' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, K2Node_MakeArray_Array_2) == 0x000250, "Member 'TriggerTimer_C_GetTriggerData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_GetTriggerData, K2Node_SetFieldsInStruct_StructOut) == 0x000260, "Member 'TriggerTimer_C_GetTriggerData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function triggerTimer.triggerTimer_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct TriggerTimer_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadTriggerData_return;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TriggerTimer_C_LoadTriggerData) == 0x000010, "Wrong alignment on TriggerTimer_C_LoadTriggerData");
static_assert(sizeof(TriggerTimer_C_LoadTriggerData) == 0x000100, "Wrong size on TriggerTimer_C_LoadTriggerData");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, Data) == 0x000000, "Member 'TriggerTimer_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, Return) == 0x0000F0, "Member 'TriggerTimer_C_LoadTriggerData::Return' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, CallFunc_loadTriggerData_return) == 0x0000F1, "Member 'TriggerTimer_C_LoadTriggerData::CallFunc_loadTriggerData_return' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'TriggerTimer_C_LoadTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'TriggerTimer_C_LoadTriggerData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, CallFunc_Array_Get_Item_2) == 0x0000F9, "Member 'TriggerTimer_C_LoadTriggerData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_LoadTriggerData, CallFunc_Array_Get_Item_3) == 0x0000FA, "Member 'TriggerTimer_C_LoadTriggerData::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function triggerTimer.triggerTimer_C.newMinute
// 0x000C (0x000C - 0x0000)
struct TriggerTimer_C_NewMinute final
{
public:
	struct FIntVector                             Time;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TriggerTimer_C_NewMinute) == 0x000004, "Wrong alignment on TriggerTimer_C_NewMinute");
static_assert(sizeof(TriggerTimer_C_NewMinute) == 0x00000C, "Wrong size on TriggerTimer_C_NewMinute");
static_assert(offsetof(TriggerTimer_C_NewMinute, Time) == 0x000000, "Member 'TriggerTimer_C_NewMinute::Time' has a wrong offset!");

// Function triggerTimer.triggerTimer_C.ExecuteUbergraph_triggerTimer
// 0x0060 (0x0060 - 0x0000)
struct TriggerTimer_C_ExecuteUbergraph_triggerTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_CustomEvent_time;                           // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FIntVector& Time)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IInt_ttrigger_C>       K2Node_DynamicCast_AsInt_Ttrigger;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TriggerTimer_C_ExecuteUbergraph_triggerTimer) == 0x000008, "Wrong alignment on TriggerTimer_C_ExecuteUbergraph_triggerTimer");
static_assert(sizeof(TriggerTimer_C_ExecuteUbergraph_triggerTimer) == 0x000060, "Wrong size on TriggerTimer_C_ExecuteUbergraph_triggerTimer");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, EntryPoint) == 0x000000, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000008, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, Temp_int_Array_Index_Variable) == 0x000014, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, K2Node_CustomEvent_time) == 0x00001C, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::K2Node_CustomEvent_time' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_Array_Get_Item) == 0x000028, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, K2Node_DynamicCast_AsInt_Ttrigger) == 0x000040, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::K2Node_DynamicCast_AsInt_Ttrigger' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000059, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TriggerTimer_C_ExecuteUbergraph_triggerTimer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005A, "Member 'TriggerTimer_C_ExecuteUbergraph_triggerTimer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

