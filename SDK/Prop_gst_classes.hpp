#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_gst

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Prop_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass prop_gst.prop_gst_C
// 0x0060 (0x03D8 - 0x0378)
class AProp_gst_C final : public AProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prop_gst_C;                         // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        breakB;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        breakA;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            Prop_to_B;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            A_to_prop;                                         // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc_B;                                             // 0x03A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_A;                                           // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 Actor_B;                                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component_A;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component_B;                                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fix_A;                                             // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Fix_B;                                             // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_prop_gst(int32 EntryPoint);
	void BndEvt__prop_gst_prop_to_B_K2Node_ComponentBoundEvent_1_ConstraintBrokenSignature__DelegateSignature(int32 ConstraintIndex);
	void BndEvt__prop_gst_A_to_prop_K2Node_ComponentBoundEvent_0_ConstraintBrokenSignature__DelegateSignature(int32 ConstraintIndex);
	void Attach();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"prop_gst_C">();
	}
	static class AProp_gst_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_gst_C>();
	}
};
static_assert(alignof(AProp_gst_C) == 0x000008, "Wrong alignment on AProp_gst_C");
static_assert(sizeof(AProp_gst_C) == 0x0003D8, "Wrong size on AProp_gst_C");
static_assert(offsetof(AProp_gst_C, UberGraphFrame_Prop_gst_C) == 0x000378, "Member 'AProp_gst_C::UberGraphFrame_Prop_gst_C' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, breakB) == 0x000380, "Member 'AProp_gst_C::breakB' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, breakA) == 0x000388, "Member 'AProp_gst_C::breakA' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Prop_to_B) == 0x000390, "Member 'AProp_gst_C::Prop_to_B' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, A_to_prop) == 0x000398, "Member 'AProp_gst_C::A_to_prop' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Loc_B) == 0x0003A0, "Member 'AProp_gst_C::Loc_B' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Actor_A) == 0x0003B0, "Member 'AProp_gst_C::Actor_A' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Actor_B) == 0x0003B8, "Member 'AProp_gst_C::Actor_B' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Component_A) == 0x0003C0, "Member 'AProp_gst_C::Component_A' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Component_B) == 0x0003C8, "Member 'AProp_gst_C::Component_B' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Fix_A) == 0x0003D0, "Member 'AProp_gst_C::Fix_A' has a wrong offset!");
static_assert(offsetof(AProp_gst_C, Fix_B) == 0x0003D1, "Member 'AProp_gst_C::Fix_B' has a wrong offset!");

}

