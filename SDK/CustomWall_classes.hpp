#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomWall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_physSound_structs.hpp"
#include "Actor_save_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass customWall.customWall_C
// 0x0068 (0x02B0 - 0x0248)
class ACustomWall_C final : public AActor_save_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CustomWall_C;                       // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   NoNav;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Shape;                                             // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Material;                                          // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FStruct_physSound                      Phys;                                              // 0x0270(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_customWall(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ImpactDamageCPP(float Param_Damage, const struct FHitResult& Hit, class AActor* Actor, const struct FVector& Impact);
	void ImpactSquishCPP(class UPrimitiveComponent* Component);
	void ExitTheWater();
	void EnteredTheWater();
	void Damage(float Param_Damage, const struct FVector& Location, const struct FRotator& Rotation);
	void Eff();
	void Fix();
	void Init();
	void SetHealth();
	void SetHealthCracks();
	void AddDamage(class AActor* Actor, float Param_Damage, const struct FHitResult& Hit, const struct FVector& Impact, bool SkipSetting);
	void UserConstructionScript();
	void LoadData(const struct FStruct_save& Data, bool* Return);
	void GetData(struct FStruct_save* Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"customWall_C">();
	}
	static class ACustomWall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACustomWall_C>();
	}
};
static_assert(alignof(ACustomWall_C) == 0x000008, "Wrong alignment on ACustomWall_C");
static_assert(sizeof(ACustomWall_C) == 0x0002B0, "Wrong size on ACustomWall_C");
static_assert(offsetof(ACustomWall_C, UberGraphFrame_CustomWall_C) == 0x000248, "Member 'ACustomWall_C::UberGraphFrame_CustomWall_C' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, NoNav) == 0x000250, "Member 'ACustomWall_C::NoNav' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, Mesh) == 0x000258, "Member 'ACustomWall_C::Mesh' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, Health) == 0x000260, "Member 'ACustomWall_C::Health' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, Shape) == 0x000264, "Member 'ACustomWall_C::Shape' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, MaxHealth) == 0x000268, "Member 'ACustomWall_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, Material) == 0x00026C, "Member 'ACustomWall_C::Material' has a wrong offset!");
static_assert(offsetof(ACustomWall_C, Phys) == 0x000270, "Member 'ACustomWall_C::Phys' has a wrong offset!");

}

