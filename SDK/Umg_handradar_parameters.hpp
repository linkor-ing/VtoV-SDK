#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_handradar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function umg_handradar.umg_handradar_C.ExecuteUbergraph_umg_handradar
// 0x0408 (0x0408 - 0x0000)
struct Umg_handradar_C_ExecuteUbergraph_umg_handradar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_LowEntry_LocalVariable_Value__Object;       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x00D8(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	class UUmg_radarPoint_C*                      CallFunc_Create_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0240(0x0018)()
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0258(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E3[0x1];                                      // 0x02E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0378(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0390(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x03A8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x03C0(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x03D8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x03F0(0x0018)()
};
static_assert(alignof(Umg_handradar_C_ExecuteUbergraph_umg_handradar) == 0x000008, "Wrong alignment on Umg_handradar_C_ExecuteUbergraph_umg_handradar");
static_assert(sizeof(Umg_handradar_C_ExecuteUbergraph_umg_handradar) == 0x000408, "Wrong size on Umg_handradar_C_ExecuteUbergraph_umg_handradar");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, EntryPoint) == 0x000000, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_obj_static_obj) == 0x000008, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Event_MyGeometry) == 0x00001C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Event_InDeltaTime) == 0x000054, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000064, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000070, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Get_Item) == 0x000080, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_LowEntry_LocalVariable_Value__Object) == 0x0000A8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x0000B4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_text_Variable) == 0x0000B8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_bool_Variable) == 0x0000D0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_text_Variable_1) == 0x0000D8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_bool_Variable_1) == 0x0000F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, Temp_object_Variable) == 0x0000F8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Create_ReturnValue) == 0x000108, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Add_ReturnValue) == 0x000110, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Array_Contains_ReturnValue) == 0x000114, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000118, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue) == 0x000120, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_AddChild_ReturnValue) == 0x000128, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000130, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00013C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000148, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00014C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X) == 0x000158, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y) == 0x00015C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z) == 0x000160, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Vector_Distance_ReturnValue) == 0x000164, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_DegAtan2_ReturnValue) == 0x000168, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00016C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000170, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000174, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_FloatFloat_ReturnValue) == 0x000178, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00017C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_MakeVector2D_ReturnValue) == 0x000180, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000188, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetActorForwardVector_ReturnValue) == 0x000190, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x00019C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Normal_ReturnValue) == 0x0001A8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X_1) == 0x0001B4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y_1) == 0x0001B8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z_1) == 0x0001BC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001C0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_DegAtan2_ReturnValue_1) == 0x0001C4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0001C8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001CC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001D0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x0001D4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0001D8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001DC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BooleanAND_ReturnValue) == 0x0001E0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001E4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001EC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetRotated2D_ReturnValue) == 0x0001F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0001F8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000200, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000210, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000218, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000224, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Vector_Distance_ReturnValue_1) == 0x000230, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000234, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue) == 0x000240, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000258, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002E0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E1, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E2, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Time) == 0x0002E4, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Distance) == 0x0002E8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Location) == 0x0002EC, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ImpactPoint) == 0x0002F8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_Normal) == 0x000304, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ImpactNormal) == 0x000310, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_PhysMat) == 0x000320, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitActor) == 0x000328, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitComponent) == 0x000330, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitBoneName) == 0x000338, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_HitItem) == 0x000340, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_ElementIndex) == 0x000344, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_FaceIndex) == 0x000348, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_TraceStart) == 0x00034C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_X_2) == 0x000364, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Y_2) == 0x000368, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_BreakVector_Z_2) == 0x00036C, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000370, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000374, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000378, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000390, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Select_Default) == 0x0003A8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, K2Node_Select_Default_1) == 0x0003C0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x0003D8, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_ExecuteUbergraph_umg_handradar, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x0003F0, "Member 'Umg_handradar_C_ExecuteUbergraph_umg_handradar::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");

// Function umg_handradar.umg_handradar_C.Tick
// 0x003C (0x003C - 0x0000)
struct Umg_handradar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_handradar_C_Tick) == 0x000004, "Wrong alignment on Umg_handradar_C_Tick");
static_assert(sizeof(Umg_handradar_C_Tick) == 0x00003C, "Wrong size on Umg_handradar_C_Tick");
static_assert(offsetof(Umg_handradar_C_Tick, MyGeometry) == 0x000000, "Member 'Umg_handradar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Umg_handradar_C_Tick, InDeltaTime) == 0x000038, "Member 'Umg_handradar_C_Tick::InDeltaTime' has a wrong offset!");

}

