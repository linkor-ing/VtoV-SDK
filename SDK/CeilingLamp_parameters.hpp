#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CeilingLamp

#include "Basic.hpp"

#include "Struct_triggerSave_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ceilingLamp.ceilingLamp_C.ExecuteUbergraph_ceilingLamp
// 0x0040 (0x0040 - 0x0000)
struct CeilingLamp_C_ExecuteUbergraph_ceilingLamp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Active_calc, bool Active_downl, bool Active_coords, bool Active_play, bool Active_light)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3026[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainGamemode_C*                        CallFunc_getMainGamemode_AsMain_Gamemode;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_active_calc;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_downl;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_coords;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_play;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_active_light;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3027[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChildActor_ReturnValue_1;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3028[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp) == 0x000008, "Wrong alignment on CeilingLamp_C_ExecuteUbergraph_ceilingLamp");
static_assert(sizeof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp) == 0x000040, "Wrong size on CeilingLamp_C_ExecuteUbergraph_ceilingLamp");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, EntryPoint) == 0x000000, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::EntryPoint' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, CallFunc_getMainGamemode_AsMain_Gamemode) == 0x000018, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::CallFunc_getMainGamemode_AsMain_Gamemode' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CustomEvent_active_calc) == 0x000020, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CustomEvent_active_calc' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CustomEvent_active_downl) == 0x000021, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CustomEvent_active_downl' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CustomEvent_active_coords) == 0x000022, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CustomEvent_active_coords' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CustomEvent_active_play) == 0x000023, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CustomEvent_active_play' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, K2Node_CustomEvent_active_light) == 0x000024, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::K2Node_CustomEvent_active_light' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, CallFunc_IsChildActor_ReturnValue) == 0x00002C, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, CallFunc_IsChildActor_ReturnValue_1) == 0x00002D, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::CallFunc_IsChildActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_ExecuteUbergraph_ceilingLamp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'CeilingLamp_C_ExecuteUbergraph_ceilingLamp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.powerChanged
// 0x0005 (0x0005 - 0x0000)
struct CeilingLamp_C_PowerChanged final
{
public:
	bool                                          Active_calc;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_downl;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_coords;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_play;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Active_light;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CeilingLamp_C_PowerChanged) == 0x000001, "Wrong alignment on CeilingLamp_C_PowerChanged");
static_assert(sizeof(CeilingLamp_C_PowerChanged) == 0x000005, "Wrong size on CeilingLamp_C_PowerChanged");
static_assert(offsetof(CeilingLamp_C_PowerChanged, Active_calc) == 0x000000, "Member 'CeilingLamp_C_PowerChanged::Active_calc' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_PowerChanged, Active_downl) == 0x000001, "Member 'CeilingLamp_C_PowerChanged::Active_downl' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_PowerChanged, Active_coords) == 0x000002, "Member 'CeilingLamp_C_PowerChanged::Active_coords' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_PowerChanged, Active_play) == 0x000003, "Member 'CeilingLamp_C_PowerChanged::Active_play' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_PowerChanged, Active_light) == 0x000004, "Member 'CeilingLamp_C_PowerChanged::Active_light' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.toggle
// 0x0001 (0x0001 - 0x0000)
struct CeilingLamp_C_Toggle final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CeilingLamp_C_Toggle) == 0x000001, "Wrong alignment on CeilingLamp_C_Toggle");
static_assert(sizeof(CeilingLamp_C_Toggle) == 0x000001, "Wrong size on CeilingLamp_C_Toggle");
static_assert(offsetof(CeilingLamp_C_Toggle, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'CeilingLamp_C_Toggle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.Deactivate
// 0x0001 (0x0001 - 0x0000)
struct CeilingLamp_C_Deactivate final
{
public:
	bool                                          Param_HasPower;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CeilingLamp_C_Deactivate) == 0x000001, "Wrong alignment on CeilingLamp_C_Deactivate");
static_assert(sizeof(CeilingLamp_C_Deactivate) == 0x000001, "Wrong size on CeilingLamp_C_Deactivate");
static_assert(offsetof(CeilingLamp_C_Deactivate, Param_HasPower) == 0x000000, "Member 'CeilingLamp_C_Deactivate::Param_HasPower' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.setVis
// 0x0020 (0x0020 - 0x0000)
struct CeilingLamp_C_SetVis final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3029[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CeilingLamp_C_SetVis) == 0x000008, "Wrong alignment on CeilingLamp_C_SetVis");
static_assert(sizeof(CeilingLamp_C_SetVis) == 0x000020, "Wrong size on CeilingLamp_C_SetVis");
static_assert(offsetof(CeilingLamp_C_SetVis, Temp_bool_Variable) == 0x000000, "Member 'CeilingLamp_C_SetVis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_SetVis, Temp_object_Variable) == 0x000008, "Member 'CeilingLamp_C_SetVis::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_SetVis, Temp_object_Variable_1) == 0x000010, "Member 'CeilingLamp_C_SetVis::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_SetVis, K2Node_Select_Default) == 0x000018, "Member 'CeilingLamp_C_SetVis::K2Node_Select_Default' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct CeilingLamp_C_SetActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CeilingLamp_C_SetActive) == 0x000001, "Wrong alignment on CeilingLamp_C_SetActive");
static_assert(sizeof(CeilingLamp_C_SetActive) == 0x000001, "Wrong size on CeilingLamp_C_SetActive");
static_assert(offsetof(CeilingLamp_C_SetActive, Param_IsActive) == 0x000000, "Member 'CeilingLamp_C_SetActive::Param_IsActive' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.loadTriggerData
// 0x0100 (0x0100 - 0x0000)
struct CeilingLamp_C_LoadTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadTriggerData_return;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302A[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CeilingLamp_C_LoadTriggerData) == 0x000010, "Wrong alignment on CeilingLamp_C_LoadTriggerData");
static_assert(sizeof(CeilingLamp_C_LoadTriggerData) == 0x000100, "Wrong size on CeilingLamp_C_LoadTriggerData");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, Data) == 0x000000, "Member 'CeilingLamp_C_LoadTriggerData::Data' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, Return) == 0x0000F0, "Member 'CeilingLamp_C_LoadTriggerData::Return' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, CallFunc_loadTriggerData_return) == 0x0000F1, "Member 'CeilingLamp_C_LoadTriggerData::CallFunc_loadTriggerData_return' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'CeilingLamp_C_LoadTriggerData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'CeilingLamp_C_LoadTriggerData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_LoadTriggerData, CallFunc_Array_Get_Item_2) == 0x0000FC, "Member 'CeilingLamp_C_LoadTriggerData::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function ceilingLamp.ceilingLamp_C.getTriggerData
// 0x02F0 (0x02F0 - 0x0000)
struct CeilingLamp_C_GetTriggerData final
{
public:
	struct FStruct_triggerSave                    Data;                                              // 0x0000(0x00F0)(Parm, OutParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	struct FStruct_triggerSave                    CallFunc_getTriggerData_data;                      // 0x0110(0x00F0)(HasGetValueTypeHash)
	struct FStruct_triggerSave                    K2Node_SetFieldsInStruct_StructOut;                // 0x0200(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(CeilingLamp_C_GetTriggerData) == 0x000010, "Wrong alignment on CeilingLamp_C_GetTriggerData");
static_assert(sizeof(CeilingLamp_C_GetTriggerData) == 0x0002F0, "Wrong size on CeilingLamp_C_GetTriggerData");
static_assert(offsetof(CeilingLamp_C_GetTriggerData, Data) == 0x000000, "Member 'CeilingLamp_C_GetTriggerData::Data' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_GetTriggerData, K2Node_MakeArray_Array) == 0x0000F0, "Member 'CeilingLamp_C_GetTriggerData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_GetTriggerData, K2Node_MakeArray_Array_1) == 0x000100, "Member 'CeilingLamp_C_GetTriggerData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_GetTriggerData, CallFunc_getTriggerData_data) == 0x000110, "Member 'CeilingLamp_C_GetTriggerData::CallFunc_getTriggerData_data' has a wrong offset!");
static_assert(offsetof(CeilingLamp_C_GetTriggerData, K2Node_SetFieldsInStruct_StructOut) == 0x000200, "Member 'CeilingLamp_C_GetTriggerData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

