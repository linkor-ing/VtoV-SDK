#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubPawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass subPawn.subPawn_C
// 0x0018 (0x0298 - 0x0280)
class ASubPawn_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFloatingPawnMovement*                  FloatingPawnMovement;                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_subPawn(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnSuccess_5855052741EFBC3D0EA637A2B93F62CD(EPathFollowingResult MovementResult);
	void OnFail_5855052741EFBC3D0EA637A2B93F62CD(EPathFollowingResult MovementResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"subPawn_C">();
	}
	static class ASubPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASubPawn_C>();
	}
};
static_assert(alignof(ASubPawn_C) == 0x000008, "Wrong alignment on ASubPawn_C");
static_assert(sizeof(ASubPawn_C) == 0x000298, "Wrong size on ASubPawn_C");
static_assert(offsetof(ASubPawn_C, UberGraphFrame) == 0x000280, "Member 'ASubPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASubPawn_C, Sphere) == 0x000288, "Member 'ASubPawn_C::Sphere' has a wrong offset!");
static_assert(offsetof(ASubPawn_C, FloatingPawnMovement) == 0x000290, "Member 'ASubPawn_C::FloatingPawnMovement' has a wrong offset!");

}

