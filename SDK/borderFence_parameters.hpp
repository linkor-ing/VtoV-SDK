#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: borderFence

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function borderFence.borderFence_C.Build
// 0x0050 (0x0050 - 0x0000)
struct borderFence_C_Build final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddInstanceWorldSpace_ReturnValue;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(borderFence_C_Build) == 0x000010, "Wrong alignment on borderFence_C_Build");
static_assert(sizeof(borderFence_C_Build) == 0x000050, "Wrong size on borderFence_C_Build");
static_assert(offsetof(borderFence_C_Build, Temp_int_Array_Index_Variable) == 0x000000, "Member 'borderFence_C_Build::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'borderFence_C_Build::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'borderFence_C_Build::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'borderFence_C_Build::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, CallFunc_Array_Get_Item) == 0x000010, "Member 'borderFence_C_Build::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'borderFence_C_Build::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Build, CallFunc_AddInstanceWorldSpace_ReturnValue) == 0x000044, "Member 'borderFence_C_Build::CallFunc_AddInstanceWorldSpace_ReturnValue' has a wrong offset!");

// Function borderFence.borderFence_C.prepare
// 0x0370 (0x0370 - 0x0000)
struct borderFence_C_Prepare final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj_1;                         // 0x0040(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x01FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_287[0x1];                                      // 0x0287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(borderFence_C_Prepare) == 0x000010, "Wrong alignment on borderFence_C_Prepare");
static_assert(sizeof(borderFence_C_Prepare) == 0x000370, "Wrong size on borderFence_C_Prepare");
static_assert(offsetof(borderFence_C_Prepare, Temp_object_Variable) == 0x000000, "Member 'borderFence_C_Prepare::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, Temp_int_Variable) == 0x000010, "Member 'borderFence_C_Prepare::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'borderFence_C_Prepare::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'borderFence_C_Prepare::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'borderFence_C_Prepare::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'borderFence_C_Prepare::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Greater_IntInt_ReturnValue) == 0x000021, "Member 'borderFence_C_Prepare::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_obj_static_obj) == 0x000028, "Member 'borderFence_C_Prepare::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'borderFence_C_Prepare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_obj_static_obj_1) == 0x000040, "Member 'borderFence_C_Prepare::CallFunc_obj_static_obj_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'borderFence_C_Prepare::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'borderFence_C_Prepare::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'borderFence_C_Prepare::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'borderFence_C_Prepare::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'borderFence_C_Prepare::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x00008C, "Member 'borderFence_C_Prepare::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'borderFence_C_Prepare::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000A4, "Member 'borderFence_C_Prepare::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'borderFence_C_Prepare::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000BC, "Member 'borderFence_C_Prepare::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, Temp_object_Variable_1) == 0x0000C8, "Member 'borderFence_C_Prepare::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'borderFence_C_Prepare::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000E4, "Member 'borderFence_C_Prepare::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x00016C, "Member 'borderFence_C_Prepare::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000170, "Member 'borderFence_C_Prepare::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_bBlockingHit) == 0x00017C, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017D, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Time) == 0x000180, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Distance) == 0x000184, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ImpactPoint) == 0x000194, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ImpactNormal) == 0x0001AC, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_TraceStart) == 0x0001E4, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x0001FC, "Member 'borderFence_C_Prepare::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x000284, "Member 'borderFence_C_Prepare::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000285, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000286, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Time_1) == 0x000288, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Distance_1) == 0x00028C, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Location_1) == 0x000290, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00029C, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_Normal_1) == 0x0002A8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002B4, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_PhysMat_1) == 0x0002C0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitActor_1) == 0x0002C8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitComponent_1) == 0x0002D0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002D8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_HitItem_1) == 0x0002E0, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002E4, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002E8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_TraceStart_1) == 0x0002EC, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002F8, "Member 'borderFence_C_Prepare::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000304, "Member 'borderFence_C_Prepare::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Vector_Distance_ReturnValue) == 0x000308, "Member 'borderFence_C_Prepare::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00030C, "Member 'borderFence_C_Prepare::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_FindLookAtRotation_ReturnValue) == 0x000310, "Member 'borderFence_C_Prepare::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_MakeVector_ReturnValue) == 0x00031C, "Member 'borderFence_C_Prepare::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_MakeTransform_ReturnValue) == 0x000330, "Member 'borderFence_C_Prepare::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(borderFence_C_Prepare, CallFunc_Array_Add_ReturnValue) == 0x000360, "Member 'borderFence_C_Prepare::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function borderFence.borderFence_C.ExecuteUbergraph_borderFence
// 0x0004 (0x0004 - 0x0000)
struct borderFence_C_ExecuteUbergraph_borderFence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(borderFence_C_ExecuteUbergraph_borderFence) == 0x000004, "Wrong alignment on borderFence_C_ExecuteUbergraph_borderFence");
static_assert(sizeof(borderFence_C_ExecuteUbergraph_borderFence) == 0x000004, "Wrong size on borderFence_C_ExecuteUbergraph_borderFence");
static_assert(offsetof(borderFence_C_ExecuteUbergraph_borderFence, EntryPoint) == 0x000000, "Member 'borderFence_C_ExecuteUbergraph_borderFence::EntryPoint' has a wrong offset!");

}

