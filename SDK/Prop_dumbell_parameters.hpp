#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_dumbell

#include "Basic.hpp"


namespace SDK::Params
{

// Function prop_dumbell.prop_dumbell_C.ExecuteUbergraph_prop_dumbell
// 0x0050 (0x0050 - 0x0000)
struct Prop_dumbell_C_ExecuteUbergraph_prop_dumbell final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveSlot_C*                            CallFunc_getSaveSlot_saveSlot;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_player_C>         CallFunc_updateStrAgl_self_CastInput;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell) == 0x000008, "Wrong alignment on Prop_dumbell_C_ExecuteUbergraph_prop_dumbell");
static_assert(sizeof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell) == 0x000050, "Wrong size on Prop_dumbell_C_ExecuteUbergraph_prop_dumbell");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, EntryPoint) == 0x000000, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_getSaveSlot_saveSlot) == 0x000008, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_getSaveSlot_saveSlot' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, K2Node_Event_player) == 0x000010, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_updateStrAgl_self_CastInput) == 0x000018, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_updateStrAgl_self_CastInput' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00002C, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_dumbell_C_ExecuteUbergraph_prop_dumbell, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x000048, "Member 'Prop_dumbell_C_ExecuteUbergraph_prop_dumbell::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");

// Function prop_dumbell.prop_dumbell_C.playerHandUse_RMB
// 0x0008 (0x0008 - 0x0000)
struct Prop_dumbell_C_PlayerHandUse_RMB final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_dumbell_C_PlayerHandUse_RMB) == 0x000008, "Wrong alignment on Prop_dumbell_C_PlayerHandUse_RMB");
static_assert(sizeof(Prop_dumbell_C_PlayerHandUse_RMB) == 0x000008, "Wrong size on Prop_dumbell_C_PlayerHandUse_RMB");
static_assert(offsetof(Prop_dumbell_C_PlayerHandUse_RMB, Player) == 0x000000, "Member 'Prop_dumbell_C_PlayerHandUse_RMB::Player' has a wrong offset!");

}

