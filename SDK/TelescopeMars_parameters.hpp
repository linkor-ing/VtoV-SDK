#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TelescopeMars

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function telescopeMars.telescopeMars_C.ExecuteUbergraph_telescopeMars
// 0x0248 (0x0248 - 0x0000)
struct TelescopeMars_C_ExecuteUbergraph_telescopeMars final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_kick;                                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_5;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit_1;                                // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_Event_name;                                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_4;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_fast;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_3;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarsStruct_build_Skeleton_AnimBlueprint_C* K2Node_DynamicCast_AsMars_Struct_Build_Skeleton_Anim_Blueprint; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_1;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_2;        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_3;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player_2;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainPlayer_C*                          K2Node_Event_player_1;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_hit;                                  // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_damage;                               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainPlayer_C*                          K2Node_Event_player;                               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_4;        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_play;                           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VictoryFloatPlusEquals_FloatOut_5;        // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_ExecuteUbergraph_telescopeMars) == 0x000008, "Wrong alignment on TelescopeMars_C_ExecuteUbergraph_telescopeMars");
static_assert(sizeof(TelescopeMars_C_ExecuteUbergraph_telescopeMars) == 0x000248, "Wrong size on TelescopeMars_C_ExecuteUbergraph_telescopeMars");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, EntryPoint) == 0x000000, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::EntryPoint' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_kick) == 0x000014, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_kick' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player_5) == 0x000018, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player_5' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_hit_1) == 0x000020, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_hit_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_name) == 0x0000A8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_name' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_DeltaSeconds) == 0x0000B0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player_4) == 0x0000B8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_CustomEvent_fast) == 0x0000C0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_CustomEvent_fast' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C1, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000C4, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000CC, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player_3) == 0x0000D0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetAnimInstance_ReturnValue) == 0x0000D8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_DynamicCast_AsMars_Struct_Build_Skeleton_Anim_Blueprint) == 0x0000E0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_DynamicCast_AsMars_Struct_Build_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_SelectFloat_ReturnValue_1) == 0x0000EC, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F4, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut) == 0x0000F8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_FClamp_ReturnValue) == 0x0000FC, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000100, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000104, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_SelectFloat_ReturnValue_2) == 0x000108, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_SelectFloat_ReturnValue_3) == 0x00010C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000110, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000114, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut_1) == 0x000118, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut_2) == 0x00011C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_SelectFloat_ReturnValue_4) == 0x000120, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_BooleanOR_ReturnValue_1) == 0x000124, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000128, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut_3) == 0x00012C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_BooleanOR_ReturnValue_2) == 0x000130, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_BooleanOR_ReturnValue_3) == 0x000131, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_BooleanOR_ReturnValue_4) == 0x000132, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player_2) == 0x000138, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player_1) == 0x000140, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_hit) == 0x000148, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_hit' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_damage) == 0x0001D0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_damage' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_Event_player) == 0x0001D8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_Event_player' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Ease_ReturnValue_1) == 0x0001E0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x0001E4, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0001E8, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut_4) == 0x0001EC, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut_4' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0001F0, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetForwardVector_ReturnValue) == 0x0001F4, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetUpVector_ReturnValue) == 0x000200, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetRightVector_ReturnValue) == 0x00020C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, K2Node_CustomEvent_play) == 0x000218, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::K2Node_CustomEvent_play' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x00021C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_RandomFloat_ReturnValue) == 0x000220, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000224, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_VictoryFloatPlusEquals_FloatOut_5) == 0x000228, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_VictoryFloatPlusEquals_FloatOut_5' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00022C, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_ExecuteUbergraph_telescopeMars, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000238, "Member 'TelescopeMars_C_ExecuteUbergraph_telescopeMars::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.lookAtCam
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_LookAtCam final
{
public:
	bool                                          Play;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_LookAtCam) == 0x000001, "Wrong alignment on TelescopeMars_C_LookAtCam");
static_assert(sizeof(TelescopeMars_C_LookAtCam) == 0x000001, "Wrong size on TelescopeMars_C_LookAtCam");
static_assert(offsetof(TelescopeMars_C_LookAtCam, Play) == 0x000000, "Member 'TelescopeMars_C_LookAtCam::Play' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.thrown
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_Thrown final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_Thrown) == 0x000008, "Wrong alignment on TelescopeMars_C_Thrown");
static_assert(sizeof(TelescopeMars_C_Thrown) == 0x000008, "Wrong size on TelescopeMars_C_Thrown");
static_assert(offsetof(TelescopeMars_C_Thrown, Player) == 0x000000, "Member 'TelescopeMars_C_Thrown::Player' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.damageByPlayer
// 0x0098 (0x0098 - 0x0000)
struct TelescopeMars_C_DamageByPlayer final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Damage;                                            // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_DamageByPlayer) == 0x000008, "Wrong alignment on TelescopeMars_C_DamageByPlayer");
static_assert(sizeof(TelescopeMars_C_DamageByPlayer) == 0x000098, "Wrong size on TelescopeMars_C_DamageByPlayer");
static_assert(offsetof(TelescopeMars_C_DamageByPlayer, Player) == 0x000000, "Member 'TelescopeMars_C_DamageByPlayer::Player' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_DamageByPlayer, Hit) == 0x000008, "Member 'TelescopeMars_C_DamageByPlayer::Hit' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_DamageByPlayer, Damage) == 0x000090, "Member 'TelescopeMars_C_DamageByPlayer::Damage' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.playerUnequip
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_PlayerUnequip final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_PlayerUnequip) == 0x000008, "Wrong alignment on TelescopeMars_C_PlayerUnequip");
static_assert(sizeof(TelescopeMars_C_PlayerUnequip) == 0x000008, "Wrong size on TelescopeMars_C_PlayerUnequip");
static_assert(offsetof(TelescopeMars_C_PlayerUnequip, Player) == 0x000000, "Member 'TelescopeMars_C_PlayerUnequip::Player' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.playerHold
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_PlayerHold final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_PlayerHold) == 0x000008, "Wrong alignment on TelescopeMars_C_PlayerHold");
static_assert(sizeof(TelescopeMars_C_PlayerHold) == 0x000008, "Wrong size on TelescopeMars_C_PlayerHold");
static_assert(offsetof(TelescopeMars_C_PlayerHold, Player) == 0x000000, "Member 'TelescopeMars_C_PlayerHold::Player' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.launchBuild
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_LaunchBuild final
{
public:
	bool                                          Param_Fast;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_LaunchBuild) == 0x000001, "Wrong alignment on TelescopeMars_C_LaunchBuild");
static_assert(sizeof(TelescopeMars_C_LaunchBuild) == 0x000001, "Wrong size on TelescopeMars_C_LaunchBuild");
static_assert(offsetof(TelescopeMars_C_LaunchBuild, Param_Fast) == 0x000000, "Member 'TelescopeMars_C_LaunchBuild::Param_Fast' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.playerR
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_PlayerR final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_PlayerR) == 0x000008, "Wrong alignment on TelescopeMars_C_PlayerR");
static_assert(sizeof(TelescopeMars_C_PlayerR) == 0x000008, "Wrong size on TelescopeMars_C_PlayerR");
static_assert(offsetof(TelescopeMars_C_PlayerR, Player) == 0x000000, "Member 'TelescopeMars_C_PlayerR::Player' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TelescopeMars_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_ReceiveTick) == 0x000004, "Wrong alignment on TelescopeMars_C_ReceiveTick");
static_assert(sizeof(TelescopeMars_C_ReceiveTick) == 0x000004, "Wrong size on TelescopeMars_C_ReceiveTick");
static_assert(offsetof(TelescopeMars_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TelescopeMars_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.sendName
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_SendName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_SendName) == 0x000004, "Wrong alignment on TelescopeMars_C_SendName");
static_assert(sizeof(TelescopeMars_C_SendName) == 0x000008, "Wrong size on TelescopeMars_C_SendName");
static_assert(offsetof(TelescopeMars_C_SendName, Param_Name) == 0x000000, "Member 'TelescopeMars_C_SendName::Param_Name' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.player_use
// 0x0090 (0x0090 - 0x0000)
struct TelescopeMars_C_Player_use final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TelescopeMars_C_Player_use) == 0x000008, "Wrong alignment on TelescopeMars_C_Player_use");
static_assert(sizeof(TelescopeMars_C_Player_use) == 0x000090, "Wrong size on TelescopeMars_C_Player_use");
static_assert(offsetof(TelescopeMars_C_Player_use, Player) == 0x000000, "Member 'TelescopeMars_C_Player_use::Player' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_Player_use, Hit) == 0x000008, "Member 'TelescopeMars_C_Player_use::Hit' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.kicked
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_Kicked final
{
public:
	bool                                          Kick;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_Kicked) == 0x000001, "Wrong alignment on TelescopeMars_C_Kicked");
static_assert(sizeof(TelescopeMars_C_Kicked) == 0x000001, "Wrong size on TelescopeMars_C_Kicked");
static_assert(offsetof(TelescopeMars_C_Kicked, Kick) == 0x000000, "Member 'TelescopeMars_C_Kicked::Kick' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.createDynmats
// 0x0020 (0x0020 - 0x0000)
struct TelescopeMars_C_CreateDynmats final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_CreateDynmats) == 0x000008, "Wrong alignment on TelescopeMars_C_CreateDynmats");
static_assert(sizeof(TelescopeMars_C_CreateDynmats) == 0x000020, "Wrong size on TelescopeMars_C_CreateDynmats");
static_assert(offsetof(TelescopeMars_C_CreateDynmats, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'TelescopeMars_C_CreateDynmats::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_CreateDynmats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'TelescopeMars_C_CreateDynmats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_CreateDynmats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'TelescopeMars_C_CreateDynmats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_CreateDynmats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'TelescopeMars_C_CreateDynmats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.canBePutInContainer
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_CanBePutInContainer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_CanBePutInContainer) == 0x000001, "Wrong alignment on TelescopeMars_C_CanBePutInContainer");
static_assert(sizeof(TelescopeMars_C_CanBePutInContainer) == 0x000001, "Wrong size on TelescopeMars_C_CanBePutInContainer");
static_assert(offsetof(TelescopeMars_C_CanBePutInContainer, Return) == 0x000000, "Member 'TelescopeMars_C_CanBePutInContainer::Return' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.asProp
// 0x0008 (0x0008 - 0x0000)
struct TelescopeMars_C_AsProp final
{
public:
	class AProp_C*                                Return;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_AsProp) == 0x000008, "Wrong alignment on TelescopeMars_C_AsProp");
static_assert(sizeof(TelescopeMars_C_AsProp) == 0x000008, "Wrong size on TelescopeMars_C_AsProp");
static_assert(offsetof(TelescopeMars_C_AsProp, Return) == 0x000000, "Member 'TelescopeMars_C_AsProp::Return' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.canPickup
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_CanPickup final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_CanPickup) == 0x000001, "Wrong alignment on TelescopeMars_C_CanPickup");
static_assert(sizeof(TelescopeMars_C_CanPickup) == 0x000001, "Wrong size on TelescopeMars_C_CanPickup");
static_assert(offsetof(TelescopeMars_C_CanPickup, Return) == 0x000000, "Member 'TelescopeMars_C_CanPickup::Return' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.noRespawn
// 0x0002 (0x0002 - 0x0000)
struct TelescopeMars_C_NoRespawn final
{
public:
	bool                                          Param_NoRespawn;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_NoRespawn) == 0x000001, "Wrong alignment on TelescopeMars_C_NoRespawn");
static_assert(sizeof(TelescopeMars_C_NoRespawn) == 0x000002, "Wrong size on TelescopeMars_C_NoRespawn");
static_assert(offsetof(TelescopeMars_C_NoRespawn, Param_NoRespawn) == 0x000000, "Member 'TelescopeMars_C_NoRespawn::Param_NoRespawn' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_NoRespawn, Return) == 0x000001, "Member 'TelescopeMars_C_NoRespawn::Return' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.lookAt
// 0x00B8 (0x00B8 - 0x0000)
struct TelescopeMars_C_LookAt final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Return;                                            // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0098(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    boundObjectReplace;                                // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Number;                                            // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TelescopeMars_C_LookAt) == 0x000008, "Wrong alignment on TelescopeMars_C_LookAt");
static_assert(sizeof(TelescopeMars_C_LookAt) == 0x0000B8, "Wrong size on TelescopeMars_C_LookAt");
static_assert(offsetof(TelescopeMars_C_LookAt, Player) == 0x000000, "Member 'TelescopeMars_C_LookAt::Player' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LookAt, Hit) == 0x000008, "Member 'TelescopeMars_C_LookAt::Hit' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LookAt, Return) == 0x000090, "Member 'TelescopeMars_C_LookAt::Return' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LookAt, Text) == 0x000098, "Member 'TelescopeMars_C_LookAt::Text' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LookAt, boundObjectReplace) == 0x0000A8, "Member 'TelescopeMars_C_LookAt::boundObjectReplace' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LookAt, Number) == 0x0000B0, "Member 'TelescopeMars_C_LookAt::Number' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.isButtonUsed
// 0x0001 (0x0001 - 0x0000)
struct TelescopeMars_C_IsButtonUsed final
{
public:
	bool                                          Failed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_IsButtonUsed) == 0x000001, "Wrong alignment on TelescopeMars_C_IsButtonUsed");
static_assert(sizeof(TelescopeMars_C_IsButtonUsed) == 0x000001, "Wrong size on TelescopeMars_C_IsButtonUsed");
static_assert(offsetof(TelescopeMars_C_IsButtonUsed, Failed) == 0x000000, "Member 'TelescopeMars_C_IsButtonUsed::Failed' has a wrong offset!");

// Function telescopeMars.telescopeMars_C.landedOn
// 0x0010 (0x0010 - 0x0000)
struct TelescopeMars_C_LandedOn final
{
public:
	class AMainPlayer_C*                          Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreFallDamage;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TelescopeMars_C_LandedOn) == 0x000008, "Wrong alignment on TelescopeMars_C_LandedOn");
static_assert(sizeof(TelescopeMars_C_LandedOn) == 0x000010, "Wrong size on TelescopeMars_C_LandedOn");
static_assert(offsetof(TelescopeMars_C_LandedOn, Player) == 0x000000, "Member 'TelescopeMars_C_LandedOn::Player' has a wrong offset!");
static_assert(offsetof(TelescopeMars_C_LandedOn, IgnoreFallDamage) == 0x000008, "Member 'TelescopeMars_C_LandedOn::IgnoreFallDamage' has a wrong offset!");

}

