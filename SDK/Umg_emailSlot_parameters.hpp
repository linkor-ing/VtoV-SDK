#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Umg_emailSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Struct_email_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function umg_emailSlot.umg_emailSlot_C.ExecuteUbergraph_umg_emailSlot
// 0x0008 (0x0008 - 0x0000)
struct Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot) == 0x000004, "Wrong alignment on Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot");
static_assert(sizeof(Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot) == 0x000008, "Wrong size on Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot");
static_assert(offsetof(Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot, EntryPoint) == 0x000000, "Member 'Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot, K2Node_Event_index) == 0x000004, "Member 'Umg_emailSlot_C_ExecuteUbergraph_umg_emailSlot::K2Node_Event_index' has a wrong offset!");

// Function umg_emailSlot.umg_emailSlot_C.setIndex
// 0x0004 (0x0004 - 0x0000)
struct Umg_emailSlot_C_SetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Umg_emailSlot_C_SetIndex) == 0x000004, "Wrong alignment on Umg_emailSlot_C_SetIndex");
static_assert(sizeof(Umg_emailSlot_C_SetIndex) == 0x000004, "Wrong size on Umg_emailSlot_C_SetIndex");
static_assert(offsetof(Umg_emailSlot_C_SetIndex, Param_Index) == 0x000000, "Member 'Umg_emailSlot_C_SetIndex::Param_Index' has a wrong offset!");

// Function umg_emailSlot.umg_emailSlot_C.upd
// 0x01A0 (0x01A0 - 0x0000)
struct Umg_emailSlot_C_Upd final
{
public:
	struct FStruct_email                          IsNew;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00A8(0x0018)()
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0138(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0150(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0178(0x0028)()
};
static_assert(alignof(Umg_emailSlot_C_Upd) == 0x000008, "Wrong alignment on Umg_emailSlot_C_Upd");
static_assert(sizeof(Umg_emailSlot_C_Upd) == 0x0001A0, "Wrong size on Umg_emailSlot_C_Upd");
static_assert(offsetof(Umg_emailSlot_C_Upd, IsNew) == 0x000000, "Member 'Umg_emailSlot_C_Upd::IsNew' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Len_ReturnValue) == 0x000060, "Member 'Umg_emailSlot_C_Upd::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'Umg_emailSlot_C_Upd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000088, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_SelectString_ReturnValue) == 0x000098, "Member 'Umg_emailSlot_C_Upd::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000A8, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Left_ReturnValue) == 0x0000C0, "Member 'Umg_emailSlot_C_Upd::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000D0, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'Umg_emailSlot_C_Upd::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'Umg_emailSlot_C_Upd::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000118, "Member 'Umg_emailSlot_C_Upd::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000128, "Member 'Umg_emailSlot_C_Upd::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000138, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000150, "Member 'Umg_emailSlot_C_Upd::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, CallFunc_SelectColor_ReturnValue) == 0x000168, "Member 'Umg_emailSlot_C_Upd::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Umg_emailSlot_C_Upd, K2Node_MakeStruct_SlateColor) == 0x000178, "Member 'Umg_emailSlot_C_Upd::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

