#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_radArgem

#include "Basic.hpp"

#include "Struct_save_structs.hpp"
#include "Struct_mInt_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function prop_radArgem.prop_radArgem_C.ExecuteUbergraph_prop_radArgem
// 0x0138 (0x0138 - 0x0000)
struct Prop_radArgem_C_ExecuteUbergraph_prop_radArgem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0044(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsProp_Food_Shrimp;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInst_C*                            CallFunc_getMainGameInstance_AsGame_Inst_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem) == 0x000008, "Wrong alignment on Prop_radArgem_C_ExecuteUbergraph_prop_radArgem");
static_assert(sizeof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem) == 0x000138, "Wrong size on Prop_radArgem_C_ExecuteUbergraph_prop_radArgem");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, EntryPoint) == 0x000000, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, Temp_int_Variable) == 0x000004, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, Temp_int_Variable_1) == 0x000008, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ComponentBoundEvent_HitComponent) == 0x000020, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ComponentBoundEvent_OtherActor) == 0x000028, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ComponentBoundEvent_OtherComp) == 0x000030, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000038, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ComponentBoundEvent_Hit) == 0x000044, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_GetActorBounds_Origin) == 0x0000CC, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_GetActorBounds_BoxExtent) == 0x0000D8, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_GetObjectClass_ReturnValue) == 0x0000E8, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ClassDynamicCast_AsProp_Food_Shrimp) == 0x0000F0, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ClassDynamicCast_AsProp_Food_Shrimp' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, K2Node_ClassDynamicCast_bSuccess) == 0x0000F8, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000100, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_getMainGameInstance_AsGame_Inst) == 0x000108, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_getMainGameInstance_AsGame_Inst' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000110, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000111, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_BooleanOR_ReturnValue) == 0x000112, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_getMainGameInstance_AsGame_Inst_1) == 0x000118, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_getMainGameInstance_AsGame_Inst_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000120, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000124, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000128, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_Lerp_ReturnValue_1) == 0x00012C, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_ExecuteUbergraph_prop_radArgem, CallFunc_BooleanOR_ReturnValue_1) == 0x000130, "Member 'Prop_radArgem_C_ExecuteUbergraph_prop_radArgem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function prop_radArgem.prop_radArgem_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_Hit;                                         // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Param_Hit) == 0x000024, "Member 'Prop_radArgem_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Param_Hit' has a wrong offset!");

// Function prop_radArgem.prop_radArgem_C.loadData
// 0x00E0 (0x00E0 - 0x0000)
struct Prop_radArgem_C_LoadData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_loadData_return;                          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_mInt                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_radArgem_C_LoadData) == 0x000010, "Wrong alignment on Prop_radArgem_C_LoadData");
static_assert(sizeof(Prop_radArgem_C_LoadData) == 0x0000E0, "Wrong size on Prop_radArgem_C_LoadData");
static_assert(offsetof(Prop_radArgem_C_LoadData, Data) == 0x000000, "Member 'Prop_radArgem_C_LoadData::Data' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_LoadData, Return) == 0x0000C0, "Member 'Prop_radArgem_C_LoadData::Return' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_LoadData, CallFunc_loadData_return) == 0x0000C1, "Member 'Prop_radArgem_C_LoadData::CallFunc_loadData_return' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_LoadData, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Prop_radArgem_C_LoadData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_LoadData, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'Prop_radArgem_C_LoadData::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function prop_radArgem.prop_radArgem_C.getData
// 0x0270 (0x0270 - 0x0000)
struct Prop_radArgem_C_GetData final
{
public:
	struct FStruct_save                           Data;                                              // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_save                           CallFunc_getData_data;                             // 0x00C0(0x00C0)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	struct FStruct_mInt                           K2Node_MakeStruct_struct_mInt;                     // 0x0190(0x0010)(HasGetValueTypeHash)
	TArray<struct FStruct_mInt>                   K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	struct FStruct_save                           K2Node_SetFieldsInStruct_StructOut;                // 0x01B0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(Prop_radArgem_C_GetData) == 0x000010, "Wrong alignment on Prop_radArgem_C_GetData");
static_assert(sizeof(Prop_radArgem_C_GetData) == 0x000270, "Wrong size on Prop_radArgem_C_GetData");
static_assert(offsetof(Prop_radArgem_C_GetData, Data) == 0x000000, "Member 'Prop_radArgem_C_GetData::Data' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_GetData, CallFunc_getData_data) == 0x0000C0, "Member 'Prop_radArgem_C_GetData::CallFunc_getData_data' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_GetData, K2Node_MakeArray_Array) == 0x000180, "Member 'Prop_radArgem_C_GetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_GetData, K2Node_MakeStruct_struct_mInt) == 0x000190, "Member 'Prop_radArgem_C_GetData::K2Node_MakeStruct_struct_mInt' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_GetData, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'Prop_radArgem_C_GetData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Prop_radArgem_C_GetData, K2Node_SetFieldsInStruct_StructOut) == 0x0001B0, "Member 'Prop_radArgem_C_GetData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

