#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Altar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass altar.altar_C
// 0x01E8 (0x0408 - 0x0220)
class AAltar_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AltarLoop;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest19;                                 // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest18;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest17;                                 // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest16;                                 // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest15;                                 // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest14;                                 // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest13;                                 // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest12;                                 // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest11;                                 // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest20;                                 // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest9;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest8;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest7;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest6;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest5;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest4;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest3;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest2;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest1;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AltarIslandTest10;                                 // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        bridge;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Tp;                                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          bushes1;                                           // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          bushes4;                                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          bushes3;                                           // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          bushes2;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Altar_arch;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LambSpawn;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Altar_table;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Altar_pillars;                                     // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Altar_pentagram;                                   // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       C_fire;                                            // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       C_water;                                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       C_earth;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       C_air;                                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       C_sacrifice;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_water;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_earth;                                           // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_air;                                             // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_fire;                                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Island2;                                           // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Bounds;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Skysphere;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          Grass;                                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Island1;                                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AProp_rune_C*                           Rune_air;                                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_rune_C*                           Rune_earth;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_rune_C*                           Rune_water;                                        // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_rune_C*                           Rune_fire;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                SLoc;                                              // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AProp_rune_C*>                   RunesObj;                                          // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Point;                                             // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229C[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TpOut;                                             // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_altar(int32 EntryPoint);
	void BndEvt__altar_bounds_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Check();
	void ReceiveBeginPlay();
	void Grabbed_fire();
	void BndEvt__altar_c_fire_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Grabbed_water();
	void BndEvt__altar_c_water_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Grabbed_earth();
	void BndEvt__altar_c_earth_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Grabbed_air();
	void BndEvt__altar_c_air_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void UpdRunesArray();
	void Snd();
	void Grass_Gen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"altar_C">();
	}
	static class AAltar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAltar_C>();
	}
};
static_assert(alignof(AAltar_C) == 0x000008, "Wrong alignment on AAltar_C");
static_assert(sizeof(AAltar_C) == 0x000408, "Wrong size on AAltar_C");
static_assert(offsetof(AAltar_C, UberGraphFrame) == 0x000220, "Member 'AAltar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarLoop) == 0x000228, "Member 'AAltar_C::AltarLoop' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest19) == 0x000230, "Member 'AAltar_C::AltarIslandTest19' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest18) == 0x000238, "Member 'AAltar_C::AltarIslandTest18' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest17) == 0x000240, "Member 'AAltar_C::AltarIslandTest17' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest16) == 0x000248, "Member 'AAltar_C::AltarIslandTest16' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest15) == 0x000250, "Member 'AAltar_C::AltarIslandTest15' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest14) == 0x000258, "Member 'AAltar_C::AltarIslandTest14' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest13) == 0x000260, "Member 'AAltar_C::AltarIslandTest13' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest12) == 0x000268, "Member 'AAltar_C::AltarIslandTest12' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest11) == 0x000270, "Member 'AAltar_C::AltarIslandTest11' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest20) == 0x000278, "Member 'AAltar_C::AltarIslandTest20' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest9) == 0x000280, "Member 'AAltar_C::AltarIslandTest9' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest8) == 0x000288, "Member 'AAltar_C::AltarIslandTest8' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest7) == 0x000290, "Member 'AAltar_C::AltarIslandTest7' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest6) == 0x000298, "Member 'AAltar_C::AltarIslandTest6' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest5) == 0x0002A0, "Member 'AAltar_C::AltarIslandTest5' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest4) == 0x0002A8, "Member 'AAltar_C::AltarIslandTest4' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest3) == 0x0002B0, "Member 'AAltar_C::AltarIslandTest3' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest2) == 0x0002B8, "Member 'AAltar_C::AltarIslandTest2' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest1) == 0x0002C0, "Member 'AAltar_C::AltarIslandTest1' has a wrong offset!");
static_assert(offsetof(AAltar_C, AltarIslandTest10) == 0x0002C8, "Member 'AAltar_C::AltarIslandTest10' has a wrong offset!");
static_assert(offsetof(AAltar_C, bridge) == 0x0002D0, "Member 'AAltar_C::bridge' has a wrong offset!");
static_assert(offsetof(AAltar_C, RectLight) == 0x0002D8, "Member 'AAltar_C::RectLight' has a wrong offset!");
static_assert(offsetof(AAltar_C, Tp) == 0x0002E0, "Member 'AAltar_C::Tp' has a wrong offset!");
static_assert(offsetof(AAltar_C, bushes1) == 0x0002E8, "Member 'AAltar_C::bushes1' has a wrong offset!");
static_assert(offsetof(AAltar_C, bushes4) == 0x0002F0, "Member 'AAltar_C::bushes4' has a wrong offset!");
static_assert(offsetof(AAltar_C, bushes3) == 0x0002F8, "Member 'AAltar_C::bushes3' has a wrong offset!");
static_assert(offsetof(AAltar_C, bushes2) == 0x000300, "Member 'AAltar_C::bushes2' has a wrong offset!");
static_assert(offsetof(AAltar_C, PointLight) == 0x000308, "Member 'AAltar_C::PointLight' has a wrong offset!");
static_assert(offsetof(AAltar_C, Altar_arch) == 0x000310, "Member 'AAltar_C::Altar_arch' has a wrong offset!");
static_assert(offsetof(AAltar_C, LambSpawn) == 0x000318, "Member 'AAltar_C::LambSpawn' has a wrong offset!");
static_assert(offsetof(AAltar_C, Altar_table) == 0x000320, "Member 'AAltar_C::Altar_table' has a wrong offset!");
static_assert(offsetof(AAltar_C, Altar_pillars) == 0x000328, "Member 'AAltar_C::Altar_pillars' has a wrong offset!");
static_assert(offsetof(AAltar_C, Altar_pentagram) == 0x000330, "Member 'AAltar_C::Altar_pentagram' has a wrong offset!");
static_assert(offsetof(AAltar_C, C_fire) == 0x000338, "Member 'AAltar_C::C_fire' has a wrong offset!");
static_assert(offsetof(AAltar_C, C_water) == 0x000340, "Member 'AAltar_C::C_water' has a wrong offset!");
static_assert(offsetof(AAltar_C, C_earth) == 0x000348, "Member 'AAltar_C::C_earth' has a wrong offset!");
static_assert(offsetof(AAltar_C, C_air) == 0x000350, "Member 'AAltar_C::C_air' has a wrong offset!");
static_assert(offsetof(AAltar_C, C_sacrifice) == 0x000358, "Member 'AAltar_C::C_sacrifice' has a wrong offset!");
static_assert(offsetof(AAltar_C, P_water) == 0x000360, "Member 'AAltar_C::P_water' has a wrong offset!");
static_assert(offsetof(AAltar_C, P_earth) == 0x000368, "Member 'AAltar_C::P_earth' has a wrong offset!");
static_assert(offsetof(AAltar_C, P_air) == 0x000370, "Member 'AAltar_C::P_air' has a wrong offset!");
static_assert(offsetof(AAltar_C, P_fire) == 0x000378, "Member 'AAltar_C::P_fire' has a wrong offset!");
static_assert(offsetof(AAltar_C, Island2) == 0x000380, "Member 'AAltar_C::Island2' has a wrong offset!");
static_assert(offsetof(AAltar_C, Bounds) == 0x000388, "Member 'AAltar_C::Bounds' has a wrong offset!");
static_assert(offsetof(AAltar_C, Skysphere) == 0x000390, "Member 'AAltar_C::Skysphere' has a wrong offset!");
static_assert(offsetof(AAltar_C, Grass) == 0x000398, "Member 'AAltar_C::Grass' has a wrong offset!");
static_assert(offsetof(AAltar_C, Island1) == 0x0003A0, "Member 'AAltar_C::Island1' has a wrong offset!");
static_assert(offsetof(AAltar_C, DefaultSceneRoot) == 0x0003A8, "Member 'AAltar_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAltar_C, Rune_air) == 0x0003B0, "Member 'AAltar_C::Rune_air' has a wrong offset!");
static_assert(offsetof(AAltar_C, Rune_earth) == 0x0003B8, "Member 'AAltar_C::Rune_earth' has a wrong offset!");
static_assert(offsetof(AAltar_C, Rune_water) == 0x0003C0, "Member 'AAltar_C::Rune_water' has a wrong offset!");
static_assert(offsetof(AAltar_C, Rune_fire) == 0x0003C8, "Member 'AAltar_C::Rune_fire' has a wrong offset!");
static_assert(offsetof(AAltar_C, SLoc) == 0x0003D0, "Member 'AAltar_C::SLoc' has a wrong offset!");
static_assert(offsetof(AAltar_C, RunesObj) == 0x0003E0, "Member 'AAltar_C::RunesObj' has a wrong offset!");
static_assert(offsetof(AAltar_C, Point) == 0x0003F0, "Member 'AAltar_C::Point' has a wrong offset!");
static_assert(offsetof(AAltar_C, TpOut) == 0x000400, "Member 'AAltar_C::TpOut' has a wrong offset!");

}

