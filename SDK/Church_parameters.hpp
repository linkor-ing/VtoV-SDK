#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Church

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function church.church_C.tp
// 0x0450 (0x0450 - 0x0000)
struct Church_C_Tp final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                A;                                                 // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Loc;                                               // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Projected;                                         // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Random_point;                                      // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_statDyn_obj;                          // 0x0060(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CallFunc_obj_static_obj;                           // 0x0170(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0188(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x019C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0318(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3[0x1];                                      // 0x03B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Church_C_Tp) == 0x000010, "Wrong alignment on Church_C_Tp");
static_assert(sizeof(Church_C_Tp) == 0x000450, "Wrong size on Church_C_Tp");
static_assert(offsetof(Church_C_Tp, NewParam) == 0x000000, "Member 'Church_C_Tp::NewParam' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, A) == 0x00000C, "Member 'Church_C_Tp::A' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Loc) == 0x000018, "Member 'Church_C_Tp::Loc' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Angle) == 0x000024, "Member 'Church_C_Tp::Angle' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Projected) == 0x000028, "Member 'Church_C_Tp::Projected' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Random_point) == 0x000034, "Member 'Church_C_Tp::Random_point' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000040, "Member 'Church_C_Tp::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x00004C, "Member 'Church_C_Tp::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Temp_int_Variable) == 0x000050, "Member 'Church_C_Tp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'Church_C_Tp::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'Church_C_Tp::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'Church_C_Tp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_obj_statDyn_obj) == 0x000060, "Member 'Church_C_Tp::CallFunc_obj_statDyn_obj' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000070, "Member 'Church_C_Tp::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x00007C, "Member 'Church_C_Tp::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Vector_Distance_ReturnValue) == 0x000080, "Member 'Church_C_Tp::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000084, "Member 'Church_C_Tp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'Church_C_Tp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000086, "Member 'Church_C_Tp::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_MakeRotator_ReturnValue) == 0x000088, "Member 'Church_C_Tp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Church_C_Tp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'Church_C_Tp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000DC, "Member 'Church_C_Tp::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_VectorVector_ReturnValue) == 0x000164, "Member 'Church_C_Tp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_obj_static_obj) == 0x000170, "Member 'Church_C_Tp::CallFunc_obj_static_obj' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Temp_int_Variable_1) == 0x000180, "Member 'Church_C_Tp::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Temp_object_Variable) == 0x000188, "Member 'Church_C_Tp::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000198, "Member 'Church_C_Tp::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_LineTraceSingleForObjects_OutHit) == 0x00019C, "Member 'Church_C_Tp::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000224, "Member 'Church_C_Tp::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_MakeVector_ReturnValue) == 0x000228, "Member 'Church_C_Tp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000234, "Member 'Church_C_Tp::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_bBlockingHit) == 0x000240, "Member 'Church_C_Tp::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_bInitialOverlap) == 0x000241, "Member 'Church_C_Tp::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Time) == 0x000244, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Distance) == 0x000248, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Location) == 0x00024C, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Normal) == 0x000264, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_PhysMat) == 0x000280, "Member 'Church_C_Tp::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitActor) == 0x000288, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitComponent) == 0x000290, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitBoneName) == 0x000298, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitItem) == 0x0002A0, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ElementIndex) == 0x0002A4, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_FaceIndex) == 0x0002A8, "Member 'Church_C_Tp::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_TraceStart) == 0x0002AC, "Member 'Church_C_Tp::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_TraceEnd) == 0x0002B8, "Member 'Church_C_Tp::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002C4, "Member 'Church_C_Tp::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002D0, "Member 'Church_C_Tp::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D4, "Member 'Church_C_Tp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_RotateAngleAxis_ReturnValue) == 0x0002D8, "Member 'Church_C_Tp::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002E4, "Member 'Church_C_Tp::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E8, "Member 'Church_C_Tp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0002F4, "Member 'Church_C_Tp::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000300, "Member 'Church_C_Tp::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x00030C, "Member 'Church_C_Tp::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, Temp_object_Variable_1) == 0x000318, "Member 'Church_C_Tp::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000328, "Member 'Church_C_Tp::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0003B0, "Member 'Church_C_Tp::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003B1, "Member 'Church_C_Tp::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003B2, "Member 'Church_C_Tp::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Time_1) == 0x0003B4, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Distance_1) == 0x0003B8, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Location_1) == 0x0003BC, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003C8, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_Normal_1) == 0x0003D4, "Member 'Church_C_Tp::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003E0, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_PhysMat_1) == 0x0003F0, "Member 'Church_C_Tp::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitActor_1) == 0x0003F8, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitComponent_1) == 0x000400, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitBoneName_1) == 0x000408, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_HitItem_1) == 0x000410, "Member 'Church_C_Tp::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_ElementIndex_1) == 0x000414, "Member 'Church_C_Tp::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_FaceIndex_1) == 0x000418, "Member 'Church_C_Tp::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_TraceStart_1) == 0x00041C, "Member 'Church_C_Tp::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_BreakHitResult_TraceEnd_1) == 0x000428, "Member 'Church_C_Tp::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_IsValid_ReturnValue) == 0x000434, "Member 'Church_C_Tp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000438, "Member 'Church_C_Tp::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_Dot_VectorVector_ReturnValue) == 0x000444, "Member 'Church_C_Tp::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_Tp, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000448, "Member 'Church_C_Tp::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function church.church_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Church_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Church_C_ReceiveTick) == 0x000004, "Wrong alignment on Church_C_ReceiveTick");
static_assert(sizeof(Church_C_ReceiveTick) == 0x000004, "Wrong size on Church_C_ReceiveTick");
static_assert(offsetof(Church_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Church_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function church.church_C.ExecuteUbergraph_church
// 0x01A0 (0x01A0 - 0x0000)
struct Church_C_ExecuteUbergraph_church final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_tp_NewParam;                              // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_X;                       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y;                       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z;                       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Church_C_ExecuteUbergraph_church) == 0x000010, "Wrong alignment on Church_C_ExecuteUbergraph_church");
static_assert(sizeof(Church_C_ExecuteUbergraph_church) == 0x0001A0, "Wrong size on Church_C_ExecuteUbergraph_church");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, EntryPoint) == 0x000000, "Member 'Church_C_ExecuteUbergraph_church::EntryPoint' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, Temp_int_Variable) == 0x000004, "Member 'Church_C_ExecuteUbergraph_church::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, Temp_bool_Has_Been_Initd_Variable) == 0x000011, "Member 'Church_C_ExecuteUbergraph_church::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, Temp_bool_IsClosed_Variable) == 0x000012, "Member 'Church_C_ExecuteUbergraph_church::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, Temp_bool_Has_Been_Initd_Variable_1) == 0x000013, "Member 'Church_C_ExecuteUbergraph_church::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, Temp_bool_IsClosed_Variable_1) == 0x000020, "Member 'Church_C_ExecuteUbergraph_church::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'Church_C_ExecuteUbergraph_church::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_tp_NewParam) == 0x000028, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_tp_NewParam' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000034, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000040, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakTransform_Location) == 0x000080, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakRotIntoAxes_X) == 0x0000A4, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakRotIntoAxes_X' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakRotIntoAxes_Y) == 0x0000B0, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakRotIntoAxes_Y' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_BreakRotIntoAxes_Z) == 0x0000BC, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_BreakRotIntoAxes_Z' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000C8, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0000D4, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000110, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Church_C_ExecuteUbergraph_church, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000198, "Member 'Church_C_ExecuteUbergraph_church::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

}

